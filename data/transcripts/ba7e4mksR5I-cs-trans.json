[{"text": "[MUSIC PLAYING]", "start": 0.0, "duration": 0.994}, {"text": "DAVID J. MALAN: All right.", "start": 49.69, "duration": 1.27}, {"text": "This is CS50 and this is\nthe start of week two.", "start": 50.96, "duration": 3.56}, {"text": "And you'll recall that over\nthe past couple of weeks,", "start": 54.52, "duration": 2.21}, {"text": "we've been building up.", "start": 56.73, "duration": 0.68}, {"text": "First initially from Scratch, the\ngraphical programming language", "start": 57.41, "duration": 2.7}, {"text": "that we then, just last week,\ntranslated to the equivalent program NC.", "start": 60.11, "duration": 4.47}, {"text": "And of course, there's\na lot more syntax now.", "start": 64.58, "duration": 2.46}, {"text": "It's entirely text but the ideas,\nrecall, were fundamentally the same.", "start": 67.04, "duration": 4.05}, {"text": "The catch is that computers\ndon't understand this.", "start": 71.09, "duration": 2.43}, {"text": "They only understand what language?", "start": 73.52, "duration": 1.74}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 75.26, "duration": 1.25}, {"text": "DAVID J. MALAN: zeros\nand ones or binary.", "start": 76.51, "duration": 2.1}, {"text": "And so there's a requisite step in order\nfor us to get from this code to binary.", "start": 78.61, "duration": 5.04}, {"text": "And what was that step or that\nprogram or process called?", "start": 83.65, "duration": 3.24}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 86.89, "duration": 0.88}, {"text": "DAVID J. MALAN: Yeah, so compiling.", "start": 87.77, "duration": 0.87}, {"text": "And of course, recall as\nyou've now experimented", "start": 88.64, "duration": 2.0}, {"text": "with this past week that\nto compile a program,", "start": 90.64, "duration": 2.07}, {"text": "you can use clang for C, language.", "start": 92.71, "duration": 1.8}, {"text": "And you can just say clang\nand then the name of the file", "start": 94.51, "duration": 1.9}, {"text": "that you want to compile.", "start": 96.41, "duration": 1.04}, {"text": "And that outputs by default\na pretty oddly named program.", "start": 97.45, "duration": 2.64}, {"text": "Just a dot out.", "start": 100.09, "duration": 1.65}, {"text": "Which stands for assembler output.", "start": 101.74, "duration": 1.44}, {"text": "More on that in just a moment.", "start": 103.18, "duration": 1.51}, {"text": "But recall too that you can\noverride that default behavior.", "start": 104.69, "duration": 2.7}, {"text": "And you can actually say,\nOutput instead a program", "start": 107.39, "duration": 2.09}, {"text": "called, hello instead of just a dot out.", "start": 109.48, "duration": 2.64}, {"text": "But you can go one step further,\nand you actually use Make.", "start": 112.12, "duration": 3.0}, {"text": "And Make it self is not a\ncompiler, it's a build utility.", "start": 115.12, "duration": 3.06}, {"text": "But in layman's terms,\nwhat does it do for us?", "start": 118.18, "duration": 2.79}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 120.97, "duration": 1.38}, {"text": "DAVID J. MALAN: compiles it.", "start": 122.35, "duration": 1.23}, {"text": "And it essentially figures out\nall of those otherwise cryptic", "start": 123.58, "duration": 3.42}, {"text": "looking command line arguments.", "start": 127.0, "duration": 1.95}, {"text": "Like dash-o something, and so forth.", "start": 128.95, "duration": 1.68}, {"text": "So that the program\nis built just the way", "start": 130.63, "duration": 1.71}, {"text": "we want it without\nour having to remember", "start": 132.34, "duration": 1.86}, {"text": "those seemingly magical incantations.", "start": 134.2, "duration": 2.34}, {"text": "And though that only works for\nprograms as simple as this.", "start": 136.54, "duration": 3.87}, {"text": "In fact, some of you with\nthe most recent problems that", "start": 140.41, "duration": 2.59}, {"text": "might have encountered compilation\nerrors that we actually", "start": 143.0, "duration": 2.42}, {"text": "did not encounter deliberately in\nclass because Make was helping us out.", "start": 145.42, "duration": 3.99}, {"text": "In fact, as soon as\nyou enhance a program", "start": 149.41, "duration": 2.49}, {"text": "to actually take user input using\nCS50's library by including CS50 dot H,", "start": 151.9, "duration": 4.86}, {"text": "some of you might have realized\nthat all of a sudden the sandbox,", "start": 156.76, "duration": 3.18}, {"text": "and more generally Clang,\ndidn't know what get_string was.", "start": 159.94, "duration": 3.21}, {"text": "And frankly, Clang might not\neven known what a string was.", "start": 163.15, "duration": 2.8}, {"text": "And that's because those two\nare features of CS50's library", "start": 165.95, "duration": 3.68}, {"text": "that you have to teach Clang about.", "start": 169.63, "duration": 2.01}, {"text": "But it's not enough to teach Clang what\nthey look like, as by including CS50.h.", "start": 171.64, "duration": 5.61}, {"text": "Turns out there's a missing\nstep that Make helps us solve", "start": 177.25, "duration": 4.11}, {"text": "but that you too can just\nsolve manually if you want.", "start": 181.36, "duration": 3.25}, {"text": "And by that I mean this, instead of\ncompiling a program with just Clang,", "start": 184.61, "duration": 4.04}, {"text": "hello.c.", "start": 188.65, "duration": 1.02}, {"text": "When you want to use CS50's\nlibrary, you actually", "start": 189.67, "duration": 3.89}, {"text": "need to add this additional\ncommand line argument.", "start": 193.56, "duration": 2.13}, {"text": "Specifically at the end, can't\ngo in the beginning like dash-O.", "start": 195.69, "duration": 3.13}, {"text": "And dash-L stands for link.", "start": 198.82, "duration": 1.59}, {"text": "And this is a way of telling Clang,\nby the way when compiling my program,", "start": 200.41, "duration": 3.84}, {"text": "please link in CS50's zeros\nand ones that we the staff", "start": 204.25, "duration": 3.96}, {"text": "wrote some weeks ago and\ninstalled in the sandbox for you.", "start": 208.21, "duration": 3.38}, {"text": "So you've got your\nzeros and ones and then", "start": 211.59, "duration": 1.75}, {"text": "you've got our zeros\nand ones so to speak.", "start": 213.34, "duration": 2.22}, {"text": "And dash-LCS50 says\nto link them together.", "start": 215.56, "duration": 2.98}, {"text": "So if you were getting some kind of\nundefined reference error to get_string", "start": 218.54, "duration": 3.8}, {"text": "or you didn't--", "start": 222.34, "duration": 0.93}, {"text": "you weren't able to compile a program\nthat just used any of the get functions", "start": 223.27, "duration": 3.21}, {"text": "from CS50's library.", "start": 226.48, "duration": 1.35}, {"text": "Odds are, this simple change\ndash-LCS50 would have fixed.", "start": 227.83, "duration": 3.72}, {"text": "But of course, this isn't interesting\nstuff to remember, let alone", "start": 231.55, "duration": 2.88}, {"text": "remembering how to use dash-0\nas well, at which point", "start": 234.43, "duration": 2.79}, {"text": "the command gets really tedious to type.", "start": 237.22, "duration": 2.38}, {"text": "So here comes, Make again.", "start": 239.6, "duration": 1.1}, {"text": "Make automates all of this for us.", "start": 240.7, "duration": 1.57}, {"text": "And in fact, if you henceforth\nstart running Make and then", "start": 242.27, "duration": 2.42}, {"text": "pay closer attention to the fairly\nlong line of output that it outputs,", "start": 244.69, "duration": 3.81}, {"text": "you'll actually see\nmention of dash-LCS50,", "start": 248.5, "duration": 2.68}, {"text": "you'll see mention of even\ndash-LM, which stands for math.", "start": 251.18, "duration": 3.02}, {"text": "So if you're using\nround, for instance, you", "start": 254.2, "duration": 2.21}, {"text": "might have discovered\nthat round two also", "start": 256.41, "duration": 2.35}, {"text": "doesn't work out of the box\nunless you use Make itself", "start": 258.76, "duration": 3.12}, {"text": "or this more nuanced approach.", "start": 261.88, "duration": 3.15}, {"text": "So this is all to say that\ncompiling is a bit of a white lie.", "start": 265.03, "duration": 3.17}, {"text": "Like, yes you've been compiling and\nyou've been going from source code", "start": 268.2, "duration": 2.92}, {"text": "to machine code.", "start": 271.12, "duration": 1.41}, {"text": "But it turns out that there's been\na number of other steps happening", "start": 272.53, "duration": 2.85}, {"text": "for you that we're going to\njust slap some labels on today.", "start": 275.38, "duration": 2.34}, {"text": "At the end of the day, we're\njust breaking the abstraction.", "start": 277.72, "duration": 2.47}, {"text": "So compiling is this abstraction\nfrom source code to machine code.", "start": 280.19, "duration": 2.74}, {"text": "Let's just kind of zoom\nin briefly to appreciate", "start": 282.93, "duration": 2.26}, {"text": "what it is that's going on in\nhopes that it makes the code we're", "start": 285.19, "duration": 2.67}, {"text": "compiling a little more understandable.", "start": 287.86, "duration": 2.73}, {"text": "So step one of four, when it comes\nto actually compiling a program", "start": 290.59, "duration": 4.02}, {"text": "is called Pre-processing.", "start": 294.61, "duration": 1.17}, {"text": "So recall that this program we\njust looked at had a couple of", "start": 295.78, "duration": 2.55}, {"text": "includes at the top of the file.", "start": 298.33, "duration": 2.11}, {"text": "These are generally known\nas pre-processor directives.", "start": 300.44, "duration": 2.3}, {"text": "Not a particularly\ninteresting term but they're", "start": 302.74, "duration": 2.64}, {"text": "demarcated by the hash at\nthe start of these lines.", "start": 305.38, "duration": 3.0}, {"text": "That's a signal to Clang that these\nthings should be handled first.", "start": 308.38, "duration": 3.85}, {"text": "Preprocessed.", "start": 312.23, "duration": 1.04}, {"text": "Process before everything else.", "start": 313.27, "duration": 1.98}, {"text": "And in fact, the reason for this we\ndid discuss last week, inside of CS50.h", "start": 315.25, "duration": 5.01}, {"text": "is what, for instance?", "start": 320.26, "duration": 1.53}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 321.79, "duration": 2.51}, {"text": "DAVID J. MALAN: Specifically,\nthe declaration of get strings.", "start": 324.3, "duration": 3.16}, {"text": "So there's some lines of code,\nthe prototype if you recall,", "start": 327.46, "duration": 3.08}, {"text": "that one line of code that teaches\nClang what the inputs to get_string are", "start": 330.54, "duration": 4.23}, {"text": "and what the outputs are.", "start": 334.77, "duration": 1.14}, {"text": "The return type and the\narguments, so to speak.", "start": 335.91, "duration": 2.68}, {"text": "And so when you have include\nCS50.h at the top of the file, what", "start": 338.59, "duration": 3.79}, {"text": "is happening when you first run Clang\nduring this so-called pre-processing", "start": 342.38, "duration": 3.4}, {"text": "step, is Clang looks on the hard drive\nfor the file literally called CS50.h.", "start": 345.78, "duration": 4.11}, {"text": "It grabs its contents and essentially\nfinds and replaces this line here.", "start": 349.89, "duration": 5.05}, {"text": "So somewhere in CS50.h is a\nline like this yellow one here", "start": 354.94, "duration": 3.86}, {"text": "that says get_string, is a\nfunction that returns a string.", "start": 358.8, "duration": 3.25}, {"text": "And it takes as input, the\nso-called argument, a string", "start": 362.05, "duration": 3.29}, {"text": "that we'll call prompt.", "start": 365.34, "duration": 1.59}, {"text": "Meanwhile, with include standard I/O.\nWhat's the point of including that?", "start": 366.93, "duration": 3.75}, {"text": "What is declared inside\nof that file presumably?", "start": 370.68, "duration": 3.5}, {"text": "Yeah?", "start": 374.18, "duration": 0.5}, {"text": "AUDIENCE: It's the standard\ninputs and outputs.", "start": 374.68, "duration": 1.43}, {"text": "DAVID J. MALAN: Standard\ninputs and outputs.", "start": 376.11, "duration": 1.11}, {"text": "And more specifically,\nwhat example there of?", "start": 377.22, "duration": 1.8}, {"text": "What function?", "start": 379.02, "duration": 0.58}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 379.6, "duration": 0.87}, {"text": "DAVID J. MALAN: So printf.", "start": 380.47, "duration": 1.09}, {"text": "The other function we keep using.", "start": 381.56, "duration": 1.39}, {"text": "So inside of standard io.h,\nsomewhere on the sandbox's hard drive", "start": 382.95, "duration": 3.91}, {"text": "is similarly a line of code that\nfrankly looks a little more cryptic", "start": 386.86, "duration": 2.84}, {"text": "but we'll come back\nto this sort of thing", "start": 389.7, "duration": 1.7}, {"text": "down the road, that says\nprint if is a function.", "start": 391.4, "duration": 2.14}, {"text": "Happens to return on int, but\nmore on that another time.", "start": 393.54, "duration": 2.58}, {"text": "Happens to take a char* format.", "start": 396.12, "duration": 2.61}, {"text": "But more on that another time.", "start": 398.73, "duration": 1.42}, {"text": "Indeed, this is one\nof the reasons we hide", "start": 400.15, "duration": 1.75}, {"text": "this detail early on because\nthere's some syntax that's", "start": 401.9, "duration": 2.38}, {"text": "just a distraction for now.", "start": 404.28, "duration": 1.22}, {"text": "But that's all that's going on.", "start": 405.5, "duration": 1.3}, {"text": "The sharp include sign is just\nfinding and replacing the contents.", "start": 406.8, "duration": 3.84}, {"text": "Plus dot, dot, dot, a bunch of\nother things in those files as well.", "start": 410.64, "duration": 3.82}, {"text": "So when we say\npre-processing, we just mean", "start": 414.46, "duration": 1.99}, {"text": "that that's getting substituted in\nso you don't have to copy and paste", "start": 416.45, "duration": 2.92}, {"text": "this sort of thing manually yourself.", "start": 419.37, "duration": 2.1}, {"text": "So \"compiling\" is a word that\nactually has a well-defined meaning.", "start": 421.47, "duration": 3.3}, {"text": "Once you've preprocessed your code, and\nyour code looks essentially like this,", "start": 424.77, "duration": 3.6}, {"text": "unbeknownst to you, then comes\nthe actual compilation step.", "start": 428.37, "duration": 3.45}, {"text": "And this code here gets\nturned into this code here.", "start": 431.82, "duration": 4.11}, {"text": "Now this is scary-looking,\nand this is the sort of thing", "start": 435.93, "duration": 2.91}, {"text": "that if you take a class\nlike CS61 at Harvard,", "start": 438.84, "duration": 2.46}, {"text": "or, more generally, systems\nprogramming, so to speak,", "start": 441.3, "duration": 2.31}, {"text": "you might see something like this.", "start": 443.61, "duration": 1.57}, {"text": "This is x86 64-bit\nassembly instructions.", "start": 445.18, "duration": 3.37}, {"text": "And the only thing interesting\nabout that claim for the moment", "start": 448.55, "duration": 2.59}, {"text": "is that assembly--", "start": 451.14, "duration": 1.08}, {"text": "I kind of alluded to that\nearlier-- assembler output, a.out.", "start": 452.22, "duration": 3.32}, {"text": "There's actually a relationship\nhere, but long story short, these", "start": 455.54, "duration": 2.71}, {"text": "are the lower level\ninstructions that only the CPU,", "start": 458.25, "duration": 3.63}, {"text": "the brain inside your\ncomputer, actually understands.", "start": 461.88, "duration": 2.82}, {"text": "Your CPU does not understand C. It\ndoesn't understand Python or C++", "start": 464.7, "duration": 3.45}, {"text": "or Java or any language with\nwhich you might be familiar.", "start": 468.15, "duration": 2.4}, {"text": "It only understands this\ncryptic-looking thing.", "start": 470.55, "duration": 2.61}, {"text": "But frankly, from the looks of it, you\nmight glean that probably not so much", "start": 473.16, "duration": 3.66}, {"text": "fun to program in this.", "start": 476.82, "duration": 1.35}, {"text": "I mean, arguably, it's not that\nmuch fun to program yet in C,", "start": 478.17, "duration": 2.82}, {"text": "So this looks even more cryptic.", "start": 480.99, "duration": 2.22}, {"text": "But that's OK.", "start": 483.21, "duration": 1.04}, {"text": "C and lots of languages\nare just these abstractions", "start": 484.25, "duration": 3.19}, {"text": "on top of the lower level\nstuff that the CPUs do actually", "start": 487.44, "duration": 2.94}, {"text": "understand so that we don't\nhave to worry about it as much.", "start": 490.38, "duration": 2.85}, {"text": "But if we highlight a few terms,\nhere you'll see some familiar things.", "start": 493.23, "duration": 3.24}, {"text": "So main is mentioned in this\nso-called assembly code.", "start": 496.47, "duration": 3.03}, {"text": "You see mention of\nget string and printf,", "start": 499.5, "duration": 2.07}, {"text": "so we're not losing information.", "start": 501.57, "duration": 1.6}, {"text": "It's just being presented in really a\ndifferent language, assembly language.", "start": 503.17, "duration": 4.48}, {"text": "Now you can glean, perhaps, from some\nof the names of these instructions,", "start": 507.65, "duration": 3.86}, {"text": "this is what Intel Inside means.", "start": 511.51, "duration": 1.94}, {"text": "When Intel or any brand of\nCPU understands instructions,", "start": 513.45, "duration": 3.93}, {"text": "it means things like pushing and\nmoving and subtracting and calling.", "start": 517.38, "duration": 4.83}, {"text": "These are all low\nlevel verbs, functions,", "start": 522.21, "duration": 2.32}, {"text": "if you will, but at\nthe level of the CPU.", "start": 524.53, "duration": 2.15}, {"text": "But for more on that, you\ncan take entire courses.", "start": 526.68, "duration": 2.28}, {"text": "But just to take the hood\noff of this for today,", "start": 528.96, "duration": 2.49}, {"text": "this is a step that's been happening\nfor us magically unbeknownst", "start": 531.45, "duration": 3.48}, {"text": "to us, thanks to Clang.", "start": 534.93, "duration": 2.42}, {"text": "So assembling-- now that you've got this\ncryptic-looking code that we will never", "start": 537.35, "duration": 3.34}, {"text": "see again-- we'll never\nneed to output again--", "start": 540.69, "duration": 2.22}, {"text": "what do you do with it?", "start": 542.91, "duration": 0.97}, {"text": "Well, you said earlier that computers\nonly understand zeros and ones,", "start": 543.88, "duration": 3.23}, {"text": "so the third step is actually to convert\nthis assembly language to actual zeros", "start": 547.11, "duration": 5.52}, {"text": "and ones that now look like this.", "start": 552.63, "duration": 2.46}, {"text": "So the assembling step\nhappening, unbeknownst to you,", "start": 555.09, "duration": 2.37}, {"text": "every time you run\nClang or, in turn, run", "start": 557.46, "duration": 1.71}, {"text": "make, we're getting zeros and\nones out of the assembly code,", "start": 559.17, "duration": 2.95}, {"text": "and we're getting the assembly\ncode out of your C-code.", "start": 562.12, "duration": 3.38}, {"text": "But here's the fourth and final step.", "start": 565.5, "duration": 3.33}, {"text": "Recall that we need to link in\nother people's zeros and ones.", "start": 568.83, "duration": 3.84}, {"text": "If you're using printf\nyou didn't write that.", "start": 572.67, "duration": 1.89}, {"text": "Someone else created those\nzeros and ones, the patterns", "start": 574.56, "duration": 2.38}, {"text": "that the computer understands.", "start": 576.94, "duration": 1.25}, {"text": "You didn't create get string.", "start": 578.19, "duration": 1.2}, {"text": "We did, so you need access\nto those zeros and ones", "start": 579.39, "duration": 2.43}, {"text": "so that your program\ncan use them as well.", "start": 581.82, "duration": 2.43}, {"text": "So linking, essentially, does this.", "start": 584.25, "duration": 1.68}, {"text": "If you've written a program--\nfor instance, hello.c--", "start": 585.93, "duration": 2.56}, {"text": "and it happens to use a\ncouple of other libraries,", "start": 588.49, "duration": 2.96}, {"text": "files that other people\nwrote of useful code", "start": 591.45, "duration": 2.52}, {"text": "for you, like cs50.c,\nwhich does exist somewhere,", "start": 593.97, "duration": 4.0}, {"text": "and even stdio.c, which\ndoes exist somewhere,", "start": 597.97, "duration": 2.99}, {"text": "or technically, Standard\nIO is such a big library,", "start": 600.96, "duration": 2.73}, {"text": "they actually put printf in a\nfile specifically called printf.c.", "start": 603.69, "duration": 3.28}, {"text": "But somewhere in the sandbox's hard\ndrive, in all of our Macs and PCs,", "start": 606.97, "duration": 3.68}, {"text": "if they support compiling, are,\nfor instance, files like these.", "start": 610.65, "duration": 4.2}, {"text": "But we've got to convert this to\nzeros and ones, this, and this,", "start": 614.85, "duration": 3.21}, {"text": "and then somehow combine them.", "start": 618.06, "duration": 1.51}, {"text": "So pictorially, this just\nlooks a bit like this.", "start": 619.57, "duration": 2.26}, {"text": "And this is all happening\nautomatically by Clang.", "start": 621.83, "duration": 2.05}, {"text": "Hello.c, the code you\nwrote, gets compiled", "start": 623.88, "duration": 2.07}, {"text": "to assembly, which then gets assembled\ninto zeros and ones, so-called machine", "start": 625.95, "duration": 5.79}, {"text": "code or object code.", "start": 631.74, "duration": 1.23}, {"text": "Cs50.c-- we did this for you\nbefore the semester started.", "start": 632.97, "duration": 3.27}, {"text": "Printf was done way before\nany of us started decades", "start": 636.24, "duration": 2.85}, {"text": "ago and looks like this.", "start": 639.09, "duration": 2.46}, {"text": "These are three separate files,\nthough, so the linking step literally", "start": 641.55, "duration": 3.15}, {"text": "means, link all of these things\ntogether, and combine the zeros", "start": 644.7, "duration": 3.87}, {"text": "and ones from, like, three,\nat least, separate files,", "start": 648.57, "duration": 3.41}, {"text": "and just combine them\nin such a way that now", "start": 651.98, "duration": 1.84}, {"text": "the CPU knows how to use not just\nyour code but printf and get string", "start": 653.82, "duration": 4.11}, {"text": "and so forth.", "start": 657.93, "duration": 1.45}, {"text": "So last week, we introduced\ncompiling as an abstraction,", "start": 659.38, "duration": 2.73}, {"text": "if you will, and this is all that\nwe've really meant this whole time.", "start": 662.11, "duration": 3.33}, {"text": "But now that we've seen what's\ngoing on underneath the hood,", "start": 665.44, "duration": 2.79}, {"text": "and we can stipulate that\nmy CPU that looks physically", "start": 668.23, "duration": 2.93}, {"text": "like this, albeit smaller\nin a laptop or desktop,", "start": 671.16, "duration": 2.85}, {"text": "knows how to deal with all of that.", "start": 674.01, "duration": 3.28}, {"text": "So any questions on these four steps--", "start": 677.29, "duration": 2.56}, {"text": "pre-processing, compiling,\nassembling, linking?", "start": 679.85, "duration": 2.86}, {"text": "But generally, now, we can just call\nthem compiling, as most people do.", "start": 682.71, "duration": 4.63}, {"text": "Any questions?", "start": 687.34, "duration": 0.76}, {"text": "Yeah.", "start": 688.1, "duration": 0.99}, {"text": "AUDIENCE: How does the CPU\nknow that [INAUDIBLE] is there?", "start": 689.09, "duration": 7.42}, {"text": "Is that [INAUDIBLE]?", "start": 696.51, "duration": 3.27}, {"text": "DAVID J. MALAN: Not in\nthe pre-processing step,", "start": 699.78, "duration": 1.96}, {"text": "so the question is,\nhow does the computer", "start": 701.74, "duration": 1.75}, {"text": "know that printf is the\nonly function that's there?", "start": 703.49, "duration": 3.36}, {"text": "Essentially, when\nyou're linking in code,", "start": 706.85, "duration": 2.19}, {"text": "only the requisite zeros and\nones are typically linked in.", "start": 709.04, "duration": 2.94}, {"text": "Sometimes you get more than you\nactually need, if it's a big library,", "start": 711.98, "duration": 3.3}, {"text": "but that's OK, too.", "start": 715.28, "duration": 1.21}, {"text": "Those zeros and ones are\njust never used by the CPU.", "start": 716.49, "duration": 2.5}, {"text": "Good question.", "start": 718.99, "duration": 1.0}, {"text": "Other questions?", "start": 719.99, "duration": 2.42}, {"text": "OK, all right.", "start": 722.41, "duration": 0.76}, {"text": "So now that we know this\nis possible, let's start", "start": 723.17, "duration": 3.57}, {"text": "to build our way back\nup, because everyone here", "start": 726.74, "duration": 2.79}, {"text": "probably knows now that\nwhen writing in C, which", "start": 729.53, "duration": 2.28}, {"text": "is kind of up here\nconceptually, like, it", "start": 731.81, "duration": 1.71}, {"text": "is not without its hurdles and\nproblems and bugs and mistakes.", "start": 733.52, "duration": 3.22}, {"text": "So let's introduce a few techniques and\ntools with which you can henceforth,", "start": 736.74, "duration": 3.17}, {"text": "starting this week and beyond, trying\nto troubleshoot those problems yourself", "start": 739.91, "duration": 3.2}, {"text": "rather than just trying to read through\nthe cryptic-looking error messages", "start": 743.11, "duration": 3.13}, {"text": "or reach out for help to another human.", "start": 746.24, "duration": 1.77}, {"text": "Let's see if software can actually\nanswer some of these questions for you.", "start": 748.01, "duration": 3.65}, {"text": "So let me go ahead and do this.", "start": 751.66, "duration": 1.3}, {"text": "Let me go ahead and\nopen up a sandbox here,", "start": 752.96, "duration": 2.49}, {"text": "and I'm going to go ahead\nand create a new file called", "start": 755.45, "duration": 2.89}, {"text": "buggy0.c in which I will, this\ntime, deliberately introduce a bug.", "start": 758.34, "duration": 4.85}, {"text": "I'm going to go ahead and\ncreate my function called", "start": 763.19, "duration": 3.6}, {"text": "main, which, again, is the default,\nlike when green flag is clicked.", "start": 766.79, "duration": 3.57}, {"text": "And I'm going to go ahead and\nsay, printf, quote, unquote,", "start": 770.36, "duration": 2.88}, {"text": "\"Hello world/m.\"", "start": 773.24, "duration": 2.95}, {"text": "All right.", "start": 776.19, "duration": 0.5}, {"text": "Looks pretty good.", "start": 776.69, "duration": 1.06}, {"text": "I'm going to go ahead and\ncompile buggy0, Enter,", "start": 777.75, "duration": 3.55}, {"text": "and of course, I get a bunch\nof error messages here.", "start": 781.3, "duration": 2.29}, {"text": "Let me zoom in on them.", "start": 783.59, "duration": 1.43}, {"text": "Fortunately, I only have two, but\nremember, you have to, have to,", "start": 785.02, "duration": 2.71}, {"text": "have to always scroll\nup to look at the first,", "start": 787.73, "duration": 2.13}, {"text": "because there might just be an annoying\ncascading effect from one earlier", "start": 789.86, "duration": 2.46}, {"text": "bug to the later.", "start": 792.32, "duration": 1.05}, {"text": "So buggy0.c, line 5, is what this\nmeans, character 5, so like 5 spaces in,", "start": 793.37, "duration": 5.52}, {"text": "implicitly declaring library\nfunction printf with dot, dot, dot.", "start": 798.89, "duration": 3.54}, {"text": "So you're going to start to see\nthis pretty often if you make", "start": 802.43, "duration": 2.55}, {"text": "this particular mistake or oversight.", "start": 804.98, "duration": 2.07}, {"text": "Implicitly declaring\nsomething means you forgot", "start": 807.05, "duration": 2.64}, {"text": "to teach Clang that something exists.", "start": 809.69, "duration": 1.92}, {"text": "And you probably know from experience,\nperhaps now, what the solution is.", "start": 811.61, "duration": 4.4}, {"text": "What's the first mistake I made here?", "start": 816.01, "duration": 2.54}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 818.55, "duration": 1.17}, {"text": "DAVID J. MALAN: Yeah, I didn't\ninclude the header file,", "start": 819.72, "duration": 2.3}, {"text": "so to speak, for the library.", "start": 822.02, "duration": 1.2}, {"text": "I'm missing, at the top of\nthe file, include stdio.h,", "start": 823.22, "duration": 4.64}, {"text": "in which printf is defined.", "start": 827.86, "duration": 1.83}, {"text": "But let's propose that you're not\nquite sure how to get to that point,", "start": 829.69, "duration": 3.54}, {"text": "and how can we get, actually,\nsome help with this?", "start": 833.23, "duration": 2.09}, {"text": "Let me actually increase\nthe size of my terminal", "start": 835.32, "duration": 2.11}, {"text": "here, and recall that just a\nmoment ago, I ran makebuggy0,", "start": 837.43, "duration": 3.06}, {"text": "which yielded the errors that I saw.", "start": 840.49, "duration": 2.01}, {"text": "It turns out that\ninstalled in the sandbox", "start": 842.5, "duration": 2.34}, {"text": "is a command that we, the\nstaff, wrote called help50.", "start": 844.84, "duration": 2.82}, {"text": "And this is just a program we\nwrote that takes as input any error", "start": 847.66, "duration": 3.67}, {"text": "messages that your code or\nsome program has outputted.", "start": 851.33, "duration": 3.41}, {"text": "We kind of look for\nfamiliar words and phrases,", "start": 854.74, "duration": 2.13}, {"text": "just like a TF would in office hours,\nand if we recognize some error message,", "start": 856.87, "duration": 3.81}, {"text": "we're going to try to provide,\neither rhetorically or explicitly,", "start": 860.68, "duration": 3.48}, {"text": "some advice on how to handle.", "start": 864.16, "duration": 1.72}, {"text": "So if I go ahead and run this command\nnow, notice there's a bit more output.", "start": 865.88, "duration": 3.59}, {"text": "I see exactly the same output in\nwhite and green and red as before,", "start": 869.47, "duration": 4.08}, {"text": "but down below is some yellow, which\ncomes specifically from help50.", "start": 873.55, "duration": 3.24}, {"text": "And if I go ahead and\nzoom in on this, you'll", "start": 876.79, "duration": 2.04}, {"text": "see that the line of\noutput that we recognized", "start": 878.83, "duration": 4.74}, {"text": "is this one, that same one\nI verbally drew attention", "start": 883.57, "duration": 2.58}, {"text": "to before-- buggy0.c, line 5, error,\nimplicitly declaring library function", "start": 886.15, "duration": 4.05}, {"text": "printf, and so forth.", "start": 890.2, "duration": 1.81}, {"text": "So here, without the background\nhighlighting, but still in yellow,", "start": 892.01, "duration": 2.81}, {"text": "is our advice or a question a TF or\nCA might ask you in office hours.", "start": 894.82, "duration": 3.63}, {"text": "Well, did you forget to\ninclude stdio.h in which printf", "start": 898.45, "duration": 3.63}, {"text": "is declared atop your file?", "start": 902.08, "duration": 3.21}, {"text": "And hopefully, our questions,\nrhetorical or otherwise, are correct,", "start": 905.29, "duration": 3.42}, {"text": "and that will get you further along.", "start": 908.71, "duration": 1.72}, {"text": "So let's go ahead and try that advice.", "start": 910.43, "duration": 1.62}, {"text": "So include stdio.h.", "start": 912.05, "duration": 3.17}, {"text": "Now let me go ahead\nand go back down here.", "start": 915.22, "duration": 1.75}, {"text": "And if you don't like\nclutter, you can type \"clear,\"", "start": 916.97, "duration": 2.6}, {"text": "or hit Control+L in the terminal\nwindow to keep cleaning it like I do.", "start": 919.57, "duration": 3.81}, {"text": "If you want to go ahead now and run\nmakebuggy0, Enter, fewer errors,", "start": 923.38, "duration": 5.74}, {"text": "so that's progress, and not the same.", "start": 929.12, "duration": 1.64}, {"text": "So this one's, perhaps, a little easier.", "start": 930.76, "duration": 2.67}, {"text": "Reading the line, what\nline of code is buggy here?", "start": 933.43, "duration": 3.04}, {"text": "AUDIENCE: Forgot the semicolon.", "start": 936.47, "duration": 1.95}, {"text": "DAVID J. MALAN: Yeah, so this is\nnow still on line 5, it turns out,", "start": 938.42, "duration": 3.22}, {"text": "but for a different reason.", "start": 941.64, "duration": 1.3}, {"text": "I seem to be missing a semi-colon.", "start": 942.94, "duration": 1.42}, {"text": "But I could similarly ask\nhelp50 for help with that", "start": 944.36, "duration": 2.67}, {"text": "and hope that it recognizes my error.", "start": 947.03, "duration": 1.54}, {"text": "So this, too, should start\nbeing your first instinct.", "start": 948.57, "duration": 2.21}, {"text": "If on first glance, you\ndon't really understand", "start": 950.78, "duration": 1.98}, {"text": "what an error message is\ndoing, even though you've", "start": 952.76, "duration": 1.53}, {"text": "scrolled to the very first one, like\nliterally ask this program for help", "start": 954.29, "duration": 3.03}, {"text": "by rerunning the exact\nsame command you just", "start": 957.32, "duration": 2.55}, {"text": "ran, but prefix it with\nhelp50 and a space,", "start": 959.87, "duration": 3.54}, {"text": "and that will run help50 for you.", "start": 963.41, "duration": 1.95}, {"text": "Any questions on that process?", "start": 965.36, "duration": 3.24}, {"text": "All right, let's take a\nlook at one other program,", "start": 968.6, "duration": 2.09}, {"text": "for instance, that, this time, has\na different error involved in it.", "start": 970.69, "duration": 4.89}, {"text": "So how about-- let me go ahead\nand whip up a quick program here.", "start": 975.58, "duration": 3.63}, {"text": "I'll call this buggy2.c for\nconsistency with some of the samples", "start": 979.21, "duration": 4.32}, {"text": "we have online for you later.", "start": 983.53, "duration": 1.83}, {"text": "And in this example, I'm going to\ngo ahead and write the correct thing", "start": 985.36, "duration": 4.57}, {"text": "at first, stdio.h, and then I'm\ngoing to have int main void, which", "start": 989.93, "duration": 3.89}, {"text": "just gets my whole program started.", "start": 993.82, "duration": 1.53}, {"text": "And then I'm going to have\na loop, and recall for--", "start": 995.35, "duration": 2.13}, {"text": "[CLEARS THROAT] excuse me--\nMario or some other program,", "start": 997.48, "duration": 2.71}, {"text": "you might have done something like int\ni get 0, i is less than or equal to--", "start": 1000.19, "duration": 3.93}, {"text": "let's do this 10 times, and then i++.", "start": 1004.12, "duration": 3.14}, {"text": "And all I want to do in this program is\nprint out that value of i, as I can do,", "start": 1007.26, "duration": 6.42}, {"text": "with the %i placeholder--\nso a simple program.", "start": 1013.68, "duration": 2.16}, {"text": "Just want it to count from 0 to 10.", "start": 1015.84, "duration": 3.79}, {"text": "So let's go ahead and run\nbuggy2, or rather, I want to--", "start": 1019.63, "duration": 5.09}, {"text": "let's not print up--", "start": 1024.72, "duration": 1.77}, {"text": "rewind.", "start": 1026.49, "duration": 0.93}, {"text": "Let's go ahead and just\nprint out a hash symbol", "start": 1027.42, "duration": 4.77}, {"text": "and not spoil the solution this way.", "start": 1032.19, "duration": 3.37}, {"text": "So here, I go ahead\nand print out buggy2.", "start": 1035.56, "duration": 1.92}, {"text": "My goal is now I will stipulate to print\nout just 10 hash symbols, one per line,", "start": 1037.48, "duration": 4.44}, {"text": "which is what I want to do here.", "start": 1041.92, "duration": 1.35}, {"text": "And now I'm going to go ahead and run\n./buggy2, and I should see, hopefully,", "start": 1043.27, "duration": 5.37}, {"text": "10 hashes.", "start": 1048.64, "duration": 1.75}, {"text": "And I kind of spoiled this a little\nbit, but what do I instead see?", "start": 1050.39, "duration": 3.06}, {"text": "Yeah, I think I see more than I expect.", "start": 1056.86, "duration": 2.94}, {"text": "And we can kind of zoom in here and\ndouble check, so 1, 2, 3, 4, 5, 6, 7,", "start": 1059.8, "duration": 6.58}, {"text": "8, 9, 10, ooh, 11.", "start": 1066.38, "duration": 2.17}, {"text": "11.", "start": 1068.55, "duration": 0.67}, {"text": "Now some of your eyes might already be\ndarting to what the solution should be,", "start": 1069.22, "duration": 3.87}, {"text": "but let's just propose\nthat it's not obvious.", "start": 1073.09, "duration": 1.99}, {"text": "And if it is actually not obvious,\nall the better, so how might", "start": 1075.08, "duration": 2.21}, {"text": "you go about diagnosing this\nkind of problem, short of just", "start": 1077.29, "duration": 2.7}, {"text": "reaching out and asking\na human for help.", "start": 1079.99, "duration": 2.02}, {"text": "This is not a problem\nthat help50 can help with,", "start": 1082.01, "duration": 2.59}, {"text": "because it's not an error message.", "start": 1084.6, "duration": 1.42}, {"text": "Your program is working.", "start": 1086.02, "duration": 1.7}, {"text": "It's just not outputting\nwhat you wanted it to work,", "start": 1087.72, "duration": 2.17}, {"text": "but it's not an error message from the\ncompiler with which help50 can help.", "start": 1089.89, "duration": 3.51}, {"text": "So you want to kind of get eyes\ninto what your program is doing,", "start": 1093.4, "duration": 3.79}, {"text": "and you want to understand, why\nare you printing 11 when you really", "start": 1097.19, "duration": 3.23}, {"text": "are setting this up from 0 to 10?", "start": 1100.42, "duration": 1.89}, {"text": "Well, one of the most common\ntechniques in C or any language,", "start": 1102.31, "duration": 2.73}, {"text": "honestly, is to use printf for just\nother purposes-- diagnostic purposes.", "start": 1105.04, "duration": 4.3}, {"text": "For instance, there's not\nmuch going on in this program,", "start": 1109.34, "duration": 2.87}, {"text": "but I'd argue that it would\nbe interesting for me to know,", "start": 1112.21, "duration": 2.88}, {"text": "and therefore understand\nmy program, by just,", "start": 1115.09, "duration": 2.16}, {"text": "let's print out this value\nof i on each iteration,", "start": 1117.25, "duration": 4.44}, {"text": "as by doing the line of\ncode that I earlier did,", "start": 1121.69, "duration": 2.46}, {"text": "and just say something\nliterally like, i is %i.", "start": 1124.15, "duration": 3.44}, {"text": "I'm going to remove this\nultimately, because it's", "start": 1127.59, "duration": 2.05}, {"text": "going to make my program\nlook a little silly,", "start": 1129.64, "duration": 2.5}, {"text": "but it's going to help me\nunderstand what's going on.", "start": 1132.14, "duration": 2.61}, {"text": "Let me go ahead and recompile\nbuggy2, ./bugg2, and this time,", "start": 1134.75, "duration": 6.85}, {"text": "I see a lot more output.", "start": 1141.6, "duration": 1.51}, {"text": "But if I zoom in, now it's kind of--", "start": 1143.11, "duration": 4.15}, {"text": "now the computer is essentially\nhelping me understand what's going on.", "start": 1147.26, "duration": 2.92}, {"text": "When i is 0, here's one of them.", "start": 1150.18, "duration": 1.77}, {"text": "When i is 1, here's another.", "start": 1151.95, "duration": 1.51}, {"text": "I is 2, 3, 4, 5, 6, 7, 8,\n9, and that looks good.", "start": 1153.46, "duration": 3.05}, {"text": "But if we scroll a little further,\nit feels a little problematic", "start": 1156.51, "duration": 3.45}, {"text": "that i can also be 10.", "start": 1159.96, "duration": 2.25}, {"text": "So what's logically the\nbug in this program?", "start": 1162.21, "duration": 2.31}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 1164.52, "duration": 1.36}, {"text": "DAVID J. MALAN: Yeah.", "start": 1165.88, "duration": 0.87}, {"text": "I use less than or equal to, because\nI kind of confuse the paradigm.", "start": 1166.75, "duration": 3.0}, {"text": "Like programmers tend to\nstart counting at zero,", "start": 1169.75, "duration": 2.04}, {"text": "apparently, but I want to do this\n10 times, and in the human world,", "start": 1171.79, "duration": 3.03}, {"text": "if I want to do something 10 times,\nI might count up to and including 10.", "start": 1174.82, "duration": 3.74}, {"text": "But you can't have it both ways.", "start": 1178.56, "duration": 1.34}, {"text": "You can't start at zero\nand end at 10 if you", "start": 1179.9, "duration": 1.88}, {"text": "want to do something exactly 10 times.", "start": 1181.78, "duration": 1.92}, {"text": "So there's a couple\nof possibilities here.", "start": 1183.7, "duration": 2.37}, {"text": "How might we fix this?", "start": 1186.07, "duration": 2.24}, {"text": "Yeah, so we could certainly\nchange it to less than.", "start": 1188.31, "duration": 2.13}, {"text": "What's another correct approach?", "start": 1190.44, "duration": 2.88}, {"text": "Yeah, so we could leave this alone\nand just start counting at one,", "start": 1193.32, "duration": 3.13}, {"text": "and if you're not actually printing\nthe values in your actual program,", "start": 1196.45, "duration": 3.09}, {"text": "that might be perfectly reasonable, too.", "start": 1199.54, "duration": 2.37}, {"text": "It's just not conventional.", "start": 1201.91, "duration": 1.19}, {"text": "Get comfortable with, quickly, just\ncounting from zero, because that's just", "start": 1203.1, "duration": 3.13}, {"text": "what most everyone does these days.", "start": 1206.23, "duration": 2.58}, {"text": "But the technique here\nis just use printf.", "start": 1208.81, "duration": 2.25}, {"text": "Like, when in doubt, literally use\nprintf on this line, on this line,", "start": 1211.06, "duration": 4.13}, {"text": "on this line.", "start": 1215.19, "duration": 0.55}, {"text": "Anywhere something is interesting\nmaybe going on in your program,", "start": 1215.74, "duration": 3.06}, {"text": "just use it to print out the\nstrings that are in your variables,", "start": 1218.8, "duration": 2.66}, {"text": "print out the integers that are in\nyour variables, or anything else.", "start": 1221.46, "duration": 3.31}, {"text": "And it allows you to\nkind of see, so to speak,", "start": 1224.77, "duration": 1.92}, {"text": "what's going on inside\nof your program, printf.", "start": 1226.69, "duration": 5.94}, {"text": "One last tool-- so it's not\nuncommon, when writing code,", "start": 1232.63, "duration": 3.9}, {"text": "to maybe get a little sloppy early\non, especially when you're not", "start": 1236.53, "duration": 2.76}, {"text": "quite familiar with the patterns.", "start": 1239.29, "duration": 1.37}, {"text": "And for instance, if\nI go ahead and do this", "start": 1240.66, "duration": 3.25}, {"text": "by deleting a whole bunch of whitespace,\neven after fixing this mistake", "start": 1243.91, "duration": 3.84}, {"text": "by going from zero to 10,\nis this program now correct,", "start": 1247.75, "duration": 4.97}, {"text": "if the goal is to print 10 hashes?", "start": 1252.72, "duration": 1.42}, {"text": "Yeah, I heard yes.", "start": 1257.13, "duration": 0.75}, {"text": "Why is it correct?", "start": 1257.88, "duration": 0.94}, {"text": "In what sense?", "start": 1258.82, "duration": 0.59}, {"text": "Yeah, exactly.", "start": 1262.68, "duration": 0.76}, {"text": "It still works.", "start": 1263.44, "duration": 0.73}, {"text": "It prints out the 10\nhashes, one per line,", "start": 1264.17, "duration": 2.78}, {"text": "but it's poorly written\nin the sense of style.", "start": 1266.95, "duration": 2.82}, {"text": "So recall that we tend to\nevaluate, and the world", "start": 1269.77, "duration": 2.61}, {"text": "tends to think about code\nin at least three ways.", "start": 1272.38, "duration": 2.06}, {"text": "One, the correctness-- does it\ndo what it's supposed to do,", "start": 1274.44, "duration": 2.25}, {"text": "like print 10 hashes?", "start": 1276.69, "duration": 0.86}, {"text": "And yes, it does, because all\nI did was delete whitespace.", "start": 1277.55, "duration": 2.41}, {"text": "I didn't actually change or break\nthe code after making that fix.", "start": 1279.96, "duration": 2.77}, {"text": "Two is design, like how thoughtful,\nhow well-written is the code?", "start": 1282.73, "duration": 3.17}, {"text": "And frankly, it's kind of hard\nto write this in too many ways,", "start": 1285.9, "duration": 2.59}, {"text": "because it's so few lines.", "start": 1288.49, "duration": 1.18}, {"text": "But you'll see over time,\nas your programs grow,", "start": 1289.67, "duration": 2.0}, {"text": "the teaching fellows and staff\ncan provide you with feedback", "start": 1291.67, "duration": 2.07}, {"text": "on the design of your code.", "start": 1293.74, "duration": 1.32}, {"text": "But style is relatively easy.", "start": 1295.06, "duration": 1.89}, {"text": "And I've been teaching it mostly\nby way of example, if you will,", "start": 1296.95, "duration": 2.94}, {"text": "because I've been very\nmethodically indenting my code", "start": 1299.89, "duration": 2.61}, {"text": "and making sure everything looks\nvery pretty, or at least pretty", "start": 1302.5, "duration": 2.94}, {"text": "to a trained eye.", "start": 1305.44, "duration": 1.71}, {"text": "But this, let's just\nstipulate, is not pretty.", "start": 1307.15, "duration": 2.4}, {"text": "Like, left aligning everything\nstill works, not incorrect,", "start": 1309.55, "duration": 3.51}, {"text": "but it's poorly styled.", "start": 1313.06, "duration": 1.4}, {"text": "And what would be an\nargument for not writing code", "start": 1314.46, "duration": 2.28}, {"text": "like this and, instead,\nwriting code the way", "start": 1316.74, "duration": 1.84}, {"text": "I did a moment ago, albeit\nafter fixing the bug?", "start": 1318.58, "duration": 3.44}, {"text": "Yeah.", "start": 1322.02, "duration": 0.66}, {"text": "AUDIENCE: It'll help you identify\neach little subroutine that", "start": 1322.68, "duration": 2.88}, {"text": "goes through the thing, so\nyou know this section is here.", "start": 1325.56, "duration": 4.48}, {"text": "DAVID J. MALAN: Yeah.", "start": 1330.04, "duration": 0.99}, {"text": "AUDIENCE: [INAUDIBLE] next one,\nso you know where everything is.", "start": 1331.03, "duration": 2.31}, {"text": "DAVID J. MALAN: Exactly.", "start": 1333.34, "duration": 0.84}, {"text": "Let me summarize this.", "start": 1334.18, "duration": 0.91}, {"text": "It allows you to see,\nmore visually, what", "start": 1335.09, "duration": 2.21}, {"text": "are the individual subroutines\nor blocks of code doing", "start": 1337.3, "duration": 3.24}, {"text": "that are associated with each other?", "start": 1340.54, "duration": 1.53}, {"text": "Scratch is colorful, and it has\nshapes, like the hugging shape", "start": 1342.07, "duration": 3.21}, {"text": "that a lot of the control\nblocks make, to make", "start": 1345.28, "duration": 1.92}, {"text": "clear visually to the programmer\nthat this block encompasses others,", "start": 1347.2, "duration": 3.6}, {"text": "and, therefore, this repeats\nblock or this forever block", "start": 1350.8, "duration": 3.39}, {"text": "is doing these things\nagain and again and again.", "start": 1354.19, "duration": 2.14}, {"text": "That's the role that these curly\nbraces serve, and indentation", "start": 1356.33, "duration": 2.6}, {"text": "in this and in other\ncontexts just helps it", "start": 1358.93, "duration": 2.31}, {"text": "become more obvious to the\nprogrammer what is inside of what", "start": 1361.24, "duration": 3.84}, {"text": "and what is happening where.", "start": 1365.08, "duration": 1.4}, {"text": "So this is just better\nwritten, because you", "start": 1366.48, "duration": 2.53}, {"text": "can see that the code inside of main\nis everything that's indented here.", "start": 1369.01, "duration": 3.81}, {"text": "The code that's inside the for loop\nis everything that's indented here.", "start": 1372.82, "duration": 3.27}, {"text": "So it's just for us human\nreaders, teaching fellows", "start": 1376.09, "duration": 2.28}, {"text": "in the case of a course, or colleagues\nin the case of the real world.", "start": 1378.37, "duration": 2.88}, {"text": "But suppose that you don't quite see\nthese patterns too readily initially.", "start": 1381.25, "duration": 3.99}, {"text": "That, too, is fine.", "start": 1385.24, "duration": 1.47}, {"text": "CS50 has on its website\nwhat we call a style guide.", "start": 1386.71, "duration": 2.61}, {"text": "It's just a summary of\nwhat your code should", "start": 1389.32, "duration": 2.37}, {"text": "look like when using certain\nfeatures of C-- loops,", "start": 1391.69, "duration": 2.52}, {"text": "conditions, variables,\nfunctions, and so forth.", "start": 1394.21, "duration": 2.02}, {"text": "And it's linked on the course's website.", "start": 1396.23, "duration": 1.88}, {"text": "But there's also a tool\nthat you can use when", "start": 1398.11, "duration": 2.13}, {"text": "writing your code that'll help you\nclean it up and make it consistent,", "start": 1400.24, "duration": 3.27}, {"text": "not just for the sake of making it\nconsistent with the style guide,", "start": 1403.51, "duration": 2.79}, {"text": "but just making your\nown code more readable.", "start": 1406.3, "duration": 2.47}, {"text": "So for instance, if I go\nahead and run a command called", "start": 1408.77, "duration": 2.3}, {"text": "style50 on this program,\nbuggy2.c, and then hit Enter,", "start": 1411.07, "duration": 6.45}, {"text": "I'm going to see some\noutput that's colorful.", "start": 1417.52, "duration": 2.97}, {"text": "I see my own code in white,\nand then I see, anywhere", "start": 1420.49, "duration": 3.75}, {"text": "I should have indented,\ngreen spaces that", "start": 1424.24, "duration": 2.97}, {"text": "are sort of encouraging me to put\nspace, space, space, space here.", "start": 1427.21, "duration": 2.85}, {"text": "Put space, space, space, space here.", "start": 1430.06, "duration": 1.5}, {"text": "Put eight spaces here, four\nspaces here, and so forth,", "start": 1431.56, "duration": 2.88}, {"text": "and then it's reminding me I\nshould add comments as well.", "start": 1434.44, "duration": 2.5}, {"text": "This is a short program--\ndoesn't necessarily", "start": 1436.94, "duration": 1.88}, {"text": "need a lot of commenting\nto explain what's going on.", "start": 1438.82, "duration": 2.43}, {"text": "But just one //, like we\nsaw last week to explain,", "start": 1441.25, "duration": 2.85}, {"text": "maybe at the top of the file\nor top the block of the code,", "start": 1444.1, "duration": 2.73}, {"text": "would make style50 happy as well.", "start": 1446.83, "duration": 2.0}, {"text": "So let's do that.", "start": 1448.83, "duration": 0.71}, {"text": "Let me go ahead and take its advice\nand actually indent this with Tab,", "start": 1449.54, "duration": 4.44}, {"text": "this with Tab, this with Tab,\nthis with Tab, and this once more.", "start": 1453.98, "duration": 3.17}, {"text": "And you'll notice that on your keyboard,\neven though you're hitting Tab,", "start": 1457.15, "duration": 3.0}, {"text": "it's actually converting it for you,\nwhich is very common to four spaces,", "start": 1460.15, "duration": 3.18}, {"text": "so you don't have to hit\nthe spacebar four times.", "start": 1463.33, "duration": 2.37}, {"text": "Just get into the habit of using Tab.", "start": 1465.7, "duration": 1.74}, {"text": "And let me go ahead and\nwrite a comment here.", "start": 1467.44, "duration": 2.88}, {"text": "\"Print 10 hashes.\"", "start": 1470.32, "duration": 2.16}, {"text": "This way, my colleagues, my\nteaching fellow, myself in a week", "start": 1472.48, "duration": 2.57}, {"text": "don't have to read my own code again\nand figure out what it's doing.", "start": 1475.05, "duration": 2.84}, {"text": "I can read the comments\nalone per the //.", "start": 1477.89, "duration": 2.78}, {"text": "If I run style50 again,\nnow it looks good.", "start": 1480.67, "duration": 3.81}, {"text": "It's in accordance with the style guide,\nand it's just more prettily written,", "start": 1484.48, "duration": 3.3}, {"text": "so pretty printed would be\na term of art in programming", "start": 1487.78, "duration": 2.7}, {"text": "when your code looks good\nand isn't just correct.", "start": 1490.48, "duration": 3.24}, {"text": "Any questions then?", "start": 1493.72, "duration": 1.95}, {"text": "Yeah.", "start": 1495.67, "duration": 0.95}, {"text": "AUDIENCE: I tried using\n[INAUDIBLE] this past week", "start": 1496.62, "duration": 2.37}, {"text": "and it said I needed a new program.", "start": 1498.99, "duration": 1.94}, {"text": "DAVID J. MALAN: That's--", "start": 1500.93, "duration": 1.0}, {"text": "it wasn't enabled for the\nfirst week of the class.", "start": 1501.93, "duration": 2.08}, {"text": "It's enabled as of right\nnow and henceforth.", "start": 1504.01, "duration": 2.56}, {"text": "Other questions?", "start": 1506.57, "duration": 2.36}, {"text": "No.", "start": 1508.93, "duration": 0.5}, {"text": "All right, so just to recap then, three\ntools to have in the proverbial toolbox", "start": 1509.43, "duration": 3.72}, {"text": "now are help50 anytime you see an error\nmessage that you don't understand,", "start": 1513.15, "duration": 3.12}, {"text": "whether it's with make or Clang\nor, perhaps, something else.", "start": 1516.27, "duration": 2.58}, {"text": "Printf-- when you've\ngot a logical program--", "start": 1518.85, "duration": 2.43}, {"text": "a bug in your program, and it's just\nnot working the way it's supposed to", "start": 1521.28, "duration": 3.06}, {"text": "or the way the problem set tells\nyou it should, and then style50", "start": 1524.34, "duration": 3.63}, {"text": "when you want to make sure that, does\nmy code look right in terms of style,", "start": 1527.97, "duration": 3.99}, {"text": "and is it as readable as possible?", "start": 1531.96, "duration": 1.41}, {"text": "And honestly, you'll find us\nat office hours and the like", "start": 1533.37, "duration": 2.38}, {"text": "often encouraging you, hey,\nbefore we answer this question,", "start": 1535.75, "duration": 2.63}, {"text": "can you please run style50 on your code?", "start": 1538.38, "duration": 1.8}, {"text": "Can you please clean up your code,\nbecause it just makes our lives, too,", "start": 1540.18, "duration": 3.0}, {"text": "as other humans so much easier\nwhen we can understand what's", "start": 1543.18, "duration": 2.76}, {"text": "going on without having to visually\nfigure out what parentheses and curly", "start": 1545.94, "duration": 3.45}, {"text": "braces line up.", "start": 1549.39, "duration": 0.96}, {"text": "And so do get into\nthat habit, because it", "start": 1550.35, "duration": 1.71}, {"text": "will save you time from having to waste\ntime parsing things visually yourself.", "start": 1552.06, "duration": 5.64}, {"text": "All right.", "start": 1557.7, "duration": 1.05}, {"text": "So there's not just CPUs in computers.", "start": 1558.75, "duration": 2.82}, {"text": "CPUs are the brains,\ncentral processing unit,", "start": 1561.57, "duration": 1.94}, {"text": "and that's why we keep emphasizing the\ninstructions that computers understand.", "start": 1563.51, "duration": 3.25}, {"text": "There's also this, which\nwe saw last time, too.", "start": 1566.76, "duration": 2.85}, {"text": "This is an example of\nwhat type of hardware?", "start": 1569.61, "duration": 2.74}, {"text": "AUDIENCE: RAM.", "start": 1572.35, "duration": 0.59}, {"text": "DAVID J. MALAN: RAM, or\nRandom Access Memory.", "start": 1572.94, "duration": 2.17}, {"text": "This is the type of memory\nthat laptops, desktops, servers", "start": 1575.11, "duration": 2.51}, {"text": "have that is used whenever you\nrun a program or open a file.", "start": 1577.62, "duration": 4.17}, {"text": "There's another type of memory called\nhard drives or solid state drives,", "start": 1581.79, "duration": 3.27}, {"text": "which you're probably\nfamiliar as a consumer,", "start": 1585.06, "duration": 1.95}, {"text": "and that's just where your\nfiles are stored permanently.", "start": 1587.01, "duration": 2.94}, {"text": "Your battery can die.", "start": 1589.95, "duration": 0.88}, {"text": "You can pull the plug from\nyour laptop or desktop,", "start": 1590.83, "duration": 2.09}, {"text": "and any files saved on a\nhard drive are persistent.", "start": 1592.92, "duration": 2.43}, {"text": "They stay there because\nof the technology", "start": 1595.35, "duration": 2.07}, {"text": "being used to implement that.", "start": 1597.42, "duration": 1.54}, {"text": "But RAM is more ephemeral.", "start": 1598.96, "duration": 2.54}, {"text": "RAM is powered only by electricity.", "start": 1601.5, "duration": 2.1}, {"text": "It's only used when the power\nis on or the battery is charged,", "start": 1603.6, "duration": 3.12}, {"text": "and it's where your files and\nprograms live effectively when", "start": 1606.72, "duration": 3.24}, {"text": "you double click on them and open them.", "start": 1609.96, "duration": 2.07}, {"text": "So when you double click on\nsomething like Microsoft Word,", "start": 1612.03, "duration": 2.43}, {"text": "it is copied from your hard drive\nlong term into this type of memory,", "start": 1614.46, "duration": 4.68}, {"text": "because this type of memory,\nthough smaller in capacity--", "start": 1619.14, "duration": 3.3}, {"text": "you don't have as many bytes of it--", "start": 1622.44, "duration": 1.74}, {"text": "but it is much, much, much, much faster.", "start": 1624.18, "duration": 2.58}, {"text": "Similarly, when you open a\ndocument, or you go to a web page,", "start": 1626.76, "duration": 2.79}, {"text": "the contents of the file you're seeing\nare stored in this type of hardware,", "start": 1629.55, "duration": 3.66}, {"text": "because even though you don't\nhave terribly many bytes of it,", "start": 1633.21, "duration": 2.55}, {"text": "it's just much, much, much, much faster.", "start": 1635.76, "duration": 2.47}, {"text": "And so this will be thematic in\ncomputer science and in hardware.", "start": 1638.23, "duration": 2.72}, {"text": "You sort of have lots\nof cheap, slow stuff,", "start": 1640.95, "duration": 3.0}, {"text": "like hard disk space, relatively\nspeaking, and you have a little less", "start": 1643.95, "duration": 3.06}, {"text": "of the more expensive but\nfaster stuff like RAM.", "start": 1647.01, "duration": 3.03}, {"text": "And you have just one, usually, CPU,\nwhich is the really fast thing that", "start": 1650.04, "duration": 3.17}, {"text": "can do a billion things per second.", "start": 1653.21, "duration": 1.78}, {"text": "But it, too, is more expensive.", "start": 1654.99, "duration": 2.26}, {"text": "So there's four visible chips\non this thing, if you will.", "start": 1657.25, "duration": 2.51}, {"text": "And we won't get into the details\nof how these things work, but let's", "start": 1659.76, "duration": 2.88}, {"text": "just zoom in on this one black\nchip here and focus on it", "start": 1662.64, "duration": 3.39}, {"text": "as being representative\nas some amount of memory.", "start": 1666.03, "duration": 2.52}, {"text": "Maybe it's one megabyte,\none million bytes.", "start": 1668.55, "duration": 2.28}, {"text": "Maybe it's even one gigabyte\nthese days, one billion bytes.", "start": 1670.83, "duration": 3.48}, {"text": "But this is to say that this chip\ncan be thought of as just having", "start": 1674.31, "duration": 3.12}, {"text": "a bunch of bytes in it.", "start": 1677.43, "duration": 1.31}, {"text": "This is not to scale.", "start": 1678.74, "duration": 1.12}, {"text": "You have many more bytes\nthan these, but let", "start": 1679.86, "duration": 1.93}, {"text": "me propose that you just\nthink of each of these squares", "start": 1681.79, "duration": 2.3}, {"text": "here as representing one byte.", "start": 1684.09, "duration": 2.01}, {"text": "So the very first byte of\nmemory I have access to is here.", "start": 1686.1, "duration": 2.82}, {"text": "Next one is here, and so forth.", "start": 1688.92, "duration": 1.75}, {"text": "And the fact that they wrap around\nis just an artist rendition.", "start": 1690.67, "duration": 2.75}, {"text": "These things you can think\nof just virtually as going", "start": 1693.42, "duration": 2.34}, {"text": "left to right, not in any kind of grid,\nbut physically, they look like this.", "start": 1695.76, "duration": 3.82}, {"text": "So when you actually create a\nvariable in a program like C,", "start": 1699.58, "duration": 3.83}, {"text": "like you need a char.", "start": 1703.41, "duration": 1.22}, {"text": "A char tends to be one\nbyte or eight bits,", "start": 1704.63, "duration": 3.13}, {"text": "and so that means when you have a\nvariable of type char in a C program,", "start": 1707.76, "duration": 4.54}, {"text": "it goes, literally, physically\nin one of these boxes,", "start": 1712.3, "duration": 3.62}, {"text": "inside of your computer's RAM.", "start": 1715.92, "duration": 1.5}, {"text": "So for instance, it might take\nup this much space at top left.", "start": 1717.42, "duration": 3.1}, {"text": "If you have a bigger\ntype of data, so you", "start": 1720.52, "duration": 2.3}, {"text": "have an integer, which tends\nto be four bytes or 32 bits,", "start": 1722.82, "duration": 3.0}, {"text": "you might need more than one square,\nso the computer might give you access", "start": 1725.82, "duration": 3.09}, {"text": "to four squares instead.", "start": 1728.91, "duration": 2.08}, {"text": "And you have 32 bits spanning\nthat region of memory.", "start": 1730.99, "duration": 3.02}, {"text": "But honestly, I chose\nthose boxes arbitrarily.", "start": 1734.01, "duration": 2.06}, {"text": "They could be anywhere in that\nchip or in any of the other chips.", "start": 1736.07, "duration": 2.71}, {"text": "It's up to the computer to just\nremember where they are for you.", "start": 1738.78, "duration": 2.84}, {"text": "You don't need to remember that, per se.", "start": 1741.62, "duration": 2.62}, {"text": "But if we think about\nthis grid, it turns out", "start": 1744.24, "duration": 2.82}, {"text": "this is actually very valuable\nthat we have chunks of memory--", "start": 1747.06, "duration": 3.48}, {"text": "bytes, if you will--", "start": 1750.54, "duration": 1.24}, {"text": "that are back to back to back to back.", "start": 1751.78, "duration": 2.18}, {"text": "And in fact, there's a\nword for this technique.", "start": 1753.96, "duration": 2.29}, {"text": "This is contiguous memory--", "start": 1756.25, "duration": 1.43}, {"text": "back to back to back to back to back.", "start": 1757.68, "duration": 1.59}, {"text": "And in general, in programming,\nthis is referred to as an array.", "start": 1759.27, "duration": 3.94}, {"text": "You might recall from Scratch,\nif you use this feature,", "start": 1763.21, "duration": 2.3}, {"text": "it actually has things\ncalled lists, which", "start": 1765.51, "duration": 1.74}, {"text": "are exactly that-- lists of values,\nlists of words, lists of strings.", "start": 1767.25, "duration": 3.0}, {"text": "An array is just a contiguous\nchunk of memory, such", "start": 1770.25, "duration": 2.77}, {"text": "that you can store something here,\nsomething here, something here,", "start": 1773.02, "duration": 2.75}, {"text": "something here, and so forth.", "start": 1775.77, "duration": 2.08}, {"text": "So it turns out an array,\nthis super simple primitive,", "start": 1777.85, "duration": 3.71}, {"text": "is actually incredibly powerful.", "start": 1781.56, "duration": 2.34}, {"text": "Just being able to store\nthings in my computer's memory", "start": 1783.9, "duration": 3.0}, {"text": "back to back to back to back enables so\nmany possibilities, both design-wise,", "start": 1786.9, "duration": 5.73}, {"text": "like how well I can write my code, and\nalso how fast I can make my code run.", "start": 1792.63, "duration": 4.08}, {"text": "So let me go ahead and\ntake out an example.", "start": 1796.71, "duration": 3.1}, {"text": "Let me go ahead and open up, for\ninstance, a new file in a sandbox,", "start": 1799.81, "duration": 4.88}, {"text": "and we'll call this score0.", "start": 1804.69, "duration": 2.01}, {"text": "So let me go ahead and close this one,\ncreate a new file called scores0.c.", "start": 1806.7, "duration": 5.45}, {"text": "And in this file, let's go ahead and\nwrite a relatively simple program.", "start": 1812.15, "duration": 4.42}, {"text": "Let me go ahead and, as\nusual, give myself access", "start": 1816.57, "duration": 2.22}, {"text": "to some helpful functions--\ncs50.h and stdio.h.", "start": 1818.79, "duration": 3.9}, {"text": "And no need to copy all this\ndown verbatim, if you don't like.", "start": 1822.69, "duration": 2.61}, {"text": "Everything will have or is\nalready on the course's website.", "start": 1825.3, "duration": 2.91}, {"text": "Let me start my program as\nusual with int main void.", "start": 1828.21, "duration": 2.67}, {"text": "And then let me write a program,\nas this program's name implies,", "start": 1830.88, "duration": 2.85}, {"text": "that, like, asks the user for three\nscores on recent problem sets,", "start": 1833.73, "duration": 4.74}, {"text": "quizzes, whatever, and then kind of\ncreates a very simple chart of them,", "start": 1838.47, "duration": 3.0}, {"text": "like a bar chart to kind of\nhelp me visualize how well", "start": 1841.47, "duration": 2.97}, {"text": "or how poorly I did on something.", "start": 1844.44, "duration": 1.9}, {"text": "So if I want to get an\ninteger, no surprise,", "start": 1846.34, "duration": 3.11}, {"text": "we can use the get int\nfunction, and I can just", "start": 1849.45, "duration": 2.16}, {"text": "ask the user for their first score.", "start": 1851.61, "duration": 2.67}, {"text": "But I should probably do\nsomething with this score,", "start": 1854.28, "duration": 2.22}, {"text": "and on the left hand side of\nthis, what do I typically put?", "start": 1856.5, "duration": 3.66}, {"text": "Yeah.", "start": 1860.16, "duration": 0.5}, {"text": "So int-- sure, score 1 equals\nthis, and then my semi-colon.", "start": 1860.66, "duration": 4.06}, {"text": "So you might not have had many\noccasions to use ints just yet,", "start": 1864.72, "duration": 2.76}, {"text": "but get int is in the cs50 library.", "start": 1867.48, "duration": 1.89}, {"text": "This is the so-called\nprompt that the human", "start": 1869.37, "duration": 1.8}, {"text": "sees, and let me actually\nfix my space, because I", "start": 1871.17, "duration": 2.43}, {"text": "want the human to see the\nspace after the colon.", "start": 1873.6, "duration": 3.03}, {"text": "But that's just an aesthetic detail.", "start": 1876.63, "duration": 1.68}, {"text": "And then when I get back this\nvalue, its return value--", "start": 1878.31, "duration": 3.04}, {"text": "just like Aaron, last week,\nhanded me a piece of paper,", "start": 1881.35, "duration": 2.3}, {"text": "so does get int hand me a virtual\npiece of paper with a number", "start": 1883.65, "duration": 3.06}, {"text": "that I'm going to store in\na variable called Score 1.", "start": 1886.71, "duration": 2.79}, {"text": "And now just to be clear, what has\njust happened effectively is this.", "start": 1889.5, "duration": 5.19}, {"text": "The moment you create a variable\nof type int, which is four bytes,", "start": 1894.69, "duration": 4.86}, {"text": "literally, this is what\nClang or, more generally,", "start": 1899.55, "duration": 2.88}, {"text": "the computer has done for you.", "start": 1902.43, "duration": 1.8}, {"text": "That int that the human\ntyped in is stored literally", "start": 1904.23, "duration": 3.66}, {"text": "in four contiguous bytes back to\nback to back, maybe here, maybe here,", "start": 1907.89, "duration": 3.84}, {"text": "but together.", "start": 1911.73, "duration": 0.75}, {"text": "So that's all that's going on\nwhen you're actually using C.", "start": 1912.48, "duration": 3.06}, {"text": "So let me go back into\nmy code here, and now I", "start": 1915.54, "duration": 2.7}, {"text": "want to-- it's not\ninteresting to plot one score.", "start": 1918.24, "duration": 2.14}, {"text": "So let's go ahead and do another.", "start": 1920.38, "duration": 1.37}, {"text": "So int Score 2, get int, get int,\nand I'll ask the user for score 2,", "start": 1921.75, "duration": 6.33}, {"text": "semi-colon, and then let's get one\nmore, Score 3, get int, call it Score 3,", "start": 1928.08, "duration": 5.72}, {"text": "semi-colon.", "start": 1933.8, "duration": 1.03}, {"text": "All right, so now let me go\nahead and generate a bar,", "start": 1934.83, "duration": 2.56}, {"text": "like a bar chart of this.", "start": 1937.39, "duration": 1.1}, {"text": "I'm going to use what\nwe'll call ASCII art.", "start": 1938.49, "duration": 2.04}, {"text": "ASCII, of course, is just text, recall--", "start": 1940.53, "duration": 1.95}, {"text": "very simple text in a computer.", "start": 1942.48, "duration": 1.3}, {"text": "And I can kind of make a bar chart\npretty simply by just printing out", "start": 1943.78, "duration": 3.89}, {"text": "like a bunch of hashes\nhorizontally, so a short bar", "start": 1947.67, "duration": 2.86}, {"text": "will represent a small number, and a\nlong bar will represent a big number.", "start": 1950.53, "duration": 3.56}, {"text": "So let me go ahead and say to the\nuser, all right, here's your Score 1.", "start": 1954.09, "duration": 4.32}, {"text": "I'm going to go ahead, then,\nand say, for int i get 0.", "start": 1958.41, "duration": 2.91}, {"text": "I is less than Score 1, i++.", "start": 1961.32, "duration": 4.68}, {"text": "And now if I scroll down and\ngive myself a bit of room here,", "start": 1966.0, "duration": 2.97}, {"text": "let me go ahead and implement\njust a simple print.", "start": 1968.97, "duration": 4.77}, {"text": "So go ahead and print out a hash, and\nthen when you're all done with that,", "start": 1973.74, "duration": 3.84}, {"text": "print out a new line at\nthe end of that loop.", "start": 1977.58, "duration": 4.08}, {"text": "And let's just pause there.", "start": 1981.66, "duration": 1.5}, {"text": "Just to recap, I've asked\nthe human for three scores.", "start": 1983.16, "duration": 2.67}, {"text": "I'm only doing something with one\nof them at the moment, so in fact,", "start": 1985.83, "duration": 3.24}, {"text": "just as a quick check, let me delete\nthose so as to not get ahead of myself.", "start": 1989.07, "duration": 4.35}, {"text": "Let me do make score 0.", "start": 1993.42, "duration": 1.64}, {"text": "Cross my fingers.", "start": 1995.06, "duration": 1.32}, {"text": "OK, no errors.", "start": 1996.38, "duration": 1.13}, {"text": "Now let me go ahead and do ./score0,\nand your first score on a pset this year", "start": 1997.51, "duration": 4.97}, {"text": "out of 100 has been?", "start": 2002.48, "duration": 2.1}, {"text": "OK, 100.", "start": 2004.58, "duration": 1.59}, {"text": "And good job.", "start": 2006.17, "duration": 0.92}, {"text": "So it's a really long bar,\nand if we count those up,", "start": 2007.09, "duration": 2.17}, {"text": "hopefully, there's actually 100 bars.", "start": 2009.26, "duration": 2.12}, {"text": "And if we run it again and\nsay, eh, it didn't go so well.", "start": 2011.38, "duration": 2.38}, {"text": "I got a 50.", "start": 2013.76, "duration": 1.41}, {"text": "That's half as big a bar.", "start": 2015.17, "duration": 1.47}, {"text": "So it seems like we're on\nour way correctness-wise.", "start": 2016.64, "duration": 2.49}, {"text": "So now let me go ahead\nand get the other scores.", "start": 2019.13, "duration": 2.07}, {"text": "Well, I had them here a moment ago.", "start": 2021.2, "duration": 1.66}, {"text": "So let me go ahead and just, well,\ncopy, paste, and change this to two,", "start": 2022.86, "duration": 4.07}, {"text": "change this to three, change\nthis to three, this to three.", "start": 2026.93, "duration": 3.09}, {"text": "All right, I know how to print\nbars clearly, so let me go ahead", "start": 2030.02, "duration": 3.0}, {"text": "and do this, and then do this,\nand then fix the indentation.", "start": 2033.02, "duration": 3.86}, {"text": "I don't want to say Score 1 everywhere.", "start": 2036.88, "duration": 1.63}, {"text": "I want to say a Score 2, Score 2.", "start": 2038.51, "duration": 2.13}, {"text": "I mean you're probably being\nrubbed the wrong way that this", "start": 2040.64, "duration": 2.73}, {"text": "is both tedious and sloppy, and why?", "start": 2043.37, "duration": 2.67}, {"text": "What am I doing poorly now design-wise?", "start": 2046.04, "duration": 1.83}, {"text": "AUDIENCE: Copying and pasting code.", "start": 2047.87, "duration": 1.46}, {"text": "DAVID J. MALAN: Like copy-pasting\nalmost always bad, right?", "start": 2049.33, "duration": 2.32}, {"text": "There's redundancy\nhere, but that's fine.", "start": 2051.65, "duration": 1.77}, {"text": "Let's prioritize correctness,\nat least, for now.", "start": 2053.42, "duration": 2.25}, {"text": "So let me go ahead and make Score 0.", "start": 2055.67, "duration": 2.44}, {"text": "All right, no mistakes-- ./score0.", "start": 2058.11, "duration": 3.18}, {"text": "And then Tab it.", "start": 2061.29, "duration": 0.92}, {"text": "Let me go ahead now and run--", "start": 2062.21, "duration": 2.42}, {"text": "OK, we got 100 the first time.", "start": 2064.63, "duration": 1.54}, {"text": "We got 50 the--", "start": 2066.17, "duration": 1.42}, {"text": "oh, that's a bug.", "start": 2067.59, "duration": 1.73}, {"text": "What did I do there?", "start": 2069.32, "duration": 2.24}, {"text": "See, this is what happens\nwhen you copy-paste.", "start": 2071.56, "duration": 2.25}, {"text": "So let's fix this.", "start": 2073.81, "duration": 0.97}, {"text": "That should say Score 2, so\nControl+C will quit a program.", "start": 2074.78, "duration": 3.03}, {"text": "Make score 0 will\nrecreate it. ./0, Enter--", "start": 2077.81, "duration": 4.53}, {"text": "all right, here we go.", "start": 2082.34, "duration": 0.92}, {"text": "100, 50.", "start": 2083.26, "duration": 1.59}, {"text": "Let's split the difference--", "start": 2084.85, "duration": 1.17}, {"text": "75.", "start": 2086.02, "duration": 1.24}, {"text": "All right, so this is a simple\nbar chart horizontally drawn", "start": 2087.26, "duration": 3.74}, {"text": "of each of my three scores, where this\nis 100, this is 50, and this is 75.", "start": 2091.0, "duration": 4.35}, {"text": "But there's opportunities\nfor improvement here.", "start": 2095.35, "duration": 2.47}, {"text": "So one, it rubbed some\nfolks the wrong way", "start": 2097.82, "duration": 2.03}, {"text": "already that we were literally\ncopying and pasting code.", "start": 2099.85, "duration": 5.34}, {"text": "So where is one opportunity\nfor improvement here?", "start": 2105.19, "duration": 4.24}, {"text": "What should I do instead of copying\nand pasting that code again and again?", "start": 2109.43, "duration": 3.57}, {"text": "What ingredient can you bring?", "start": 2113.0, "duration": 2.64}, {"text": "OK, so we can use a loop and actually\njust do the same thing three times.", "start": 2115.64, "duration": 3.46}, {"text": "So let's try that.", "start": 2119.1, "duration": 3.18}, {"text": "Let me go ahead and do this.", "start": 2122.28, "duration": 3.03}, {"text": "So let's go ahead and\ndelete the copy-paste I did,", "start": 2125.31, "duration": 3.35}, {"text": "and let me go ahead and say, OK, well,\nfor int i get zero, i less than 3, i++.", "start": 2128.66, "duration": 6.96}, {"text": "Let me create a bracket.", "start": 2135.62, "duration": 2.04}, {"text": "I can highlight multiple\nlines and hit Tab,", "start": 2137.66, "duration": 1.8}, {"text": "and they'll all indent for\nme, which is convenient.", "start": 2139.46, "duration": 2.13}, {"text": "And can I do this now, for instance?", "start": 2141.59, "duration": 2.68}, {"text": "Say it a little louder.", "start": 2148.86, "duration": 1.38}, {"text": "AUDIENCE: If you [INAUDIBLE]\nto a specific [INAUDIBLE]..", "start": 2150.24, "duration": 4.42}, {"text": "DAVID J. MALAN: Yeah,\nI'm a little worried.", "start": 2154.66, "duration": 1.92}, {"text": "As you're noting here, we're using on\nline 13 here the same variable, so mm.", "start": 2156.58, "duration": 4.84}, {"text": "So it's good instincts,\nbut I feel like the fact", "start": 2161.42, "duration": 2.0}, {"text": "that this program,\nunlike last week, we're", "start": 2163.42, "duration": 1.74}, {"text": "now collecting multiple pieces of data.", "start": 2165.16, "duration": 1.63}, {"text": "Loops are breaking down for us.", "start": 2166.79, "duration": 1.3}, {"text": "Yeah.", "start": 2168.09, "duration": 0.5}, {"text": "AUDIENCE: [INAUDIBLE] function\n[INAUDIBLE] takes in--", "start": 2168.59, "duration": 4.43}, {"text": "like you can have it [INAUDIBLE].", "start": 2173.02, "duration": 3.96}, {"text": "DAVID J. MALAN: OK.", "start": 2176.98, "duration": 0.79}, {"text": "AUDIENCE: So like an input of how\nmany scores you wanted to enter.", "start": 2177.77, "duration": 2.75}, {"text": "DAVID J. MALAN: OK.", "start": 2180.52, "duration": 0.89}, {"text": "AUDIENCE: And then [INAUDIBLE].", "start": 2181.41, "duration": 2.28}, {"text": "DAVID J. MALAN: Yeah,\nwe can implement another", "start": 2183.69, "duration": 1.92}, {"text": "function that factors out\nsome of this functionality.", "start": 2185.61, "duration": 2.2}, {"text": "Any other thoughts?", "start": 2187.81, "duration": 0.84}, {"text": "AUDIENCE: Store your scores in an array.", "start": 2188.65, "duration": 2.14}, {"text": "DAVID J. MALAN: OK, so we could\nalso store our scores in an array.", "start": 2190.79, "duration": 2.75}, {"text": "So let's do these in\norder then, in fact.", "start": 2193.54, "duration": 1.37}, {"text": "So loops are wonderful when you\nwant to do something again and again", "start": 2194.91, "duration": 2.83}, {"text": "and again, but the whole\npurpose of a function,", "start": 2197.74, "duration": 2.15}, {"text": "fundamentally, is to factor\nout common functionality.", "start": 2199.89, "duration": 3.45}, {"text": "And there might still be\na loop in the solution,", "start": 2203.34, "duration": 2.0}, {"text": "but the real fundamental problem\nwith what I was doing a moment ago", "start": 2205.34, "duration": 2.79}, {"text": "was I was copying and\npasting functionality--", "start": 2208.13, "duration": 2.08}, {"text": "shouldn't need to do that,\nbecause in both C and Scratch,", "start": 2210.21, "duration": 2.49}, {"text": "we had the ability to\nmake our own functions.", "start": 2212.7, "duration": 2.19}, {"text": "So let's do that.", "start": 2214.89, "duration": 0.83}, {"text": "Let me undo my loop changes\nhere, just to get us", "start": 2215.72, "duration": 2.29}, {"text": "back to where we were a moment ago.", "start": 2218.01, "duration": 1.95}, {"text": "And let me go ahead and, instead,\nclean this up a little bit.", "start": 2219.96, "duration": 2.83}, {"text": "Let me go ahead and\ncreate a new function", "start": 2222.79, "duration": 2.12}, {"text": "down here that I'm going\nto call, say, Chart, just", "start": 2224.91, "duration": 2.94}, {"text": "to create a chart for myself.", "start": 2227.85, "duration": 1.53}, {"text": "And it's going to take as input a score,\nbut I could call this anything I want.", "start": 2229.38, "duration": 3.46}, {"text": "It's void as its return type, because\nI don't need it to hand me something", "start": 2232.84, "duration": 3.12}, {"text": "back.", "start": 2235.96, "duration": 0.5}, {"text": "Like I'm not getting a\nstring from the user.", "start": 2236.46, "duration": 1.55}, {"text": "I'm just printing a char.", "start": 2238.01, "duration": 1.32}, {"text": "It's a so-called side effect or output.", "start": 2239.33, "duration": 2.35}, {"text": "Now I'm going to go ahead and\ndo my loop here for int i get 0.", "start": 2241.68, "duration": 3.54}, {"text": "I is less than--", "start": 2245.22, "duration": 2.28}, {"text": "how many hashes do I want to print if\nI'm being passed in the user score?", "start": 2247.5, "duration": 4.9}, {"text": "Like, is this 3 here?", "start": 2252.4, "duration": 2.37}, {"text": "AUDIENCE: The score.", "start": 2254.77, "duration": 1.09}, {"text": "DAVID J. MALAN: The\nscore, so if I'm being", "start": 2255.86, "duration": 1.75}, {"text": "handed a number that's 0 to 100,\nthat's what I want to iterate over.", "start": 2257.61, "duration": 2.93}, {"text": "If my goal here, ultimately--", "start": 2260.54, "duration": 2.46}, {"text": "let me finish this thought-- i++ is\n[? 2 ?] inside this loop print out one", "start": 2263.0, "duration": 5.97}, {"text": "hash per point in 1's total score.", "start": 2268.97, "duration": 3.11}, {"text": "And just to keep things clean,\nI'm going to go ahead and put", "start": 2272.08, "duration": 2.5}, {"text": "a new line at the very end of this.", "start": 2274.58, "duration": 1.92}, {"text": "But I think now, I factored out\na good amount of the redundancy.", "start": 2276.5, "duration": 3.32}, {"text": "It's not everything,\nbut I've at least now", "start": 2279.82, "duration": 2.14}, {"text": "given myself a function called Chart.", "start": 2281.96, "duration": 2.07}, {"text": "So up here, it looks like I can\nkind of remove this loop, which", "start": 2284.03, "duration": 4.83}, {"text": "is what I factored out.", "start": 2288.86, "duration": 1.17}, {"text": "That's almost identical, except\nthe variable name was hardcoded.", "start": 2290.03, "duration": 3.36}, {"text": "And I think I could\nnow do chart like this,", "start": 2293.39, "duration": 4.86}, {"text": "and then I maybe could do a little\ncopy-paste, if that's OK, like if maybe", "start": 2298.25, "duration": 4.02}, {"text": "I can get away with just doing this,\nand then say 2, and then say 3,", "start": 2302.27, "duration": 6.09}, {"text": "and then say 3, and then say 2.", "start": 2308.36, "duration": 1.95}, {"text": "So it's still copy-paste, but it's less.", "start": 2310.31, "duration": 2.37}, {"text": "And it looks better.", "start": 2312.68, "duration": 0.84}, {"text": "It literally fits on the screen, so it's\nprogress-- not perfect, but progress.", "start": 2313.52, "duration": 3.42}, {"text": "Better design, but not perfect.", "start": 2316.94, "duration": 1.84}, {"text": "So is this going to compile?", "start": 2318.78, "duration": 3.42}, {"text": "I'm going to have errors why?", "start": 2322.2, "duration": 1.85}, {"text": "AUDIENCE: Essentially, it's\n[INAUDIBLE] the program [INAUDIBLE]..", "start": 2324.05, "duration": 3.28}, {"text": "DAVID J. MALAN: OK.", "start": 2327.33, "duration": 2.09}, {"text": "Yeah.", "start": 2329.42, "duration": 0.95}, {"text": "AUDIENCE: We need to\ndeclare a [INAUDIBLE]..", "start": 2330.37, "duration": 2.35}, {"text": "DAVID J. MALAN: OK, good.", "start": 2332.72, "duration": 1.13}, {"text": "So let me induce the actual error, just\nso we know what problem we're solving.", "start": 2333.85, "duration": 4.15}, {"text": "Let me go ahead and sort\nof innocently go ahead", "start": 2338.0, "duration": 2.46}, {"text": "and compile Score 0 hoping\nall is well, but of course,", "start": 2340.46, "duration": 3.27}, {"text": "it's not because of a\nfamiliar error up here.", "start": 2343.73, "duration": 3.96}, {"text": "So notice, implicit declaration of\nfunction chart is invalid in C99.", "start": 2347.69, "duration": 4.74}, {"text": "So again, implicit\ndeclaration of function", "start": 2352.43, "duration": 2.25}, {"text": "just tends to mean Clang does not\nknow what you're talking about.", "start": 2354.68, "duration": 4.04}, {"text": "And you could run help50,\nand it would probably", "start": 2358.72, "duration": 1.96}, {"text": "provide you with similar advice.", "start": 2360.68, "duration": 1.62}, {"text": "But the gist of this is that\nchart is not a C function.", "start": 2362.3, "duration": 3.42}, {"text": "It doesn't come with C. I wrote it.", "start": 2365.72, "duration": 2.04}, {"text": "I just wrote it a little too late.", "start": 2367.76, "duration": 1.71}, {"text": "So one solution that we\ndidn't used last week", "start": 2369.47, "duration": 3.15}, {"text": "would be, OK, well, if you don't\nknow what chart is, let me just", "start": 2372.62, "duration": 2.67}, {"text": "go put it where you'll know about it.", "start": 2375.29, "duration": 2.63}, {"text": "And now run make score 0.", "start": 2377.92, "duration": 2.82}, {"text": "OK, problem solved.", "start": 2380.74, "duration": 1.51}, {"text": "So that fixes it, but we fixed\nit in a different way last week.", "start": 2382.25, "duration": 3.93}, {"text": "And why might we want to stick\nwith last week's approach", "start": 2386.18, "duration": 2.61}, {"text": "and not just copy-paste\nmy function and put it", "start": 2388.79, "duration": 2.01}, {"text": "at the top instead of the bottom?", "start": 2390.8, "duration": 1.38}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 2395.94, "duration": 1.7}, {"text": "DAVID J. MALAN: Yeah, I mean it's\nkind of a minor concern at the moment,", "start": 2397.64, "duration": 3.0}, {"text": "because this is a pretty short program.", "start": 2400.64, "duration": 1.62}, {"text": "But I'm pushing the main part of\nmy program, literally called Main,", "start": 2402.26, "duration": 3.87}, {"text": "farther and farther down.", "start": 2406.13, "duration": 1.23}, {"text": "And the whole point of reading code\nis to understand what it's doing.", "start": 2407.36, "duration": 3.21}, {"text": "So if I open this file, and I have to\nscroll, scroll, scroll, scroll, scroll,", "start": 2410.57, "duration": 3.2}, {"text": "just looking for the main\nfunction, it's just bad style.", "start": 2413.77, "duration": 2.56}, {"text": "It's just kind of nice, and\nit's a good human convention.", "start": 2416.33, "duration": 2.37}, {"text": "Put the main code, the main function,\nwhen green flag clicks equivalent,", "start": 2418.7, "duration": 3.78}, {"text": "at the very top.", "start": 2422.48, "duration": 1.06}, {"text": "So C does offer us a solution here.", "start": 2423.54, "duration": 1.94}, {"text": "You just have to provide\nit with a little hint.", "start": 2425.48, "duration": 2.01}, {"text": "Let me go ahead and cut this from here,\nput it back down at the bottom here,", "start": 2427.49, "duration": 5.01}, {"text": "and then go ahead and copy-paste\nonly or retype only the value--", "start": 2432.5, "duration": 6.13}, {"text": "whoops-- the value of that first line,\nwhich is its so-called prototype.", "start": 2438.63, "duration": 5.0}, {"text": "Give Clang enough information so that\nit knows what arguments the function", "start": 2443.63, "duration": 3.81}, {"text": "takes, what its return type is,\nand what its name is, semi-colon,", "start": 2447.44, "duration": 3.3}, {"text": "and that's the so-called\ndeclaration or--", "start": 2450.74, "duration": 2.94}, {"text": "and then implement it with the curly\nbraces and all the logic down below.", "start": 2453.68, "duration": 4.39}, {"text": "So let's go ahead and run this.", "start": 2458.07, "duration": 1.71}, {"text": "And if I scroll up here,\nwe'll see-- whoops.", "start": 2459.78, "duration": 3.5}, {"text": "We'll see make score 0.", "start": 2463.28, "duration": 2.56}, {"text": "All right, now we're\non our way, score 0.", "start": 2465.84, "duration": 2.22}, {"text": "Enter.", "start": 2468.06, "duration": 0.5}, {"text": "Score 1 is 100, 50, 75, and now we\nseem to have some good functionality.", "start": 2468.56, "duration": 5.22}, {"text": "But there's still an opportunity,\nI dare say, for improvement.", "start": 2473.78, "duration": 3.5}, {"text": "And I think the fundamental\nproblem is that I'm still", "start": 2477.28, "duration": 2.35}, {"text": "copy-pasting the little\nstuff, but I think", "start": 2479.63, "duration": 1.95}, {"text": "the fundamental problem is that I\ndon't have the expressiveness to store", "start": 2481.58, "duration": 4.71}, {"text": "multiple values, unless I, in\nadvance, as the programmer,", "start": 2486.29, "duration": 3.72}, {"text": "give them all unique names, because if\nI use the same variable for everything,", "start": 2490.01, "duration": 4.71}, {"text": "I couldn't collect all\nthree variables at the top,", "start": 2494.72, "duration": 2.4}, {"text": "and then iterate over all three at the\nbottom, if I only have one variable.", "start": 2497.12, "duration": 3.48}, {"text": "So I do need three variables,\nbut this doesn't scale very well.", "start": 2500.6, "duration": 3.28}, {"text": "And who knows?", "start": 2503.88, "duration": 0.59}, {"text": "If I want to take in five scores,\n10 scores, or more scores,", "start": 2504.47, "duration": 3.36}, {"text": "then I'm really copying\nand pasting excessively.", "start": 2507.83, "duration": 3.31}, {"text": "So it turns out, indeed,\nthe answer is an array.", "start": 2511.14, "duration": 2.52}, {"text": "So an array, at the\nend of the day, is just", "start": 2513.66, "duration": 2.25}, {"text": "a side effect of storing stuff in\nmemory back to back to back to back.", "start": 2515.91, "duration": 3.2}, {"text": "But what's powerful about this\nreality of memory is the following.", "start": 2519.11, "duration": 4.44}, {"text": "I can go ahead here and in,\nsay, a new and more improved", "start": 2523.55, "duration": 4.41}, {"text": "version of this program, do this.", "start": 2527.96, "duration": 2.13}, {"text": "Let me go ahead and open this one, which\nI wrote in advance, called scores2.c.", "start": 2530.09, "duration": 4.47}, {"text": "And in scores2.c, notice\nwe have the following code.", "start": 2534.56, "duration": 4.38}, {"text": "In my main function, I've got a new\nfeature and a new bit of syntax.", "start": 2538.94, "duration": 4.2}, {"text": "This line here that I've\nhighlighted says, hey, Clang,", "start": 2543.14, "duration": 3.09}, {"text": "give me a variable called\nScores of type integer,", "start": 2546.23, "duration": 4.29}, {"text": "but please give me three of them.", "start": 2550.52, "duration": 1.89}, {"text": "So the new syntax are\nyour square brackets,", "start": 2552.41, "duration": 1.86}, {"text": "and inside of which is the number\nof variables you want of that type.", "start": 2554.27, "duration": 3.61}, {"text": "And you don't have to\ngive them unique names.", "start": 2557.88, "duration": 1.88}, {"text": "You literally call them\ncollectively, Scores,", "start": 2559.76, "duration": 2.16}, {"text": "and in English, I deliberately\nchose a plural to connote as much.", "start": 2561.92, "duration": 2.74}, {"text": "This is an array of\nvalues, not a single value.", "start": 2564.66, "duration": 3.5}, {"text": "What can I do next?", "start": 2568.16, "duration": 1.3}, {"text": "Well, here's my for loop for int\ni get zero i is less than 3 i++,", "start": 2569.46, "duration": 4.46}, {"text": "and now I've solved that earlier\nproblem that was proposed.", "start": 2573.92, "duration": 2.49}, {"text": "Well, just put it in a loop.", "start": 2576.41, "duration": 1.51}, {"text": "Now I can, because now my variables are\nnot called Score 1, Score 2, Score 3,", "start": 2577.92, "duration": 4.64}, {"text": "which I literally had to hard code.", "start": 2582.56, "duration": 1.71}, {"text": "They're just called Scores, and\nnow that they're called Scores,", "start": 2584.27, "duration": 3.15}, {"text": "and I have this square bracket\nnotation, notice what I can do.", "start": 2587.42, "duration": 3.06}, {"text": "I can get an int, and I can say, give\nme score%i, and plug in i plus 1.", "start": 2590.48, "duration": 5.22}, {"text": "I didn't want to say\n\"zero,\" because humans", "start": 2595.7, "duration": 1.8}, {"text": "don't count from zero in general.", "start": 2597.5, "duration": 1.45}, {"text": "So this is counting from one, two, and\nthree, but the computer is doing this.", "start": 2598.95, "duration": 5.48}, {"text": "So Scores is a variable.", "start": 2604.43, "duration": 1.55}, {"text": "Bracket, i, close bracket says\nstore the i-th value there.", "start": 2605.98, "duration": 6.26}, {"text": "So i-th is just non-English.", "start": 2612.24, "duration": 1.55}, {"text": "That means go to bracket\n0, bracket 1, bracket 2.", "start": 2613.79, "duration": 3.06}, {"text": "So what this effectively means is on\nthe first iteration of the loop, when", "start": 2616.85, "duration": 3.27}, {"text": "i equals 0, this looks\nlike this, effectively.", "start": 2620.12, "duration": 3.96}, {"text": "When i then becomes 1 on the next\niteration, then you're doing this.", "start": 2624.08, "duration": 3.96}, {"text": "When i becomes 2 on the final\niteration, it looks like this.", "start": 2628.04, "duration": 3.57}, {"text": "When i becomes 3, well,\n3 is not less than 3,", "start": 2631.61, "duration": 3.3}, {"text": "and so it doesn't execute again.", "start": 2634.91, "duration": 2.14}, {"text": "So by using i inside of these square\nbrackets, am I indexing into an array?", "start": 2637.05, "duration": 6.93}, {"text": "To index into an array means\ngo to a specific location,", "start": 2643.98, "duration": 2.66}, {"text": "the so-called i-th location,\nbut you start counting at zero.", "start": 2646.64, "duration": 3.24}, {"text": "Just to make this more\nreal, then, if you go back", "start": 2649.88, "duration": 2.22}, {"text": "to this picture of\nyour computer's memory,", "start": 2652.1, "duration": 2.25}, {"text": "this might, therefore,\nbe bracket i, bracket 1--", "start": 2654.35, "duration": 4.35}, {"text": "bracket 0, bracket 1, bracket 2, bracket\n3, bracket 4, bracket 50, or wherever.", "start": 2658.7, "duration": 5.01}, {"text": "You can now, using square brackets,\nget at any of these blocks of memory", "start": 2663.71, "duration": 4.2}, {"text": "to store values for you.", "start": 2667.91, "duration": 3.06}, {"text": "Any questions on what we've just done?", "start": 2670.97, "duration": 3.55}, {"text": "All right, then on the flip side,\nwe can do the exact same thing.", "start": 2674.52, "duration": 2.71}, {"text": "Now when I print my scores, I can\nsimilarly iterate from 0 to 3,", "start": 2677.23, "duration": 5.06}, {"text": "and then print out the\nscores by passing to chart", "start": 2682.29, "duration": 3.06}, {"text": "the same value, the i-th score.", "start": 2685.35, "duration": 2.82}, {"text": "Again, the only new syntax here\nis variable name, square bracket,", "start": 2688.17, "duration": 3.27}, {"text": "and then a number, like 0,\n1, 2, or a variable like i,", "start": 2691.44, "duration": 3.54}, {"text": "and then my chart function\ndown here is exactly the same.", "start": 2694.98, "duration": 2.82}, {"text": "It has no idea an array is\neven involved, because I'm just", "start": 2697.8, "duration": 2.79}, {"text": "passing in one score at a time.", "start": 2700.59, "duration": 4.05}, {"text": "Now it turns out there's still one\nbad design decision in this program.", "start": 2704.64, "duration": 4.32}, {"text": "There's still some redundancy,\nsomething that I keep typing again", "start": 2708.96, "duration": 3.75}, {"text": "and again and again.", "start": 2712.71, "duration": 1.44}, {"text": "Do any values jump out\nat you as repeated?", "start": 2714.15, "duration": 1.83}, {"text": "AUDIENCE: The for loop.", "start": 2719.54, "duration": 1.17}, {"text": "DAVID J. MALAN: The for loop.", "start": 2720.71, "duration": 1.21}, {"text": "OK, so I've got the for\nloop in multiple places.", "start": 2721.92, "duration": 2.89}, {"text": "Sure.", "start": 2724.81, "duration": 0.77}, {"text": "And what other value seems\nto be in multiple places?", "start": 2725.58, "duration": 3.77}, {"text": "It's subtle.", "start": 2729.35, "duration": 0.82}, {"text": "Total number.", "start": 2732.82, "duration": 0.57}, {"text": "Yeah, 3.", "start": 2733.39, "duration": 1.05}, {"text": "Three is in a few places.", "start": 2734.44, "duration": 1.41}, {"text": "It's up here.", "start": 2735.85, "duration": 0.9}, {"text": "It's when I declare the array\nand ask myself for three scores.", "start": 2736.75, "duration": 4.41}, {"text": "It's here when I'm iterating.", "start": 2741.16, "duration": 3.04}, {"text": "It's not here, because this\nis a different iteration.", "start": 2744.2, "duration": 2.21}, {"text": "That's just for the hashes.", "start": 2746.41, "duration": 1.75}, {"text": "So in, ironically, three\nplaces, have I written 3.", "start": 2748.16, "duration": 3.11}, {"text": "So what does this mean?", "start": 2751.27, "duration": 1.03}, {"text": "Well, suppose next year you\ntake more tests or whatever,", "start": 2752.3, "duration": 2.33}, {"text": "and you need more scores.", "start": 2754.63, "duration": 1.14}, {"text": "You open up your program, and all right,\nnow I've got five scores and five--", "start": 2755.77, "duration": 4.55}, {"text": "whoops, typo already-- five,\nlike this kind of pattern", "start": 2760.32, "duration": 3.7}, {"text": "where you're typing the\nsame thing again and again.", "start": 2764.02, "duration": 2.16}, {"text": "And now the onus is\non me, the programmer,", "start": 2766.18, "duration": 1.86}, {"text": "to remember to change the same\n[? damn ?] value in multiple places--", "start": 2768.04, "duration": 3.54}, {"text": "bad, bad, bad design.", "start": 2771.58, "duration": 1.35}, {"text": "You're going to miss\none of those values.", "start": 2772.93, "duration": 1.71}, {"text": "Your program's going\nto get more complex.", "start": 2774.64, "duration": 1.29}, {"text": "You're going to leave one at\n3 and change the other to 5,", "start": 2775.93, "duration": 2.46}, {"text": "and logical errors are\neventually going to happen.", "start": 2778.39, "duration": 2.15}, {"text": "So how do we solve this?", "start": 2780.54, "duration": 1.0}, {"text": "The function's not the solution\nhere, because it's not functionality.", "start": 2781.54, "duration": 2.87}, {"text": "It's just a value.", "start": 2784.41, "duration": 1.15}, {"text": "Well, we could use a variable,\nbut a certain type of variable.", "start": 2785.56, "duration": 3.3}, {"text": "These numbers here--\n5, 5, 5 or 3, 3, 3--", "start": 2788.86, "duration": 3.29}, {"text": "are what humans generally\nrefer to as magic numbers.", "start": 2792.15, "duration": 2.21}, {"text": "Like they're numbers, but\nthey're kind of magical,", "start": 2794.36, "duration": 2.09}, {"text": "because you just arbitrarily\nhardcoded them in random places.", "start": 2796.45, "duration": 3.06}, {"text": "But a better convention would be, often\nas a global variable, to do this--", "start": 2799.51, "duration": 4.49}, {"text": "int, let's call it \"count,\" equals 3.", "start": 2804.0, "duration": 3.79}, {"text": "So declare a variable of type\nint that is the number of things", "start": 2807.79, "duration": 3.48}, {"text": "you want, and then type that variable\nname all throughout your code", "start": 2811.27, "duration": 4.47}, {"text": "so that later on, if you ever\nwant to change this program,", "start": 2815.74, "duration": 3.18}, {"text": "you change it-- whoops--\nin one place, and you're", "start": 2818.92, "duration": 2.58}, {"text": "done after recompiling the program.", "start": 2821.5, "duration": 1.83}, {"text": "And actually, I should do\na little better than this.", "start": 2823.33, "duration": 2.17}, {"text": "It turns out that if you know you have\na variable that you're never going", "start": 2825.5, "duration": 3.29}, {"text": "to change, because it's\nnot supposed to change--", "start": 2828.79, "duration": 2.0}, {"text": "it's supposed to be a constant value--", "start": 2830.79, "duration": 1.66}, {"text": "C also has a special keyword called\nconst, where before the data type,", "start": 2832.45, "duration": 4.02}, {"text": "you say, const int, and then the name\nand then the value, and this way,", "start": 2836.47, "duration": 3.75}, {"text": "the compiler, Clang, will\nmake sure that you, the human,", "start": 2840.22, "duration": 2.52}, {"text": "don't screw up and accidentally try\nto change the count anywhere else.", "start": 2842.74, "duration": 4.36}, {"text": "There's one other thing notable.", "start": 2847.1, "duration": 1.34}, {"text": "I also capitalize this whole\nthing for some reason--", "start": 2848.44, "duration": 2.55}, {"text": "human convention.", "start": 2850.99, "duration": 0.88}, {"text": "Anytime you capitalize all of\nthe letters in a variable name,", "start": 2851.87, "duration": 2.96}, {"text": "the convention is that\nthat means it's global.", "start": 2854.83, "duration": 2.16}, {"text": "That means it's defined way up top,\nand you can use it anywhere, therefore,", "start": 2856.99, "duration": 3.79}, {"text": "because it's outside all curly braces.", "start": 2860.78, "duration": 2.0}, {"text": "But it's meant to imply and\nremind you that this is special.", "start": 2862.78, "duration": 3.51}, {"text": "It's not just a so-called\nlocal variable inside", "start": 2866.29, "duration": 2.34}, {"text": "of a function or inside\nof a loop or the like.", "start": 2868.63, "duration": 3.81}, {"text": "Any questions on that?", "start": 2872.44, "duration": 2.0}, {"text": "Yeah.", "start": 2874.44, "duration": 0.67}, {"text": "AUDIENCE: What is [INAUDIBLE]?", "start": 2875.11, "duration": 1.36}, {"text": "Why do you have i plus 1?", "start": 2876.47, "duration": 1.46}, {"text": "DAVID J. MALAN: Oh,\nwhy do I have i plus 1?", "start": 2877.93, "duration": 1.8}, {"text": "Let me run this program real quick.", "start": 2879.73, "duration": 2.2}, {"text": "Why do I have i plus 1 in this\nline here, is the question.", "start": 2881.93, "duration": 3.23}, {"text": "So let me go ahead and\nrun make scores 2--", "start": 2885.16, "duration": 2.7}, {"text": "whoops-- in my directory.", "start": 2887.86, "duration": 1.77}, {"text": "Make scores 2 ./scores2, Enter.", "start": 2889.63, "duration": 4.05}, {"text": "I wanted just the human to see\nScore 1 and Score 2 and Score 3.", "start": 2893.68, "duration": 4.89}, {"text": "I didn't want him or her to see Score 0,\nScore 1, Score 2, because it just looks", "start": 2898.57, "duration": 4.05}, {"text": "lame to the human.", "start": 2902.62, "duration": 1.02}, {"text": "The computer needs to\nthink in terms of zeros.", "start": 2903.64, "duration": 1.92}, {"text": "My humans and my users do\nnot, so just an aesthetic.", "start": 2905.56, "duration": 3.63}, {"text": "Other questions.", "start": 2909.19, "duration": 0.67}, {"text": "Yeah.", "start": 2909.86, "duration": 0.77}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 2910.63, "duration": 1.47}, {"text": "DAVID J. MALAN: Ah,\nreally good question.", "start": 2917.3, "duration": 1.71}, {"text": "And I actually thought\nabout this last night", "start": 2919.01, "duration": 1.83}, {"text": "when trying to craft this example.", "start": 2920.84, "duration": 2.79}, {"text": "Why don't I just combine\nthese two for loops,", "start": 2923.63, "duration": 2.22}, {"text": "because they're clearly iterating\nan identical number of times?", "start": 2925.85, "duration": 4.65}, {"text": "Was this a hand or just a stretch?", "start": 2930.5, "duration": 1.95}, {"text": "No, stretch.", "start": 2932.45, "duration": 1.38}, {"text": "So this is actually deliberate.", "start": 2933.83, "duration": 4.05}, {"text": "If I combine these, what would\nchange logically in my program?", "start": 2937.88, "duration": 3.87}, {"text": "Yeah.", "start": 2941.75, "duration": 0.77}, {"text": "AUDIENCE: After every [INAUDIBLE]\ninput, you would [INAUDIBLE]..", "start": 2942.52, "duration": 3.37}, {"text": "DAVID J. MALAN: Yeah, so after\nevery human input of a score,", "start": 2945.89, "duration": 2.97}, {"text": "I would see that user's\nchart, the row of hashes.", "start": 2948.86, "duration": 3.06}, {"text": "Then I'd ask them for another value.", "start": 2951.92, "duration": 1.5}, {"text": "They'd see the chart, another\nvalue, and they'd see the chart.", "start": 2953.42, "duration": 2.05}, {"text": "And that's fine, if that\nis the design you want.", "start": 2955.47, "duration": 2.24}, {"text": "Totally acceptable.", "start": 2957.71, "duration": 0.87}, {"text": "Totally correct.", "start": 2958.58, "duration": 0.9}, {"text": "I wanted mine to look a little more\ntraditional with all of the bars", "start": 2959.48, "duration": 2.83}, {"text": "together, so I effectively had\nto postpone printing the hashes.", "start": 2962.31, "duration": 3.2}, {"text": "And that's why I did have\na little bit of redundancy", "start": 2965.51, "duration": 2.25}, {"text": "by getting the user's input\nhere and then iterating again", "start": 2967.76, "duration": 2.64}, {"text": "to actually print the user's output\nas a chart, so just a design decision.", "start": 2970.4, "duration": 3.96}, {"text": "Good question.", "start": 2974.36, "duration": 0.7}, {"text": "Other questions?", "start": 2975.06, "duration": 2.24}, {"text": "All right, so what does this look like?", "start": 2977.3, "duration": 2.72}, {"text": "Actually, you know what?", "start": 2980.02, "duration": 1.0}, {"text": "I can probably do a little better.", "start": 2981.02, "duration": 1.41}, {"text": "Let me open up one final example\ninvolving scores and this thing", "start": 2982.43, "duration": 3.3}, {"text": "called an array.", "start": 2985.73, "duration": 1.13}, {"text": "In Scores 4 here, let\nme go ahead and do this.", "start": 2986.86, "duration": 5.17}, {"text": "Now I've changed my chart\nfunction to do a little bit more,", "start": 2992.03, "duration": 3.84}, {"text": "and you might recall from week 0\nand 1, we had the call function,", "start": 2995.87, "duration": 2.97}, {"text": "and we kept enhancing\nit to do more and more,", "start": 2998.84, "duration": 2.07}, {"text": "like putting more and\nmore logic into it.", "start": 3000.91, "duration": 1.92}, {"text": "Notice this.", "start": 3002.83, "duration": 1.38}, {"text": "Chart function now takes a second\nargument, which is kind of interesting.", "start": 3004.21, "duration": 4.15}, {"text": "It takes one argument,\nwhich is a number,", "start": 3008.36, "duration": 2.36}, {"text": "and then the next argument\nis an array of scores.", "start": 3010.72, "duration": 3.03}, {"text": "So long story short, if you\nwant to have a function that", "start": 3013.75, "duration": 2.34}, {"text": "takes as input an array,\nyou don't have to know", "start": 3016.09, "duration": 2.52}, {"text": "in advance how big that array is.", "start": 3018.61, "duration": 1.59}, {"text": "You should not, in fact, put a\nnumber in between the square brackets", "start": 3020.2, "duration": 2.94}, {"text": "in this context.", "start": 3023.14, "duration": 1.59}, {"text": "But the thing is you do\nneed to know, at some point,", "start": 3024.73, "duration": 2.97}, {"text": "how many items are in the array.", "start": 3027.7, "duration": 1.5}, {"text": "If you've programmed in Java, took\nAP CS, Java just gives you .length,", "start": 3029.2, "duration": 3.63}, {"text": "if you recall that feature of objects.", "start": 3032.83, "duration": 2.37}, {"text": "C does not have this.", "start": 3035.2, "duration": 1.35}, {"text": "Arrays do not have an inherent\nlength associated with them.", "start": 3036.55, "duration": 3.3}, {"text": "You have to tell everyone who\nuses your array how long it is.", "start": 3039.85, "duration": 4.21}, {"text": "So even though you don't\ndo that syntactically here,", "start": 3044.06, "duration": 2.72}, {"text": "you literally just say, I expect\nan argument called scores that", "start": 3046.78, "duration": 3.84}, {"text": "is an array per the square brackets.", "start": 3050.62, "duration": 2.53}, {"text": "You have to pass and almost\nalways a second variable", "start": 3053.15, "duration": 2.75}, {"text": "that is literally called\nwhatever you want,", "start": 3055.9, "duration": 1.86}, {"text": "but is the number of\nthings in that array,", "start": 3057.76, "duration": 2.01}, {"text": "because if the goal of\nthis function is just", "start": 3059.77, "duration": 2.79}, {"text": "to iterate over the number\nof scores that are passed in,", "start": 3062.56, "duration": 6.54}, {"text": "and then iterate over the\nnumber of points in that score", "start": 3069.1, "duration": 3.84}, {"text": "in order to print out the hashes,\nyou need to know this count.", "start": 3072.94, "duration": 4.03}, {"text": "So what does this function\ndo, just to be clear?", "start": 3076.97, "duration": 2.03}, {"text": "This iterates over the total\nnumber of scores from 0 to count,", "start": 3079.0, "duration": 3.48}, {"text": "which is probably 3 or 5 or whatever.", "start": 3082.48, "duration": 2.34}, {"text": "This loop here, using J,\nwhich is just a convention,", "start": 3084.82, "duration": 3.06}, {"text": "instead iterates from 0 to\nwhatever that i-th score is.", "start": 3087.88, "duration": 4.18}, {"text": "So this is what's convenient.", "start": 3092.06, "duration": 1.21}, {"text": "Now I've passed in the array, and I\ncan still get at individual values", "start": 3093.27, "duration": 4.87}, {"text": "just by using i, because I'm\non my i-th iteration here.", "start": 3098.14, "duration": 3.7}, {"text": "So you might recall this from Mario,\nfor instance, or any other example", "start": 3101.84, "duration": 2.96}, {"text": "in which you had nested loops--", "start": 3104.8, "duration": 1.5}, {"text": "just very conventional to use i\non the outside, j on the inside.", "start": 3106.3, "duration": 3.75}, {"text": "But again, the only point here is that\nyou can, indeed, pass around arrays,", "start": 3110.05, "duration": 4.32}, {"text": "even as arguments, which we'll\nsee why that's useful before long.", "start": 3114.37, "duration": 5.16}, {"text": "Any questions?", "start": 3119.53, "duration": 3.07}, {"text": "OK, so this was a lot, but we can\ndo so much more still with arrays.", "start": 3122.6, "duration": 2.94}, {"text": "It gets even more and more cool.", "start": 3125.54, "duration": 1.83}, {"text": "In fact, we'll see, in just a\nbit, how arrays have actually", "start": 3127.37, "duration": 2.88}, {"text": "been with us since last week.", "start": 3130.25, "duration": 1.28}, {"text": "We just didn't quite realize it\nunder the hood, but let's go ahead", "start": 3131.53, "duration": 2.75}, {"text": "and take a breather, five minutes.", "start": 3134.28, "duration": 1.41}, {"text": "We'll come back and dive in.", "start": 3135.69, "duration": 1.3}, {"text": "All right.", "start": 3136.99, "duration": 0.7}, {"text": "So I know that was a\nbit of a cliffhanger.", "start": 3137.69, "duration": 2.67}, {"text": "Where else could arrays\nhave actually been?", "start": 3140.36, "duration": 2.19}, {"text": "But, of course, this is how we\nmight depict it pictorially.", "start": 3142.55, "duration": 2.46}, {"text": "We called it an array, and it\nturns out that last week, when", "start": 3145.01, "duration": 2.97}, {"text": "we introduced strings, strings,\nsequences of characters,", "start": 3147.98, "duration": 3.72}, {"text": "are literally just an\narray by another name.", "start": 3151.7, "duration": 2.82}, {"text": "A string is an array of chars, and\nchars, of course, is another data type.", "start": 3154.52, "duration": 4.81}, {"text": "Now what are the actual\nimplications of this,", "start": 3159.33, "duration": 1.92}, {"text": "both in terms of representation,\nlike how a computer's representing", "start": 3161.25, "duration": 2.93}, {"text": "information, and then\nfundamentally, programmatically,", "start": 3164.18, "duration": 3.87}, {"text": "what can we do when we\nknow all of our data", "start": 3168.05, "duration": 2.28}, {"text": "is so back to back to back or\nso proximal to one another?", "start": 3170.33, "duration": 3.63}, {"text": "Well, it turns out that we can apply\nthis logic in a few different ways.", "start": 3173.96, "duration": 4.18}, {"text": "Let me go ahead and\nopen up, for instance,", "start": 3178.14, "duration": 2.97}, {"text": "an example here called String 0.", "start": 3181.11, "duration": 3.59}, {"text": "So in our code for today,\nin our Source 2 folder,", "start": 3184.7, "duration": 3.63}, {"text": "let me go ahead and open up String\n0, and this example looks like this.", "start": 3188.33, "duration": 4.9}, {"text": "Notice that we first, on line\n9, get a string from the user.", "start": 3193.23, "duration": 4.64}, {"text": "Just say, input, please.", "start": 3197.87, "duration": 1.8}, {"text": "We store that value in a string, s,\nand then we say, here comes the output.", "start": 3199.67, "duration": 4.21}, {"text": "And notice what I'm doing\nin the following line.", "start": 3203.88, "duration": 2.51}, {"text": "I'm iterating over i from 0\nto strlen, whatever that is.", "start": 3206.39, "duration": 4.74}, {"text": "And then in line 13, I'm printing\na character one at a time.", "start": 3211.13, "duration": 3.85}, {"text": "But notice the syntax I'm using,\nwhich we didn't use last week.", "start": 3214.98, "duration": 3.29}, {"text": "If you have a string called\ns, you can index into a string", "start": 3218.27, "duration": 5.13}, {"text": "just like it's an array, because\nit, indeed, is underneath the hood.", "start": 3223.4, "duration": 3.06}, {"text": "So s bracket i, where\ni starts at 0 and goes", "start": 3226.46, "duration": 3.99}, {"text": "up to whatever this value is is just\na way of getting character 0, then", "start": 3230.45, "duration": 5.0}, {"text": "character 1, then character\n2, then character 3,", "start": 3235.45, "duration": 2.92}, {"text": "and so the end result is\nactually going to look like this.", "start": 3238.37, "duration": 3.18}, {"text": "Let me go ahead and do, make string--", "start": 3241.55, "duration": 2.66}, {"text": "whoops-- make string 0.", "start": 3244.21, "duration": 2.27}, {"text": "Oops.", "start": 3246.48, "duration": 0.5}, {"text": "Not in the directory.", "start": 3246.98, "duration": 0.93}, {"text": "Make string 0, ./string0, Enter,\nand I'll type in, say, Zamyla,", "start": 3247.91, "duration": 7.98}, {"text": "and the output now is\nZ-A-M-Y-L-A. It's a little messy,", "start": 3255.89, "duration": 5.68}, {"text": "because I don't have a new line here, so\nlet me actually-- let's clean that up,", "start": 3261.57, "duration": 3.3}, {"text": "because this is unnecessarily sloppy.", "start": 3264.87, "duration": 2.48}, {"text": "So let me go ahead and\nprint out a new line.", "start": 3267.35, "duration": 3.66}, {"text": "Let me recompile with\nmake string 0, dot--", "start": 3271.01, "duration": 3.78}, {"text": "whoops-- ./string0.", "start": 3274.79, "duration": 2.73}, {"text": "Input shall be Zamyla,\nEnter, and now Z-A-M-Y-L-A.", "start": 3277.52, "duration": 5.55}, {"text": "So why is that happening?", "start": 3283.07, "duration": 1.17}, {"text": "Well, if I scroll down on\nthis code, it seems that I am,", "start": 3284.24, "duration": 3.48}, {"text": "via this printf line here, just getting\nthe i-th character of the name in s,", "start": 3287.72, "duration": 4.98}, {"text": "and then printing out one\ncharacter at a time per the %c,", "start": 3292.7, "duration": 3.12}, {"text": "followed by a new line.", "start": 3295.82, "duration": 1.45}, {"text": "So you might guess, what is\nthis function here doing?", "start": 3297.27, "duration": 4.7}, {"text": "Strlen-- slightly abbreviated, but\nyou can, perhaps, glean what it means.", "start": 3301.97, "duration": 4.52}, {"text": "Yeah, so it's actually string length.", "start": 3306.49, "duration": 2.12}, {"text": "So it turns out there\nis a function that comes", "start": 3308.61, "duration": 2.61}, {"text": "with C called strlen, and\nhumans back in the day", "start": 3311.22, "duration": 2.67}, {"text": "and to this day like to type as\nfew characters when possible.", "start": 3313.89, "duration": 3.78}, {"text": "And so strlen is string length,\nand the way you use it is you", "start": 3317.67, "duration": 3.93}, {"text": "just need one more header file.", "start": 3321.6, "duration": 1.34}, {"text": "So there's another library,\nthe so-called string", "start": 3322.94, "duration": 2.0}, {"text": "library that gives you\nstring-related functions", "start": 3324.94, "duration": 2.12}, {"text": "beyond what CS50's library provides.", "start": 3327.06, "duration": 2.35}, {"text": "And so if you include\nstring.h, that gives you access", "start": 3329.41, "duration": 2.72}, {"text": "to another function called\nstrlen, that if you pass it,", "start": 3332.13, "duration": 3.18}, {"text": "a variable containing a\nstring, it will pass you back", "start": 3335.31, "duration": 3.27}, {"text": "as a return value the\ntotal number of characters.", "start": 3338.58, "duration": 2.41}, {"text": "So I typed in Z-A-M-Y-L-A, and so\nthat should be returning to me six,", "start": 3340.99, "duration": 5.45}, {"text": "thereby printing out the six\ncharacters in Zamyla's name.", "start": 3346.44, "duration": 3.21}, {"text": "Yeah.", "start": 3349.65, "duration": 0.59}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 3350.24, "duration": 2.35}, {"text": "DAVID J. MALAN: Uh-huh.", "start": 3352.59, "duration": 1.41}, {"text": "AUDIENCE: [INAUDIBLE] useful to get\nthe individual digits [INAUDIBLE]..", "start": 3354.0, "duration": 2.37}, {"text": "DAVID J. MALAN: Really good question.", "start": 3356.37, "duration": 0.79}, {"text": "In the credit problem of the problem\nset, would this have been useful?", "start": 3357.16, "duration": 3.32}, {"text": "Yes, absolutely.", "start": 3360.48, "duration": 1.26}, {"text": "But recall that in the credit\npset, we encourage you to actually", "start": 3361.74, "duration": 2.76}, {"text": "take in the number as a long,\nso as an integral value, which", "start": 3364.5, "duration": 3.39}, {"text": "thereby necessitated arithmetic.", "start": 3367.89, "duration": 1.62}, {"text": "But yes, if you had, instead, in\na problem involving credit card", "start": 3369.51, "duration": 3.18}, {"text": "numbers, gotten the human's input\nas a long string of characters", "start": 3372.69, "duration": 3.75}, {"text": "and not as an actual number\nlike an int or a long,", "start": 3376.44, "duration": 2.18}, {"text": "then, yes, you could actually get\nat those individual characters,", "start": 3378.62, "duration": 2.71}, {"text": "which probably would have made\nthings even easier but deliberate.", "start": 3381.33, "duration": 4.92}, {"text": "Yeah.", "start": 3386.25, "duration": 0.75}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 3387.0, "duration": 2.29}, {"text": "DAVID J. MALAN: Really good question.", "start": 3389.29, "duration": 1.55}, {"text": "If we're defining string in CS50,\nare we redefining it in string?", "start": 3390.84, "duration": 3.0}, {"text": "No.", "start": 3393.84, "duration": 0.54}, {"text": "So string, even though\nit's named string.h,", "start": 3394.38, "duration": 2.43}, {"text": "doesn't actually define\nsomething called a string.", "start": 3396.81, "duration": 2.4}, {"text": "It just has string-related functions.", "start": 3399.21, "duration": 3.45}, {"text": "More on that soon.", "start": 3402.66, "duration": 0.75}, {"text": "Yeah.", "start": 3403.41, "duration": 0.5}, {"text": "AUDIENCE: [INAUDIBLE]\nindividual values [INAUDIBLE]??", "start": 3403.91, "duration": 2.86}, {"text": "DAVID J. MALAN: Ah,\nreally good question.", "start": 3406.77, "duration": 1.71}, {"text": "Could you edit the individual values?", "start": 3408.48, "duration": 2.58}, {"text": "So short answer, yes.", "start": 3411.06, "duration": 1.89}, {"text": "We could absolutely change values, and\nwe'll soon do that in another context.", "start": 3412.95, "duration": 4.98}, {"text": "Other questions?", "start": 3417.93, "duration": 1.72}, {"text": "All right, so turns out this\nis correct, if my goal is", "start": 3419.65, "duration": 3.87}, {"text": "to print out all of the\ncharacters in Zamyla's name,", "start": 3423.52, "duration": 2.53}, {"text": "but it's not the best design.", "start": 3426.05, "duration": 1.28}, {"text": "And this one's a little subtle, but\nthis is, again, what we mean by design.", "start": 3427.33, "duration": 2.49}, {"text": "And to a question that\ncame up during the break,", "start": 3429.82, "duration": 2.34}, {"text": "did we expect everyone to be writing\ngood style and good design last week?", "start": 3432.16, "duration": 3.9}, {"text": "No.", "start": 3436.06, "duration": 0.58}, {"text": "Up until today, like we've\nintroduced the notion of correctness", "start": 3436.64, "duration": 2.63}, {"text": "in both Scratch and in C\nlast week, but now we're", "start": 3439.27, "duration": 2.16}, {"text": "introducing these other\naxes of quality of code", "start": 3441.43, "duration": 2.64}, {"text": "like design, how well-designed\nit is, and how pretty", "start": 3444.07, "duration": 3.25}, {"text": "does it look in the context of style.", "start": 3447.32, "duration": 1.55}, {"text": "So expectations are here on out meant to\nbe aligned with those characteristics,", "start": 3448.87, "duration": 4.57}, {"text": "but not in the past.", "start": 3453.44, "duration": 1.59}, {"text": "So there's a slight inefficiency here.", "start": 3455.03, "duration": 2.57}, {"text": "So on the first iteration of this\nloop, I first initialize i to 0,", "start": 3457.6, "duration": 3.99}, {"text": "and then I check if i less than the\nlength of the string, which hopefully,", "start": 3461.59, "duration": 3.78}, {"text": "it is, if it's Zamyla,\nwhich is longer than 0.", "start": 3465.37, "duration": 3.1}, {"text": "Then I print the i-th character.", "start": 3468.47, "duration": 1.79}, {"text": "Then I increment i.", "start": 3470.26, "duration": 1.62}, {"text": "Then I check this condition.", "start": 3471.88, "duration": 1.62}, {"text": "Then I print the i-th character.", "start": 3473.5, "duration": 1.89}, {"text": "Then I increment i.", "start": 3475.39, "duration": 1.26}, {"text": "Then I check this\ncondition and so forth.", "start": 3476.65, "duration": 2.08}, {"text": "We looped through loops last week,\nand you've used them, perhaps,", "start": 3478.73, "duration": 2.7}, {"text": "by now in problems.", "start": 3481.43, "duration": 1.92}, {"text": "What question am I redundantly\nasking seemingly unnecessarily?", "start": 3483.35, "duration": 4.8}, {"text": "I have to check a\ncondition again and again,", "start": 3491.75, "duration": 2.1}, {"text": "because i is getting incremented.", "start": 3493.85, "duration": 1.38}, {"text": "But there's another\nother question that I", "start": 3495.23, "duration": 3.18}, {"text": "don't need to keep asking again\njust to get the same answer.", "start": 3498.41, "duration": 2.85}, {"text": "AUDIENCE: What is the\nlength [? of the string? ?]", "start": 3501.26, "duration": 2.27}, {"text": "DAVID J. MALAN: Yeah,\nthere's this function call", "start": 3503.53, "duration": 2.04}, {"text": "in my loop of strlen s, which is fine.", "start": 3505.57, "duration": 3.22}, {"text": "This is correct.", "start": 3508.79, "duration": 0.87}, {"text": "I'm checking the length of the\nstring, but once I type in Zamyla,", "start": 3509.66, "duration": 3.01}, {"text": "her name is not changing in length.", "start": 3512.67, "duration": 2.06}, {"text": "I'm incrementing i, so I'm moving\nin the string, if you will.", "start": 3514.73, "duration": 3.51}, {"text": "But the string itself,\nZ-A-M-Y-L-A, is not changing.", "start": 3518.24, "duration": 3.66}, {"text": "So why am I asking the computer, again\nand again, get me the strlen of s,", "start": 3521.9, "duration": 4.12}, {"text": "get me the strlen of s,\nget me the strlen of s.", "start": 3526.02, "duration": 2.12}, {"text": "So I can actually fix this.", "start": 3528.14, "duration": 1.43}, {"text": "I can improve the design, because\nthat must take some amount of time.", "start": 3529.57, "duration": 2.97}, {"text": "Maybe it's fast, but it's still\na non-zero amount of time.", "start": 3532.54, "duration": 3.06}, {"text": "So you know what I could do?", "start": 3535.6, "duration": 1.17}, {"text": "I could do something like this--\nint n get string length of s.", "start": 3536.77, "duration": 3.18}, {"text": "And now just do this.", "start": 3539.95, "duration": 1.44}, {"text": "This would be better design, because\nnow I'm only asking the question once", "start": 3541.39, "duration": 4.17}, {"text": "of the function.", "start": 3545.56, "duration": 0.9}, {"text": "I'm remembering or caching, if\nyou will, the answer, and then", "start": 3546.46, "duration": 3.15}, {"text": "I'm just using a variable.", "start": 3549.61, "duration": 1.26}, {"text": "And just comparing\nvariables is just faster", "start": 3550.87, "duration": 1.92}, {"text": "than comparing a variable against\na function, which has to be called,", "start": 3552.79, "duration": 3.39}, {"text": "which has to return a value,\nwhich you can then compare.", "start": 3556.18, "duration": 2.42}, {"text": "But honestly, it doesn't\nhave to be this verbose.", "start": 3558.6, "duration": 2.05}, {"text": "We can actually be a\nlittle elegant about this.", "start": 3560.65, "duration": 2.16}, {"text": "If you're using a loop,\na secret feature of loops", "start": 3562.81, "duration": 2.73}, {"text": "is that you can have commas\nafter declaring variables.", "start": 3565.54, "duration": 2.55}, {"text": "And you can actually do this and make\nthis even more elegant, if you will,", "start": 3568.09, "duration": 4.23}, {"text": "or more confusing-looking,\ndepending on your perspective.", "start": 3572.32, "duration": 3.28}, {"text": "But this now does the same thing\nbut declares n inside of the loop,", "start": 3575.6, "duration": 3.45}, {"text": "just like I'm declaring i, and\nit's just a little tighter.", "start": 3579.05, "duration": 2.42}, {"text": "It's one fewer lines of code.", "start": 3581.47, "duration": 3.38}, {"text": "Any questions, then?", "start": 3584.85, "duration": 2.28}, {"text": "AUDIENCE: [INAUDIBLE].", "start": 3587.13, "duration": 2.89}, {"text": "DAVID J. MALAN: Good question.", "start": 3590.02, "duration": 1.25}, {"text": "In the way I've just done it cannot\nreuse this outside of the curly braces.", "start": 3591.27, "duration": 3.56}, {"text": "The scope of i and n exists\nonly in this context right now.", "start": 3594.83, "duration": 4.86}, {"text": "The other way, yes.", "start": 3599.69, "duration": 0.96}, {"text": "I could have used it elsewhere.", "start": 3600.65, "duration": 2.45}, {"text": "AUDIENCE: What if you [INAUDIBLE] other\nloops, and you also had [INAUDIBLE]??", "start": 3603.1, "duration": 6.85}, {"text": "DAVID J. MALAN: Absolutely.", "start": 3609.95, "duration": 1.49}, {"text": "AUDIENCE: Using different\nletters of the alphabet,", "start": 3611.44, "duration": 2.38}, {"text": "you could just use n\nand not be [INAUDIBLE]..", "start": 3613.82, "duration": 3.32}, {"text": "DAVID J. MALAN: Correct.", "start": 3617.14, "duration": 1.0}, {"text": "If I want to use the length\nof s again, absolutely.", "start": 3618.14, "duration": 2.79}, {"text": "I can declare the variable, as I\ndid earlier, outside of the loop,", "start": 3620.93, "duration": 3.49}, {"text": "so as to reuse it.", "start": 3624.42, "duration": 1.23}, {"text": "That's totally fine.", "start": 3625.65, "duration": 1.14}, {"text": "Yes.", "start": 3626.79, "duration": 0.5}, {"text": "And even i-- i exists only inside of\nthis loop, so if I have another loop,", "start": 3627.29, "duration": 3.96}, {"text": "I can reuse i, and it's a different\ni, because these variables only", "start": 3631.25, "duration": 3.39}, {"text": "exist inside the for loop\nin which they're declared.", "start": 3634.64, "duration": 2.97}, {"text": "So it turns out that these strings\ndon't have anything in them", "start": 3637.61, "duration": 6.74}, {"text": "other than character after\ncharacter after character.", "start": 3644.35, "duration": 2.61}, {"text": "And in fact, let me\ngo ahead here and draw", "start": 3646.96, "duration": 2.41}, {"text": "a picture of what's actually going on\nunderneath the hood of the computer", "start": 3649.37, "duration": 3.05}, {"text": "here.", "start": 3652.42, "duration": 0.5}, {"text": "So when I type in Zamyla's\nname, I'm, of course,", "start": 3652.92, "duration": 2.26}, {"text": "doing something like Z-A-M-Y-L-A.\nBut where is that actually going?", "start": 3655.18, "duration": 7.11}, {"text": "Well, we know now that inside of\nyour computer is RAM or memory,", "start": 3662.29, "duration": 2.67}, {"text": "and you can think of it like a grid.", "start": 3664.96, "duration": 1.77}, {"text": "And honestly, I can think\nof this whole screen", "start": 3666.73, "duration": 1.91}, {"text": "as just being in a different\norientation, a grid of memory.", "start": 3668.64, "duration": 2.62}, {"text": "So for instance, maybe we can divide\nit into rows and columns like this, not", "start": 3671.26, "duration": 5.61}, {"text": "necessarily to scale, and\nthere's more rows and columns.", "start": 3676.87, "duration": 3.96}, {"text": "So on the screen here,\nI'm just dividing things", "start": 3680.83, "duration": 3.09}, {"text": "into the individual bytes of\nmemory that we saw a moment ago.", "start": 3683.92, "duration": 4.27}, {"text": "And so, indeed, underneath the hood of\nthe computer is this layout of memory.", "start": 3688.19, "duration": 4.36}, {"text": "The compiler has somehow figured out\nor the program has somehow figured out", "start": 3692.55, "duration": 3.13}, {"text": "where to put the z and where the a and\nthe m and the y and the l and the a,", "start": 3695.68, "duration": 3.78}, {"text": "but the key is that they're all\ncontiguous, back to back to back.", "start": 3699.46, "duration": 3.27}, {"text": "But the catch is if I'm typing other\nwords into my program or scores", "start": 3702.73, "duration": 4.05}, {"text": "into my program or any\ndata into my program,", "start": 3706.78, "duration": 2.28}, {"text": "it's going to end up elsewhere\nin the computer's memory.", "start": 3709.06, "duration": 2.53}, {"text": "So how do you know where\nZamyla begins and where", "start": 3711.59, "duration": 2.2}, {"text": "Zamyla ends, so to speak, in memory?", "start": 3713.79, "duration": 2.8}, {"text": "Well, the variable, called\ns, essentially is here.", "start": 3716.59, "duration": 5.51}, {"text": "There's some remembrance in\nthe computer of where s begins.", "start": 3722.1, "duration": 4.06}, {"text": "But there's no obvious way\nto know where Zamyla ends,", "start": 3726.16, "duration": 4.59}, {"text": "unless we ourselves tell the computer.", "start": 3730.75, "duration": 2.22}, {"text": "So unbeknownst to us, any time a\ncomputer is storing a string like", "start": 3732.97, "duration": 3.54}, {"text": "Z-A-M-Y-L-A, it turns out that it's\nnot using one, two, three, four, five,", "start": 3736.51, "duration": 5.19}, {"text": "six characters.", "start": 3741.7, "duration": 1.23}, {"text": "It's actually using seven secretly.", "start": 3742.93, "duration": 3.03}, {"text": "It's actually putting\na special character", "start": 3745.96, "duration": 2.25}, {"text": "of all zeros in the very last bytes.", "start": 3748.21, "duration": 5.3}, {"text": "Every byte is eight bits, so it's\nputting secretly eight zeros there,", "start": 3753.51, "duration": 3.57}, {"text": "or we can actually draw this\nmore conventionally as /0.", "start": 3757.08, "duration": 3.9}, {"text": "It's what's called the null character,\nand it just means all zeros.", "start": 3760.98, "duration": 3.48}, {"text": "So the length of the\nstring, Zamyla, is six,", "start": 3764.46, "duration": 2.43}, {"text": "but how many bytes does it\napparently take up, just to be clear?", "start": 3766.89, "duration": 3.66}, {"text": "So it actually takes up seven.", "start": 3770.55, "duration": 1.48}, {"text": "And this is kind of a\nsecret implementation detail", "start": 3772.03, "duration": 2.33}, {"text": "that we don't really have to care\nabout, but eventually, we will,", "start": 3774.36, "duration": 3.0}, {"text": "because if we want to implement\ncertain functionality,", "start": 3777.36, "duration": 1.89}, {"text": "we're going to need to know\nwhat is actually going on.", "start": 3779.25, "duration": 2.14}, {"text": "So for instance, let me\ngo ahead and do this.", "start": 3781.39, "duration": 1.87}, {"text": "Let me go ahead and create a\nprogram called strlen itself.", "start": 3783.26, "duration": 3.94}, {"text": "So this is not a function but\na program called strlen.c.", "start": 3787.2, "duration": 3.24}, {"text": "Let me go ahead and include\nthe CS50 library at the top.", "start": 3790.44, "duration": 2.98}, {"text": "Let me go ahead and include stdio.h.", "start": 3793.42, "duration": 2.36}, {"text": "Let me go ahead and type out main\nvoid, so all this is same as always.", "start": 3795.78, "duration": 4.38}, {"text": "And then let me go ahead and prompt\nthe user for, say, his or her name,", "start": 3800.16, "duration": 4.32}, {"text": "like so.", "start": 3804.48, "duration": 1.14}, {"text": "And then you know what?", "start": 3805.62, "duration": 0.96}, {"text": "Let me actually, this time,\nnot just print their name out,", "start": 3806.58, "duration": 1.95}, {"text": "because we've done that ad nauseam.", "start": 3808.53, "duration": 1.45}, {"text": "Let's just count the number\nof letters in his or her name.", "start": 3809.98, "duration": 2.95}, {"text": "So how could we do that?", "start": 3812.93, "duration": 1.0}, {"text": "Well, we could just do this-- int\nn get strlen of s, and then say,", "start": 3813.93, "duration": 6.18}, {"text": "printf \"The length of your name is %i.\"", "start": 3820.11, "duration": 4.9}, {"text": "And then we can plug\nin n, because that's", "start": 3825.01, "duration": 3.11}, {"text": "the number we stored the length in.", "start": 3828.12, "duration": 1.74}, {"text": "But to use strlen, I have\nto include what header file?", "start": 3829.86, "duration": 2.7}, {"text": "String.h, which is the\nnew one, so string.h.", "start": 3832.56, "duration": 3.85}, {"text": "And now if I type this all correctly,\nmake strlen, make strlen, good.", "start": 3836.41, "duration": 6.53}, {"text": "./strlen-- let's try it--", "start": 3842.94, "duration": 2.34}, {"text": "Zamyla.", "start": 3845.28, "duration": 0.85}, {"text": "Enter.", "start": 3846.13, "duration": 0.86}, {"text": "OK, the length of her name is six.", "start": 3846.99, "duration": 1.77}, {"text": "But what is strlen doing?", "start": 3848.76, "duration": 1.58}, {"text": "Well, strlen is just an abstraction\nfor us that someone else wrote,", "start": 3850.34, "duration": 2.8}, {"text": "and it's wonderfully convenient, but\nyou know, we don't strictly need it.", "start": 3853.14, "duration": 3.39}, {"text": "I can actually do this myself.", "start": 3856.53, "duration": 1.72}, {"text": "If I understand what\nthe computer is doing,", "start": 3858.25, "duration": 2.63}, {"text": "I can implement this same\nfunctionality myself as follows.", "start": 3860.88, "duration": 3.16}, {"text": "I can declare a variable called\nn and initialize it to 0,", "start": 3864.04, "duration": 2.84}, {"text": "and then you know what?", "start": 3866.88, "duration": 0.96}, {"text": "I'm going to go ahead and do this.", "start": 3867.84, "duration": 1.41}, {"text": "While s bracket n does\nnot equal all zeros,", "start": 3869.25, "duration": 7.24}, {"text": "but you don't write all zeros like this.", "start": 3876.49, "duration": 1.67}, {"text": "You literally do this--", "start": 3878.16, "duration": 1.47}, {"text": "that /0 to which I referred\nearlier in single quotes.", "start": 3879.63, "duration": 3.12}, {"text": "That just means all zeros in the bytes.", "start": 3882.75, "duration": 2.64}, {"text": "And now I can go ahead and do n++.", "start": 3885.39, "duration": 2.6}, {"text": "If I'm familiar with what\nthis means, remember,", "start": 3887.99, "duration": 1.96}, {"text": "that this is just n equals n plus 1, but\nit's just a little more compact to say,", "start": 3889.95, "duration": 4.44}, {"text": "n++.", "start": 3894.39, "duration": 1.32}, {"text": "And then I can print\nout the name of your n--", "start": 3895.71, "duration": 2.04}, {"text": "the name of your n--", "start": 3897.75, "duration": 1.5}, {"text": "the name of-- the length of\nyour name is %i, plugging in n.", "start": 3899.25, "duration": 4.68}, {"text": "So why does this work?", "start": 3903.93, "duration": 1.11}, {"text": "It's a little funky-looking,\nbut this is just", "start": 3905.04, "duration": 2.16}, {"text": "demonstrating an understanding\nof what's going on", "start": 3907.2, "duration": 2.13}, {"text": "underneath the proverbial hood.", "start": 3909.33, "duration": 1.36}, {"text": "If n is initialized to zero,\nand I look at s bracket n,", "start": 3910.69, "duration": 3.95}, {"text": "well, that's like\nlooking at s bracket 0.", "start": 3914.64, "duration": 1.83}, {"text": "And if the string, s, is\nZamyla, what is s bracket 0?", "start": 3916.47, "duration": 4.69}, {"text": "Z. And then it does not equal /0.", "start": 3921.16, "duration": 3.09}, {"text": "It equals z, obviously.", "start": 3924.25, "duration": 1.53}, {"text": "So we increment n.", "start": 3925.78, "duration": 0.93}, {"text": "So now n is 1.", "start": 3926.71, "duration": 1.59}, {"text": "Now n is 1.", "start": 3928.3, "duration": 0.85}, {"text": "So what is s bracket 1 in Zamyla's name?", "start": 3929.15, "duration": 3.19}, {"text": "A and so forth, and we get to\nZ-A-M-Y-L-A, then all zeros,", "start": 3932.34, "duration": 5.8}, {"text": "the so-called null character, or /0.", "start": 3938.14, "duration": 3.45}, {"text": "That, of course, does equal\n/0, so the loop stops,", "start": 3941.59, "duration": 3.39}, {"text": "thereby leaving the total count or\nvalue of n at what it previously was,", "start": 3944.98, "duration": 4.11}, {"text": "which was 6.", "start": 3949.09, "duration": 2.01}, {"text": "So that's it.", "start": 3951.1, "duration": 1.11}, {"text": "Like all underneath\nthe hood, all we have", "start": 3952.21, "duration": 1.86}, {"text": "is memory laid out like this,\ntop to bottom, left to right,", "start": 3954.07, "duration": 3.28}, {"text": "and yet all of the functionality\nwe've been using for a week now", "start": 3957.35, "duration": 2.75}, {"text": "and henceforth just boils down to\nsome relatively simple primitives,", "start": 3960.1, "duration": 3.75}, {"text": "and if you understand\nthose primitives, you", "start": 3963.85, "duration": 1.8}, {"text": "can do anything you want using\nthe computer, both computationally", "start": 3965.65, "duration": 3.21}, {"text": "code-wise, but also memory-wise.", "start": 3968.86, "duration": 2.49}, {"text": "We can actually see, in fact, some of\nthe stuff we looked at two weeks ago as", "start": 3971.35, "duration": 3.48}, {"text": "follows.", "start": 3974.83, "duration": 0.61}, {"text": "Let me go ahead and open up\nan example called ASCII 0.", "start": 3975.44, "duration": 3.08}, {"text": "Recall that ASCII is the mapping between\nletters and numbers in a computer.", "start": 3978.52, "duration": 3.57}, {"text": "And notice what this\nprogram's going to do.", "start": 3982.09, "duration": 1.8}, {"text": "Make-- let me go into this folder.", "start": 3983.89, "duration": 2.16}, {"text": "Make ascii0, ./ascii0, Enter.", "start": 3986.05, "duration": 4.2}, {"text": "The string shall be,\nlet's say, Zamyla, Enter.", "start": 3990.25, "duration": 4.41}, {"text": "Well, it turns out that\nif you actually look up", "start": 3994.66, "duration": 3.66}, {"text": "the ASCII code for Zamyla's name, z\nis 90, lowercase a is 97, m is 109,", "start": 3998.32, "duration": 7.38}, {"text": "and so forth.", "start": 4005.7, "duration": 0.91}, {"text": "There are those characters,\nand actually, we", "start": 4006.61, "duration": 1.34}, {"text": "can play the same game we did last week.", "start": 4007.95, "duration": 1.66}, {"text": "If I do this again on \"hi,\" there's\nyour 72, and there's your 73.", "start": 4009.61, "duration": 4.31}, {"text": "Where is this coming from?", "start": 4013.92, "duration": 1.25}, {"text": "Well, now that I know how to\nmanipulate individual strings,", "start": 4015.17, "duration": 2.46}, {"text": "notice what I can do.", "start": 4017.63, "duration": 1.18}, {"text": "I can get a string from the\nuser, just as we always have.", "start": 4018.81, "duration": 2.88}, {"text": "I can iterate over the length of\nthat string, albeit inefficiently", "start": 4021.69, "duration": 3.33}, {"text": "using strlen here.", "start": 4025.02, "duration": 1.63}, {"text": "And then notice this new feature today.", "start": 4026.65, "duration": 2.48}, {"text": "I can now convert one data type\nto another, because a char,", "start": 4029.13, "duration": 5.7}, {"text": "a character is just eight bits, but\npresented in the context of characters.", "start": 4034.83, "duration": 5.29}, {"text": "Bytes is also just eight bits that you\ncould treat as an integer, a number.", "start": 4040.12, "duration": 4.18}, {"text": "It's totally context-sensitive.", "start": 4044.3, "duration": 1.3}, {"text": "If you use Photoshop, it's a graphic.", "start": 4045.6, "duration": 1.73}, {"text": "If you use a text program,\nit's a message and so forth.", "start": 4047.33, "duration": 2.45}, {"text": "So you can encode--", "start": 4049.78, "duration": 1.91}, {"text": "change the context.", "start": 4051.69, "duration": 1.62}, {"text": "So notice here, s bracket i is, of\ncourse, the i-th character of Zamyla's", "start": 4053.31, "duration": 4.71}, {"text": "name, so Z or A or M or whatever.", "start": 4058.02, "duration": 2.55}, {"text": "But I can convert that i-th character to\nan integer doing what's called casting.", "start": 4060.57, "duration": 3.99}, {"text": "You can literally, in\nparentheses, specify the data type", "start": 4064.56, "duration": 2.76}, {"text": "you want to convert one\ndata type to, and then", "start": 4067.32, "duration": 2.7}, {"text": "store it in exactly that data type.", "start": 4070.02, "duration": 2.26}, {"text": "So s bracket i-- convert it to a number.", "start": 4072.28, "duration": 2.24}, {"text": "Then store it in an actual number\nvariable, so I can print out its value.", "start": 4074.52, "duration": 4.48}, {"text": "So c-- this is show me the character.", "start": 4079.0, "duration": 2.51}, {"text": "Show me the letter as by plugging in\nthe character, and then the letter--", "start": 4081.51, "duration": 5.38}, {"text": "sorry, the character and the number\nthat I've just converted it to.", "start": 4086.89, "duration": 2.84}, {"text": "And you don't actually\neven have to be explicit.", "start": 4089.73, "duration": 1.99}, {"text": "This is called explicit casting.", "start": 4091.72, "duration": 2.05}, {"text": "Technically, we can do\nthis implicitly, too.", "start": 4093.77, "duration": 3.49}, {"text": "And the computer knows that\nnumbers are characters,", "start": 4097.26, "duration": 2.16}, {"text": "and characters are a number.", "start": 4099.42, "duration": 1.26}, {"text": "You don't have to be\nso pedantic and even do", "start": 4100.68, "duration": 1.84}, {"text": "the explicit casting in parentheses.", "start": 4102.52, "duration": 1.61}, {"text": "You can just do it implicitly with data\ntypes, and honestly, at this point,", "start": 4104.13, "duration": 3.42}, {"text": "I don't even need the variable.", "start": 4107.55, "duration": 1.55}, {"text": "I can get rid of this, and\ndown here, I can literally just", "start": 4109.1, "duration": 3.52}, {"text": "print the same thing\ntwice, but tell printf", "start": 4112.62, "duration": 3.69}, {"text": "to print the first in the\ncontext of a character", "start": 4116.31, "duration": 3.0}, {"text": "and the second in the context of an\nint, just treating the exact same bits", "start": 4119.31, "duration": 3.81}, {"text": "differently.", "start": 4123.12, "duration": 1.26}, {"text": "That's implicit casting.", "start": 4124.38, "duration": 2.04}, {"text": "And it just demonstrates\nwhat we did in week 0", "start": 4126.42, "duration": 2.16}, {"text": "when we claimed that\nletters are numbers,", "start": 4128.58, "duration": 2.43}, {"text": "and numbers can also be colors, and\ncolors can be images, and so forth.", "start": 4131.01, "duration": 3.96}, {"text": "Is this a question?", "start": 4134.97, "duration": 0.8}, {"text": "AUDIENCE: Would've\nbeen useful for credit.", "start": 4135.77, "duration": 1.43}, {"text": "DAVID J. MALAN: Also, yes.", "start": 4137.2, "duration": 0.4}, {"text": "It all comes back to credit.", "start": 4137.6, "duration": 1.33}, {"text": "Yeah.", "start": 4138.93, "duration": 0.59}, {"text": "Indeed.", "start": 4139.52, "duration": 0.94}, {"text": "Other questions?", "start": 4140.46, "duration": 1.35}, {"text": "No.", "start": 4141.81, "duration": 0.66}, {"text": "All right, so what else can we\nactually do with this appreciation?", "start": 4142.47, "duration": 3.63}, {"text": "So super simple feature that all\nof us surely take for granted,", "start": 4146.1, "duration": 2.89}, {"text": "if we even use it anymore these days.", "start": 4148.99, "duration": 1.55}, {"text": "Google Docs, Microsoft Word,\nand such can automatically", "start": 4150.54, "duration": 2.88}, {"text": "capitalize words for you these days.", "start": 4153.42, "duration": 1.53}, {"text": "I mean your phone can do it nowadays.", "start": 4154.95, "duration": 1.65}, {"text": "They just sort of\nAutoCorrect your messages.", "start": 4156.6, "duration": 1.83}, {"text": "Well, how is that actually working?", "start": 4158.43, "duration": 1.65}, {"text": "Well, once you know that a string\nis just a bunch of characters", "start": 4160.08, "duration": 2.67}, {"text": "back to back to back, and you know\nthat these characters have numbers", "start": 4162.75, "duration": 3.66}, {"text": "representing them, and like capital A is\n65, and lowercase A is 97, apparently,", "start": 4166.41, "duration": 5.8}, {"text": "and so forth, we can\nleverage these patterns.", "start": 4172.21, "duration": 2.74}, {"text": "If I go ahead and open\nup this other example", "start": 4174.95, "duration": 1.84}, {"text": "here called Capitalize 0,\nnotice what this program is", "start": 4176.79, "duration": 4.17}, {"text": "going to do for me first by running it.", "start": 4180.96, "duration": 2.04}, {"text": "Make capitalize 0 ./capitalize0.", "start": 4183.0, "duration": 4.68}, {"text": "Let me go ahead and type in Zamyla's\nname just as before, but now", "start": 4187.68, "duration": 3.0}, {"text": "it's all capital.", "start": 4190.68, "duration": 1.07}, {"text": "So this is a little extreme.", "start": 4191.75, "duration": 1.18}, {"text": "Hopefully, your phone is not\ncapitalizing every letter,", "start": 4192.93, "duration": 2.29}, {"text": "but you can imagine it capitalizing\njust the first, if you wanted it.", "start": 4195.22, "duration": 3.09}, {"text": "So how does this work?", "start": 4198.31, "duration": 1.23}, {"text": "Well, let me go ahead and\nopen up this example here.", "start": 4199.54, "duration": 3.68}, {"text": "And so what we did--", "start": 4203.22, "duration": 1.71}, {"text": "so here, I'm getting a string from\nthe user, just as we always do.", "start": 4204.93, "duration": 3.56}, {"text": "Then I'm saying, after, just to\nkind of format the output nicely.", "start": 4208.49, "duration": 3.3}, {"text": "Here, I'm doing a loop pretty\nefficiently from i equals 0 up", "start": 4211.79, "duration": 4.05}, {"text": "to the length of the string.", "start": 4215.84, "duration": 1.66}, {"text": "And now notice this neat\napplication of logic.", "start": 4217.5, "duration": 2.75}, {"text": "It's a little cryptic,\ncertainly, at first glance.", "start": 4220.25, "duration": 2.15}, {"text": "But whoops.", "start": 4222.4, "duration": 0.62}, {"text": "And now it's gone.", "start": 4223.02, "duration": 0.75}, {"text": "And what am I doing exactly\nwith these lines of code?", "start": 4223.77, "duration": 3.81}, {"text": "Well, with every iteration of this\nloop, I'm asking the question,", "start": 4227.58, "duration": 3.5}, {"text": "is the i-th character of s,\nso the current character,", "start": 4231.08, "duration": 2.91}, {"text": "is it greater than or equal to\nlowercase A, and is it less than", "start": 4233.99, "duration": 3.84}, {"text": "or equal to lowercase Z?", "start": 4237.83, "duration": 1.65}, {"text": "Put another way, how do you say\nthat more colloquially in English?", "start": 4239.48, "duration": 3.48}, {"text": "Is it lowercase, literally.", "start": 4242.96, "duration": 1.38}, {"text": "But this is the more programmatic\nway of expressing, is it lowercase?", "start": 4244.34, "duration": 3.3}, {"text": "All right, if it is,\ngo ahead and do this.", "start": 4247.64, "duration": 2.04}, {"text": "Now this is a little funky, but\nprint out a character, specifically", "start": 4249.68, "duration": 3.78}, {"text": "the i-th character, but subtract\nfrom that lowercase letter whatever", "start": 4253.46, "duration": 5.1}, {"text": "the difference is between little A and\nbig A. Now where did that come from?", "start": 4258.56, "duration": 6.67}, {"text": "So it turns out--", "start": 4265.23, "duration": 0.89}, {"text": "OK, capital A is 65.", "start": 4266.12, "duration": 2.61}, {"text": "Lowercase A is 97.", "start": 4268.73, "duration": 2.14}, {"text": "So the difference between those is 32.", "start": 4270.87, "duration": 2.4}, {"text": "And that's true for B, so capital\nB is 66, and lowercase B is 98.", "start": 4273.27, "duration": 4.91}, {"text": "Still 32, and it repeats\nfor the whole alphabet.", "start": 4278.18, "duration": 2.41}, {"text": "So I could just do this.", "start": 4280.59, "duration": 2.3}, {"text": "If I know that lowercase letters\nhave bigger numbers, like 97, 98,", "start": 4282.89, "duration": 5.01}, {"text": "and I know that lowercase numbers\nhave lower letters, like 65, 66,", "start": 4287.9, "duration": 4.11}, {"text": "I can just literally subtract\noff 32 from my lowercase letters.", "start": 4292.01, "duration": 3.44}, {"text": "As you point out, it's\na lowercase letter.", "start": 4295.45, "duration": 1.75}, {"text": "Subtract 32, and that\ngives us what result?", "start": 4297.2, "duration": 3.71}, {"text": "The capitalized version.", "start": 4300.91, "duration": 1.26}, {"text": "It uppercases things for us.", "start": 4302.17, "duration": 1.57}, {"text": "But honestly, this feels a little\nhackish that, like, OK, yes,", "start": 4303.74, "duration": 2.81}, {"text": "I can do the math correctly,\nbut you know what?", "start": 4306.55, "duration": 1.96}, {"text": "It's better practice, generally,\nto abstract this away.", "start": 4308.51, "duration": 2.12}, {"text": "Don't get into the weeds of counting\nhow many characters are away", "start": 4310.63, "duration": 2.46}, {"text": "from each other.", "start": 4313.09, "duration": 0.75}, {"text": "Math is cheap and easy in the computer.", "start": 4313.84, "duration": 1.89}, {"text": "Let it do the math for you by\nsubtracting whatever the value of A", "start": 4315.73, "duration": 2.73}, {"text": "is, of capital A is from the value of\nlowercase A. Or we could just write 32.", "start": 4318.46, "duration": 5.91}, {"text": "Otherwise, go ahead and just\nprint the character unchanged.", "start": 4324.37, "duration": 3.0}, {"text": "So in this case, the A-M-Y-L-A\nin Zamyla's name got uppercased,", "start": 4327.37, "duration": 3.66}, {"text": "and everything else,\nthe Z, got left alone,", "start": 4331.03, "duration": 2.9}, {"text": "just by understanding what's going on\nwith how the computer's represented.", "start": 4333.93, "duration": 4.56}, {"text": "But honestly, God, I don't want\nto keep writing code like this.", "start": 4338.49, "duration": 2.62}, {"text": "Like, I'm never going to get this.", "start": 4341.11, "duration": 1.42}, {"text": "I'm new to programming, perhaps.", "start": 4342.53, "duration": 1.43}, {"text": "I'm never going to get this sort of\nsequence of all the cryptic symbols", "start": 4343.96, "duration": 3.03}, {"text": "together, and that's OK, because we can\nactually implement this same program", "start": 4346.99, "duration": 3.24}, {"text": "a little more easily,\nthanks to functions", "start": 4350.23, "duration": 2.73}, {"text": "and abstractions that\nothers have written for us.", "start": 4352.96, "duration": 2.43}, {"text": "So in this program,\nturns out I can simplify", "start": 4355.39, "duration": 3.57}, {"text": "the questions I'm asking by literally\ncalling a function that says, is lower.", "start": 4358.96, "duration": 4.92}, {"text": "And there's another\none called, is upper,", "start": 4363.88, "duration": 1.71}, {"text": "and there's bunches of others\nthat just literally are called,", "start": 4365.59, "duration": 2.54}, {"text": "is something or other.", "start": 4368.13, "duration": 1.15}, {"text": "So is lower takes an argument\nlike the i-th character of s,", "start": 4369.28, "duration": 4.02}, {"text": "and it just returns a\nbull-- true or false.", "start": 4373.3, "duration": 2.46}, {"text": "How is it implemented?", "start": 4375.76, "duration": 1.35}, {"text": "Well, honestly, if we looked at the\ncode that someone else wrote decades ago", "start": 4377.11, "duration": 3.42}, {"text": "for is upper, odds are-- or is lower--", "start": 4380.53, "duration": 3.15}, {"text": "odds are he or she wrote code\nthat looks almost like this.", "start": 4383.68, "duration": 3.57}, {"text": "But we don't need to worry\nabout that level of detail.", "start": 4387.25, "duration": 2.8}, {"text": "We can just use his or her\nfunction, but how do we do that?", "start": 4390.05, "duration": 2.54}, {"text": "Turns out that this function--\nand you would only know this", "start": 4392.59, "duration": 2.46}, {"text": "by having been told or Googling\nor reading a reference--", "start": 4395.05, "duration": 2.33}, {"text": "is in a library called ctype.h.", "start": 4397.38, "duration": 3.25}, {"text": "And you need the header file\ncalled ctype.h in order to use it.", "start": 4400.63, "duration": 4.46}, {"text": "And we'll almost always point you\nto references and documentation", "start": 4405.09, "duration": 2.71}, {"text": "to explain that to you.", "start": 4407.8, "duration": 1.67}, {"text": "Toupper is another feature, right?", "start": 4409.47, "duration": 2.31}, {"text": "This math-- like, my god.", "start": 4411.78, "duration": 1.27}, {"text": "I just want to uppercase a letter.", "start": 4413.05, "duration": 1.02}, {"text": "I don't want to really keep thinking\nabout how far apart uppercase letters", "start": 4414.07, "duration": 2.76}, {"text": "are from lowercase.", "start": 4416.83, "duration": 1.05}, {"text": "Turns out that in the\nC type library, there's", "start": 4417.88, "duration": 2.1}, {"text": "another function called toupper that\nliterally does the exact same thing", "start": 4419.98, "duration": 3.3}, {"text": "in the previous program we wrote.", "start": 4423.28, "duration": 2.07}, {"text": "And so that, too, is OK.", "start": 4425.35, "duration": 2.46}, {"text": "But you know what?", "start": 4427.81, "duration": 0.75}, {"text": "This feels a little verbose.", "start": 4428.56, "duration": 2.31}, {"text": "It would be nice if I could\nreally tighten this program up.", "start": 4430.87, "duration": 2.64}, {"text": "So how those toupper work?", "start": 4433.51, "duration": 2.16}, {"text": "Well, it turns out some of you might\nbe familiar with CS50 Reference", "start": 4435.67, "duration": 3.12}, {"text": "Online, our web-based\napp that we have that", "start": 4438.79, "duration": 2.1}, {"text": "helps you navigate\navailable functions in C.", "start": 4440.89, "duration": 2.31}, {"text": "Turns out that all of the\ndata for that application", "start": 4443.2, "duration": 2.85}, {"text": "comes from an older command\nline program that comes in Linux", "start": 4446.05, "duration": 3.78}, {"text": "and comes in the sandbox\ncalled Man for manual.", "start": 4449.83, "duration": 2.76}, {"text": "And anytime you type \"man\" at the\ncommand prompt, and then the name", "start": 4452.59, "duration": 3.48}, {"text": "of a function you're\ninterested in, if it exists,", "start": 4456.07, "duration": 2.53}, {"text": "it will tell you a little\nsomething about it.", "start": 4458.6, "duration": 1.88}, {"text": "So if I go to toupper, man toupper,\nI get slightly cryptic documentation", "start": 4460.48, "duration": 6.6}, {"text": "here.", "start": 4467.08, "duration": 0.78}, {"text": "But notice, toupper and\nsome other functions", "start": 4467.86, "duration": 2.4}, {"text": "convert uppercase or lowercase.", "start": 4470.26, "duration": 1.68}, {"text": "That's the summary.", "start": 4471.94, "duration": 1.47}, {"text": "Notice that in the synopsis,\nthe man page, so to speak,", "start": 4473.41, "duration": 3.19}, {"text": "is telling me what header\nfile I have to include.", "start": 4476.6, "duration": 2.96}, {"text": "Notice that under Synopsis,\nit's also telling me", "start": 4479.56, "duration": 2.25}, {"text": "what the signature or\nprototype is of the function.", "start": 4481.81, "duration": 3.16}, {"text": "In other words, the documentation in\nMan, the Linux programmer's manual,", "start": 4484.97, "duration": 3.08}, {"text": "is very terse.", "start": 4488.05, "duration": 0.8}, {"text": "So it's not going to hold your hand\nin this black and white format.", "start": 4488.85, "duration": 2.8}, {"text": "It's just going to\nconvey, well, implicitly,", "start": 4491.65, "duration": 2.37}, {"text": "you better put this on top of your file.", "start": 4494.02, "duration": 1.81}, {"text": "And by the way, this is\nhow you use the function.", "start": 4495.83, "duration": 2.04}, {"text": "It takes an argument called C,\nreturns a value of type int.", "start": 4497.87, "duration": 5.94}, {"text": "Why is it int?", "start": 4503.81, "duration": 2.31}, {"text": "Let me wave my hands at that.", "start": 4506.12, "duration": 1.21}, {"text": "It effectively returns a\ncharacter for our purposes today.", "start": 4507.33, "duration": 3.22}, {"text": "And if we scroll down, OK, description.", "start": 4510.55, "duration": 2.43}, {"text": "Ugh, I don't really want to read\nall of this, but OK, here we go.", "start": 4512.98, "duration": 3.42}, {"text": "If c is a lowercase letter, toupper\nreturns its uppercase equivalent,", "start": 4516.4, "duration": 4.61}, {"text": "if an uppercase representation\nexists in the current locale.", "start": 4521.01, "duration": 2.5}, {"text": "That just means if it's punctuation,\nit's not going to do anything.", "start": 4523.51, "duration": 2.79}, {"text": "Otherwise, it returns C, And\nthat's kind of the key detail.", "start": 4526.3, "duration": 3.6}, {"text": "If I pass it lowercase A, it's\ngoing to give me capital A,", "start": 4529.9, "duration": 3.87}, {"text": "but if I pass it capital A,\nwhat's it going to give me?", "start": 4533.77, "duration": 2.88}, {"text": "AUDIENCE: Capital A.", "start": 4536.65, "duration": 0.83}, {"text": "DAVID J. MALAN: Also, capital A. It\nreturns the original character, c.", "start": 4537.48, "duration": 2.91}, {"text": "That's the only detail I cared about.", "start": 4540.39, "duration": 1.81}, {"text": "When in doubt, read the manual.", "start": 4542.2, "duration": 1.73}, {"text": "And it might be a\nlittle cryptic, and this", "start": 4543.93, "duration": 1.75}, {"text": "is why CS50 Reference takes\nsomewhat cryptic documentation", "start": 4545.68, "duration": 2.64}, {"text": "and tries to simplify it into\nmore human-friendly terms.", "start": 4548.32, "duration": 2.54}, {"text": "But at the end of the day, these\nare the authoritative answers.", "start": 4550.86, "duration": 2.63}, {"text": "And if I or one of the staff\ndon't know, we literally", "start": 4553.49, "duration": 2.33}, {"text": "pull up the Man page or CS50 Reference\nto answer these kinds of questions.", "start": 4555.82, "duration": 3.63}, {"text": "Now what's the implication?", "start": 4559.45, "duration": 1.62}, {"text": "I don't need any of this.", "start": 4561.07, "duration": 1.59}, {"text": "I can literally get rid of\nthe condition and just let", "start": 4562.66, "duration": 3.9}, {"text": "toupper do all of the\nlegwork, and now my program", "start": 4566.56, "duration": 4.23}, {"text": "is so much more compact than\nthe previous versions were,", "start": 4570.79, "duration": 3.09}, {"text": "because I've read the documentation.", "start": 4573.88, "duration": 1.5}, {"text": "I know what the function does, and I\ncan let toupper uppercase something", "start": 4575.38, "duration": 3.48}, {"text": "or just pass it through unchanged.", "start": 4578.86, "duration": 2.14}, {"text": "We can better design, because we're\nwriting fewer lines of code that", "start": 4581.0, "duration": 2.84}, {"text": "are just as clear, and so we can\nnow actually tighten things up.", "start": 4583.84, "duration": 5.76}, {"text": "Any questions on this\nparticular approach?", "start": 4589.6, "duration": 4.09}, {"text": "All right.", "start": 4593.69, "duration": 0.5}, {"text": "So we're getting very low level.", "start": 4594.19, "duration": 1.33}, {"text": "Now let's make these things more\nuseful, because clearly, other people", "start": 4595.52, "duration": 2.99}, {"text": "have solved some of\nthese problems for us,", "start": 4598.51, "duration": 1.74}, {"text": "as by having these functions and the\nC type library and the string library.", "start": 4600.25, "duration": 3.93}, {"text": "What more is there?", "start": 4604.18, "duration": 1.18}, {"text": "Well, recall that every time\nwe run Clang, or even run make,", "start": 4605.36, "duration": 4.55}, {"text": "we're typing multiple words\nat the command prompt.", "start": 4609.91, "duration": 2.49}, {"text": "You're typing make hello or\nmake Mario, a second word,", "start": 4612.4, "duration": 3.63}, {"text": "or you're typing\nclang-o, hello, hello.c,", "start": 4616.03, "duration": 3.21}, {"text": "like lots of words at the prompt.", "start": 4619.24, "duration": 2.46}, {"text": "Well, it turns out that all\nthis time, you're using, indeed,", "start": 4621.7, "duration": 2.73}, {"text": "command line arguments.", "start": 4624.43, "duration": 1.2}, {"text": "But in C, you can write programs that\nalso accept words and numbers when", "start": 4625.63, "duration": 4.71}, {"text": "the user runs the program.", "start": 4630.34, "duration": 1.55}, {"text": "Think back, after all.", "start": 4631.89, "duration": 0.92}, {"text": "When you ran Mario,\nyou did ./mario, Enter.", "start": 4632.81, "duration": 2.8}, {"text": "You couldn't type any\nmore words at the prompt.", "start": 4635.61, "duration": 1.96}, {"text": "When you did credit,\nyou did ./credit, Enter.", "start": 4637.57, "duration": 2.79}, {"text": "No more words at the prompt.", "start": 4640.36, "duration": 1.17}, {"text": "You used get string or get\nlong to get more input, but not", "start": 4641.53, "duration": 3.3}, {"text": "at the command line.", "start": 4644.83, "duration": 1.27}, {"text": "And it turns out that we\ncan, relatively simply, in C,", "start": 4646.1, "duration": 3.62}, {"text": "but it's a little\ncryptic at first glance.", "start": 4649.72, "duration": 2.22}, {"text": "Let me go ahead and--", "start": 4651.94, "duration": 2.04}, {"text": "let me go ahead and, here, pull up this\nsignature here, which looks like this.", "start": 4653.98, "duration": 7.39}, {"text": "This is the function that we're all used\nto by now for writing a main function.", "start": 4661.37, "duration": 4.08}, {"text": "And up until now, we've said void.", "start": 4665.45, "duration": 1.62}, {"text": "Main doesn't take any inputs,\nand indeed, it just runs.", "start": 4667.07, "duration": 3.04}, {"text": "But it turns out if you change your\nexisting programs or future programs,", "start": 4670.11, "duration": 4.04}, {"text": "not to say void, but to\nsay, int argc, string argv,", "start": 4674.15, "duration": 3.96}, {"text": "it's a little cryptic at first glance.", "start": 4678.11, "duration": 1.92}, {"text": "But what's a recognizable symbol now?", "start": 4680.03, "duration": 4.32}, {"text": "Yeah, there's brackets here.", "start": 4684.35, "duration": 1.43}, {"text": "So it turns out that every\ntime you write a program,", "start": 4685.78, "duration": 2.75}, {"text": "if you don't just say void, you\nactually enable this feature", "start": 4688.53, "duration": 3.15}, {"text": "by writing int argc, string argv.", "start": 4691.68, "duration": 2.01}, {"text": "You can actually tell\nClang, you know what?", "start": 4693.69, "duration": 2.1}, {"text": "I want this program to accept one or\nmore words or numbers after the name", "start": 4695.79, "duration": 4.56}, {"text": "of the program, so I can do\n./hellodavid, or ./hellozamyla.", "start": 4700.35, "duration": 3.6}, {"text": "I don't have to wait for the\nprogram to be running to use string.", "start": 4703.95, "duration": 3.99}, {"text": "And just as with the earlier example,\nwhere you were able to chart an array,", "start": 4707.94, "duration": 6.06}, {"text": "main is defined as taking an array,\ncalled argv historical reasons--", "start": 4714.0, "duration": 4.17}, {"text": "argument vector.", "start": 4718.17, "duration": 0.9}, {"text": "Vector means array.", "start": 4719.07, "duration": 1.56}, {"text": "Argument vector, bracket, closed\nbracket just means this is--", "start": 4720.63, "duration": 2.88}, {"text": "this contains one or more words,\neach of which is a string.", "start": 4723.51, "duration": 3.39}, {"text": "Argc is argument count,\nso this is the variable", "start": 4726.9, "duration": 2.7}, {"text": "that main gets access to that\ntells it how many arguments,", "start": 4729.6, "duration": 2.64}, {"text": "how many strings are actually in argv.", "start": 4732.24, "duration": 3.17}, {"text": "So how can we use this in a useful way?", "start": 4735.41, "duration": 3.01}, {"text": "Well, let me go ahead here\nand open up the sandbox.", "start": 4738.42, "duration": 3.36}, {"text": "And let me go ahead and create a new\nfile called, say, argv0, argv0.c--", "start": 4741.78, "duration": 5.18}, {"text": "again, argument vector, just\nlist or array of arguments.", "start": 4746.96, "duration": 3.63}, {"text": "And let me go ahead and, as usual,\ninclude cs50.h, include stdio.h,", "start": 4750.59, "duration": 8.62}, {"text": "and then int main not void,\nbut int argc, string argv--", "start": 4759.21, "duration": 6.9}, {"text": "argv-- open bracket, closed bracket.", "start": 4766.11, "duration": 2.7}, {"text": "And even if that doesn't come\nnaturally at first, it will eventually.", "start": 4768.81, "duration": 2.88}, {"text": "And I'm going to do this.", "start": 4771.69, "duration": 1.04}, {"text": "If the number of arguments\npassed in equals 2,", "start": 4772.73, "duration": 6.31}, {"text": "then I'm going to go ahead and do\nthis-- printf, hello %s, comma,", "start": 4779.04, "duration": 6.45}, {"text": "and here in the past, I've\ntyped a variable name.", "start": 4785.49, "duration": 2.25}, {"text": "And I now actually have\naccess to a variable.", "start": 4787.74, "duration": 2.1}, {"text": "Go ahead and do argv bracket 1.", "start": 4789.84, "duration": 2.52}, {"text": "Else, if the user does not\ntype, apparently, two words,", "start": 4792.36, "duration": 3.84}, {"text": "let me go ahead and just by default,\nsay, hello world, as we always have.", "start": 4796.2, "duration": 4.72}, {"text": "Now why-- what is this doing,\nand how is it doing it?", "start": 4800.92, "duration": 2.93}, {"text": "Well, let's quickly run it.", "start": 4803.85, "duration": 1.13}, {"text": "So make-- whoops.", "start": 4804.98, "duration": 2.68}, {"text": "Make argv0, ./argv0, Enter, Hello World.", "start": 4807.66, "duration": 7.44}, {"text": "But if I do Hello--", "start": 4815.1, "duration": 2.23}, {"text": "or dot-- the program\nwould be better named", "start": 4817.33, "duration": 2.51}, {"text": "if we called it Hello,\nbut Zamyla, Enter.", "start": 4819.84, "duration": 3.72}, {"text": "Hello Zamyla.", "start": 4823.56, "duration": 0.63}, {"text": "If I change it to David,\nnow I have access to David.", "start": 4824.19, "duration": 2.37}, {"text": "If I had David Malan, no.", "start": 4826.56, "duration": 2.46}, {"text": "It doesn't support that.", "start": 4829.02, "duration": 1.32}, {"text": "So what's going on?", "start": 4830.34, "duration": 0.99}, {"text": "If you change main in\nany program write to take", "start": 4831.83, "duration": 2.35}, {"text": "these two arguments, argc\nand argv of type string int", "start": 4834.18, "duration": 4.23}, {"text": "and then an array of strings,\nargc tells you how many words", "start": 4838.41, "duration": 3.03}, {"text": "were typed at the prompt.", "start": 4841.44, "duration": 1.11}, {"text": "So if the human typed\ntwo words, I presume", "start": 4842.55, "duration": 2.49}, {"text": "the first word is the name of\nthe program, dot slash argv0,", "start": 4845.04, "duration": 3.66}, {"text": "the second word is presumably my\nname, if he or she is actually", "start": 4848.7, "duration": 2.89}, {"text": "providing their name at the prompt.", "start": 4851.59, "duration": 1.46}, {"text": "And so I print out argv bracket 1.", "start": 4853.05, "duration": 2.64}, {"text": "Not 0 because that's the name of\nthe program, but argv bracket 1.", "start": 4855.69, "duration": 2.94}, {"text": "Else, down here, if the human doesn't\nprovide just Zamyla, or just David,", "start": 4858.63, "duration": 4.05}, {"text": "or just one word more generally, I\njust print the default, \"Hello world.\"", "start": 4862.68, "duration": 4.62}, {"text": "But what's neat about this now is\nnotice that argv is an array of strings.", "start": 4867.3, "duration": 8.1}, {"text": "What is a string?", "start": 4875.4, "duration": 3.11}, {"text": "It's an array of characters.", "start": 4878.51, "duration": 1.83}, {"text": "And so let's enter just one last piece\nof syntax that gets kind of powerful", "start": 4880.34, "duration": 3.66}, {"text": "here.", "start": 4884.0, "duration": 0.51}, {"text": "Let me go ahead and do this.", "start": 4884.51, "duration": 3.78}, {"text": "Let me go ahead and, in a\nnew file here, argv 1 dot c.", "start": 4888.29, "duration": 5.3}, {"text": "Let me go ahead and paste this in.", "start": 4893.59, "duration": 1.42}, {"text": "Close this.", "start": 4895.01, "duration": 1.11}, {"text": "Let me go ahead and do this.", "start": 4896.12, "duration": 2.07}, {"text": "Rather than do this logical\nchecking, let me do this, for--", "start": 4898.19, "duration": 5.41}, {"text": "let's say for int, i get 0.", "start": 4903.6, "duration": 5.29}, {"text": "i is less than argc--", "start": 4908.89, "duration": 1.44}, {"text": "i++.", "start": 4910.33, "duration": 1.25}, {"text": "Let's go ahead and, one per\nline, print out every word", "start": 4911.58, "duration": 3.33}, {"text": "that the human just\ntyped, just to reinforce", "start": 4914.91, "duration": 2.4}, {"text": "that this is indeed what's going on.", "start": 4917.31, "duration": 1.86}, {"text": "So argv bracket 0, save.", "start": 4919.17, "duration": 2.01}, {"text": "Make argv 1, enter.", "start": 4921.18, "duration": 4.11}, {"text": "And now let's go ahead\nand run this program--", "start": 4925.29, "duration": 2.24}, {"text": "dot slash, argv 1, David Malan.", "start": 4927.53, "duration": 5.06}, {"text": "OK, you see all three words.", "start": 4932.59, "duration": 2.01}, {"text": "If we change it to Zamyla,\nwe see just those two words.", "start": 4934.6, "duration": 2.97}, {"text": "If we change it to Zamyla\nChan, we see those three words.", "start": 4937.57, "duration": 2.73}, {"text": "So we clearly have access to\nall of the words in the array,", "start": 4940.3, "duration": 2.91}, {"text": "but let's take this one step further.", "start": 4943.21, "duration": 2.02}, {"text": "Rather than just print out every word\nin a string, let's go ahead and do this.", "start": 4945.23, "duration": 3.29}, {"text": "For intj get 0.", "start": 4948.52, "duration": 3.96}, {"text": "n equals the string length of\nthe current argument, like this--", "start": 4952.48, "duration": 8.43}, {"text": "j is less than n, j++--", "start": 4960.91, "duration": 2.43}, {"text": "oops, oops, oops-- j++.", "start": 4963.34, "duration": 2.22}, {"text": "Now let me go ahead and print out not\nthe full string, but let me do-- oops,", "start": 4965.56, "duration": 4.11}, {"text": "oops-- let me go ahead\nand print out this--", "start": 4969.67, "duration": 3.3}, {"text": "not a string, but a character, n\nbracket i bracket j, like this.", "start": 4972.97, "duration": 7.27}, {"text": "All right.", "start": 4980.24, "duration": 0.5}, {"text": "So what's going on?", "start": 4980.74, "duration": 0.96}, {"text": "One, this outer loop, and let's comment\nit, iterate over strings in argv.", "start": 4981.7, "duration": 6.21}, {"text": "This inner loop, iterate\nover chars in argv bracket i.", "start": 4987.91, "duration": 5.23}, {"text": "So the outer loop iterates over\nall of the strings in argv.", "start": 4993.14, "duration": 4.1}, {"text": "And the inner loop, using a\ndifferent variable, starting at 0,", "start": 4997.24, "duration": 3.75}, {"text": "iterates over all of the\ncharacters in the ith", "start": 5000.99, "duration": 2.94}, {"text": "argument, which itself is a string.", "start": 5003.93, "duration": 2.7}, {"text": "So we can call string length on it.", "start": 5006.63, "duration": 2.03}, {"text": "And then we do this up until n,\nwhich is the length of that string.", "start": 5008.66, "duration": 2.8}, {"text": "And then we print out each character.", "start": 5011.46, "duration": 1.75}, {"text": "So just to be clear-- when I run\narv1 and correct it, at first glance,", "start": 5013.21, "duration": 5.26}, {"text": "why it's implicitly declaring library\nfunction sterling, what's almost always", "start": 5018.47, "duration": 3.6}, {"text": "the solution when you do this wrong?", "start": 5022.07, "duration": 2.1}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 5024.17, "duration": 0.88}, {"text": "DAVID J. MALAN: Yeah.", "start": 5025.05, "duration": 0.87}, {"text": "So I forgot this, so include\nstring.h and help50 would", "start": 5025.92, "duration": 3.72}, {"text": "help with that as well.", "start": 5029.64, "duration": 0.96}, {"text": "Let's recompile with make argv1.", "start": 5030.6, "duration": 2.23}, {"text": "All right.", "start": 5032.83, "duration": 0.5}, {"text": "When I run argv1, of, say, Zamyla\nChan, what am I going to see?", "start": 5033.33, "duration": 7.25}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 5040.58, "duration": 1.4}, {"text": "DAVID J. MALAN: Yeah.", "start": 5041.98, "duration": 1.88}, {"text": "Is that the right intuition?", "start": 5043.86, "duration": 1.76}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 5045.62, "duration": 1.32}, {"text": "DAVID J. MALAN: I'm going\nto see Zamyla Chan, but--", "start": 5046.94, "duration": 3.43}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 5050.37, "duration": 0.88}, {"text": "DAVID J. MALAN: One character on each\nline, including the program's name.", "start": 5051.25, "duration": 2.89}, {"text": "So in fact, let me scroll this\nup so it's a little bigger.", "start": 5054.14, "duration": 2.41}, {"text": "Enter.", "start": 5056.55, "duration": 0.61}, {"text": "OK, it's a little stupid, the program,\nbut it does confirm that using arrays", "start": 5057.16, "duration": 5.49}, {"text": "do I have access not only to\nthe words, but I can kind of", "start": 5062.65, "duration": 2.49}, {"text": "have the second dimension.", "start": 5065.14, "duration": 1.17}, {"text": "And within each word, I can\nget at each character within.", "start": 5066.31, "duration": 4.14}, {"text": "And we do this, again, just by using\nnot just single square brackets,", "start": 5070.45, "duration": 4.29}, {"text": "but double.", "start": 5074.74, "duration": 0.54}, {"text": "And again, just break this\ndown into the first principles.", "start": 5075.28, "duration": 2.53}, {"text": "What is this first bracket?", "start": 5077.81, "duration": 1.13}, {"text": "This is the ith argument,\nthe ith string in the array.", "start": 5078.94, "duration": 2.74}, {"text": "And then if you take it\nfurther, with bracket j,", "start": 5081.68, "duration": 2.0}, {"text": "that gives you the j\ncharacter inside of this.", "start": 5083.68, "duration": 4.2}, {"text": "Now, who cares about any of\nthis kind of functionality?", "start": 5087.88, "duration": 3.37}, {"text": "Well, let me scroll back and\npropose one application here.", "start": 5091.25, "duration": 3.36}, {"text": "So recall that CS is really\njust problem solving.", "start": 5094.61, "duration": 2.96}, {"text": "But suppose the problem\nthat you want to solve", "start": 5097.57, "duration": 1.92}, {"text": "is to actually pass a\nsecret message in class", "start": 5099.49, "duration": 2.76}, {"text": "or send someone a secret\nfor whatever reason.", "start": 5102.25, "duration": 2.15}, {"text": "Well, the input to that\nproblem is generally", "start": 5104.4, "duration": 1.84}, {"text": "called plain test, a message you\nwant to send to that other person.", "start": 5106.24, "duration": 3.06}, {"text": "You ideally want ciphertext\nto emerge from it,", "start": 5109.3, "duration": 3.12}, {"text": "which is enciphered and scrambled,\nsomehow encrypted information", "start": 5112.42, "duration": 3.15}, {"text": "so that anyone in the room, like the\nteacher, can't just grab the note", "start": 5115.57, "duration": 3.15}, {"text": "and read what you're sending to your\nsecret crush or love across the room,", "start": 5118.72, "duration": 3.09}, {"text": "or in any other context as well.", "start": 5121.81, "duration": 1.8}, {"text": "But the problem is that if the\nmessage you want to send, say,", "start": 5123.61, "duration": 2.55}, {"text": "is our old friend Hi!,\nwith an exclamation point,", "start": 5126.16, "duration": 3.06}, {"text": "you can encode it in certain\ncontexts as just 72, 73, 33.", "start": 5129.22, "duration": 4.8}, {"text": "And I daresay most classes on campus\nif you wrote on a piece of paper 72,", "start": 5134.02, "duration": 3.43}, {"text": "73, 33, passed it through the room,\nand whatever professor intercepts it,", "start": 5137.45, "duration": 3.46}, {"text": "they're not going to know\nwhat you're saying anyway.", "start": 5140.91, "duration": 2.17}, {"text": "But this is not a good system.", "start": 5143.08, "duration": 1.71}, {"text": "This is not a cryptosystem.", "start": 5144.79, "duration": 1.83}, {"text": "Why?", "start": 5146.62, "duration": 0.84}, {"text": "It's not secure.", "start": 5147.46, "duration": 0.7}, {"text": "[INAUDIBLE]", "start": 5152.27, "duration": 0.51}, {"text": "[INTERPOSING VOICES]", "start": 5152.78, "duration": 1.76}, {"text": "DAVID J. MALAN: Yeah.", "start": 5154.54, "duration": 0.88}, {"text": "Anyone has access to\nthis, right, so long", "start": 5155.42, "duration": 1.71}, {"text": "as you attend like week 1\nor 0 of CS50, or you just", "start": 5157.13, "duration": 3.36}, {"text": "have general familiarity with Ascii.", "start": 5160.49, "duration": 1.83}, {"text": "Like this is just a code.", "start": 5162.32, "duration": 2.46}, {"text": "I mean Ascii is a system\nthat maps letters to numbers.", "start": 5164.78, "duration": 3.48}, {"text": "And anyone else who\nknows this code obviously", "start": 5168.26, "duration": 2.06}, {"text": "knows what your message is,\nbecause it's not a unique secret", "start": 5170.32, "duration": 2.5}, {"text": "to you and the recipient.", "start": 5172.82, "duration": 1.52}, {"text": "So that's probably not the best idea.", "start": 5174.34, "duration": 1.83}, {"text": "Well, you can be a little\nmore sophisticated.", "start": 5176.17, "duration": 1.99}, {"text": "And this is back--\nactually, a photograph", "start": 5178.16, "duration": 1.83}, {"text": "from World War I of a message that\nwas sent from Germany to Mexico", "start": 5179.99, "duration": 3.69}, {"text": "that was encoded in a very similar way.", "start": 5183.68, "duration": 2.1}, {"text": "It wasn't using Ascii.", "start": 5185.78, "duration": 1.02}, {"text": "The numbers, as you can\nperhaps glean from the photo,", "start": 5186.8, "duration": 2.28}, {"text": "are actually much larger.", "start": 5189.08, "duration": 1.35}, {"text": "But in this system, in a militaristic\ncontext, there was a code book.", "start": 5190.43, "duration": 3.42}, {"text": "So similar in spirit to\nAscii, where you have", "start": 5193.85, "duration": 1.89}, {"text": "a column of numbers and a column of\nletters to which they correspond,", "start": 5195.74, "duration": 3.91}, {"text": "a codebook more generally has\nlike numbers, and then maybe", "start": 5199.65, "duration": 3.32}, {"text": "even letters or whole words\nthat they correspond to,", "start": 5202.97, "duration": 2.31}, {"text": "sometimes thousands of them, like\nliterally a really big book of codes.", "start": 5205.28, "duration": 4.95}, {"text": "And so long as only, in this context\nthe Germans and the recipients,", "start": 5210.23, "duration": 3.57}, {"text": "the Mexicans, had access\nto that same book,", "start": 5213.8, "duration": 2.7}, {"text": "only they could encrypt and decrypt, or\nrather encode and decode information.", "start": 5216.5, "duration": 4.56}, {"text": "Of course, in this\nvery specific context--", "start": 5221.06, "duration": 2.17}, {"text": "you can read more about\nthis in historical texts--", "start": 5223.23, "duration": 2.09}, {"text": "this was intercepted.", "start": 5225.32, "duration": 0.96}, {"text": "This message, seemingly\ninnocuous, though definitely", "start": 5226.28, "duration": 2.58}, {"text": "suspicious looking\nwith all these numbers,", "start": 5228.86, "duration": 2.88}, {"text": "so therefore not innocuous, the British,\nin this case actually, intercepted it.", "start": 5231.74, "duration": 4.71}, {"text": "And thanks to a lot of\nefforts and cryptanalysis,", "start": 5236.45, "duration": 2.05}, {"text": "the Bletchley Park style code\nbreaking, albeit further back,", "start": 5238.5, "duration": 5.24}, {"text": "were they able to figure out what\nthose numbers represented in words", "start": 5243.74, "duration": 3.75}, {"text": "and actually decode the message.", "start": 5247.49, "duration": 2.26}, {"text": "And in fact, here's a\nphotograph of some of the words", "start": 5249.75, "duration": 2.21}, {"text": "that were translated\nfrom one to the other.", "start": 5251.96, "duration": 2.52}, {"text": "But more on that in any\nonline or textual references.", "start": 5254.48, "duration": 4.08}, {"text": "Turns out in this poem too\nthere was a similar code, right?", "start": 5258.56, "duration": 2.82}, {"text": "So apropos of being in Boston\nhere, you might recall this one.", "start": 5261.38, "duration": 3.48}, {"text": "\"Listen my children, and you shall hear\nof the midnight ride of Paul Revere.", "start": 5264.86, "duration": 4.23}, {"text": "On the 18th of April\nin '75, hardly a man", "start": 5269.09, "duration": 2.79}, {"text": "is now alive who remembers\nthat famous day and year.", "start": 5271.88, "duration": 3.03}, {"text": "He said to his friend, if the\nBritish march by land or sea", "start": 5274.91, "duration": 3.45}, {"text": "from the town tonight\nnight, hang a lantern", "start": 5278.36, "duration": 2.13}, {"text": "aloft in the belfry arch of the\nNorth Church tower as a signal light,", "start": 5280.49, "duration": 4.53}, {"text": "one if by land, and two if by sea.", "start": 5285.02, "duration": 2.99}, {"text": "And I on the opposite shore\nwill be ready to ride and spread", "start": 5288.01, "duration": 2.5}, {"text": "the alarm through every Middlesex\nvillage and farm for the country folk", "start": 5290.51, "duration": 3.12}, {"text": "to be up and to arm.\"", "start": 5293.63, "duration": 1.27}, {"text": "So it turns out some of that is\nnot actually factually correct,", "start": 5294.9, "duration": 2.63}, {"text": "but the one if by land and\nthe two if by sea code were", "start": 5297.53, "duration": 4.23}, {"text": "sort of an example of a one-time code.", "start": 5301.76, "duration": 1.86}, {"text": "Because if the revolutionaries in\nthe American Revolution kind of", "start": 5303.62, "duration": 3.78}, {"text": "decided secretly among themselves\nliterally that-- we will put up one", "start": 5307.4, "duration": 3.57}, {"text": "light at the top of a church if\nthe British are coming by land.", "start": 5310.97, "duration": 3.61}, {"text": "And we will instead use two if the\nBritish are instead coming by sea.", "start": 5314.58, "duration": 3.11}, {"text": "Like that is a code.", "start": 5317.69, "duration": 1.16}, {"text": "And you could write it down in a\nbook, unless you have a code book.", "start": 5318.85, "duration": 2.9}, {"text": "But of course, as soon as\nsomeone figures out that pattern,", "start": 5321.75, "duration": 2.75}, {"text": "it's compromised.", "start": 5324.5, "duration": 1.17}, {"text": "And so code books tend not to\nbe the most robust mechanisms", "start": 5325.67, "duration": 3.48}, {"text": "for encoding information.", "start": 5329.15, "duration": 2.43}, {"text": "Instead, it's better to use\nsomething more algorithmic.", "start": 5331.58, "duration": 3.15}, {"text": "And wonderfully, in computer\nscience is this black box", "start": 5334.73, "duration": 2.25}, {"text": "to-- we keep saying,\nthe home of algorithms.", "start": 5336.98, "duration": 2.82}, {"text": "And in general, encryption is a\nproblem with inputs and outputs,", "start": 5339.8, "duration": 4.14}, {"text": "but we just need one more input.", "start": 5343.94, "duration": 1.94}, {"text": "The input is what's generally\ncalled the key, or a secret.", "start": 5345.88, "duration": 3.2}, {"text": "And a secret might just be a number.", "start": 5349.08, "duration": 2.37}, {"text": "So for instance, if I\nwanted my secret to be 1,", "start": 5351.45, "duration": 2.23}, {"text": "because we'll keep the example simple,\nbut it could really be any number.", "start": 5353.68, "duration": 3.05}, {"text": "And indeed, we saw with the\nphotograph a moment ago,", "start": 5356.73, "duration": 1.97}, {"text": "the Germans used much larger than\nthis, albeit in the context of codes.", "start": 5358.7, "duration": 2.95}, {"text": "Suppose that you now want to send\na more private message to someone", "start": 5361.65, "duration": 3.08}, {"text": "across the room in a\nclass that, I love you.", "start": 5364.73, "duration": 2.07}, {"text": "How do you go about encoding that\nin a way that isn't just using Ascii", "start": 5366.8, "duration": 4.32}, {"text": "and isn't just using\nsome simple code book?", "start": 5371.12, "duration": 1.95}, {"text": "Well, let me propose that now that we\nunderstand how strings are represented,", "start": 5373.07, "duration": 4.42}, {"text": "right-- we're about to make love\nreally, really lame and geeky--", "start": 5377.49, "duration": 3.68}, {"text": "so now that you know how to\nexpress strings computationally,", "start": 5381.17, "duration": 3.78}, {"text": "well, let's just start\nrepresenting \"I love you\" in Ascii.", "start": 5384.95, "duration": 2.76}, {"text": "So I is 73.", "start": 5387.71, "duration": 1.44}, {"text": "L is 76.", "start": 5389.15, "duration": 1.47}, {"text": "O-V-E Y-O-U. That's just Ascii.", "start": 5390.62, "duration": 2.7}, {"text": "Should not send it this\nway, because anyone", "start": 5393.32, "duration": 1.86}, {"text": "who knows Ascii is going\nto know what you're saying.", "start": 5395.18, "duration": 3.06}, {"text": "But what if I enciphered this message,\nI performed an algorithm on it?", "start": 5398.24, "duration": 4.02}, {"text": "And at its simplest,\nan algorithm can just", "start": 5402.26, "duration": 2.04}, {"text": "be math-- simple\narithmetic, as we've seen.", "start": 5404.3, "duration": 2.29}, {"text": "So you know, let me just\nuse my secret key of 1.", "start": 5406.59, "duration": 2.69}, {"text": "And let me make sure that my crush knows\nthat I am using a secret value of 1.", "start": 5409.28, "duration": 5.67}, {"text": "So he or she also knows\nto expect that value.", "start": 5414.95, "duration": 2.73}, {"text": "And before I send my message, I'm\ngoing to add 1 to every letter.", "start": 5417.68, "duration": 3.96}, {"text": "So 73 becomes 74.", "start": 5421.64, "duration": 1.77}, {"text": "76 becomes 77.", "start": 5423.41, "duration": 1.47}, {"text": "80, 87, 70, 90, 80, 86.", "start": 5424.88, "duration": 4.68}, {"text": "Now this could just\nbe sent in the clear.", "start": 5429.56, "duration": 2.29}, {"text": "But then, I could actually\nsend it as a textual message.", "start": 5431.85, "duration": 3.6}, {"text": "So let's convert it back to Ascii.", "start": 5435.45, "duration": 1.64}, {"text": "74 is now J. 77 is now M. 80 is now P.\nAnd you can perhaps see the pattern.", "start": 5437.09, "duration": 8.55}, {"text": "This message was, I love you.", "start": 5445.64, "duration": 2.55}, {"text": "And now, all of the letters\nare off by one, I think.", "start": 5448.19, "duration": 4.55}, {"text": "I became J. L became M.\nO became P, and so forth.", "start": 5452.74, "duration": 4.96}, {"text": "So now the claim would\nbe, cryptographically, I'm", "start": 5457.7, "duration": 2.48}, {"text": "going to send this\nmessage across the room.", "start": 5460.18, "duration": 2.28}, {"text": "And now no one who has a code book\nis going to be able to solve this.", "start": 5462.46, "duration": 2.88}, {"text": "I can't just steal the\nbook and decode it,", "start": 5465.34, "duration": 1.75}, {"text": "because now the key is\nonly up here, so to speak.", "start": 5467.09, "duration": 2.81}, {"text": "It's just the number\n1 that he or she and I", "start": 5469.9, "duration": 2.13}, {"text": "had to agree upon in\nadvance that we would", "start": 5472.03, "duration": 1.89}, {"text": "use for sending our secret messages.", "start": 5473.92, "duration": 1.75}, {"text": "So if someone captures this message,\nteacher in the room or whoever,", "start": 5475.67, "duration": 4.79}, {"text": "how would they even go about\ndecoding this or decrypting it?", "start": 5480.46, "duration": 5.59}, {"text": "Are there any techniques\navailable to them?", "start": 5486.05, "duration": 3.9}, {"text": "I daresay we can kind of\nchip away at this love note.", "start": 5489.95, "duration": 2.64}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 5492.59, "duration": 0.39}, {"text": "DAVID J. MALAN: What's that?", "start": 5492.98, "duration": 0.78}, {"text": "Guess and check.", "start": 5493.76, "duration": 0.73}, {"text": "OK, we could try all--", "start": 5494.49, "duration": 0.99}, {"text": "there still kind of some spacing.", "start": 5495.48, "duration": 1.38}, {"text": "So you know honestly, we could do\nlike kind of a cryptanalysis of it,", "start": 5496.86, "duration": 3.57}, {"text": "a frequency attack.", "start": 5500.43, "duration": 1.26}, {"text": "Like, I can't think of\ntoo many words in English", "start": 5501.69, "duration": 2.09}, {"text": "that have a single letter in them.", "start": 5503.78, "duration": 1.42}, {"text": "So what does J probably represent?", "start": 5505.2, "duration": 1.39}, {"text": "[INTERPOSING VOICES]", "start": 5506.59, "duration": 0.83}, {"text": "DAVID J. MALAN: I, probably.", "start": 5507.42, "duration": 1.23}, {"text": "Maybe A, but probably I. And\nthere's not too many other options.", "start": 5508.65, "duration": 3.4}, {"text": "So we've attacked one part\nof the message already.", "start": 5512.05, "duration": 3.02}, {"text": "I see a commonality.", "start": 5515.07, "duration": 1.32}, {"text": "There's two what in here?", "start": 5516.39, "duration": 2.78}, {"text": "Two P. And I don't necessarily\nknow that that maps to O, but I do", "start": 5519.17, "duration": 3.63}, {"text": "know it's the same character.", "start": 5522.8, "duration": 1.93}, {"text": "So if I kind of continue this thoughtful\nprocess or this trial and error,", "start": 5524.73, "duration": 4.21}, {"text": "and I figure out, oh,\nwhat if that's an O?", "start": 5528.94, "duration": 1.75}, {"text": "And then that's an O.\nAnd then wait a minute.", "start": 5530.69, "duration": 1.68}, {"text": "They're passing from one to another.", "start": 5532.37, "duration": 1.56}, {"text": "Maybe this says, I love you.", "start": 5533.93, "duration": 1.17}, {"text": "Like you actually can,\nwith some probability,", "start": 5535.1, "duration": 2.58}, {"text": "decrypt a message by doing\nthis kind of analysis on it.", "start": 5537.68, "duration": 3.25}, {"text": "It's at least more secure\nthan the code book,", "start": 5540.93, "duration": 1.88}, {"text": "because you're not compromised\nif the book itself is stolen.", "start": 5542.81, "duration": 2.55}, {"text": "And you can change the key\nevery time, so long as you", "start": 5545.36, "duration": 2.88}, {"text": "and the recipient actually\nagree on something.", "start": 5548.24, "duration": 2.41}, {"text": "But at least we now have\nthis mechanism in place.", "start": 5550.65, "duration": 2.84}, {"text": "So with just the understanding\nof what you can do with strings,", "start": 5553.49, "duration": 3.24}, {"text": "can you actually now do really\ninteresting domain-specific things", "start": 5556.73, "duration": 3.03}, {"text": "to them?", "start": 5559.76, "duration": 0.61}, {"text": "And in fact, back in the day, Caesar,\nback in militaristic times literally", "start": 5560.37, "duration": 5.12}, {"text": "used a cipher quite like this.", "start": 5565.49, "duration": 1.76}, {"text": "And frankly, when you're the\nfirst one to use these ciphers,", "start": 5567.25, "duration": 2.5}, {"text": "they actually are kind of secure,\neven if they're relatively simple.", "start": 5569.75, "duration": 2.83}, {"text": "But hopefully, not just using a\nkey of 1, maybe 2, or 13, or 25,", "start": 5572.58, "duration": 4.67}, {"text": "or something larger.", "start": 5577.25, "duration": 1.11}, {"text": "But this is an example\nof a substitution cipher,", "start": 5578.36, "duration": 3.33}, {"text": "or a rotational cipher where\neverything's kind of rotating--", "start": 5581.69, "duration": 2.85}, {"text": "A's becoming B, B's becoming\nC. Or you can kind of", "start": 5584.54, "duration": 3.33}, {"text": "rotate it even further than that.", "start": 5587.87, "duration": 3.19}, {"text": "Well, let's take a look\nat one last example here", "start": 5591.06, "duration": 3.29}, {"text": "of just one other final\nprimitive of a feature", "start": 5594.35, "duration": 2.76}, {"text": "today, before we then go back high\nlevel to bring everything together.", "start": 5597.11, "duration": 3.72}, {"text": "It turns out that printing\nout error messages", "start": 5600.83, "duration": 2.55}, {"text": "is not the only way to signal\nthat something has gone wrong.", "start": 5603.38, "duration": 3.68}, {"text": "There's a new keyword, a new use\nof an old keyword in this example,", "start": 5607.06, "duration": 4.83}, {"text": "that's actually a convention\nfor signaling errors.", "start": 5611.89, "duration": 2.09}, {"text": "So this is an example called exit.c.", "start": 5613.98, "duration": 2.57}, {"text": "It apparently wants the human to do\nwhat, if you infer from the code?", "start": 5616.55, "duration": 5.86}, {"text": "AUDIENCE: Exit [INAUDIBLE].", "start": 5622.41, "duration": 1.13}, {"text": "DAVID J. MALAN: Yes.", "start": 5623.54, "duration": 0.49}, {"text": "Say again?", "start": 5624.03, "duration": 0.55}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 5624.58, "duration": 0.88}, {"text": "DAVID J. MALAN: Well, it\nwants the-- well, what", "start": 5625.46, "duration": 1.95}, {"text": "does it what the human to do\nimplicitly, based on the printf's here?", "start": 5627.41, "duration": 3.7}, {"text": "How should I run this program?", "start": 5631.11, "duration": 2.3}, {"text": "Yeah?", "start": 5633.41, "duration": 0.58}, {"text": "AUDIENCE: [INAUDIBLE]\njust apply [INAUDIBLE]..", "start": 5633.99, "duration": 2.78}, {"text": "DAVID J. MALAN: Yeah.", "start": 5636.77, "duration": 0.88}, {"text": "So for whatever reason,\nthis program implicitly", "start": 5637.65, "duration": 2.76}, {"text": "wants me to write exactly\ntwo words at the prompt.", "start": 5640.41, "duration": 2.67}, {"text": "Because if I don't, it's going to yell\nat me, missing command line argument.", "start": 5643.08, "duration": 3.42}, {"text": "And then it's going to\nreturn 1, whatever that is.", "start": 5646.5, "duration": 2.13}, {"text": "Otherwise, it's going to\nsay, Hello, such and such.", "start": 5648.63, "duration": 2.22}, {"text": "So if I actually run this program--", "start": 5650.85, "duration": 1.83}, {"text": "let me go back over\nhere and do make exit--", "start": 5652.68, "duration": 4.4}, {"text": "oops-- in my directory, make exit.", "start": 5657.08, "duration": 2.83}, {"text": "OK, dot slash exit, enter, I'm\nmissing a command line argument.", "start": 5659.91, "duration": 3.99}, {"text": "All right, let me put Zamyla's name.", "start": 5663.9, "duration": 1.5}, {"text": "Oh, Hello Zamyla.", "start": 5665.4, "duration": 0.7}, {"text": "Let me put Zamyla Chan.", "start": 5666.1, "duration": 1.9}, {"text": "Nope, missing command line argument.", "start": 5668.0, "duration": 1.5}, {"text": "It just wants the one,\nso in this case here.", "start": 5669.5, "duration": 4.03}, {"text": "I'm seeing visually the error\nmessage, but it turns out", "start": 5673.53, "duration": 2.85}, {"text": "the computer is also signaling to\nme what the so-called exit code is.", "start": 5676.38, "duration": 5.13}, {"text": "So long story short, we've already\nseen examples last week of how", "start": 5681.51, "duration": 3.0}, {"text": "you can have a function return a value.", "start": 5684.51, "duration": 1.68}, {"text": "And we saw how [? Erin ?]\ncame up on stage,", "start": 5686.19, "duration": 1.8}, {"text": "and she returned to me a piece\nof paper with a string on it.", "start": 5687.99, "duration": 2.49}, {"text": "But it turns out that\nmain is a little special.", "start": 5690.48, "duration": 2.34}, {"text": "If main returns a value like 1\nor 0, you can actually see that,", "start": 5692.82, "duration": 6.0}, {"text": "albeit in a kind of a non-obvious way.", "start": 5698.82, "duration": 2.97}, {"text": "If I run exit, and I run it\ncorrectly with Zamyla as the name,", "start": 5701.79, "duration": 5.13}, {"text": "if I then type echo, dollar sign,\nquestion mark, of all things,", "start": 5706.92, "duration": 3.99}, {"text": "enter, I will then see exactly what main\nreturned with, which in this case is 0.", "start": 5710.91, "duration": 5.08}, {"text": "Now, let me try and be uncooperative.", "start": 5715.99, "duration": 1.55}, {"text": "If I actually run just dot\nslash exit, with no word,", "start": 5717.54, "duration": 6.03}, {"text": "I see, missing command line argument.", "start": 5723.57, "duration": 1.66}, {"text": "But if I do the same cryptic command,\necho, dollar sign, question mark,", "start": 5725.23, "duration": 3.8}, {"text": "I see that main exited with 1.", "start": 5729.03, "duration": 1.89}, {"text": "Now, why is this useful?", "start": 5730.92, "duration": 1.28}, {"text": "Well, as we start to write\nmore complicated programs,", "start": 5732.2, "duration": 3.44}, {"text": "it's going to be a convention\nto exit from main by returning", "start": 5735.64, "duration": 3.68}, {"text": "a non-zero value, if\nanything goes wrong.", "start": 5739.32, "duration": 2.7}, {"text": "0 happens to mean everything went well.", "start": 5742.02, "duration": 2.33}, {"text": "And in fact, in all\nof the programs we've", "start": 5744.35, "duration": 1.72}, {"text": "written thus far, if you\ndon't mention return anything,", "start": 5746.07, "duration": 3.69}, {"text": "main automatically for you returns 0.", "start": 5749.76, "duration": 4.14}, {"text": "And it has been all this time.", "start": 5753.9, "duration": 1.26}, {"text": "It's just a feature, so you don't\nhave to bother typing it yourself.", "start": 5755.16, "duration": 2.83}, {"text": "But what's nice about this,\nor what's real about this,", "start": 5757.99, "duration": 2.74}, {"text": "is if on your Mac or PC, if you've ever\ngotten an annoying error message that", "start": 5760.73, "duration": 3.52}, {"text": "says, error negative 29, system error\nhas occurred, or something freezes,", "start": 5764.25, "duration": 4.53}, {"text": "but you very often see\nnumbers on the screen, maybe.", "start": 5768.78, "duration": 2.73}, {"text": "Like those error codes actually tend\nto map to these kinds of values.", "start": 5771.51, "duration": 3.79}, {"text": "So when a human is writing\nsoftware and something goes wrong", "start": 5775.3, "duration": 2.99}, {"text": "and an error happens, they\ntypically return a value like this.", "start": 5778.29, "duration": 3.0}, {"text": "And the computer has access to it.", "start": 5781.29, "duration": 1.95}, {"text": "And this isn't all that useful\nfor the human running the program.", "start": 5783.24, "duration": 2.71}, {"text": "But as your programs\nget more complex, we'll", "start": 5785.95, "duration": 2.0}, {"text": "see that this is actually quite\nuseful as a way of signaling", "start": 5787.95, "duration": 4.08}, {"text": "that something indeed went wrong.", "start": 5792.03, "duration": 2.43}, {"text": "Whew.", "start": 5794.46, "duration": 0.5}, {"text": "OK, that's a lot of syntax\nwrapped in some loving context.", "start": 5794.96, "duration": 6.28}, {"text": "Any questions before we\nlook at one final domain?", "start": 5801.24, "duration": 3.59}, {"text": "No?", "start": 5804.83, "duration": 0.71}, {"text": "All right.", "start": 5805.54, "duration": 0.63}, {"text": "So it turns out that we can answer the\n\"who cares\" question in yet another way", "start": 5806.17, "duration": 5.79}, {"text": "too.", "start": 5811.96, "duration": 0.81}, {"text": "It turns out-- let me go ahead and open\nup an example of our array again here--", "start": 5812.77, "duration": 6.75}, {"text": "that arrays can actually now be used\nto solve problems more algorithmically.", "start": 5819.52, "duration": 3.63}, {"text": "And this is where life\ngets more interesting.", "start": 5823.15, "duration": 1.88}, {"text": "Like we were so incredibly\nin the weeds today.", "start": 5825.03, "duration": 1.81}, {"text": "And as we move forward\nin the class, we're", "start": 5826.84, "duration": 1.75}, {"text": "not going to spend so\nmuch time on syntax,", "start": 5828.59, "duration": 1.76}, {"text": "and dollar signs, and question marks,\nand square brackets, and the like.", "start": 5830.35, "duration": 3.0}, {"text": "That's not the interesting part.", "start": 5833.35, "duration": 1.14}, {"text": "The interesting part is when we\nnow have these fundamental building", "start": 5834.49, "duration": 2.79}, {"text": "blocks, like an array, with\nwhich we can solve problems.", "start": 5837.28, "duration": 3.54}, {"text": "So it turns out that\nan array, you know, you", "start": 5840.82, "duration": 2.82}, {"text": "can kind of think of it\nas a series of lockers,", "start": 5843.64, "duration": 2.61}, {"text": "a series of lockers that might\nlook like this, inside of which", "start": 5846.25, "duration": 3.15}, {"text": "are values-- strings, or\nnumbers, or chars, or whatnot.", "start": 5849.4, "duration": 3.22}, {"text": "But the lockers is an apt metaphor\nbecause a computer, unlike us humans,", "start": 5852.62, "duration": 3.47}, {"text": "can only see and do one thing at a time.", "start": 5856.09, "duration": 2.43}, {"text": "It can open one locker and look\ninside, but it can't kind of", "start": 5858.52, "duration": 2.61}, {"text": "take a step back, like we humans\ncan, and look at all of the lockers,", "start": 5861.13, "duration": 3.63}, {"text": "even if all of the doors are open.", "start": 5864.76, "duration": 1.69}, {"text": "So it has to be a more\ndeliberate act than that.", "start": 5866.45, "duration": 2.72}, {"text": "So what are the actual implications?", "start": 5869.17, "duration": 1.89}, {"text": "Well, all this time--", "start": 5871.06, "duration": 1.65}, {"text": "we had that phone book\nexample in the first week,", "start": 5872.71, "duration": 2.4}, {"text": "and the efficiency of that algorithm, of\nfinding Mike Smith in this phone book,", "start": 5875.11, "duration": 4.26}, {"text": "all assumed what feature\nof this phone book?", "start": 5879.37, "duration": 2.75}, {"text": "AUDIENCE: That it's\nordered alphabetically.", "start": 5882.12, "duration": 1.8}, {"text": "DAVID J. MALAN: That it\nwas ordered alphabetically.", "start": 5883.92, "duration": 1.44}, {"text": "And that was a huge plus, because\nthen I could go to the middle,", "start": 5885.36, "duration": 2.91}, {"text": "and I could go to the middle\nof the middle, and so forth.", "start": 5888.27, "duration": 2.07}, {"text": "And that was an algorithmic possibility.", "start": 5890.34, "duration": 1.67}, {"text": "On our phones, if you\npull up your contacts,", "start": 5892.01, "duration": 1.84}, {"text": "you've got a list of first names, or\nlast names, all alphabetically sorted.", "start": 5893.85, "duration": 3.3}, {"text": "That is because, guess what\ndata structure or layout", "start": 5897.15, "duration": 3.27}, {"text": "your phone probably uses\nto store your contacts?", "start": 5900.42, "duration": 4.03}, {"text": "It's an array of some sort, right?", "start": 5904.45, "duration": 1.93}, {"text": "It's just a list.", "start": 5906.38, "duration": 0.75}, {"text": "And it might be displayed\nvertically, instead of horizontally,", "start": 5907.13, "duration": 2.37}, {"text": "as I've been drawing it today.", "start": 5909.5, "duration": 1.05}, {"text": "But it's just values that are back,\nto back, to back, to back, to back,", "start": 5910.55, "duration": 2.95}, {"text": "that are actually sorted.", "start": 5913.5, "duration": 1.22}, {"text": "But how did they actually\nget into that sorted order?", "start": 5914.72, "duration": 2.49}, {"text": "And how do you actually find values?", "start": 5917.21, "duration": 1.63}, {"text": "Well, let's consider what\nthis problem is actually", "start": 5918.84, "duration": 2.09}, {"text": "like for a computer, as follows.", "start": 5920.93, "duration": 2.14}, {"text": "Let me go ahead here.", "start": 5923.07, "duration": 1.46}, {"text": "Would a volunteer mind\njoining us up here?", "start": 5924.53, "duration": 3.31}, {"text": "I can throw in a free stress ball.", "start": 5927.84, "duration": 2.11}, {"text": "OK, someone from the back?", "start": 5929.95, "duration": 1.45}, {"text": "OK, come on up here.", "start": 5931.4, "duration": 0.84}, {"text": "Come on.", "start": 5932.24, "duration": 0.7}, {"text": "What's your name?", "start": 5932.94, "duration": 0.71}, {"text": "ERIC: Eric.", "start": 5933.65, "duration": 0.95}, {"text": "DAVID J. MALAN: Aaron.", "start": 5934.6, "duration": 1.01}, {"text": "All right.", "start": 5935.61, "duration": 0.5}, {"text": "So Aaron's going to come on up.", "start": 5936.11, "duration": 1.56}, {"text": "And--", "start": 5937.67, "duration": 0.88}, {"text": "ERIC: Eric.", "start": 5938.55, "duration": 0.68}, {"text": "DAVID J. MALAN: I'm sorry?", "start": 5939.23, "duration": 0.45}, {"text": "Oh, Eric.", "start": 5939.68, "duration": 0.78}, {"text": "Nice to meet you.", "start": 5940.46, "duration": 0.97}, {"text": "All right.", "start": 5941.43, "duration": 0.5}, {"text": "Come on over here.", "start": 5941.93, "duration": 0.74}, {"text": "So Eric, now normally, I would\nask you to find the number 23.", "start": 5942.67, "duration": 2.77}, {"text": "But seeing is that's a little easy,\ncan you go ahead and just find us", "start": 5945.44, "duration": 2.87}, {"text": "the number 50 behind these doors,\nor really these yellow lockers?", "start": 5948.31, "duration": 3.11}, {"text": "8?", "start": 5951.42, "duration": 0.5}, {"text": "Nope.", "start": 5951.92, "duration": 0.77}, {"text": "42?", "start": 5952.69, "duration": 0.5}, {"text": "Nope.", "start": 5953.19, "duration": 0.5}, {"text": "OK.", "start": 5953.69, "duration": 0.61}, {"text": "Pretty good.", "start": 5954.3, "duration": 0.5}, {"text": "That's three, three out of seven.", "start": 5954.8, "duration": 1.5}, {"text": "How did you get it so quickly?", "start": 5956.3, "duration": 1.44}, {"text": "ERIC: I guessed.", "start": 5957.74, "duration": 0.92}, {"text": "DAVID J. MALAN: OK, so he guessed.", "start": 5958.66, "duration": 1.57}, {"text": "Is that the best algorithm\nthat Eric could have used here?", "start": 5960.23, "duration": 4.48}, {"text": "ERIC: Probably not.", "start": 5964.71, "duration": 1.5}, {"text": "DAVID J. MALAN: Well, I don't know.", "start": 5966.21, "duration": 1.59}, {"text": "Yes?", "start": 5967.8, "duration": 0.49}, {"text": "No?", "start": 5968.29, "duration": 0.57}, {"text": "AUDIENCE: Yeah.", "start": 5968.86, "duration": 0.35}, {"text": "DAVID J. MALAN: Why?", "start": 5969.21, "duration": 0.83}, {"text": "Why yes?", "start": 5970.04, "duration": 0.75}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 5970.79, "duration": 0.88}, {"text": "DAVID J. MALAN: He has\nno other information.", "start": 5971.67, "duration": 1.22}, {"text": "So yes, like that was\nthe best you can do.", "start": 5972.89, "duration": 1.42}, {"text": "But let me give you a\nlittle more information.", "start": 5974.31, "duration": 1.32}, {"text": "You can stay here.", "start": 5975.63, "duration": 1.09}, {"text": "And let me go ahead and\nreload the screen here.", "start": 5976.72, "duration": 3.84}, {"text": "And let me go ahead and pull\nup a different set of doors.", "start": 5980.56, "duration": 3.02}, {"text": "And now suppose that, much like the\nphone book, and much like the phones", "start": 5983.58, "duration": 3.15}, {"text": "are sorted, now these doors are sorted.", "start": 5986.73, "duration": 2.28}, {"text": "And find us the number 50.", "start": 5989.01, "duration": 2.45}, {"text": "All right.", "start": 5994.36, "duration": 0.5}, {"text": "So good.", "start": 5994.86, "duration": 0.9}, {"text": "What did you do that time?", "start": 5995.76, "duration": 1.28}, {"text": "AUDIENCE: Well, [INAUDIBLE].", "start": 5997.04, "duration": 2.38}, {"text": "It was 50 is 116.", "start": 5999.42, "duration": 1.23}, {"text": "So I just--", "start": 6000.65, "duration": 0.75}, {"text": "DAVID J. MALAN: Right.", "start": 6001.4, "duration": 0.92}, {"text": "So you jumped to the middle,\ninitially, and then to the right half.", "start": 6002.32, "duration": 5.25}, {"text": "And then technically-- so we're\ntechnically off by 1, right?", "start": 6007.57, "duration": 2.57}, {"text": "Because like binary search would\nhave gone to the middle of the--", "start": 6010.14, "duration": 2.71}, {"text": "that's OK, but very well done to Eric.", "start": 6012.85, "duration": 1.99}, {"text": "Here, let me at least reinforce\nthis with a stress ball.", "start": 6014.84, "duration": 4.13}, {"text": "So thank you.", "start": 6018.97, "duration": 1.35}, {"text": "Very well done.", "start": 6020.32, "duration": 0.79}, {"text": "So with that additional\ninformation, as you know,", "start": 6021.11, "duration": 2.39}, {"text": "Eric was able to do better because the\ninformation was sorted on the screen.", "start": 6023.5, "duration": 3.99}, {"text": "But he only had one insight\nto a locker at a time,", "start": 6027.49, "duration": 3.0}, {"text": "because only by revealing what's\ninside can he actually see it.", "start": 6030.49, "duration": 3.22}, {"text": "So this seems to\nsuggest that once you do", "start": 6033.71, "duration": 2.27}, {"text": "have this additional information in\nEric's example, in your phone example,", "start": 6035.98, "duration": 3.09}, {"text": "in the phone book example, you open up\npossibilities for much much, much more", "start": 6039.07, "duration": 5.37}, {"text": "efficient algorithms.", "start": 6044.44, "duration": 1.44}, {"text": "But to get there, we've kind of been\ndeferring this whole time in class", "start": 6045.88, "duration": 4.5}, {"text": "how you actually sort these elements.", "start": 6050.38, "duration": 3.01}, {"text": "And if you wouldn't mind-- and this way,\nwe'll hopefully end on a more energized", "start": 6053.39, "duration": 3.53}, {"text": "note here because I know we've\nbeen in the weeds for a while--", "start": 6056.92, "duration": 2.78}, {"text": "can we get like eight volunteers?", "start": 6059.7, "duration": 2.57}, {"text": "OK, so 1, 2, 3, 4-- how about\n5, 6, 7, 8, come on down.", "start": 6062.27, "duration": 7.03}, {"text": "Oh, I'm sorry.", "start": 6069.3, "duration": 0.59}, {"text": "Did I completely overlook the front row?", "start": 6069.89, "duration": 2.01}, {"text": "OK.", "start": 6071.9, "duration": 0.5}, {"text": "All right, next time.", "start": 6072.4, "duration": 0.87}, {"text": "Next time.", "start": 6073.27, "duration": 0.9}, {"text": "Come on down.", "start": 6074.17, "duration": 0.63}, {"text": "Oh, and Colton, do you mind\nmeeting them over there instead?", "start": 6080.56, "duration": 3.42}, {"text": "All right.", "start": 6083.98, "duration": 1.19}, {"text": "Come on up.", "start": 6085.17, "duration": 0.83}, {"text": "What's your name?", "start": 6086.0, "duration": 0.71}, {"text": "[? CAHMY: ?] [? Cahmy. ?]", "start": 6086.71, "duration": 0.96}, {"text": "DAVID J. MALAN: [? Cahmy? ?] David.", "start": 6087.67, "duration": 0.87}, {"text": "Right over there.", "start": 6088.54, "duration": 0.57}, {"text": "What's your name?", "start": 6089.11, "duration": 0.28}, {"text": "MATT: Matt.", "start": 6089.39, "duration": 0.4}, {"text": "DAVID J. MALAN: Matt?", "start": 6089.79, "duration": 0.25}, {"text": "David.", "start": 6090.04, "duration": 0.84}, {"text": "[? JUHE: ?] [? Juhe. ?]", "start": 6090.88, "duration": 0.48}, {"text": "DAVID J. MALAN: [? Juhe? ?] David.", "start": 6091.36, "duration": 0.91}, {"text": "MAX: Max.", "start": 6092.27, "duration": 0.35}, {"text": "DAVID J. MALAN: Max, nice to meet you.", "start": 6092.62, "duration": 1.28}, {"text": "JAMES: James.", "start": 6093.9, "duration": 0.45}, {"text": "DAVID J. MALAN: James, nice to see you.", "start": 6094.35, "duration": 1.28}, {"text": "Here, I'll get more chairs.", "start": 6095.63, "duration": 1.07}, {"text": "What's your name?", "start": 6096.7, "duration": 0.33}, {"text": ",PEYTON: Peyton.", "start": 6097.03, "duration": 0.57}, {"text": "DAVID J. MALAN: Peyton?", "start": 6097.6, "duration": 0.45}, {"text": "David.", "start": 6098.05, "duration": 0.84}, {"text": "And two more.", "start": 6098.89, "duration": 1.29}, {"text": "Actually can what have you\ncome down to this end here?", "start": 6100.18, "duration": 2.25}, {"text": "What's your name.", "start": 6102.43, "duration": 0.7}, {"text": "ANDREA: Andrea.", "start": 6103.13, "duration": 0.67}, {"text": "DAVID J. MALAN: Andrea, nice to see you.", "start": 6103.8, "duration": 1.85}, {"text": "And your name?", "start": 6105.65, "duration": 0.59}, {"text": "[? PICCO: ?] [? Picco. ?]", "start": 6106.24, "duration": 0.7}, {"text": "DAVID J. MALAN: [? Picco, ?] David.", "start": 6106.94, "duration": 0.93}, {"text": "Nice to see you.", "start": 6107.87, "duration": 0.66}, {"text": "OK, Colton has a T-shirt for each\nof you, very Harvard-esque here.", "start": 6108.53, "duration": 5.9}, {"text": "And each of these shirts, as you're\nabout to see, has a number on it.", "start": 6114.43, "duration": 3.4}, {"text": "And that number is--", "start": 6117.83, "duration": 3.02}, {"text": "well, go ahead put them\non, if you wouldn't mind.", "start": 6120.85, "duration": 2.05}, {"text": "OK, thank you so much.", "start": 6126.42, "duration": 1.16}, {"text": "So I daresay we've arranged our humans\nmuch like the lockers in an array.", "start": 6127.58, "duration": 3.66}, {"text": "Like we have humans back,\nto back, to back, to back.", "start": 6131.24, "duration": 2.55}, {"text": "But this is actually both a\nblessing and a constraint,", "start": 6133.79, "duration": 3.42}, {"text": "because we only have eight chairs.", "start": 6137.21, "duration": 1.71}, {"text": "So there's really not much room here, so\nwe're confined to just this space here.", "start": 6138.92, "duration": 3.81}, {"text": "And I see we have a 4,\n8, 5, 2, 3, 1, 6, 7.", "start": 6142.73, "duration": 3.16}, {"text": "So this is great.", "start": 6145.89, "duration": 0.95}, {"text": "Like they are unsorted.", "start": 6146.84, "duration": 1.17}, {"text": "By definition, it's pretty random.", "start": 6148.01, "duration": 1.62}, {"text": "So that's great.", "start": 6149.63, "duration": 0.67}, {"text": "So let's just start off like this.", "start": 6150.3, "duration": 1.41}, {"text": "Sort yourselves from 1 to 8, please.", "start": 6151.71, "duration": 1.52}, {"text": "OK.", "start": 6162.28, "duration": 0.51}, {"text": "All right.", "start": 6162.79, "duration": 0.5}, {"text": "Well, what algorithm was that?", "start": 6163.29, "duration": 2.21}, {"text": "[LAUGHTER]", "start": 6165.5, "duration": 0.9}, {"text": "AUDIENCE: Look around, figure it out.", "start": 6166.4, "duration": 1.55}, {"text": "DAVID J. MALAN: Look\naround, figure it out.", "start": 6167.95, "duration": 1.26}, {"text": "OK, well--", "start": 6169.21, "duration": 0.6}, {"text": "MATT: Human ingenuity.", "start": 6169.81, "duration": 0.81}, {"text": "DAVID J. MALAN: Human ingenuity?", "start": 6170.62, "duration": 0.88}, {"text": "Very well done.", "start": 6171.5, "duration": 0.83}, {"text": "So can we-- well, what\nwas like a thought", "start": 6172.33, "duration": 2.37}, {"text": "going through any of your minds?", "start": 6174.7, "duration": 1.72}, {"text": "MATT: Find a chair and sit down.", "start": 6176.42, "duration": 1.34}, {"text": "DAVID J. MALAN: Find the chair--", "start": 6177.76, "duration": 0.96}, {"text": "find the right chair.", "start": 6178.72, "duration": 0.87}, {"text": "So go to a location.", "start": 6179.59, "duration": 1.12}, {"text": "Good.", "start": 6180.71, "duration": 0.5}, {"text": "So like an index location, right?", "start": 6181.21, "duration": 1.68}, {"text": "Arrays have indices, so to spea--", "start": 6182.89, "duration": 1.86}, {"text": "0, 1, 2, all the way up to 7.", "start": 6184.75, "duration": 3.03}, {"text": "And even though our shirts\nare numbered from 1 to 8,", "start": 6187.78, "duration": 2.53}, {"text": "you can think in terms of 0 to 7.", "start": 6190.31, "duration": 1.47}, {"text": "So that was good.", "start": 6191.78, "duration": 0.53}, {"text": "Anyone else?", "start": 6192.31, "duration": 0.5}, {"text": "Other thoughts?", "start": 6192.81, "duration": 1.72}, {"text": "[? CAHMY: ?] I mean, this is\nsomething we implicitly think of,", "start": 6194.53, "duration": 3.16}, {"text": "but no one told us that it\nwas ordered right to left.", "start": 6197.69, "duration": 1.62}, {"text": "Like we could have\ndone it left to right.", "start": 6199.31, "duration": 1.57}, {"text": "DAVID J. MALAN: OK.", "start": 6200.88, "duration": 0.37}, {"text": "Absolutely.", "start": 6201.25, "duration": 0.48}, {"text": "Could have gone from right to\nleft, instead of left to right.", "start": 6201.73, "duration": 2.04}, {"text": "But at least we all\nagreed on this convention", "start": 6203.77, "duration": 1.48}, {"text": "too, so that was in your mind.", "start": 6205.25, "duration": 1.34}, {"text": "OK.", "start": 6206.59, "duration": 0.27}, {"text": "So good.", "start": 6206.86, "duration": 0.36}, {"text": "So we got this sorted.", "start": 6207.22, "duration": 0.87}, {"text": "Go ahead and re-randomize\nyourself, if you could.", "start": 6208.09, "duration": 2.04}, {"text": "And what algorithm was this?", "start": 6215.22, "duration": 2.44}, {"text": "Just random awkwardness?", "start": 6217.66, "duration": 1.32}, {"text": "OK, so that's fine.", "start": 6218.98, "duration": 0.81}, {"text": "So it looks pretty random.", "start": 6219.79, "duration": 1.47}, {"text": "That will do.", "start": 6221.26, "duration": 0.84}, {"text": "Let's see if we can now\nreduce the process of sorting", "start": 6222.1, "duration": 2.4}, {"text": "to something a little more algorithmic\nso that, one, we can be sure", "start": 6224.5, "duration": 2.8}, {"text": "we're correct and not just kind of get\nlucky that everyone kind of figured it", "start": 6227.3, "duration": 3.2}, {"text": "out and no one was\nleft out, and two, then", "start": 6230.5, "duration": 1.95}, {"text": "start to think about how\nefficient it is, right?", "start": 6232.45, "duration": 2.28}, {"text": "Because if we've been gaining so\nmuch efficiency for the phone book,", "start": 6234.73, "duration": 2.97}, {"text": "for our contacts, for\n[? error ?] coming up,", "start": 6237.7, "duration": 2.03}, {"text": "we really should have been\nasking the whole time,", "start": 6239.73, "duration": 2.05}, {"text": "sure, you save time with binary\nsearch and divide and conquer,", "start": 6241.78, "duration": 3.3}, {"text": "but how much did it cost\nyou to get to a point", "start": 6245.08, "duration": 3.03}, {"text": "where you can use binary\nsearch and divide and conquer?", "start": 6248.11, "duration": 2.64}, {"text": "Because sorting, if it's super, super,\nsuper expensive and time-consuming", "start": 6250.75, "duration": 3.41}, {"text": "maybe it's a net negative.", "start": 6254.16, "duration": 1.09}, {"text": "And you might as well just\nsearch the whole list,", "start": 6255.25, "duration": 2.04}, {"text": "rather than ever sort anything.", "start": 6257.29, "duration": 1.44}, {"text": "All right.", "start": 6258.73, "duration": 0.5}, {"text": "So let's see here.", "start": 6259.23, "duration": 1.69}, {"text": "6 and 5, I don't like this.", "start": 6260.92, "duration": 1.71}, {"text": "Why?", "start": 6262.63, "duration": 1.37}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 6264.0, "duration": 1.39}, {"text": "DAVID J. MALAN: 6 is\nsupposed to come after 5.", "start": 6265.39, "duration": 1.92}, {"text": "And so, can we fix this, please?", "start": 6267.31, "duration": 2.2}, {"text": "All right.", "start": 6269.51, "duration": 0.5}, {"text": "And then let's see.", "start": 6270.01, "duration": 0.79}, {"text": "OK, 6 and 1-- ugh,\ndon't really like this.", "start": 6270.8, "duration": 2.72}, {"text": "Yeah, can we fix this?", "start": 6273.52, "duration": 2.53}, {"text": "Very nice.", "start": 6276.05, "duration": 0.5}, {"text": "6 and 3, OK, you really got the\nshort end of the stick here.", "start": 6276.55, "duration": 3.15}, {"text": "So 6 and 3, could we fix this?", "start": 6279.7, "duration": 3.31}, {"text": "And 6-- yeah, OK.", "start": 6283.01, "duration": 1.58}, {"text": "Ooh, OK, 6 and 7-- good.", "start": 6284.59, "duration": 1.62}, {"text": "All right, so that's pretty good.", "start": 6286.21, "duration": 1.38}, {"text": "7 and 8, nice.", "start": 6287.59, "duration": 1.59}, {"text": "8 and 4, sorry.", "start": 6289.18, "duration": 0.82}, {"text": "Could we switch here?", "start": 6290.0, "duration": 2.64}, {"text": "All right.", "start": 6292.64, "duration": 0.5}, {"text": "And then 8 and 2?", "start": 6293.14, "duration": 1.3}, {"text": "OK, could we switch here?", "start": 6294.44, "duration": 1.56}, {"text": "OK.", "start": 6296.0, "duration": 0.5}, {"text": "And let me ask you a\nsomewhat rhetorical question.", "start": 6296.5, "duration": 2.08}, {"text": "OK, am I done?", "start": 6298.58, "duration": 1.54}, {"text": "OK, no.", "start": 6300.12, "duration": 0.64}, {"text": "Obviously not, but I did\nfix some problems, right?", "start": 6300.76, "duration": 2.82}, {"text": "I fixed some transpositions,\nnumbers being out of order.", "start": 6303.58, "duration": 2.8}, {"text": "And in fact, I-- what's your name again?", "start": 6306.38, "duration": 1.1}, {"text": "[? CAHMY: ?] [? Cahmy. ?]", "start": 6307.48, "duration": 0.79}, {"text": "DAVID J. MALAN: [? Cahmy, ?] kind of\nbubbled to the right here, if you will.", "start": 6308.27, "duration": 3.23}, {"text": "Like you were kind of farther\ndown, and now you're over here.", "start": 6311.5, "duration": 2.55}, {"text": "And like the smaller\nnumbers, kind of-- yeah 1.", "start": 6314.05, "duration": 2.88}, {"text": "Like, my god, like he kind\nof bubbled his way this way.", "start": 6316.93, "duration": 2.67}, {"text": "So things are percolating,\nin some sense.", "start": 6319.6, "duration": 1.98}, {"text": "And that's a good thing.", "start": 6321.58, "duration": 1.66}, {"text": "And so you know what?", "start": 6323.24, "duration": 1.11}, {"text": "Let Me try to fix some\nremaining problems.", "start": 6324.35, "duration": 1.82}, {"text": "So 1 and 5-- good.", "start": 6326.17, "duration": 1.16}, {"text": "Oh 3 and 5, could you switch?", "start": 6327.33, "duration": 2.23}, {"text": "5 and 6, OK.", "start": 6329.56, "duration": 2.22}, {"text": "6 and 7?", "start": 6331.78, "duration": 0.81}, {"text": "7 and 4, could you switch?", "start": 6332.59, "duration": 2.36}, {"text": "OK.", "start": 6334.95, "duration": 1.09}, {"text": "And 7 and 2, could you switch?", "start": 6336.04, "duration": 4.35}, {"text": "And now, I don't have to\nspeak with [? Cahmy ?] again,", "start": 6340.39, "duration": 2.31}, {"text": "because we know you're\nin the right place.", "start": 6342.7, "duration": 1.75}, {"text": "So I actually don't have\nto do quite as much work", "start": 6344.45, "duration": 2.04}, {"text": "this time, which is kind of nice.", "start": 6346.49, "duration": 1.56}, {"text": "But am I done?", "start": 6348.05, "duration": 1.19}, {"text": "No, obviously not.", "start": 6349.24, "duration": 1.32}, {"text": "But what's the pattern now?", "start": 6350.56, "duration": 1.8}, {"text": "Like what's the fundamental primitive?", "start": 6352.36, "duration": 1.59}, {"text": "If I just compare pairwise\nhumans and numbers,", "start": 6353.95, "duration": 3.24}, {"text": "I can slightly improve\nthe situation each time", "start": 6357.19, "duration": 2.37}, {"text": "by just swapping them, swapping them.", "start": 6359.56, "duration": 1.62}, {"text": "And each time now--", "start": 6361.18, "duration": 1.38}, {"text": "I'm sorry, [? Picco ?]\nis in number 7's place.", "start": 6362.56, "duration": 2.19}, {"text": "I don't have to talk to him\nanymore, because he's now bubbled", "start": 6364.75, "duration": 2.55}, {"text": "his way all the way up to the top.", "start": 6367.3, "duration": 1.34}, {"text": "So even though I'm doing the\nsame thing again and again,", "start": 6368.64, "duration": 2.33}, {"text": "and looping again and again\nisn't always the best thing,", "start": 6370.97, "duration": 2.45}, {"text": "so long as you're looping fewer and\nfewer times, I will eventually stop,", "start": 6373.42, "duration": 3.31}, {"text": "it would seem.", "start": 6376.73, "duration": 0.59}, {"text": "Because 6 is going to eventually\ngo in the right place, and then 5,", "start": 6377.32, "duration": 2.79}, {"text": "and then 4, and so forth.", "start": 6380.11, "duration": 1.15}, {"text": "So if we can just finish this algorithm.", "start": 6381.26, "duration": 1.25}, {"text": "Good.", "start": 6382.51, "duration": 1.76}, {"text": "Not good.", "start": 6384.27, "duration": 1.8}, {"text": "OK, 6 and 2, not good.", "start": 6386.07, "duration": 1.53}, {"text": "If you could swap?", "start": 6387.6, "duration": 1.36}, {"text": "OK, and what's your name again?", "start": 6388.96, "duration": 1.44}, {"text": "PEYTON: Peyton.", "start": 6390.4, "duration": 0.63}, {"text": "DAVID J. MALAN: Peyton is\nnow in the right place.", "start": 6391.03, "duration": 1.23}, {"text": "I have even less work now ahead of me.", "start": 6392.26, "duration": 1.72}, {"text": "So if I can just continue this process--", "start": 6393.98, "duration": 1.67}, {"text": "1 and 3, 3 and 5, 4 and\n5, OK, and then 2 and 5.", "start": 6395.65, "duration": 3.93}, {"text": "And then, what's your name again?", "start": 6399.58, "duration": 1.38}, {"text": "MATT: Matt.", "start": 6400.96, "duration": 0.48}, {"text": "DAVID J. MALAN: Matt is\nnow in the right place.", "start": 6401.44, "duration": 1.35}, {"text": "Even less work.", "start": 6402.79, "duration": 0.77}, {"text": "We're almost there.", "start": 6403.56, "duration": 0.79}, {"text": "1 and 3, 3 and 4, 4 and\n2, if you could swap.", "start": 6404.35, "duration": 3.36}, {"text": "OK, almost done.", "start": 6407.71, "duration": 0.93}, {"text": "And 1 and 3, 3 and 2, if you could swap.", "start": 6408.64, "duration": 2.82}, {"text": "Nice.", "start": 6411.46, "duration": 0.9}, {"text": "So this is interesting.", "start": 6412.36, "duration": 1.24}, {"text": "It would seem that-- you\nknow, in the first place,", "start": 6413.6, "duration": 2.21}, {"text": "I kind of compared\nseven pairs of people.", "start": 6415.81, "duration": 3.27}, {"text": "And then the next time I went through,\nI compared how many pairs of people", "start": 6419.08, "duration": 3.09}, {"text": "maximally?", "start": 6422.17, "duration": 0.66}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 6422.83, "duration": 0.91}, {"text": "DAVID J. MALAN: Just six, right?", "start": 6423.74, "duration": 1.34}, {"text": "Because we were able to\nleave [? Cahmy ?] out.", "start": 6425.08, "duration": 1.26}, {"text": "And then we were able to leave\n[? Picco ?] out, and then Peyton.", "start": 6426.34, "duration": 2.66}, {"text": "And so the number of comparisons I\nwas doing was getting fewer and fewer.", "start": 6429.0, "duration": 3.22}, {"text": "So that feels pretty good.", "start": 6432.22, "duration": 1.29}, {"text": "But you know what?", "start": 6433.51, "duration": 0.75}, {"text": "Before We even analyze that, can\nyou just randomize yourselves again?", "start": 6434.26, "duration": 2.87}, {"text": "Any human algorithm is fine.", "start": 6437.13, "duration": 1.46}, {"text": "Let's try one other approach, because\nthis feels kind of non-obvious, right?", "start": 6438.59, "duration": 4.4}, {"text": "I was fixing things, but I had to\nkeep fixing things again and again.", "start": 6442.99, "duration": 3.03}, {"text": "Let me try to take a bigger\nbite out of the problem", "start": 6446.02, "duration": 2.13}, {"text": "this time by just selecting\nthe smallest person.", "start": 6448.15, "duration": 2.11}, {"text": "OK, so your name again is?", "start": 6450.26, "duration": 1.09}, {"text": "[? JUHE: ?] [? Juhe. ?]", "start": 6451.35, "duration": 0.73}, {"text": "DAVID J. MALAN: [? Juhe, ?] number\n2-- that's a pretty small number,", "start": 6452.08, "duration": 1.99}, {"text": "so I'm going to remember that\nin sort of a mental variable.", "start": 6454.07, "duration": 2.33}, {"text": "4?", "start": 6456.4, "duration": 0.49}, {"text": "No, you're too big.", "start": 6456.89, "duration": 0.84}, {"text": "Too big.", "start": 6457.73, "duration": 1.32}, {"text": "Oh, what was your name again?", "start": 6459.05, "duration": 1.2}, {"text": "JAMES: James.", "start": 6460.25, "duration": 0.59}, {"text": "DAVID J. MALAN: James.", "start": 6460.84, "duration": 0.91}, {"text": "James is a 1.", "start": 6461.75, "duration": 0.54}, {"text": "That's pretty nice.", "start": 6462.29, "duration": 0.8}, {"text": "Let me keep checking.", "start": 6463.09, "duration": 0.87}, {"text": "OK, James, in my mental\nvariable is the smallest number.", "start": 6463.96, "duration": 3.44}, {"text": "I know I want him at the beginning.", "start": 6467.4, "duration": 1.46}, {"text": "So if you wouldn't mind coming with me.", "start": 6468.86, "duration": 1.62}, {"text": "And I'm sorry, we don't\nhave room for you anymore.", "start": 6470.48, "duration": 1.61}, {"text": "If you could just-- oh, you know what?", "start": 6472.09, "duration": 1.58}, {"text": "Could you all just shuffle down?", "start": 6473.67, "duration": 1.83}, {"text": "Well, hm, I don't know if I like that.", "start": 6475.5, "duration": 1.78}, {"text": "That's a lot of work, right?", "start": 6477.28, "duration": 1.19}, {"text": "Moving all these values,\nlet's not do that.", "start": 6478.47, "duration": 1.79}, {"text": "Let's not do that.", "start": 6480.26, "duration": 1.2}, {"text": "Number 2, could you\nmind just going where--", "start": 6481.46, "duration": 1.8}, {"text": "where--", "start": 6483.26, "duration": 0.51}, {"text": "JAMES: It's James.", "start": 6483.77, "duration": 0.75}, {"text": "DAVID J. MALAN: --James was?", "start": 6484.52, "duration": 1.66}, {"text": "OK, so I've kind of made the\nproblem a little worse in that,", "start": 6486.18, "duration": 3.09}, {"text": "now, number 2 is farther\naway from the goal.", "start": 6489.27, "duration": 2.52}, {"text": "But I could have gotten lucky,\nand maybe she was number 7 or 8.", "start": 6491.79, "duration": 3.12}, {"text": "And so let me just claim that, on\naverage, just evicting the person", "start": 6494.91, "duration": 2.85}, {"text": "is going to kind of be\na wash and average out.", "start": 6497.76, "duration": 2.31}, {"text": "But now James is in the right place.", "start": 6500.07, "duration": 1.8}, {"text": "Done.", "start": 6501.87, "duration": 0.72}, {"text": "Now I have a problem that's of size 7.", "start": 6502.59, "duration": 2.15}, {"text": "So let me select the\nnext smallest person.", "start": 6504.74, "duration": 1.75}, {"text": "4 is the next smallest, not\n8, not 5, not 7-- ooh, 2.", "start": 6506.49, "duration": 3.42}, {"text": "Not 3, 6.", "start": 6509.91, "duration": 1.08}, {"text": "OK, so you're back in the game.", "start": 6510.99, "duration": 1.62}, {"text": "All right, come on back.", "start": 6512.61, "duration": 1.05}, {"text": "And can we evict number 4?", "start": 6513.66, "duration": 2.26}, {"text": "And on this algorithm,\nif you will, I just", "start": 6515.92, "duration": 1.94}, {"text": "interpretively select\nthe smallest person.", "start": 6517.86, "duration": 2.67}, {"text": "I'm not comparing everyone in quite the\nsame way and swapping them pairwise,", "start": 6520.53, "duration": 3.54}, {"text": "I'm doing some of more\nmacroscopic swaps.", "start": 6524.07, "duration": 1.98}, {"text": "So now I'm going to look for\nthe next smallest, which is 3.", "start": 6526.05, "duration": 2.46}, {"text": "If you wouldn't mind\npopping around here?", "start": 6528.51, "duration": 1.62}, {"text": "[? Cahmy, ?] we have to,\nunfortunately, evict you,", "start": 6530.13, "duration": 2.08}, {"text": "but that works out to our favor.", "start": 6532.21, "duration": 1.33}, {"text": "Let me look for the next\nsmallest, which is 4.", "start": 6533.54, "duration": 1.92}, {"text": "OK, you're back in.", "start": 6535.46, "duration": 0.82}, {"text": "Come on down.", "start": 6536.28, "duration": 1.05}, {"text": "Swap with 5.", "start": 6537.33, "duration": 1.38}, {"text": "OK, now I'm looking for 5.", "start": 6538.71, "duration": 1.44}, {"text": "Hey, 5, there you are.", "start": 6540.15, "duration": 1.01}, {"text": "OK.", "start": 6541.16, "duration": 0.5}, {"text": "So go here.", "start": 6541.66, "duration": 1.05}, {"text": "OK, looking for 6.", "start": 6542.71, "duration": 1.19}, {"text": "Oh, 6, a little bit of a shuffle.", "start": 6543.9, "duration": 2.61}, {"text": "OK.", "start": 6546.51, "duration": 0.51}, {"text": "And now looking for 7.", "start": 6547.02, "duration": 1.59}, {"text": "Oh, 7, if you could go here.", "start": 6548.61, "duration": 2.1}, {"text": "But notice, I'm not going back.", "start": 6550.71, "duration": 1.46}, {"text": "And this is what's important.", "start": 6552.17, "duration": 1.21}, {"text": "Like my steps are getting\nshorter and shorter.", "start": 6553.38, "duration": 1.98}, {"text": "My remaining steps are\ngetting shorter and shorter.", "start": 6555.36, "duration": 2.16}, {"text": "And now we've actually\nsorted all of these humans.", "start": 6557.52, "duration": 3.51}, {"text": "So two fundamentally different ways,\nbut they're both comparative in nature,", "start": 6561.03, "duration": 3.45}, {"text": "because I'm comparing\nthese characters again,", "start": 6564.48, "duration": 2.58}, {"text": "and again, and again, and swapping\nthem if they're out of order.", "start": 6567.06, "duration": 2.82}, {"text": "Or at a higher level, going\nthrough and swapping them again,", "start": 6569.88, "duration": 4.47}, {"text": "and again, and again.", "start": 6574.35, "duration": 1.62}, {"text": "But how many steps am\nI taking each time?", "start": 6575.97, "duration": 2.4}, {"text": "Even though I was doing fewer and\nfewer and I wasn't doubling back,", "start": 6578.37, "duration": 3.51}, {"text": "the first time, I was doing\nlike n minus 1 comparisons.", "start": 6581.88, "duration": 3.72}, {"text": "And then I went back here.", "start": 6585.6, "duration": 1.23}, {"text": "And in the first algorithm, I\nkind of stopped going as far.", "start": 6586.83, "duration": 3.87}, {"text": "In the second algorithm, I\njust didn't go back as far.", "start": 6590.7, "duration": 2.84}, {"text": "So it was just kind of a different\nway of thinking of the problem.", "start": 6593.54, "duration": 2.75}, {"text": "But then I did what?", "start": 6596.29, "duration": 0.95}, {"text": "Like seven comparisons?", "start": 6597.24, "duration": 2.08}, {"text": "Then six, then five, then four,\nthen three, then two, then one.", "start": 6599.32, "duration": 3.92}, {"text": "It's getting smaller, but how\nmany comparisons is that total?", "start": 6603.24, "duration": 3.1}, {"text": "I've got like n people,\nn being a number.", "start": 6606.34, "duration": 2.76}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 6609.1, "duration": 1.23}, {"text": "DAVID J. MALAN: Is not\nas bad as factorial.", "start": 6610.33, "duration": 1.79}, {"text": "We'd be here all day long.", "start": 6612.12, "duration": 2.03}, {"text": "But it is big.", "start": 6614.15, "duration": 0.91}, {"text": "It is big.", "start": 6615.06, "duration": 0.5}, {"text": "Let's go-- a round of applause,\nif we could, for our volunteers.", "start": 6615.56, "duration": 2.49}, {"text": "You can keep the shirts, if\nyou'd like, as a souvenir.", "start": 6618.05, "duration": 1.86}, {"text": "[APPLAUSE]", "start": 6619.91, "duration": 0.54}, {"text": "Thank you, very much.", "start": 6620.45, "duration": 1.92}, {"text": "Let me see if we can't just kind of\nquantify that-- thank you, so much--", "start": 6622.37, "duration": 4.2}, {"text": "and see how we actually\ngot to that point.", "start": 6626.57, "duration": 2.85}, {"text": "If I go ahead and pull up not our\nlockers, but our answers here,", "start": 6629.42, "duration": 4.95}, {"text": "let me propose that what we just\ndid was essentially two algorithms.", "start": 6634.37, "duration": 4.53}, {"text": "One has the name bubble.", "start": 6638.9, "duration": 1.02}, {"text": "And I was kind of deliberately kind\nof shoehorning the word in there.", "start": 6639.92, "duration": 2.87}, {"text": "Bubble sort is just that\ncomparative sort, pair by pair,", "start": 6642.79, "duration": 3.19}, {"text": "fixing tiny little mistakes.", "start": 6645.98, "duration": 1.83}, {"text": "But we needed to do it\nagain, and again, and again.", "start": 6647.81, "duration": 2.95}, {"text": "So those steps kind of add up, but\nwe can express them as pseudocode.", "start": 6650.76, "duration": 3.55}, {"text": "So in pseudocode-- and you can\nwrite this any number of ways--", "start": 6654.31, "duration": 2.59}, {"text": "I might just do the following.", "start": 6656.9, "duration": 1.24}, {"text": "Just keep doing the following,\nuntil there's no remaining swaps--", "start": 6658.14, "duration": 3.02}, {"text": "from i from 0 to n -2, which is just\nn is the total number of humans.", "start": 6661.16, "duration": 5.31}, {"text": "n -2 is go up from that\nperson to this person,", "start": 6666.47, "duration": 3.72}, {"text": "because I want to compare him or\nher against the person next to them.", "start": 6670.19, "duration": 2.88}, {"text": "So I don't want to accidentally do this.", "start": 6673.07, "duration": 1.66}, {"text": "That's why it's n -2 at the end here.", "start": 6674.73, "duration": 2.13}, {"text": "Then I want to go ahead and, if the\nith and the ith +1 elements are out", "start": 6676.86, "duration": 2.96}, {"text": "of order, swap them.", "start": 6679.82, "duration": 1.57}, {"text": "So that's why I was asking our\nhuman volunteers to exchange places.", "start": 6681.39, "duration": 3.31}, {"text": "And then just keep doing that,\nuntil there's no one left to swap.", "start": 6684.7, "duration": 2.71}, {"text": "And by definition, everyone is in order.", "start": 6687.41, "duration": 2.43}, {"text": "Meanwhile, the second algorithm has the\nconventional name of selection sort.", "start": 6689.84, "duration": 3.36}, {"text": "Selection sort is literally\njust that, where you actually", "start": 6693.2, "duration": 4.02}, {"text": "select the smallest person, or number\nof interest to you, intuitively,", "start": 6697.22, "duration": 3.68}, {"text": "again and again.", "start": 6700.9, "duration": 0.67}, {"text": "And the number keeps\ngetting bigger, but you", "start": 6701.57, "duration": 1.83}, {"text": "start ignoring the people who\nyou've already put into place.", "start": 6703.4, "duration": 2.58}, {"text": "So the problem, similarly, is\ngetting smaller and smaller.", "start": 6705.98, "duration": 2.83}, {"text": "Just like in bubble sort, it was\ngetting more and more sorted.", "start": 6708.81, "duration": 3.2}, {"text": "The pseudocode for selection\nsort might look like this.", "start": 6712.01, "duration": 2.46}, {"text": "For i from 0 to n -1,\nso that's 0 in an array.", "start": 6714.47, "duration": 4.35}, {"text": "And this is n -1.", "start": 6718.82, "duration": 1.26}, {"text": "Just keep looking for the smallest\nelement between those two chairs,", "start": 6720.08, "duration": 4.98}, {"text": "and then pull that person out.", "start": 6725.06, "duration": 1.77}, {"text": "And then just evict\nwhoever's there-- swap them,", "start": 6726.83, "duration": 2.65}, {"text": "but not necessarily adjacently,\njust as far away as is necessary.", "start": 6729.48, "duration": 3.63}, {"text": "And in this way, I keep turning\nmy back on more and more people", "start": 6733.11, "duration": 3.5}, {"text": "because they are then in place.", "start": 6736.61, "duration": 2.31}, {"text": "So two different\nframings of the problem,", "start": 6738.92, "duration": 1.83}, {"text": "but it turns out they're actually both\nthe same number of steps, give or take.", "start": 6740.75, "duration": 4.2}, {"text": "It turns out they're roughly\nthe same number of steps,", "start": 6744.95, "duration": 2.25}, {"text": "even though it's a different\nway of thinking about it.", "start": 6747.2, "duration": 2.25}, {"text": "Because if I think about bubble sort,\nthe first iteration, for instance,", "start": 6749.45, "duration": 3.17}, {"text": "what just-- actually, well, let's\nconsider selection sort even.", "start": 6752.62, "duration": 2.88}, {"text": "In selection sort, how many\ncomparisons did I have to do?", "start": 6755.5, "duration": 3.61}, {"text": "Well, once I found my\nsmallest element, I", "start": 6759.11, "duration": 2.34}, {"text": "had to compare them\nagainst everyone else.", "start": 6761.45, "duration": 2.08}, {"text": "So that's n -1 comparisons\nthe first time.", "start": 6763.53, "duration": 2.57}, {"text": "So n -1 on the board.", "start": 6766.1, "duration": 1.5}, {"text": "Then I can ignore them,\nbecause they're behind me now.", "start": 6767.6, "duration": 2.97}, {"text": "So now I have how many\ncomparisons left out of n people?", "start": 6770.57, "duration": 3.48}, {"text": "n -2, because I subtracted one.", "start": 6774.05, "duration": 2.16}, {"text": "Then again, n -3, then n -4, all the\nway down to just one person remaining.", "start": 6776.21, "duration": 4.6}, {"text": "So I'll express that sort of\ngenerally, mathematically, like this.", "start": 6780.81, "duration": 2.75}, {"text": "So n -1 plus n -2 plus whatever plus\none final comparison, whatever that is.", "start": 6783.56, "duration": 6.03}, {"text": "It turns out that if you actually\nread the back of the math", "start": 6789.59, "duration": 2.54}, {"text": "book or your physics textbooks\nwhere they have those little cheat", "start": 6792.13, "duration": 2.71}, {"text": "sheets as to what these recurrences are,\nturns out that n -1 plus n -2 plus n -3", "start": 6794.84, "duration": 6.09}, {"text": "and so forth can be\nexpressed more succinctly", "start": 6800.93, "duration": 1.92}, {"text": "as literally just n\ntimes n -1 divided by 2.", "start": 6802.85, "duration": 3.75}, {"text": "And if you don't recall that, that's OK.", "start": 6806.6, "duration": 2.32}, {"text": "I always look these things up as well.", "start": 6808.92, "duration": 1.59}, {"text": "But that's true-- fact.", "start": 6810.51, "duration": 1.67}, {"text": "So what does that equal out to?", "start": 6812.18, "duration": 1.51}, {"text": "Well, it's like n squared minus\nn, if you just multiply it out.", "start": 6813.69, "duration": 3.21}, {"text": "And then if you divide\nthe two, then it's", "start": 6816.9, "duration": 1.76}, {"text": "n squared divided by 2 minus n over 2.", "start": 6818.66, "duration": 2.1}, {"text": "So that's the total number of steps.", "start": 6820.76, "duration": 1.5}, {"text": "And I could actually plug this in.", "start": 6822.26, "duration": 0.99}, {"text": "We could plug in 8, do the math, and\nget the total number of comparisons", "start": 6823.25, "duration": 3.36}, {"text": "that I was verbally\nkind of rattling off.", "start": 6826.61, "duration": 2.97}, {"text": "So is that a big deal?", "start": 6829.58, "duration": 2.17}, {"text": "Hm, it feels like it's on\nthe order of n squared.", "start": 6831.75, "duration": 2.61}, {"text": "And indeed, a computer\nscientist, when assessing", "start": 6834.36, "duration": 2.0}, {"text": "the efficiency of an algorithm,\ntends not to care too much", "start": 6836.36, "duration": 2.85}, {"text": "about the precise values.", "start": 6839.21, "duration": 1.14}, {"text": "All we're going to care\nabout it's the biggest term.", "start": 6840.35, "duration": 2.45}, {"text": "What's the value in the\nformula that you come up", "start": 6842.8, "duration": 2.23}, {"text": "with that just dominates the\nother terms, so to speak,", "start": 6845.03, "duration": 2.79}, {"text": "that has the biggest effect, especially\nas n is getting larger and larger?", "start": 6847.82, "duration": 3.79}, {"text": "Now, why is this?", "start": 6851.61, "duration": 0.95}, {"text": "Well, let's just do sort of\nproof by example, if you will.", "start": 6852.56, "duration": 2.73}, {"text": "If this is the expression,\ntechnically, but I", "start": 6855.29, "duration": 2.88}, {"text": "claim that, ugh, it's\nclose enough to say", "start": 6858.17, "duration": 2.1}, {"text": "on the order of, big O of n squared,\nso to speak, let's use an example.", "start": 6860.27, "duration": 4.63}, {"text": "If there's a million people\non stage, and not just eight,", "start": 6864.9, "duration": 2.72}, {"text": "that math works out to\nbe like a million squared", "start": 6867.62, "duration": 2.01}, {"text": "divided by 2 steps minus a\nmillion divided by 2, total.", "start": 6869.63, "duration": 3.86}, {"text": "So what does that\nactually work out to be?", "start": 6873.49, "duration": 1.75}, {"text": "Well, that's 500 billion minus 500,000.", "start": 6875.24, "duration": 3.68}, {"text": "And what does that work out to be?", "start": 6878.92, "duration": 1.42}, {"text": "Well, that's 499 billion,\n999 million, 500,000.", "start": 6880.34, "duration": 5.88}, {"text": "That feels pretty darn\nclose to like n squared.", "start": 6886.22, "duration": 3.72}, {"text": "I mean, that's a drop in the bucket\nto subtract 500,000 from 500 billion.", "start": 6889.94, "duration": 4.81}, {"text": "So you know what?", "start": 6894.75, "duration": 0.71}, {"text": "Eh, it's on the order of n squared.", "start": 6895.46, "duration": 2.31}, {"text": "It's not precise, but it's in\nthat general order of magnitude,", "start": 6897.77, "duration": 3.67}, {"text": "so to speak.", "start": 6901.44, "duration": 0.75}, {"text": "And so this symbol, this\ncapital 0, is literally a symbol", "start": 6902.19, "duration": 2.51}, {"text": "used in computer science\nand in programming", "start": 6904.7, "duration": 2.16}, {"text": "to just kind of describe\nwith a wave of the hand,", "start": 6906.86, "duration": 2.37}, {"text": "but some good intuition and algorithm,\nhow fast or slow your algorithm is.", "start": 6909.23, "duration": 4.5}, {"text": "And it turns out there's different\nways to evaluate algorithms", "start": 6913.73, "duration": 2.93}, {"text": "with just different similar formulas.", "start": 6916.66, "duration": 1.78}, {"text": "n squared happens to be how much\ntime both bubble sort and selection", "start": 6918.44, "duration": 3.51}, {"text": "sort take.", "start": 6921.95, "duration": 0.51}, {"text": "If I literally count\nup all of the work we", "start": 6922.46, "duration": 1.83}, {"text": "were doing on stage\nwith our volunteers, it", "start": 6924.29, "duration": 1.89}, {"text": "would be roughly n squared, 8\nsquared, or 64 steps, give or take,", "start": 6926.18, "duration": 6.12}, {"text": "for all of those humans.", "start": 6932.3, "duration": 1.26}, {"text": "And that would be notably off.", "start": 6933.56, "duration": 1.45}, {"text": "There's a good amount\nof rounding error there.", "start": 6935.01, "duration": 1.92}, {"text": "But if we had a million\nvolunteers on stage,", "start": 6936.93, "duration": 2.9}, {"text": "then the rounding error\nwould be pretty negligible.", "start": 6939.83, "duration": 2.62}, {"text": "But we've actually seen some of\nthese other orders of magnitude,", "start": 6942.45, "duration": 2.7}, {"text": "so to speak, before.", "start": 6945.15, "duration": 1.56}, {"text": "For instance, when we counted someone,\nor we searched for Mike Smith one page", "start": 6946.71, "duration": 3.23}, {"text": "at a time, we called\nthat a linear algorithm.", "start": 6949.94, "duration": 2.4}, {"text": "And that was big O of n.", "start": 6952.34, "duration": 1.41}, {"text": "So it's on the order of n steps.", "start": 6953.75, "duration": 1.44}, {"text": "It's 1,000.", "start": 6955.19, "duration": 0.66}, {"text": "Maybe it's 999.", "start": 6955.85, "duration": 0.88}, {"text": "Whatever.", "start": 6956.73, "duration": 0.5}, {"text": "It's on the order of n steps.", "start": 6957.23, "duration": 1.65}, {"text": "The [? twosies ?] approach was twice\nas fast, recall-- two pages at a time.", "start": 6958.88, "duration": 3.96}, {"text": "But you know what?", "start": 6962.84, "duration": 0.75}, {"text": "That's still linear, right?", "start": 6963.59, "duration": 1.42}, {"text": "Like two pages at a time?", "start": 6965.01, "duration": 1.09}, {"text": "Let me just wait till next\nyear when my CPU is twice", "start": 6966.1, "duration": 2.17}, {"text": "as fast, because Intel and companies\nkeep speeding up computers.", "start": 6968.27, "duration": 2.66}, {"text": "The algorithm is fundamentally the same.", "start": 6970.93, "duration": 1.7}, {"text": "And indeed, if you think\nback to the picture we drew,", "start": 6972.63, "duration": 3.23}, {"text": "the shapes of those curves\nwere indeed the same.", "start": 6975.86, "duration": 3.03}, {"text": "That first algorithm, finding Mike\none page at a time looked like this.", "start": 6978.89, "duration": 3.21}, {"text": "Second algorithm finding\nhim looked like this.", "start": 6982.1, "duration": 2.13}, {"text": "Only the third algorithm, the divide\nand conquer, splitting the phone book", "start": 6984.23, "duration": 3.84}, {"text": "was a fundamentally different shape.", "start": 6988.07, "duration": 1.83}, {"text": "And so even though we didn't use\nthis fancy phrasing a couple of weeks", "start": 6989.9, "duration": 3.24}, {"text": "ago, these first algorithms, one page\nat a time, two pages at a time, eh,", "start": 6993.14, "duration": 4.37}, {"text": "they're on the order of n.", "start": 6997.51, "duration": 2.17}, {"text": "Technically, yes, n\nversus n divided by 2,", "start": 6999.68, "duration": 2.88}, {"text": "but we only care about the\ndominating factor, the variable n.", "start": 7002.56, "duration": 3.61}, {"text": "We can throw away everything\nin the denominator,", "start": 7006.17, "duration": 2.0}, {"text": "and we can throw away everything that's\nsmaller than the biggest term, which", "start": 7008.17, "duration": 3.18}, {"text": "in this case is just n.", "start": 7011.35, "duration": 1.59}, {"text": "And I alluded to this two weeks ago--", "start": 7012.94, "duration": 2.0}, {"text": "logarithmic.", "start": 7014.94, "duration": 0.86}, {"text": "Well, it turns out that any time you\ndivide something again, and again,", "start": 7015.8, "duration": 2.96}, {"text": "and again, you're leveraging\na logarithmic type function,", "start": 7018.76, "duration": 3.76}, {"text": "log base 2 technically.", "start": 7022.52, "duration": 1.37}, {"text": "But on the order of log base\nn is a common one as well.", "start": 7023.89, "duration": 4.12}, {"text": "The beautiful algorithms are these--", "start": 7028.01, "duration": 2.63}, {"text": "literally, one step, or technically\nconstant number of steps.", "start": 7030.64, "duration": 3.67}, {"text": "For instance, like what's an\nalgorithm that might be constant time?", "start": 7034.31, "duration": 3.14}, {"text": "Open phone book.", "start": 7040.27, "duration": 1.3}, {"text": "OK, one step.", "start": 7041.57, "duration": 1.03}, {"text": "Doesn't really matter\nhow many pages there are,", "start": 7042.6, "duration": 1.96}, {"text": "I'm just going to open the phone book.", "start": 7044.56, "duration": 1.23}, {"text": "And that doesn't vary\nby number of pages.", "start": 7045.79, "duration": 1.89}, {"text": "That might be a constant\ntime algorithm, for instance.", "start": 7047.68, "duration": 2.44}, {"text": "So those are the lowest you can go.", "start": 7050.12, "duration": 1.94}, {"text": "And then there's somewhere\neven in between here", "start": 7052.06, "duration": 2.52}, {"text": "that we might aspire to with\ncertain other algorithms.", "start": 7054.58, "duration": 3.24}, {"text": "So in fact, let's just\nsee if-- just a moment--", "start": 7057.82, "duration": 3.2}, {"text": "let's just see if we can do\nthis a little more succinctly.", "start": 7061.02, "duration": 3.97}, {"text": "Let's go ahead and use arrays in just\none final way, using merge sorts.", "start": 7064.99, "duration": 5.7}, {"text": "So it turns out, using\nan array, we can actually", "start": 7070.69, "duration": 2.82}, {"text": "do something pretty powerfully,\nso long as we allow ourselves", "start": 7073.51, "duration": 3.36}, {"text": "a couple of arrays.", "start": 7076.87, "duration": 1.33}, {"text": "So again, when we just add sorting\nwith bubble sort and selection sort,", "start": 7078.2, "duration": 2.31}, {"text": "we had just one array.", "start": 7080.51, "duration": 0.91}, {"text": "We had eight chairs\nfor our eight people.", "start": 7081.42, "duration": 3.44}, {"text": "But if I actually allowed myself\nlike 16 chairs, or even more,", "start": 7084.86, "duration": 3.05}, {"text": "and I allowed these\nfolks to move a bit more,", "start": 7087.91, "duration": 2.16}, {"text": "I could actually do even\nbetter than that using arrays.", "start": 7090.07, "duration": 2.64}, {"text": "So here's some random numbers that we'll\njust do visually, without any humans.", "start": 7092.71, "duration": 3.33}, {"text": "And they're in an array, back,\nto back, to back, to back.", "start": 7096.04, "duration": 2.37}, {"text": "But if I allow myself\na second array, I'm", "start": 7098.41, "duration": 1.86}, {"text": "going to be able to shuffle these\nthings around and not just compare them,", "start": 7100.27, "duration": 3.09}, {"text": "because it was those comparisons and\nall of my footsteps in front of them", "start": 7103.36, "duration": 3.09}, {"text": "that really started\nto take a lot of time.", "start": 7106.45, "duration": 1.87}, {"text": "So here's my array.", "start": 7108.32, "duration": 0.94}, {"text": "You know what?", "start": 7109.26, "duration": 0.59}, {"text": "Just like the phone book-- that\nphone book example got us pretty far", "start": 7109.85, "duration": 2.87}, {"text": "in the first week--", "start": 7112.72, "duration": 1.08}, {"text": "let me do half of the problem at a time\nand then kind of combine my answer.", "start": 7113.8, "duration": 4.29}, {"text": "So here's an array--", "start": 7118.09, "duration": 0.93}, {"text": "4, 2, 7, 5, 6, 8, 3,\n1-- randomly sorted.", "start": 7119.02, "duration": 3.06}, {"text": "Let me go ahead and\nsort just half of this,", "start": 7122.08, "duration": 2.34}, {"text": "just like I searched for Mike initially\nin just half of the phone book.", "start": 7124.42, "duration": 3.34}, {"text": "So 4, 2, 7, 5-- not sorted.", "start": 7127.76, "duration": 2.81}, {"text": "But you know what?", "start": 7130.57, "duration": 0.93}, {"text": "This feels like too big\nof a problem, still.", "start": 7131.5, "duration": 1.91}, {"text": "Let me sort just the left\nhalf of the left half.", "start": 7133.41, "duration": 3.57}, {"text": "OK, now it's a smaller problem.", "start": 7136.98, "duration": 1.3}, {"text": "You know what?", "start": 7138.28, "duration": 0.76}, {"text": "4 and 2, still out of order.", "start": 7139.04, "duration": 1.73}, {"text": "Let me just divide this list of two\ninto two tiny arrays, each of size 1.", "start": 7140.77, "duration": 4.77}, {"text": "So here's a mini-array of size 1,\nand then another one of like size", "start": 7145.54, "duration": 2.96}, {"text": "7, but they're back\nto back, so whatever.", "start": 7148.5, "duration": 2.47}, {"text": "But this array of size 1, is it sorted?", "start": 7150.97, "duration": 3.09}, {"text": "AUDIENCE: No.", "start": 7154.06, "duration": 1.16}, {"text": "DAVID J. MALAN: I'm sorry?", "start": 7155.22, "duration": 1.09}, {"text": "AUDIENCE: No.", "start": 7156.31, "duration": 0.9}, {"text": "DAVID J. MALAN: No?", "start": 7157.21, "duration": 1.28}, {"text": "If this array has just one\nelement and that element is 4--", "start": 7158.49, "duration": 2.87}, {"text": "AUDIENCE: There's only\none thing you can do.", "start": 7161.36, "duration": 0.82}, {"text": "DAVID J. MALAN: Yes, then\nit is sorted, by definition.", "start": 7162.18, "duration": 2.29}, {"text": "All right, so done.", "start": 7164.47, "duration": 1.13}, {"text": "Making some progress.", "start": 7165.6, "duration": 1.26}, {"text": "Now, let me kind of mentally rewind.", "start": 7166.86, "duration": 1.86}, {"text": "Let me sort the right\nhalf of that array.", "start": 7168.72, "duration": 3.58}, {"text": "So now I have another array of size 1.", "start": 7172.3, "duration": 2.06}, {"text": "Is this array sorted?", "start": 7174.36, "duration": 2.19}, {"text": "Yeah, kind of stupidly.", "start": 7176.55, "duration": 1.38}, {"text": "We don't really seem\nto be doing anything.", "start": 7177.93, "duration": 1.32}, {"text": "We're just making claims.", "start": 7179.25, "duration": 1.04}, {"text": "But yes, this is sorted.", "start": 7180.29, "duration": 1.36}, {"text": "But now, this was the original half.", "start": 7181.65, "duration": 2.55}, {"text": "And this half is sorted.", "start": 7184.2, "duration": 1.83}, {"text": "This half is sorted.", "start": 7186.03, "duration": 1.22}, {"text": "What if I now just kind of\nmerge these sorted halves?", "start": 7187.25, "duration": 2.59}, {"text": "I've got two lists of size 1--", "start": 7189.84, "duration": 2.22}, {"text": "4 and 2.", "start": 7192.06, "duration": 1.5}, {"text": "And now if I have extra storage\nspace, if I had like extra benches,", "start": 7193.56, "duration": 3.18}, {"text": "I could do this a little better.", "start": 7196.74, "duration": 1.44}, {"text": "don't I go ahead and merge\nthese two as follows?", "start": 7198.18, "duration": 2.47}, {"text": "2 will go there.", "start": 7200.65, "duration": 1.42}, {"text": "4 will go there.", "start": 7202.07, "duration": 1.39}, {"text": "So now I've taken two sorted lists\nand made one bigger, more sorted list", "start": 7203.46, "duration": 3.45}, {"text": "by just merging them together,\nleveraging some additional space.", "start": 7206.91, "duration": 3.12}, {"text": "Now, let me mentally rewind.", "start": 7210.03, "duration": 1.17}, {"text": "How did I get to 4 and 2?", "start": 7211.2, "duration": 1.28}, {"text": "Well, I started with the left half,\nthen the left half of the left half.", "start": 7212.48, "duration": 3.4}, {"text": "Let me now do the right half\nof the left half, if you will.", "start": 7215.88, "duration": 3.45}, {"text": "All right, let me divide this again.", "start": 7219.33, "duration": 1.5}, {"text": "7, list of size 1, is it sorted?", "start": 7220.83, "duration": 2.61}, {"text": "Yes, trivially.", "start": 7223.44, "duration": 1.28}, {"text": "5, is it sorted?", "start": 7224.72, "duration": 1.72}, {"text": "Yes.", "start": 7226.44, "duration": 0.81}, {"text": "7 and 5, let's go ahead\nand merge them together.", "start": 7227.25, "duration": 2.46}, {"text": "5 is, of course, going to go here.", "start": 7229.71, "duration": 1.77}, {"text": "7, of course, is going to go here.", "start": 7231.48, "duration": 2.36}, {"text": "OK.", "start": 7233.84, "duration": 0.58}, {"text": "Now where do we go?", "start": 7234.42, "duration": 1.05}, {"text": "We originally sorted the left half.", "start": 7235.47, "duration": 2.1}, {"text": "Let's go sort the right-- oh, right.", "start": 7237.57, "duration": 1.72}, {"text": "Sorry.", "start": 7239.29, "duration": 0.77}, {"text": "Now, we have the left half.", "start": 7240.06, "duration": 1.62}, {"text": "And the right half of\nthe left half are sorted.", "start": 7241.68, "duration": 3.45}, {"text": "Let's go ahead and merge these.", "start": 7245.13, "duration": 1.41}, {"text": "We have two lists now of size 2--", "start": 7246.54, "duration": 2.41}, {"text": "2, 4 and 5, 7, both of which are sorted.", "start": 7248.95, "duration": 3.59}, {"text": "If I now merge 2, 4 and 5, 7,\nwhich element should come first", "start": 7252.54, "duration": 3.63}, {"text": "in the new longer list, obviously?", "start": 7256.17, "duration": 3.09}, {"text": "2.", "start": 7259.26, "duration": 0.92}, {"text": "And then 4, then 5, and then 7.", "start": 7260.18, "duration": 1.71}, {"text": "That wasn't much of anything.", "start": 7261.89, "duration": 1.21}, {"text": "But OK, we're just using a\nlittle more space in our array.", "start": 7263.1, "duration": 2.77}, {"text": "Now what comes next?", "start": 7265.87, "duration": 1.48}, {"text": "Now, let's do the right half.", "start": 7267.35, "duration": 1.21}, {"text": "Again, we started by taking the\nwhole problem, doing the left half,", "start": 7268.56, "duration": 2.85}, {"text": "the left half of the left half, the left\nhalf of the left half of the left half.", "start": 7271.41, "duration": 3.33}, {"text": "And now we're going back\nin time, if you will.", "start": 7274.74, "duration": 2.26}, {"text": "So let's divide this into two\nhalves, now the left half into two", "start": 7277.0, "duration": 3.35}, {"text": "halves still.", "start": 7280.35, "duration": 0.65}, {"text": "6 is sorted.", "start": 7281.0, "duration": 1.35}, {"text": "8 is sorted.", "start": 7282.35, "duration": 1.03}, {"text": "Now I have to merge them--", "start": 7283.38, "duration": 1.26}, {"text": "6, 8.", "start": 7284.64, "duration": 1.53}, {"text": "What comes next?", "start": 7286.17, "duration": 0.78}, {"text": "Right half-- 3 and 1.", "start": 7286.95, "duration": 2.07}, {"text": "Well, left half is sorted,\nright half is sorted--", "start": 7289.02, "duration": 2.94}, {"text": "1 and 3.", "start": 7291.96, "duration": 1.8}, {"text": "All right, now how do I merge these?", "start": 7293.76, "duration": 1.5}, {"text": "6, 8, 1, 3, which element\nshould obviously come first?", "start": 7295.26, "duration": 3.3}, {"text": "1, then 3, then 6, then 8.", "start": 7298.56, "duration": 4.32}, {"text": "And then lastly, I have\ntwo lists of size four.", "start": 7302.88, "duration": 2.73}, {"text": "Let me give myself a little\nmore space, one more array.", "start": 7305.61, "duration": 2.68}, {"text": "Now let me go ahead and put\n1, and 2, and 3, and 4, and 5,", "start": 7308.29, "duration": 5.03}, {"text": "and 6, and 7, and 8.", "start": 7313.32, "duration": 3.06}, {"text": "What just happened?", "start": 7316.38, "duration": 1.2}, {"text": "Because it actually happened a lot\nfaster, even though we were doing this", "start": 7317.58, "duration": 3.06}, {"text": "all verbally.", "start": 7320.64, "duration": 0.99}, {"text": "Well notice, how many times did\neach number change locations?", "start": 7321.63, "duration": 4.8}, {"text": "Literally three, right?", "start": 7329.76, "duration": 1.05}, {"text": "Like one, two, three, right?", "start": 7330.81, "duration": 2.52}, {"text": "It moved from the original array, to the\nsecondary array, to the tertiary array,", "start": 7333.33, "duration": 3.9}, {"text": "to the fourth array,\nwhatever that's called.", "start": 7337.23, "duration": 2.64}, {"text": "And then it was ultimately in place.", "start": 7339.87, "duration": 1.71}, {"text": "So each number had to move\none, two, three spots.", "start": 7341.58, "duration": 3.09}, {"text": "And then how many numbers are there?", "start": 7344.67, "duration": 2.17}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 7346.84, "duration": 1.4}, {"text": "DAVID J. MALAN: Well, they were\nalready in the original array.", "start": 7348.24, "duration": 2.59}, {"text": "So how many times do they have to move?", "start": 7350.83, "duration": 1.62}, {"text": "Just one, two, three.", "start": 7352.45, "duration": 1.44}, {"text": "So how many total numbers\nare there, just to be clear?", "start": 7353.89, "duration": 2.61}, {"text": "There's eight.", "start": 7356.5, "duration": 0.63}, {"text": "So 8 times 3.", "start": 7357.13, "duration": 1.23}, {"text": "So let's generalize this.", "start": 7358.36, "duration": 1.11}, {"text": "If there's n numbers,\nand each time we moved", "start": 7359.47, "duration": 3.81}, {"text": "the numbers we did like half of\nthem, than half, then half, well,", "start": 7363.28, "duration": 3.66}, {"text": "how many times can you divide 8 by 2?", "start": 7366.94, "duration": 3.57}, {"text": "8 goes to 4.", "start": 7370.51, "duration": 0.58}, {"text": "4 goes to 2.", "start": 7371.09, "duration": 1.25}, {"text": "2 goes to 1.", "start": 7372.34, "duration": 1.18}, {"text": "And that's why we bottomed out\nat one element, lists of size 1.", "start": 7373.52, "duration": 3.65}, {"text": "So it turns out whenever you divide\nsomething by half, by half, by half,", "start": 7377.17, "duration": 3.13}, {"text": "what is that function or formula?", "start": 7380.3, "duration": 4.94}, {"text": "Not power, that's bad.", "start": 7385.24, "duration": 1.08}, {"text": "That's the other direction.", "start": 7386.32, "duration": 1.24}, {"text": "AUDIENCE: [INAUDIBLE]", "start": 7387.56, "duration": 0.5}, {"text": "DAVID J. MALAN: It's a logarithm.", "start": 7388.06, "duration": 0.91}, {"text": "So again, logarithm is just\na mathematical description", "start": 7388.97, "duration": 2.24}, {"text": "for any function that you keep dividing\nsomething again, and again, and again.", "start": 7391.21, "duration": 3.0}, {"text": "In half, in half, in half, in third,\nin third, in third, whatever it is,", "start": 7394.21, "duration": 2.99}, {"text": "it just means division by the\nsame proportional amounts again,", "start": 7397.2, "duration": 3.25}, {"text": "and again, and again.", "start": 7400.45, "duration": 1.72}, {"text": "And so if we move the numbers\nthree times, or more generally log", "start": 7402.17, "duration": 5.75}, {"text": "of n times, which again just\nmeans you divided n things again,", "start": 7407.92, "duration": 3.3}, {"text": "and again, and again,\nyou just call that log n.", "start": 7411.22, "duration": 2.49}, {"text": "And there's n numbers,\nso n numbers moved", "start": 7413.71, "duration": 3.18}, {"text": "log n times, the total\narithmetic here in question", "start": 7416.89, "duration": 3.96}, {"text": "is one of those other values on\nour little cheat sheet, which", "start": 7420.85, "duration": 3.42}, {"text": "looked like this.", "start": 7424.27, "duration": 1.86}, {"text": "In our other cheat sheet, recall that\nwe had formulas that looked like this,", "start": 7426.13, "duration": 5.01}, {"text": "not just n squared and n, and log n,\nand 1, we have this one in the middle--", "start": 7431.14, "duration": 4.77}, {"text": "n times log n.", "start": 7435.91, "duration": 1.94}, {"text": "So again, we're kind\nof jumping around here.", "start": 7437.85, "duration": 1.84}, {"text": "But again, each number\nmoves log n places.", "start": 7439.69, "duration": 2.79}, {"text": "There's n total numbers.", "start": 7442.48, "duration": 1.47}, {"text": "So n times log n is just,\nby definition, n log n.", "start": 7443.95, "duration": 3.87}, {"text": "But why is this sorted this way?", "start": 7447.82, "duration": 1.92}, {"text": "Well log n, recall from week\n0 with the phone book example,", "start": 7449.74, "duration": 2.76}, {"text": "the green curve is definitely smaller\nthan n. n was the straight lines,", "start": 7452.5, "duration": 4.02}, {"text": "log n was the green curved one.", "start": 7456.52, "duration": 1.83}, {"text": "So this indeed belongs in between,\nbecause this is n times n.", "start": 7458.35, "duration": 3.0}, {"text": "This is n.", "start": 7461.35, "duration": 0.87}, {"text": "This is n times\nsomething smaller than n.", "start": 7462.22, "duration": 2.94}, {"text": "So what's the actual implication?", "start": 7465.16, "duration": 1.71}, {"text": "Well, if we were to run\nthese algorithms side by side", "start": 7466.87, "duration": 3.06}, {"text": "and actually compare them\nwith something like this--", "start": 7469.93, "duration": 4.38}, {"text": "let me go ahead and compare these\nalgorithms using this demo here--", "start": 7474.31, "duration": 6.76}, {"text": "if I go ahead and hit play, we'll\nsee that the bars in this chart", "start": 7481.07, "duration": 3.12}, {"text": "are actually horizontal.", "start": 7484.19, "duration": 1.32}, {"text": "And the small bars\nrepresent small numbers,", "start": 7485.51, "duration": 2.16}, {"text": "large bars represent long numbers.", "start": 7487.67, "duration": 1.53}, {"text": "And then each of these is going to\nrun a different algorithm-- selection", "start": 7489.2, "duration": 3.0}, {"text": "sort on the left, bubble\nsort in the middle,", "start": 7492.2, "duration": 2.19}, {"text": "merge sort, as we'll now\ncall it, on the right.", "start": 7494.39, "duration": 3.06}, {"text": "And here's how long each of\nthem take to sort those values.", "start": 7497.45, "duration": 2.79}, {"text": "Bubble's still going.", "start": 7504.63, "duration": 1.38}, {"text": "Selection's still going.", "start": 7506.01, "duration": 1.05}, {"text": "And so that's the appreciable\ndifference, albeit with a small demo,", "start": 7507.06, "duration": 2.8}, {"text": "between n squared and\nsomething like log n.", "start": 7509.86, "duration": 2.75}, {"text": "And so what have we done here?", "start": 7512.61, "duration": 1.25}, {"text": "We've really, really, really got into\nthe weeds of what arrays can actually", "start": 7513.86, "duration": 3.2}, {"text": "do for us and what the relationships\nare with strings, because all of it", "start": 7517.06, "duration": 3.0}, {"text": "kind of reduces to just things being\nback, to back, to back, to back.", "start": 7520.06, "duration": 2.52}, {"text": "But now that we kind\nof come back, and we'll", "start": 7522.58, "duration": 1.83}, {"text": "continue along this\ntrajectory next time to be", "start": 7524.41, "duration": 2.07}, {"text": "able to talk at a much higher level\nabout what's actually going on.", "start": 7526.48, "duration": 3.33}, {"text": "And we can now take this\neven further, by applying", "start": 7529.81, "duration": 3.0}, {"text": "other sort of forms of media to\nthese same kinds of questions.", "start": 7532.81, "duration": 2.61}, {"text": "And we'll conclude it's\nabout 60 seconds long.", "start": 7535.42, "duration": 1.95}, {"text": "These bars are vertical,\ninstead of horizontal.", "start": 7537.37, "duration": 1.88}, {"text": "And what you'll see\nhere is a visualization", "start": 7539.25, "duration": 1.79}, {"text": "of various sorting algorithms,\namong them selection sort, bubble", "start": 7541.04, "duration": 2.73}, {"text": "sort, and merge sort, and a whole\nassortment of others, each of which", "start": 7543.77, "duration": 2.93}, {"text": "has even a different sound\nto it because of the speed", "start": 7546.7, "duration": 3.33}, {"text": "and the pattern by which\nit actually operates.", "start": 7550.03, "duration": 3.52}, {"text": "So let's take a quick look.", "start": 7553.55, "duration": 1.13}, {"text": "[VIDEO PLAYBACK]", "start": 7554.68, "duration": 0.66}, {"text": "[MUSIC PLAYING]", "start": 7555.34, "duration": 1.3}, {"text": "This is bubble sort.", "start": 7565.55, "duration": 1.31}, {"text": "And you can see how the larger elements\nare indeed bubbling up to the top.", "start": 7566.86, "duration": 3.84}, {"text": "[?", "start": 7575.73, "duration": 0.5}, {"text": "And you can kind of\nhear the ?] periodicity,", "start": 7576.23, "duration": 1.83}, {"text": "or the cycle that it's going in.", "start": 7578.06, "duration": 2.54}, {"text": "And there's less, and less, and less,\nand less work to do, until almost--", "start": 7585.69, "duration": 7.78}, {"text": "This is selection sort now.", "start": 7593.47, "duration": 1.44}, {"text": "So it starts off random, but we\nkeep selecting the smallest human", "start": 7594.91, "duration": 3.9}, {"text": "or, in this case, the shortest bar.", "start": 7598.81, "duration": 3.09}, {"text": "And you'll see here the bars\ncorrelate with frequency, clearly.", "start": 7601.9, "duration": 3.72}, {"text": "So it's getting higher and\nhigher and taller and taller.", "start": 7605.62, "duration": 4.59}, {"text": "This is merge sort now which,\nrecall, does things in halves,", "start": 7610.21, "duration": 3.57}, {"text": "and then halves of halves,\nand then merges those halves.", "start": 7613.78, "duration": 3.63}, {"text": "So we just did all the left\nwork, almost all the right work.", "start": 7617.41, "duration": 5.8}, {"text": "That one's very gratifying.", "start": 7623.21, "duration": 1.13}, {"text": "[LAUGHS]", "start": 7624.34, "duration": 2.02}, {"text": "This is something called [? nom ?]\nsort, which is improving things.", "start": 7626.36, "duration": 4.19}, {"text": "Not quite perfectly, but it's\nalways making forward progress,", "start": 7630.55, "duration": 2.94}, {"text": "and then kind of doubling\nback and cleaning things up.", "start": 7633.49, "duration": 2.34}, {"text": "[END PLAYBACK]", "start": 7644.0, "duration": 0.96}, {"text": "Whew.", "start": 7644.96, "duration": 0.5}, {"text": "That was a lot.", "start": 7645.46, "duration": 0.66}, {"text": "Let's call it a day.", "start": 7646.12, "duration": 0.84}, {"text": "I'll stick around for\none-on-one questions.", "start": 7646.96, "duration": 1.08}, {"text": "We'll see you next time.", "start": 7648.04, "duration": 0.99}, {"text": "[APPLAUSE]", "start": 7649.03, "duration": 2.06}]