[{"text": "hello everyone and welcome back as", "start": 6.08, "duration": 6.4}, {"text": "promised from this session onwards we", "start": 10.0, "duration": 4.639}, {"text": "will get into more architectural details", "start": 12.48, "duration": 4.48}, {"text": "of read-only memory or rom", "start": 14.639, "duration": 5.121}, {"text": "so without any further ado let's get to", "start": 16.96, "duration": 5.6}, {"text": "learning in the previous session we came", "start": 19.76, "duration": 5.2}, {"text": "to know about the hardware specification", "start": 22.56, "duration": 5.6}, {"text": "of rom chips we learned that inside a", "start": 24.96, "duration": 6.0}, {"text": "rom chip there remains a combinational", "start": 28.16, "duration": 5.52}, {"text": "circuit which is the decoder and this", "start": 30.96, "duration": 5.36}, {"text": "particular grid of connections which is", "start": 33.68, "duration": 4.879}, {"text": "known as rom matrix", "start": 36.32, "duration": 4.88}, {"text": "also we learned how to embed boolean", "start": 38.559, "duration": 5.121}, {"text": "functions as these two sum and carry", "start": 41.2, "duration": 5.12}, {"text": "functions within a rom chip", "start": 43.68, "duration": 5.28}, {"text": "now in this session we will invest our", "start": 46.32, "duration": 5.12}, {"text": "precious time investigating bit more", "start": 48.96, "duration": 5.599}, {"text": "about the architecture of the rom matrix", "start": 51.44, "duration": 5.84}, {"text": "now let's try and implement a three", "start": 54.559, "duration": 5.761}, {"text": "variable function using decoder and rom", "start": 57.28, "duration": 5.2}, {"text": "matrix that is the rom chip to be", "start": 60.32, "duration": 3.36}, {"text": "precise", "start": 62.48, "duration": 3.44}, {"text": "suppose this is the function that we are", "start": 63.68, "duration": 5.04}, {"text": "going to implement and as we can observe", "start": 65.92, "duration": 5.92}, {"text": "it's given in its sop or sum of products", "start": 68.72, "duration": 6.16}, {"text": "formed and how do we determine that here", "start": 71.84, "duration": 5.279}, {"text": "the summation symbol at the beginning", "start": 74.88, "duration": 3.68}, {"text": "gives it out", "start": 77.119, "duration": 3.601}, {"text": "now as you can see this particular", "start": 78.56, "duration": 4.8}, {"text": "boolean or switching function involves", "start": 80.72, "duration": 5.84}, {"text": "three variables a b and c", "start": 83.36, "duration": 5.6}, {"text": "therefore clearly we will need a decoder", "start": 86.56, "duration": 5.04}, {"text": "of configuration three by two raised to", "start": 88.96, "duration": 5.28}, {"text": "the power three that is three by eight", "start": 91.6, "duration": 5.68}, {"text": "decoder which has three input lines and", "start": 94.24, "duration": 6.239}, {"text": "eight output lines starting from 0 till", "start": 97.28, "duration": 6.32}, {"text": "7 and these 0 to 7 output lines", "start": 100.479, "duration": 5.6}, {"text": "represent all the different mean terms", "start": 103.6, "duration": 4.159}, {"text": "which can be obtained using three", "start": 106.079, "duration": 2.881}, {"text": "variables", "start": 107.759, "duration": 4.481}, {"text": "now if you remember in a rom matrix the", "start": 108.96, "duration": 5.519}, {"text": "outgoing lines of the decoder and the", "start": 112.24, "duration": 4.0}, {"text": "lines for the functions are called", "start": 114.479, "duration": 4.081}, {"text": "connections so in this particular", "start": 116.24, "duration": 4.159}, {"text": "circuit the number of connections will", "start": 118.56, "duration": 4.08}, {"text": "be the output lines of the decoder that", "start": 120.399, "duration": 5.121}, {"text": "is all two cube or eight output lines", "start": 122.64, "duration": 5.759}, {"text": "but that's not it for the function", "start": 125.52, "duration": 5.359}, {"text": "we will need another line", "start": 128.399, "duration": 5.281}, {"text": "therefore in total the number of", "start": 130.879, "duration": 6.0}, {"text": "connections will be 2 cube plus 1 that", "start": 133.68, "duration": 5.919}, {"text": "is 8 plus 1 or 9", "start": 136.879, "duration": 5.601}, {"text": "and we know the intersections are called", "start": 139.599, "duration": 5.601}, {"text": "links hence the number of links", "start": 142.48, "duration": 6.64}, {"text": "initially is 2 cube multiplied by 1 as", "start": 145.2, "duration": 5.92}, {"text": "because we are implementing a single", "start": 149.12, "duration": 4.16}, {"text": "function so the number of links", "start": 151.12, "duration": 4.24}, {"text": "initially is 8.", "start": 153.28, "duration": 3.44}, {"text": "now in order to implement this", "start": 155.36, "duration": 3.92}, {"text": "particular function we only need the", "start": 156.72, "duration": 4.48}, {"text": "mean terms 1", "start": 159.28, "duration": 2.72}, {"text": "2", "start": 161.2, "duration": 4.319}, {"text": "4 and 5. therefore all the other links", "start": 162.0, "duration": 6.239}, {"text": "will have to be burnt so that the", "start": 165.519, "duration": 5.921}, {"text": "circuit produces the output specified by", "start": 168.239, "duration": 6.08}, {"text": "this function and as we burn the rest of", "start": 171.44, "duration": 6.079}, {"text": "the links at last the number of links", "start": 174.319, "duration": 5.84}, {"text": "remains as four for these four", "start": 177.519, "duration": 4.161}, {"text": "intersections", "start": 180.159, "duration": 4.16}, {"text": "now to be fair we can't really do much", "start": 181.68, "duration": 5.6}, {"text": "about the number of links however if we", "start": 184.319, "duration": 5.2}, {"text": "try we can reduce the number of", "start": 187.28, "duration": 3.44}, {"text": "connections", "start": 189.519, "duration": 3.201}, {"text": "allow me to illustrate this", "start": 190.72, "duration": 4.08}, {"text": "so at this particular instance the", "start": 192.72, "duration": 4.08}, {"text": "number of connections for this rom", "start": 194.8, "duration": 3.92}, {"text": "matrix is 9.", "start": 196.8, "duration": 4.24}, {"text": "let's observe the truth table for this", "start": 198.72, "duration": 5.28}, {"text": "particular function shall we since we", "start": 201.04, "duration": 6.08}, {"text": "have 3 input variables clearly there", "start": 204.0, "duration": 5.44}, {"text": "will be 2 cube that is 8 possible", "start": 207.12, "duration": 3.759}, {"text": "combinations", "start": 209.44, "duration": 5.68}, {"text": "now as per this function 0 0 1 that is 1", "start": 210.879, "duration": 6.72}, {"text": "0 1 0 that is 2", "start": 215.12, "duration": 7.6}, {"text": "1 0 0 that is 4 and 1 0 1 that is 5", "start": 217.599, "duration": 8.401}, {"text": "all these will produce once and the rest", "start": 222.72, "duration": 5.2}, {"text": "will produce zeros", "start": 226.0, "duration": 4.4}, {"text": "now we will minimize this truth table", "start": 227.92, "duration": 5.12}, {"text": "using something called variable entrant", "start": 230.4, "duration": 5.199}, {"text": "mapping or ven", "start": 233.04, "duration": 4.96}, {"text": "in this we will try to observe the", "start": 235.599, "duration": 4.881}, {"text": "function with respect to any one of the", "start": 238.0, "duration": 5.2}, {"text": "input variables let's take c in this", "start": 240.48, "duration": 5.6}, {"text": "case and the combination of other input", "start": 243.2, "duration": 5.92}, {"text": "variables say a and b in here", "start": 246.08, "duration": 6.239}, {"text": "so if you observe when a and b both are", "start": 249.12, "duration": 6.479}, {"text": "zeros the function and the variable c", "start": 252.319, "duration": 4.721}, {"text": "are identical", "start": 255.599, "duration": 4.081}, {"text": "so it's safe to say that for this", "start": 257.04, "duration": 5.2}, {"text": "combination of a and b the function is", "start": 259.68, "duration": 4.0}, {"text": "producing c", "start": 262.24, "duration": 5.12}, {"text": "now when a is 0 and b is 1 the function", "start": 263.68, "duration": 6.799}, {"text": "and c are complement of one another that", "start": 267.36, "duration": 6.8}, {"text": "is when c is 0 the function produces 1", "start": 270.479, "duration": 6.72}, {"text": "and when c is 1 the function inversely", "start": 274.16, "duration": 7.28}, {"text": "produces 0. so we can say for a equals 0", "start": 277.199, "duration": 7.361}, {"text": "and b equals 1 the function produces the", "start": 281.44, "duration": 6.4}, {"text": "complement of c that is c bar", "start": 284.56, "duration": 5.84}, {"text": "now for the next combination of a and b", "start": 287.84, "duration": 5.04}, {"text": "no matter what c is the function", "start": 290.4, "duration": 6.799}, {"text": "produces 1. so we can say when a is one", "start": 292.88, "duration": 7.599}, {"text": "and b is zero the function produces one", "start": 297.199, "duration": 6.881}, {"text": "and finally when both a and b are ones", "start": 300.479, "duration": 6.16}, {"text": "no matter what c is the function", "start": 304.08, "duration": 4.08}, {"text": "produces zero", "start": 306.639, "duration": 4.241}, {"text": "thus this big truth table can be", "start": 308.16, "duration": 5.68}, {"text": "minimized into the truth table having", "start": 310.88, "duration": 6.48}, {"text": "only two input variables where for zero", "start": 313.84, "duration": 6.56}, {"text": "zero the function produces c for zero", "start": 317.36, "duration": 7.119}, {"text": "one the function produces c bar for 1 0", "start": 320.4, "duration": 7.28}, {"text": "the function produces 1 and for 1 1 it", "start": 324.479, "duration": 4.801}, {"text": "produces 0.", "start": 327.68, "duration": 4.48}, {"text": "do remember this way of minimization is", "start": 329.28, "duration": 6.4}, {"text": "called variable entrant map or vem", "start": 332.16, "duration": 6.16}, {"text": "representation and this will help us", "start": 335.68, "duration": 4.72}, {"text": "reduce the number of connections in rom", "start": 338.32, "duration": 3.28}, {"text": "matrix", "start": 340.4, "duration": 4.16}, {"text": "so now we will need a decoder of 2 to 2", "start": 341.6, "duration": 5.84}, {"text": "square that is 2 to 4 configuration", "start": 344.56, "duration": 5.28}, {"text": "where a and b will be the input lines of", "start": 347.44, "duration": 4.96}, {"text": "the decoder and the output lines will", "start": 349.84, "duration": 6.0}, {"text": "represent a bar b bar a bar b", "start": 352.4, "duration": 8.16}, {"text": "a b bar and a b respectively now for c", "start": 355.84, "duration": 7.919}, {"text": "we will use a multiplexer and feed c", "start": 360.56, "duration": 5.12}, {"text": "through the select line of it", "start": 363.759, "duration": 5.361}, {"text": "this way we will have c bar and c as", "start": 365.68, "duration": 7.12}, {"text": "inputs in the two by one multiplexer", "start": 369.12, "duration": 6.639}, {"text": "now for a bar b bar that is when both a", "start": 372.8, "duration": 5.679}, {"text": "and b's are zeros the function produces", "start": 375.759, "duration": 3.44}, {"text": "c", "start": 378.479, "duration": 3.521}, {"text": "so clearly we don't need the c bar link", "start": 379.199, "duration": 4.0}, {"text": "for this", "start": 382.0, "duration": 5.12}, {"text": "for a bar b the function produced c bar", "start": 383.199, "duration": 6.161}, {"text": "so we remove the link of c", "start": 387.12, "duration": 4.88}, {"text": "then again for a b bar the function", "start": 389.36, "duration": 5.92}, {"text": "produced 1 and if we keep the links for", "start": 392.0, "duration": 5.28}, {"text": "both c and c bar", "start": 395.28, "duration": 5.84}, {"text": "it will be treated as c boolean or c bar", "start": 397.28, "duration": 7.28}, {"text": "that is one and for a b the function", "start": 401.12, "duration": 4.96}, {"text": "produced zero", "start": 404.56, "duration": 4.4}, {"text": "so we remove all the links for it and", "start": 406.08, "duration": 5.2}, {"text": "finally we can obtain the function from", "start": 408.96, "duration": 4.239}, {"text": "the output line of the two by one", "start": 411.28, "duration": 5.6}, {"text": "multiplexer now if we observe previously", "start": 413.199, "duration": 6.4}, {"text": "the number of connections were nine and", "start": 416.88, "duration": 4.8}, {"text": "now the number of connections is 2", "start": 419.599, "duration": 2.88}, {"text": "square", "start": 421.68, "duration": 2.72}, {"text": "that is the number of output lines of", "start": 422.479, "duration": 5.601}, {"text": "the 2 to 4 decoder and 2 input lines of", "start": 424.4, "duration": 8.239}, {"text": "the 2 by 1 multiplexer so 4 plus 2 that", "start": 428.08, "duration": 7.04}, {"text": "is 6 which is lesser than the previous", "start": 432.639, "duration": 3.761}, {"text": "orientation", "start": 435.12, "duration": 4.88}, {"text": "so yes with the help of multiplexer we", "start": 436.4, "duration": 5.919}, {"text": "can reduce the number of connections in", "start": 440.0, "duration": 4.0}, {"text": "a rom matrix", "start": 442.319, "duration": 4.241}, {"text": "now let's study the reduction pattern of", "start": 444.0, "duration": 4.84}, {"text": "the number of connection using", "start": 446.56, "duration": 5.28}, {"text": "multiplexers suppose we have a function", "start": 448.84, "duration": 5.4}, {"text": "with four input variables", "start": 451.84, "duration": 5.6}, {"text": "now if we embed this using only a", "start": 454.24, "duration": 6.56}, {"text": "decoder and a basic rom matrix we will", "start": 457.44, "duration": 6.64}, {"text": "need a decoder with four input lines and", "start": 460.8, "duration": 6.16}, {"text": "2 raised to the power 4 that is 16", "start": 464.08, "duration": 6.64}, {"text": "output lines starting from 0 to 15 and", "start": 466.96, "duration": 5.44}, {"text": "for the function", "start": 470.72, "duration": 3.84}, {"text": "we will need another line", "start": 472.4, "duration": 4.479}, {"text": "so the number of connections in this", "start": 474.56, "duration": 5.12}, {"text": "case will be 2 raised to the power 4", "start": 476.879, "duration": 5.201}, {"text": "that is 16 outgoing lines from the", "start": 479.68, "duration": 5.68}, {"text": "decoder plus 1 line for the function", "start": 482.08, "duration": 6.16}, {"text": "that is 17 connections all together", "start": 485.36, "duration": 6.08}, {"text": "now if we introduce a 2 by 1 multiplexer", "start": 488.24, "duration": 6.16}, {"text": "in that case we will need a decoder with", "start": 491.44, "duration": 6.08}, {"text": "3 input lines and 2 cube that is 8", "start": 494.4, "duration": 5.68}, {"text": "output lines and the left out variable", "start": 497.52, "duration": 4.799}, {"text": "will be fed through the select line of", "start": 500.08, "duration": 4.399}, {"text": "the 2x1 multiplexer", "start": 502.319, "duration": 4.481}, {"text": "which will take care of both the forms", "start": 504.479, "duration": 6.0}, {"text": "of the variable d that is d bar and d", "start": 506.8, "duration": 6.239}, {"text": "as we saw in the previous illustration", "start": 510.479, "duration": 4.961}, {"text": "and finally through the output line of", "start": 513.039, "duration": 5.041}, {"text": "the two by one multiplexer we will", "start": 515.44, "duration": 4.88}, {"text": "obtain the function so in this", "start": 518.08, "duration": 4.879}, {"text": "organization the number of connections", "start": 520.32, "duration": 5.76}, {"text": "is 2 cube that is the output lines of", "start": 522.959, "duration": 6.801}, {"text": "the 3 to 8 decoder and the input lines", "start": 526.08, "duration": 7.199}, {"text": "of the 2 by 1 multiplexer that is 2 all", "start": 529.76, "duration": 6.0}, {"text": "together 10 connections", "start": 533.279, "duration": 4.321}, {"text": "and that's a significant amount of", "start": 535.76, "duration": 3.92}, {"text": "reduction isn't it", "start": 537.6, "duration": 4.48}, {"text": "now let's see what will happen if we", "start": 539.68, "duration": 6.4}, {"text": "introduce a 4x1 multiplexer in that case", "start": 542.08, "duration": 6.64}, {"text": "we will require a two to four decoder", "start": 546.08, "duration": 5.52}, {"text": "where a and b will be the input lines", "start": 548.72, "duration": 5.28}, {"text": "and the four output lines will represent", "start": 551.6, "duration": 5.2}, {"text": "all the combinations using a and b", "start": 554.0, "duration": 4.88}, {"text": "on the other hand through the select", "start": 556.8, "duration": 4.719}, {"text": "lines of four by one multiplexer the", "start": 558.88, "duration": 5.44}, {"text": "remaining variables that is c and d will", "start": 561.519, "duration": 5.44}, {"text": "be fade into it which will take care of", "start": 564.32, "duration": 5.28}, {"text": "all the combinations of c and d", "start": 566.959, "duration": 4.721}, {"text": "finally through the output line of the", "start": 569.6, "duration": 4.96}, {"text": "4x1 multiplexer we will obtain the", "start": 571.68, "duration": 3.92}, {"text": "function", "start": 574.56, "duration": 2.64}, {"text": "now let's observe the number of", "start": 575.6, "duration": 4.16}, {"text": "connections for this organization shall", "start": 577.2, "duration": 5.52}, {"text": "we we have two square that is four", "start": 579.76, "duration": 6.079}, {"text": "outgoing lines of the decoder and four", "start": 582.72, "duration": 5.679}, {"text": "input lines of the multiplexer so all", "start": 585.839, "duration": 5.761}, {"text": "together the number of connections is 8.", "start": 588.399, "duration": 5.361}, {"text": "so with the increasing configuration of", "start": 591.6, "duration": 4.56}, {"text": "the multiplexers we actually have", "start": 593.76, "duration": 4.24}, {"text": "reduced the number of connections from", "start": 596.16, "duration": 5.119}, {"text": "17 to 10 and then again to 8.", "start": 598.0, "duration": 5.12}, {"text": "impressive isn't it", "start": 601.279, "duration": 5.041}, {"text": "but i'm afraid it's not always the same", "start": 603.12, "duration": 5.2}, {"text": "let me show it to you all", "start": 606.32, "duration": 4.32}, {"text": "suppose we have a function with 10", "start": 608.32, "duration": 6.4}, {"text": "variables from a0 a1 to a9", "start": 610.64, "duration": 6.4}, {"text": "now this table will help us learn about", "start": 614.72, "duration": 4.48}, {"text": "the reduction pattern in a comparative", "start": 617.04, "duration": 4.72}, {"text": "manner now suppose in the first", "start": 619.2, "duration": 5.52}, {"text": "iteration we feed all the 10 input", "start": 621.76, "duration": 6.079}, {"text": "variables into the decoder and for now", "start": 624.72, "duration": 6.559}, {"text": "we aren't using any multiplexers at all", "start": 627.839, "duration": 4.56}, {"text": "in that case", "start": 631.279, "duration": 2.961}, {"text": "the number of connections will be 2", "start": 632.399, "duration": 4.641}, {"text": "raised to the power 10 plus 1.", "start": 634.24, "duration": 5.599}, {"text": "this one is for the function itself so", "start": 637.04, "duration": 6.88}, {"text": "in total 1 0 2 4 plus 1 that is 1 0 2 5", "start": 639.839, "duration": 5.201}, {"text": "connections", "start": 643.92, "duration": 3.68}, {"text": "and the number of links will be 2 raised", "start": 645.04, "duration": 5.84}, {"text": "to the power 10 multiplied by 1", "start": 647.6, "duration": 6.239}, {"text": "as we are only embedding one function so", "start": 650.88, "duration": 5.6}, {"text": "that is 1 0 to 4 links", "start": 653.839, "duration": 5.361}, {"text": "now in the second iteration let's feed", "start": 656.48, "duration": 4.96}, {"text": "five input variables through the input", "start": 659.2, "duration": 4.4}, {"text": "lines of the decoder and the remaining", "start": 661.44, "duration": 4.32}, {"text": "five input variables through the select", "start": 663.6, "duration": 4.88}, {"text": "lines of the multiplexer so now the", "start": 665.76, "duration": 4.4}, {"text": "number of connections will be 2 raised", "start": 668.48, "duration": 4.32}, {"text": "to the power 5 plus 2 raised to the", "start": 670.16, "duration": 4.96}, {"text": "power 5 because of the 2 raised to the", "start": 672.8, "duration": 5.12}, {"text": "power 5 input lines of the multiplexer", "start": 675.12, "duration": 5.44}, {"text": "hence the number of connections will be", "start": 677.92, "duration": 6.159}, {"text": "32 plus 32 that is 64.", "start": 680.56, "duration": 5.6}, {"text": "well that's a significant amount of", "start": 684.079, "duration": 4.561}, {"text": "reduction in number of connections isn't", "start": 686.16, "duration": 3.28}, {"text": "it", "start": 688.64, "duration": 3.68}, {"text": "however for the number of links it will", "start": 689.44, "duration": 5.76}, {"text": "be 2 raised to the power 5 multiplied by", "start": 692.32, "duration": 5.519}, {"text": "2 raised to the power 5 resulting in the", "start": 695.2, "duration": 5.199}, {"text": "same 2 raised to the power 10 that is 1", "start": 697.839, "duration": 5.201}, {"text": "0 to four links so", "start": 700.399, "duration": 5.281}, {"text": "we did reduce the number of connections", "start": 703.04, "duration": 5.44}, {"text": "but the number of links are the same", "start": 705.68, "duration": 5.36}, {"text": "now in the third iteration let's feed", "start": 708.48, "duration": 4.56}, {"text": "four of the input variables through the", "start": 711.04, "duration": 4.72}, {"text": "decoder and the remaining 6 through the", "start": 713.04, "duration": 5.2}, {"text": "select lines of the multiplexer now if", "start": 715.76, "duration": 4.96}, {"text": "you observe the number of connections it", "start": 718.24, "duration": 4.88}, {"text": "is 2 raised to the power 4 because of", "start": 720.72, "duration": 5.119}, {"text": "the output lines of the decoder because", "start": 723.12, "duration": 4.8}, {"text": "if we feed 4 input variables through the", "start": 725.839, "duration": 6.081}, {"text": "decoder we will need a 4 to 16 decoder", "start": 727.92, "duration": 6.96}, {"text": "plus 2 raised to the power 6 because of", "start": 731.92, "duration": 4.4}, {"text": "those many input lines of the", "start": 734.88, "duration": 5.6}, {"text": "multiplexer so finally 16 plus 64 that", "start": 736.32, "duration": 6.56}, {"text": "is 80 connections all together", "start": 740.48, "duration": 4.4}, {"text": "now that's an increment in the number of", "start": 742.88, "duration": 4.399}, {"text": "connections from the second iteration", "start": 744.88, "duration": 4.24}, {"text": "and what about the number of links for", "start": 747.279, "duration": 4.24}, {"text": "this organization it will be 2 raised to", "start": 749.12, "duration": 5.12}, {"text": "the power 4 multiplied by 2 raised to", "start": 751.519, "duration": 5.361}, {"text": "the power 6 that is again 2 raised to", "start": 754.24, "duration": 6.08}, {"text": "the power 10 that is 1 0 to 4.", "start": 756.88, "duration": 6.0}, {"text": "so in this iteration we have lesser", "start": 760.32, "duration": 4.88}, {"text": "amount of connections than the iteration", "start": 762.88, "duration": 3.199}, {"text": "1", "start": 765.2, "duration": 3.04}, {"text": "but more number of connection than", "start": 766.079, "duration": 3.76}, {"text": "iteration 2.", "start": 768.24, "duration": 3.92}, {"text": "suppose now we give three input", "start": 769.839, "duration": 4.8}, {"text": "variables to the decoder and the rest", "start": 772.16, "duration": 4.16}, {"text": "seven to the select lines of the", "start": 774.639, "duration": 4.161}, {"text": "multiplexer so the number of connections", "start": 776.32, "duration": 4.959}, {"text": "will be 2 cube plus 2 raised to the", "start": 778.8, "duration": 6.8}, {"text": "power 7 that is 8 plus 128 which gives", "start": 781.279, "duration": 7.601}, {"text": "us a total of 136 connections", "start": 785.6, "duration": 4.239}, {"text": "oops", "start": 788.88, "duration": 2.639}, {"text": "it increased again", "start": 789.839, "duration": 4.161}, {"text": "and what about the number of links", "start": 791.519, "duration": 5.281}, {"text": "yes you guessed it right 2 cube", "start": 794.0, "duration": 5.2}, {"text": "multiplied by 2 raised to the power 7", "start": 796.8, "duration": 4.56}, {"text": "that is again 2 raised to the power 10", "start": 799.2, "duration": 4.4}, {"text": "which is nothing but 1 0 to 4.", "start": 801.36, "duration": 4.24}, {"text": "so i guess when i say that with the", "start": 803.6, "duration": 3.44}, {"text": "increasing configuration of the", "start": 805.6, "duration": 3.76}, {"text": "multiplexers we can't always keep on", "start": 807.04, "duration": 4.88}, {"text": "reducing the number of connections i", "start": 809.36, "duration": 6.56}, {"text": "wasn't lying was i so in general if we", "start": 811.92, "duration": 6.479}, {"text": "have a function with i plus j number of", "start": 815.92, "duration": 5.52}, {"text": "input variables where i is the number of", "start": 818.399, "duration": 4.8}, {"text": "variables which we will give to the", "start": 821.44, "duration": 4.56}, {"text": "input lines of the decoder and j is the", "start": 823.199, "duration": 5.44}, {"text": "number of variables which we will feed", "start": 826.0, "duration": 4.32}, {"text": "through the select lines of the", "start": 828.639, "duration": 4.081}, {"text": "multiplexers in order to implement this", "start": 830.32, "duration": 4.16}, {"text": "single function the number of", "start": 832.72, "duration": 3.84}, {"text": "connections should be 2 raised to the", "start": 834.48, "duration": 5.68}, {"text": "power i plus 2 raised to the power j", "start": 836.56, "duration": 5.76}, {"text": "where 2 raised to the power i is the", "start": 840.16, "duration": 4.56}, {"text": "number of outgoing lines of the decoder", "start": 842.32, "duration": 4.72}, {"text": "and 2 raised to the power j is the", "start": 844.72, "duration": 4.96}, {"text": "number of input lines in the multiplexer", "start": 847.04, "duration": 5.28}, {"text": "and regarding the links it will be 2", "start": 849.68, "duration": 5.36}, {"text": "raised to the power i multiplied by 2", "start": 852.32, "duration": 4.8}, {"text": "raised to the power j", "start": 855.04, "duration": 4.72}, {"text": "now if we want to implement n number of", "start": 857.12, "duration": 5.68}, {"text": "functions in that case in the number of", "start": 859.76, "duration": 4.8}, {"text": "connections the output lines of the", "start": 862.8, "duration": 4.8}, {"text": "decoder will remain the same that is 2", "start": 864.56, "duration": 4.88}, {"text": "raised to the power i", "start": 867.6, "duration": 4.88}, {"text": "however for n functions n different", "start": 869.44, "duration": 6.0}, {"text": "multiplexers will be required so the", "start": 872.48, "duration": 4.96}, {"text": "number of connections will be 2 raised", "start": 875.44, "duration": 5.519}, {"text": "to the power i plus n into 2 raised to", "start": 877.44, "duration": 6.399}, {"text": "the power j and for the number of links", "start": 880.959, "duration": 6.32}, {"text": "2 raised to the power i multiplied by n", "start": 883.839, "duration": 5.841}, {"text": "into 2 raised to the power j will be the", "start": 887.279, "duration": 3.92}, {"text": "total number", "start": 889.68, "duration": 4.32}, {"text": "so this is how we can reduce the number", "start": 891.199, "duration": 6.561}, {"text": "of connections in the raw matrix", "start": 894.0, "duration": 5.839}, {"text": "all right people that will be all for", "start": 897.76, "duration": 4.96}, {"text": "this session i hope now the complex idea", "start": 899.839, "duration": 4.961}, {"text": "of the rom matrix is lucid enough for", "start": 902.72, "duration": 4.799}, {"text": "you in the next session we will focus on", "start": 904.8, "duration": 5.44}, {"text": "the decoder inside the rom so i hope to", "start": 907.519, "duration": 4.56}, {"text": "see you in the next one thank you all", "start": 910.24, "duration": 3.54}, {"text": "for watching", "start": 912.079, "duration": 1.881}, {"text": "[Music]", "start": 913.78, "duration": 2.36}, {"text": "[Applause]", "start": 913.96, "duration": 12.369}, {"text": "[Music]", "start": 916.14, "duration": 10.189}]