[{"text": "[Music]", "start": 3.02, "duration": 4.5}, {"text": "hello everyone", "start": 6.24, "duration": 3.76}, {"text": "welcome to today's session today we are", "start": 7.52, "duration": 4.159}, {"text": "going to be properly introduced to the", "start": 10.0, "duration": 2.719}, {"text": "cashier memory", "start": 11.679, "duration": 3.281}, {"text": "however before diving straight into it", "start": 12.719, "duration": 3.921}, {"text": "we will first try to understand the", "start": 14.96, "duration": 2.96}, {"text": "importance of it", "start": 16.64, "duration": 4.639}, {"text": "so let's get to learning now during our", "start": 17.92, "duration": 5.279}, {"text": "previous discussion of the hit rate or", "start": 21.279, "duration": 3.041}, {"text": "hit ratio", "start": 23.199, "duration": 3.121}, {"text": "we saw from a program code of 100", "start": 24.32, "duration": 4.48}, {"text": "instructions 80 were being brought into", "start": 26.32, "duration": 4.0}, {"text": "the main memory", "start": 28.8, "duration": 3.439}, {"text": "so you might have thought about why", "start": 30.32, "duration": 3.68}, {"text": "don't we just bring the entire code of", "start": 32.239, "duration": 4.32}, {"text": "100 instructions into the memory itself", "start": 34.0, "duration": 4.239}, {"text": "let me take you through a more realistic", "start": 36.559, "duration": 4.961}, {"text": "illustration we do use our pcs to play", "start": 38.239, "duration": 3.921}, {"text": "games", "start": 41.52, "duration": 3.28}, {"text": "don't we consider the following games", "start": 42.16, "duration": 3.76}, {"text": "gta 5", "start": 44.8, "duration": 4.239}, {"text": "call of duty infinite warfare cod modern", "start": 45.92, "duration": 5.84}, {"text": "warfare the 2019 reboot we are talking", "start": 49.039, "duration": 3.2}, {"text": "about", "start": 51.76, "duration": 4.16}, {"text": "hitman 2 the 2018 reboot these are all", "start": 52.239, "duration": 5.84}, {"text": "great games and the storage requirements", "start": 55.92, "duration": 2.799}, {"text": "of these", "start": 58.079, "duration": 5.041}, {"text": "are almost 100 gigabytes the codmw 2019", "start": 58.719, "duration": 5.121}, {"text": "reboot", "start": 63.12, "duration": 3.2}, {"text": "even takes up more than 200 gigs of", "start": 63.84, "duration": 3.84}, {"text": "storage space", "start": 66.32, "duration": 3.92}, {"text": "however the main memory requirement of", "start": 67.68, "duration": 3.04}, {"text": "these", "start": 70.24, "duration": 2.72}, {"text": "are very less compared to this", "start": 70.72, "duration": 3.92}, {"text": "apparently the recommended", "start": 72.96, "duration": 4.479}, {"text": "main memory requirement for gta 5 is", "start": 74.64, "duration": 4.159}, {"text": "only 4 gb", "start": 77.439, "duration": 4.481}, {"text": "for cod in finite and modern warfare", "start": 78.799, "duration": 7.36}, {"text": "it's only 8 gb and for hitman 2 it's 16.", "start": 81.92, "duration": 7.6}, {"text": "now why so it's because our operating", "start": 86.159, "duration": 3.92}, {"text": "system", "start": 89.52, "duration": 2.88}, {"text": "provides us with the concept of virtual", "start": 90.079, "duration": 4.481}, {"text": "memory and demand paging", "start": 92.4, "duration": 4.16}, {"text": "while playing these or technically", "start": 94.56, "duration": 4.0}, {"text": "speaking while our processors are", "start": 96.56, "duration": 4.48}, {"text": "executing the codes of these games", "start": 98.56, "duration": 5.04}, {"text": "they don't really require the entire 100", "start": 101.04, "duration": 4.24}, {"text": "gb code at once", "start": 103.6, "duration": 4.559}, {"text": "and that's the beauty of it that's why", "start": 105.28, "duration": 5.28}, {"text": "having a way smaller main memory", "start": 108.159, "duration": 4.561}, {"text": "we can still play the games without", "start": 110.56, "duration": 4.32}, {"text": "facing any problems whatsoever", "start": 112.72, "duration": 3.92}, {"text": "and just for the sake of understanding", "start": 114.88, "duration": 3.919}, {"text": "this concept in simple manner", "start": 116.64, "duration": 4.159}, {"text": "we took the example of the code segment", "start": 118.799, "duration": 4.081}, {"text": "of just 100 instructions", "start": 120.799, "duration": 5.121}, {"text": "now let's talk about the cache again for", "start": 122.88, "duration": 4.559}, {"text": "the sake of understanding i", "start": 125.92, "duration": 4.16}, {"text": "mentioned about cache memory as a single", "start": 127.439, "duration": 4.88}, {"text": "unit in our previous discussions", "start": 130.08, "duration": 5.2}, {"text": "but to be precise modern day systems", "start": 132.319, "duration": 5.121}, {"text": "have levels of cache memories", "start": 135.28, "duration": 4.16}, {"text": "generally there are three levels of", "start": 137.44, "duration": 4.32}, {"text": "cachet used mostly in today's system", "start": 139.44, "duration": 3.439}, {"text": "architectures", "start": 141.76, "duration": 4.88}, {"text": "the l1 l2 and the l3 caching", "start": 142.879, "duration": 6.801}, {"text": "now as we have multi-core processors in", "start": 146.64, "duration": 4.8}, {"text": "our machines nowadays", "start": 149.68, "duration": 4.639}, {"text": "you probably have heard the terms dual", "start": 151.44, "duration": 3.439}, {"text": "quad", "start": 154.319, "duration": 3.521}, {"text": "octa-core let me tell you these belong", "start": 154.879, "duration": 6.241}, {"text": "to the mimd family of flint's taxonomy", "start": 157.84, "duration": 5.28}, {"text": "i hope you remember that from our", "start": 161.12, "duration": 3.839}, {"text": "computer architecture classifications", "start": 163.12, "duration": 2.88}, {"text": "discussion", "start": 164.959, "duration": 3.441}, {"text": "now l1 cache is embedded in the", "start": 166.0, "duration": 3.519}, {"text": "processor itself", "start": 168.4, "duration": 3.919}, {"text": "right from the days of its origin later", "start": 169.519, "duration": 4.961}, {"text": "when the l2 caches emerged", "start": 172.319, "duration": 3.761}, {"text": "they were incorporated in the", "start": 174.48, "duration": 4.32}, {"text": "motherboard in their initial days", "start": 176.08, "duration": 4.799}, {"text": "but now they are also a part of the", "start": 178.8, "duration": 3.439}, {"text": "processor itself", "start": 180.879, "duration": 3.44}, {"text": "to be precise different cores of the", "start": 182.239, "duration": 3.92}, {"text": "processor have their own", "start": 184.319, "duration": 5.361}, {"text": "l1 and l2 caches now coming to the l3", "start": 186.159, "duration": 5.601}, {"text": "caches they are also implanted in the", "start": 189.68, "duration": 2.8}, {"text": "processor", "start": 191.76, "duration": 3.119}, {"text": "yet shared by all the different cores of", "start": 192.48, "duration": 3.679}, {"text": "the processor", "start": 194.879, "duration": 3.521}, {"text": "by now you probably have the idea about", "start": 196.159, "duration": 3.201}, {"text": "these levels", "start": 198.4, "duration": 4.0}, {"text": "size wise l1 is the smallest yet it is", "start": 199.36, "duration": 4.32}, {"text": "the fastest among", "start": 202.4, "duration": 4.08}, {"text": "all the other caches l2 caches come", "start": 203.68, "duration": 3.199}, {"text": "after", "start": 206.48, "duration": 2.479}, {"text": "l1 and these are used to store the", "start": 206.879, "duration": 3.681}, {"text": "frequently accessed data", "start": 208.959, "duration": 3.601}, {"text": "which are second in priority also", "start": 210.56, "duration": 4.239}, {"text": "frankly can't really be incorporated", "start": 212.56, "duration": 3.759}, {"text": "within the l1 cache", "start": 214.799, "duration": 4.241}, {"text": "due to the limitation of space finally", "start": 216.319, "duration": 5.28}, {"text": "the l3 caches are the largest of all", "start": 219.04, "duration": 5.44}, {"text": "and these are also called shared cache", "start": 221.599, "duration": 5.121}, {"text": "now i hope the idea of different cache", "start": 224.48, "duration": 3.679}, {"text": "levels are clear to you", "start": 226.72, "duration": 3.68}, {"text": "in our later discussions for the sake of", "start": 228.159, "duration": 3.121}, {"text": "simplicity", "start": 230.4, "duration": 2.8}, {"text": "we will assume to have only a single", "start": 231.28, "duration": 3.44}, {"text": "cache mostly", "start": 233.2, "duration": 3.52}, {"text": "however i'll provide detailed", "start": 234.72, "duration": 3.92}, {"text": "illustration of the various levels", "start": 236.72, "duration": 4.079}, {"text": "during the explanations of cache level", "start": 238.64, "duration": 4.56}, {"text": "related numerical problems", "start": 240.799, "duration": 4.321}, {"text": "now let's get to know about a few", "start": 243.2, "duration": 4.319}, {"text": "terminologies related to cache", "start": 245.12, "duration": 6.16}, {"text": "the first one cache hit during execution", "start": 247.519, "duration": 5.761}, {"text": "if the processor is able to find out the", "start": 251.28, "duration": 3.2}, {"text": "required information", "start": 253.28, "duration": 4.239}, {"text": "in the cachet we call it a cache ahead", "start": 254.48, "duration": 5.279}, {"text": "and the time required by this process is", "start": 257.519, "duration": 4.0}, {"text": "known as hit latency", "start": 259.759, "duration": 4.081}, {"text": "here using a specific data structure", "start": 261.519, "duration": 3.68}, {"text": "called tag directory", "start": 263.84, "duration": 3.2}, {"text": "the processor finds out whether the", "start": 265.199, "duration": 3.121}, {"text": "required information", "start": 267.04, "duration": 4.159}, {"text": "is present in the cache or not now if", "start": 268.32, "duration": 4.72}, {"text": "the information is absent from the", "start": 271.199, "duration": 3.521}, {"text": "cachet that is if the info", "start": 273.04, "duration": 4.32}, {"text": "is missing from the cachet we call it", "start": 274.72, "duration": 3.919}, {"text": "cache a miss", "start": 277.36, "duration": 4.0}, {"text": "in this case as discussed earlier the", "start": 278.639, "duration": 4.721}, {"text": "processor will seek for the information", "start": 281.36, "duration": 3.76}, {"text": "in the next level of memory", "start": 283.36, "duration": 3.68}, {"text": "which is the main memory and bring it", "start": 285.12, "duration": 3.6}, {"text": "from there also", "start": 287.04, "duration": 4.56}, {"text": "meanwhile place it in the cache itself", "start": 288.72, "duration": 3.84}, {"text": "this entire", "start": 291.6, "duration": 4.24}, {"text": "period of time is called", "start": 292.56, "duration": 6.8}, {"text": "an fyi if the information is absent", "start": 295.84, "duration": 5.919}, {"text": "also from the main memory the situation", "start": 299.36, "duration": 3.04}, {"text": "is called", "start": 301.759, "duration": 3.761}, {"text": "page fault and if found we call it page", "start": 302.4, "duration": 3.84}, {"text": "hit", "start": 305.52, "duration": 4.0}, {"text": "during page fault the os as it manages", "start": 306.24, "duration": 5.04}, {"text": "all the intercommunication between the", "start": 309.52, "duration": 4.08}, {"text": "main memory and secondary memory", "start": 311.28, "duration": 4.16}, {"text": "looks for the information in the last", "start": 313.6, "duration": 3.439}, {"text": "level of the hierarchy that is the", "start": 315.44, "duration": 2.72}, {"text": "secondary storage", "start": 317.039, "duration": 3.681}, {"text": "and brings it back in the main memory", "start": 318.16, "duration": 4.64}, {"text": "this entire process is known as", "start": 320.72, "duration": 4.96}, {"text": "page fault service thus the time taken", "start": 322.8, "duration": 3.76}, {"text": "to perform it", "start": 325.68, "duration": 3.68}, {"text": "is termed as page fault service time now", "start": 326.56, "duration": 3.12}, {"text": "we", "start": 329.36, "duration": 2.72}, {"text": "already know that the information whose", "start": 329.68, "duration": 4.48}, {"text": "requirement frequency is very much", "start": 332.08, "duration": 3.28}, {"text": "higher than the others", "start": 334.16, "duration": 4.479}, {"text": "are generally kept in the cache now this", "start": 335.36, "duration": 5.36}, {"text": "prioritizing of the parts of the main", "start": 338.639, "duration": 4.0}, {"text": "memory which are to be loaded inside the", "start": 340.72, "duration": 2.479}, {"text": "cache", "start": 342.639, "duration": 3.521}, {"text": "is done using the locality of reference", "start": 343.199, "duration": 4.081}, {"text": "in simpler words", "start": 346.16, "duration": 3.759}, {"text": "there are two approaches based on which", "start": 347.28, "duration": 4.16}, {"text": "the processor can decide", "start": 349.919, "duration": 3.681}, {"text": "which data of the main memory should be", "start": 351.44, "duration": 3.92}, {"text": "placed inside the cache", "start": 353.6, "duration": 4.48}, {"text": "the first approach is based on spatial", "start": 355.36, "duration": 3.76}, {"text": "locality", "start": 358.08, "duration": 3.6}, {"text": "it means at a particular point of time", "start": 359.12, "duration": 4.079}, {"text": "if a memory location", "start": 361.68, "duration": 4.0}, {"text": "is referred by the processor chances are", "start": 363.199, "duration": 4.72}, {"text": "the nearby locations will probably be", "start": 365.68, "duration": 4.16}, {"text": "referred in near future", "start": 367.919, "duration": 4.161}, {"text": "next approach is based on temporal", "start": 369.84, "duration": 3.359}, {"text": "locality", "start": 372.08, "duration": 3.28}, {"text": "it means if the memory location is", "start": 373.199, "duration": 4.401}, {"text": "referred then there are chances that it", "start": 375.36, "duration": 3.839}, {"text": "will be referred again", "start": 377.6, "duration": 4.08}, {"text": "this idea will be more clear during the", "start": 379.199, "duration": 3.12}, {"text": "study of", "start": 381.68, "duration": 3.84}, {"text": "cache replacement policies well that was", "start": 382.319, "duration": 4.401}, {"text": "all for this session", "start": 385.52, "duration": 2.799}, {"text": "i guess since we learned the", "start": 386.72, "duration": 3.52}, {"text": "organization of cache memory", "start": 388.319, "duration": 4.401}, {"text": "now it will be easier for us to get into", "start": 390.24, "duration": 4.0}, {"text": "the different cache memory mapping", "start": 392.72, "duration": 2.08}, {"text": "techniques", "start": 394.24, "duration": 2.64}, {"text": "and we can have a better understanding", "start": 394.8, "duration": 4.16}, {"text": "of the intercommunication of cachet", "start": 396.88, "duration": 4.879}, {"text": "and main memory in details hope to see", "start": 398.96, "duration": 3.76}, {"text": "you in the next one", "start": 401.759, "duration": 8.081}, {"text": "thank you all for watching", "start": 402.72, "duration": 7.12}, {"text": "[Music]", "start": 409.87, "duration": 7.41}, {"text": "you", "start": 415.199, "duration": 2.081}]