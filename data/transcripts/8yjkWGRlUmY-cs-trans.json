[{"text": "Hey guys this is part one of my introduction to", "start": 0.342, "duration": 3.08}, {"text": "classes and objects and in this video I'm going to", "start": 3.421, "duration": 3.221}, {"text": "talk about what are classes and objects and then what", "start": 6.641, "duration": 3.86}, {"text": "are attributes, methods, and constructors and at the end of", "start": 10.502, "duration": 3.78}, {"text": "this video I'm going to give you some code samples", "start": 14.282, "duration": 2.399}, {"text": "in Java but this video is going to be mostly", "start": 16.691, "duration": 2.8}, {"text": "language independent so you'll be able to use what you", "start": 19.492, "duration": 2.84}, {"text": "learn in this video in whatever language you're using.", "start": 22.332, "duration": 3.579}, {"text": "Classes and objects are actually one of the most fundamental topics", "start": 25.911, "duration": 3.431}, {"text": "when it comes to data structures and algorithms, so let's get started.", "start": 29.351, "duration": 2.94}, {"text": "So what are classes and objects? I think", "start": 32.292, "duration": 3.849}, {"text": "the best way to explain what they are would be", "start": 36.141, "duration": 2.3}, {"text": "to give you a really concrete example. So let's say", "start": 38.441, "duration": 2.89}, {"text": "as an example, you're thinking about making a website where", "start": 41.332, "duration": 3.86}, {"text": "people can visit and talk to a bunch of robots. So what you have in mind is", "start": 45.192, "duration": 5.308}, {"text": "when people feel lonely or something they can come visit", "start": 50.571, "duration": 2.94}, {"text": "your website and say hi to one of the robots there.", "start": 53.511, "duration": 2.67}, {"text": "So when a user comes to your website they might see a list of robots like this,", "start": 56.181, "duration": 6.539}, {"text": "and here you see two of those robots and they're called Tom and Jerry.", "start": 62.76, "duration": 5.151}, {"text": "Aside from their names they have some obvious differences.", "start": 67.911, "duration": 4.1}, {"text": "First of all Tom's color is red, while Jerry's color", "start": 72.132, "duration": 4.069}, {"text": "is blue as you can see and Tom is slightly", "start": 76.231, "duration": 4.12}, {"text": "lighter in weight than Jerry with thirty pounds of weight while", "start": 80.352, "duration": 4.68}, {"text": "Jerry is forty pounds and they both have the same", "start": 85.032, "duration": 4.25}, {"text": "functionality. When you click this button \"Introduce\", Tom", "start": 89.292, "duration": 4.18}, {"text": "will say \"my name is Tom\" and Jerry will say", "start": 93.472, "duration": 4.48}, {"text": "\"my name is Jerry\" and that's all you have for", "start": 97.972, "duration": 2.509}, {"text": "now and it's pretty basic but that's all you want", "start": 100.481, "duration": 2.8}, {"text": "at the beginning when you create this website.", "start": 103.422, "duration": 1.978}, {"text": "Now, to create a system like this you basically need a way", "start": 105.4, "duration": 4.222}, {"text": "to represent these different entities or these different robots in", "start": 109.622, "duration": 4.41}, {"text": "whatever programming language you're using whether it's Python, Java, or", "start": 114.032, "duration": 4.24}, {"text": "Javascript and that's where classes and objects come in.", "start": 118.272, "duration": 3.028}, {"text": "Now, to represent each of these robots Tom and Jerry that", "start": 122.3, "duration": 3.6}, {"text": "we saw earlier in whatever programming language you're using you", "start": 125.9, "duration": 3.7}, {"text": "need to store two sets of information. The first set", "start": 129.6, "duration": 3.78}, {"text": "of information that you need to store is the properties", "start": 133.38, "duration": 3.35}, {"text": "that each robot has. So for example the first robot", "start": 136.8, "duration": 3.44}, {"text": "we saw had these properties: its name was Tom, the", "start": 140.24, "duration": 4.73}, {"text": "color was red, and the weight was thirty pounds. And", "start": 144.97, "duration": 4.48}, {"text": "the second set of information you need to store for", "start": 149.45, "duration": 2.47}, {"text": "each of these robots is the set of functionalities it", "start": 151.93, "duration": 3.34}, {"text": "has. As we saw earlier, it had only a single", "start": 155.28, "duration": 3.34}, {"text": "functionality in this particular case and that was to introduce", "start": 158.62, "duration": 3.85}, {"text": "itself and that might be represented as a function in", "start": 162.47, "duration": 3.96}, {"text": "whatever programming language you're using and let's just call it", "start": 166.44, "duration": 3.16}, {"text": "introduceSelf() here for now. At this point you might", "start": 169.84, "duration": 3.6}, {"text": "say \"is there any convenient way to organize these properties", "start": 173.44, "duration": 3.83}, {"text": "and functions together?\" There is, and that's called an object.", "start": 177.27, "duration": 4.11}, {"text": "An object is basically a collection of properties which can", "start": 181.97, "duration": 4.58}, {"text": "be expressed as variables and some functions, and with that", "start": 186.55, "duration": 4.58}, {"text": "collection of information an object can represent some \"thing\", whatever that", "start": 191.14, "duration": 5.39}, {"text": "\"thing\" is. So in this particular case this particular object", "start": 196.53, "duration": 4.09}, {"text": "is representing this particular robot, Tom, but you can make", "start": 200.85, "duration": 4.2}, {"text": "an object so that it represents a particular person, or", "start": 205.05, "duration": 3.6}, {"text": "a particular dog, or anything else for that matter.", "start": 208.65, "duration": 3.43}, {"text": "If you decide to represent a particular person with an object", "start": 212.08, "duration": 3.8}, {"text": "let's say Lady Gaga just as an example, you might have", "start": 216.24, "duration": 4.14}, {"text": "a different set of variables and a different set of functions", "start": 220.37, "duration": 3.46}, {"text": "to represent that person. So for example, you might still", "start": 223.97, "duration": 3.33}, {"text": "have \"name\", but you might also have \"height\" and", "start": 227.3, "duration": 3.3}, {"text": "\"weight\", \"eye color\" and \"ethnicity\" and so on and your object", "start": 230.6, "duration": 4.91}, {"text": "will probably have a different set of functions too, to", "start": 235.55, "duration": 2.88}, {"text": "show what kind of actions that person can take. It", "start": 238.43, "duration": 3.2}, {"text": "could be for example things like walk, sleep, talk, or", "start": 241.63, "duration": 5.56}, {"text": "anything a person might do. OK, let's backtrack here a", "start": 247.19, "duration": 3.38}, {"text": "little bit. Once you create an object to express this", "start": 250.57, "duration": 3.85}, {"text": "particular robot Tom, you'll be able to put this object", "start": 254.42, "duration": 3.9}, {"text": "in a variable just like that let's say \"r1\"", "start": 258.32, "duration": 4.4}, {"text": "just as an example. You'll be able to use this", "start": 262.87, "duration": 3.43}, {"text": "variable that contains this whole set of information.", "start": 266.3, "duration": 4.1}, {"text": "The properties or the variables and the functions just", "start": 270.4, "duration": 3.51}, {"text": "like any other variables for example to pass it into", "start": 273.91, "duration": 3.19}, {"text": "a function as one of the arguments. OK, let's now", "start": 277.1, "duration": 3.11}, {"text": "take a look at how the second robot we saw,", "start": 280.21, "duration": 2.56}, {"text": "Jerry, can be represented with an object. It's gonna look", "start": 282.89, "duration": 3.88}, {"text": "pretty similar to the first one it's gonna have the", "start": 286.78, "duration": 2.86}, {"text": "same set of properties but different values this time \"Jerry\",", "start": 289.64, "duration": 4.03}, {"text": "\"blue\", and \"40\", and the same function as well,", "start": 293.67, "duration": 4.54}, {"text": "introduceSelf() and of course once you create this object, you'll", "start": 298.22, "duration": 3.69}, {"text": "be able to put it in a variable as well", "start": 301.91, "duration": 2.51}, {"text": "let's call that one \"r2\", and because you have two", "start": 304.61, "duration": 3.85}, {"text": "distinct variables containing two different objects, you'll be able to", "start": 308.46, "duration": 4.46}, {"text": "distinguish them very easily in your code and just quickly", "start": 312.92, "duration": 3.7}, {"text": "about terminology, these variables within an object are called", "start": 316.62, "duration": 5.34}, {"text": "either \"instance variables\" or \"attributes\" and these functions within", "start": 322.09, "duration": 5.11}, {"text": "an object are called \"methods\". OK, so when you", "start": 327.21, "duration": 3.56}, {"text": "see these two objects you might say well they're pretty", "start": 330.77, "duration": 3.5}, {"text": "similar, they have the exact same set of variables or", "start": 334.27, "duration": 4.11}, {"text": "attributes and they have the exact same set of functions", "start": 338.39, "duration": 3.7}, {"text": "only one function in this case so you might", "start": 342.26, "duration": 2.63}, {"text": "say \"is there any convenient way to organize that somehow?\"", "start": 344.89, "duration": 3.46}, {"text": "There is, and that's what a class is essentially. Now", "start": 348.84, "duration": 3.82}, {"text": "what's a class? A class is basically like a blueprint", "start": 352.66, "duration": 3.85}, {"text": "from which you can make objects so just imagine for", "start": 356.67, "duration": 3.57}, {"text": "a second someone telling you \"please make a robot\". If", "start": 360.24, "duration": 4.052}, {"text": "someone tells you something like that, you say", "start": 364.292, "duration": 2.59}, {"text": "\"what kind of robot do you want? What should it", "start": 366.882, "duration": 2.77}, {"text": "look like, and what kind of properties should it have, and", "start": 369.652, "duration": 2.79}, {"text": "what kind of functionalities should it have?\" So basically, if", "start": 372.442, "duration": 4.09}, {"text": "you want to make a robot in sort of the", "start": 376.532, "duration": 1.97}, {"text": "real world, you need a blueprint to make that from", "start": 378.502, "duration": 3.45}, {"text": "to know what the robot should look like and that's", "start": 382.232, "duration": 2.78}, {"text": "sort of how it works with programming with objects and", "start": 385.012, "duration": 3.28}, {"text": "classes too. So when you make an object, you want", "start": 388.292, "duration": 3.48}, {"text": "to know what kind of properties, what kind of attributes", "start": 391.772, "duration": 2.98}, {"text": "it'll have, and what kind of functions it'll have and", "start": 394.992, "duration": 2.77}, {"text": "you can use a class to specify exactly that.", "start": 397.762, "duration": 3.46}, {"text": "OK, let's now see what this particular class might look like", "start": 401.222, "duration": 2.76}, {"text": "for these two objects, these two robots. It'll probably", "start": 404.272, "duration": 3.63}, {"text": "look like this. As you can see, it has the", "start": 407.902, "duration": 3.15}, {"text": "same set of properties as the objects themselves \"name\", \"color\",", "start": 411.052, "duration": 4.53}, {"text": "and \"weight\", but the values for these three properties are", "start": 415.972, "duration": 3.82}, {"text": "not defined yet and that's because the class doesn't refer", "start": 419.792, "duration": 3.91}, {"text": "to any particular object. It doesn't refer to this robot,", "start": 423.702, "duration": 3.83}, {"text": "or this robot, in particular. It just refers to this", "start": 427.612, "duration": 4.0}, {"text": "category of robots or this type of robot in general.", "start": 431.682, "duration": 3.2}, {"text": "Then when you create a specific object using this", "start": 435.472, "duration": 3.32}, {"text": "class then you can specify what the name should be,", "start": 438.792, "duration": 3.79}, {"text": "what the color should be, and what the weight should", "start": 442.592, "duration": 3.0}, {"text": "be and also notice here that we already have the", "start": 445.592, "duration": 3.95}, {"text": "introduceSelf() function in this class.", "start": 449.552, "duration": 2.59}, {"text": "You can actually implement it already when you define this", "start": 452.572, "duration": 3.19}, {"text": "class by writing something like this. So this is just", "start": 455.762, "duration": 4.94}, {"text": "an example from Java. In Java, for printing something on", "start": 460.712, "duration": 3.66}, {"text": "your computer we have \"System.out.println()\".", "start": 464.372, "duration": 3.825}, {"text": "It's similar to the print function or the printf", "start": 468.197, "duration": 3.995}, {"text": "function in other languages and then inside the input", "start": 472.352, "duration": 4.83}, {"text": "of this function we have \"My name is \" as a string,", "start": 477.712, "duration": 3.048}, {"text": "plus \"name\" and this name will refer to whatever", "start": 480.76, "duration": 5.002}, {"text": "the value of the name is for that particular object.", "start": 485.762, "duration": 3.84}, {"text": "So for example if you run this function in this", "start": 489.992, "duration": 3.64}, {"text": "object it's going to print out \"My name is Tom\",", "start": 493.642, "duration": 4.26}, {"text": "because that's the name of this particular object, and", "start": 498.362, "duration": 3.5}, {"text": "if you run this function here in this object instead, it's", "start": 501.862, "duration": 3.74}, {"text": "going to print out \"My name is Jerry\" instead.", "start": 505.602, "duration": 3.1}, {"text": "And one more thing to note here is that when", "start": 509.292, "duration": 2.29}, {"text": "you define a class like this one you need to", "start": 511.582, "duration": 3.38}, {"text": "give it a name. It could be anything, but let's", "start": 514.962, "duration": 2.89}, {"text": "call it \"Robot\" here and as you can see the", "start": 517.852, "duration": 3.06}, {"text": "first letter \"R\" is capitalized and that's a pretty", "start": 520.912, "duration": 3.33}, {"text": "common convention when you name a Class. OK, let's now take", "start": 524.242, "duration": 3.54}, {"text": "a look at how this whole thing might look like", "start": 527.782, "duration": 2.64}, {"text": "in code. We're going to take a look at some", "start": 530.432, "duration": 2.14}, {"text": "code in Java here but other languages are typically pretty", "start": 532.572, "duration": 4.13}, {"text": "similar. Let's first assume that we already have our class", "start": 536.702, "duration": 3.93}, {"text": "defined. Like we said, it's going to be called Robot, but", "start": 540.632, "duration": 3.98}, {"text": "we're going to take a look at what's going to", "start": 544.612, "duration": 1.28}, {"text": "go inside later and once you define", "start": 545.892, "duration": 3.0}, {"text": "this class Robot, you'll be able to use this class", "start": 548.892, "duration": 2.99}, {"text": "of course to create an object out of it. And", "start": 551.992, "duration": 3.24}, {"text": "you can do that like this. We have \"Robot", "start": 555.232, "duration": 3.56}, {"text": "r1 = new Robot()\", and this \"new Robot()\" says", "start": 558.792, "duration": 4.99}, {"text": "create a new object with this class Robot, and then", "start": 563.822, "duration": 3.93}, {"text": "we're assigning that object to r1 and then we", "start": 567.752, "duration": 4.25}, {"text": "have the word Robot here again because a class is", "start": 572.002, "duration": 3.84}, {"text": "used not just to create an object but also as", "start": 575.842, "duration": 3.52}, {"text": "a type too you know just like we say \"string", "start": 579.372, "duration": 3.22}, {"text": "r1\" if we want to create a string, we", "start": 582.612, "duration": 2.8}, {"text": "can say \"Robot r1\" to create a reference to", "start": 585.412, "duration": 4.47}, {"text": "a Robot object. OK, let's move on. When you create", "start": 589.892, "duration": 3.65}, {"text": "a new object this way this new object doesn't have", "start": 593.552, "duration": 3.36}, {"text": "the properties, doesn't have its instance variables set yet", "start": 596.912, "duration": 4.1}, {"text": "so you need to set them after that just like", "start": 601.712, "duration": 2.99}, {"text": "that. Here we have \"r1.name = 'Tom'\"", "start": 604.712, "duration": 3.91}, {"text": "and that sets the name attribute of this object or", "start": 609.052, "duration": 3.4}, {"text": "the name instance variable of this object to Tom and", "start": 612.452, "duration": 4.05}, {"text": "then you need to do the same thing for the", "start": 616.502, "duration": 1.59}, {"text": "other two instance variables by saying", "start": 618.102, "duration": 2.798}, {"text": "\"r1.color = 'red'\" and \"r1.weight = 30\", so", "start": 620.9, "duration": 4.512}, {"text": "that's the first object r1, let's see how we", "start": 625.412, "duration": 2.84}, {"text": "can create a second object here. As you can see", "start": 628.252, "duration": 2.67}, {"text": "the second block of code here is pretty similar to", "start": 630.932, "duration": 2.93}, {"text": "the first block. We have Robot r2 = new Robot();", "start": 633.862, "duration": 3.938}, {"text": "to create a new object and then we have", "start": 637.8, "duration": 2.422}, {"text": "\"r2.name = 'Jerry'\" and so on to set", "start": 640.362, "duration": 3.15}, {"text": "the instance variables of that object. So that's how you", "start": 643.732, "duration": 3.17}, {"text": "can create two objects of the Robot class here but", "start": 646.902, "duration": 4.09}, {"text": "what about the functionality we saw earlier, introduceSelf()? To", "start": 650.992, "duration": 3.78}, {"text": "run the function for each of these objects the syntax", "start": 654.782, "duration": 3.46}, {"text": "for that is actually pretty simple. It's going to look", "start": 658.242, "duration": 3.02}, {"text": "like this. We have r1.introduceSelf(), this", "start": 661.262, "duration": 5.22}, {"text": "just says run this function introduceSelf() on this object", "start": 666.482, "duration": 4.39}, {"text": "r1. So when you run this line it's going", "start": 670.882, "duration": 3.58}, {"text": "to print out \"My name is Tom\" because this robot's", "start": 674.462, "duration": 3.74}, {"text": "name is Tom and then you could do the same", "start": 678.202, "duration": 2.2}, {"text": "thing for r2 by writing r2.introduceSelf(),", "start": 680.402, "duration": 3.798}, {"text": "and that's going to run this function, introduceSelf(), for", "start": 684.2, "duration": 3.092}, {"text": "r2 and then it's going to print out", "start": 687.302, "duration": 1.898}, {"text": "\"My name is Jerry\". OK let's now see how you can", "start": 689.2, "duration": 3.762}, {"text": "actually define this class. First of all, to define what", "start": 692.972, "duration": 3.96}, {"text": "instance variables this class will have, you can just write", "start": 696.942, "duration": 3.34}, {"text": "these. This of course says the instance variables that this", "start": 700.332, "duration": 3.83}, {"text": "class will have are \"name\", which is going to be", "start": 704.162, "duration": 2.87}, {"text": "a string, \"color\", which is a string as well, and", "start": 707.032, "duration": 2.89}, {"text": "\"weight\", which is an integer. And when you see other", "start": 709.922, "duration": 2.66}, {"text": "sample code in Java, you might see words like \"public\",", "start": 712.582, "duration": 3.74}, {"text": "\"private\", or something else before each of these attributes but", "start": 716.482, "duration": 4.72}, {"text": "just to keep this simple I'm not going to talk", "start": 721.212, "duration": 2.01}, {"text": "about what they are in this particular tutorial and when", "start": 723.222, "duration": 3.17}, {"text": "you run this code it will just work just fine", "start": 726.392, "duration": 2.87}, {"text": "without adding these words too. OK, the next thing you", "start": 729.372, "duration": 2.85}, {"text": "need to define and implement is this function introduceSelf(). And", "start": 732.222, "duration": 4.01}, {"text": "for that you can write this. Here, we're defining a", "start": 736.232, "duration": 3.4}, {"text": "function called introduceSelf() and we have the \"void\" prefix", "start": 739.632, "duration": 4.25}, {"text": "here to show that this function is not going to", "start": 743.882, "duration": 2.92}, {"text": "return anything and notice that this function definition is still", "start": 746.802, "duration": 4.29}, {"text": "inside this class and then the implementation is as we", "start": 751.092, "duration": 3.36}, {"text": "saw earlier: System.out.println(), \"My name", "start": 754.452, "duration": 3.44}, {"text": "is this.name\". Actually we could just have name", "start": 757.892, "duration": 3.36}, {"text": "here, but I wrote this.name instead just", "start": 761.252, "duration": 3.5}, {"text": "for emphasis. So what's this here? \"This\" refers to whatever", "start": 764.752, "duration": 4.77}, {"text": "object, whatever particular object, that you're running this function on.", "start": 769.532, "duration": 4.21}, {"text": "So if you write r1.introduceSelf(), you're", "start": 774.332, "duration": 2.98}, {"text": "running this function on r1 so \"this\" will be", "start": 777.312, "duration": 3.33}, {"text": "equivalent to r1. So it's going to be", "start": 780.642, "duration": 2.51}, {"text": "sort of like saying System.out.println(), \"My", "start": 783.152, "duration": 3.24}, {"text": "name is r1.name\", which is going to", "start": 786.392, "duration": 3.2}, {"text": "be Tom of course. And then when you run", "start": 789.592, "duration": 2.72}, {"text": "r2.introduceSelf(), this will refer to \"this\" key", "start": 792.312, "duration": 4.25}, {"text": "word will refer to r2 instead so when you", "start": 796.562, "duration": 3.82}, {"text": "run r2.introduceSelf() it's going to print", "start": 800.382, "duration": 2.32}, {"text": "out \"My name is r2.name\", which is", "start": 802.702, "duration": 3.26}, {"text": "Jerry. OK so that's the basics of classes and objects", "start": 805.972, "duration": 4.05}, {"text": "in Java, but when you look at these two blocks", "start": 810.032, "duration": 2.88}, {"text": "of code you might say well they're pretty repetitive... you", "start": 812.912, "duration": 3.77}, {"text": "know, you need to repeat the same things over and", "start": 816.682, "duration": 2.16}, {"text": "over again and then it's pretty cumbersome to remember to", "start": 818.842, "duration": 3.48}, {"text": "set these attributes every time too, every time you create", "start": 822.322, "duration": 3.54}, {"text": "an object. So you might say \"is there any way", "start": 825.862, "duration": 2.48}, {"text": "to simplify that?\" There is, and it's called a constructor.", "start": 828.342, "duration": 3.97}, {"text": "A constructor is basically a function that allows you to", "start": 832.652, "duration": 3.34}, {"text": "create an object from a class and then you'll", "start": 835.992, "duration": 3.66}, {"text": "be able to use the constructor to you know do", "start": 839.652, "duration": 2.62}, {"text": "things like set the attributes for yourself. And actually you", "start": 842.272, "duration": 3.65}, {"text": "already used a constructor, you know this line right here,", "start": 845.922, "duration": 3.07}, {"text": "\"new Robot()\" that's a constructor but that's a default constructor", "start": 849.002, "duration": 4.35}, {"text": "that Java defines for you and this constructor doesn't set", "start": 853.362, "duration": 3.77}, {"text": "any of the attributes. So let's see how we can", "start": 857.142, "duration": 2.81}, {"text": "create our own constructor that does set the attributes for", "start": 859.952, "duration": 3.59}, {"text": "you. So that constructor might look like this. So if", "start": 863.542, "duration": 4.55}, {"text": "you see this function you'll notice that you know", "start": 868.092, "duration": 2.88}, {"text": "it looks like a regular function except for that we", "start": 870.982, "duration": 2.54}, {"text": "don't have any prefix here like \"void\" or \"string\" for", "start": 873.522, "duration": 3.92}, {"text": "the return value. Instead, this constructor is just", "start": 877.442, "duration": 3.81}, {"text": "called Robot. Notice that that name is exactly the same", "start": 881.252, "duration": 3.51}, {"text": "as the class name and then it has three arguments:", "start": 884.762, "duration": 3.5}, {"text": "\"String n\", \"String c\", and \"int w\". And then inside", "start": 888.652, "duration": 3.83}, {"text": "this function we're setting \"this.name\" to n,", "start": 892.482, "duration": 3.118}, {"text": "\"this.color\" to c, and \"this.weight\" to w. As we saw", "start": 895.6, "duration": 4.272}, {"text": "earlier, \"this\" refers to the particular object that we're talking", "start": 899.872, "duration": 4.15}, {"text": "about here, in this case the particular object that has", "start": 904.022, "duration": 3.24}, {"text": "just been created, and then we're saying that object's name", "start": 907.272, "duration": 3.33}, {"text": "should be n, which is the given argument, and then", "start": 910.612, "duration": 3.33}, {"text": "that object's color should be c which is the given", "start": 913.952, "duration": 2.31}, {"text": "argument and so on. And then here, the common", "start": 916.262, "duration": 3.1}, {"text": "practice here is to name these arguments exactly the same", "start": 919.362, "duration": 4.19}, {"text": "as these attributes, \"name\", \"color\", and \"weight\", and with that", "start": 923.552, "duration": 4.24}, {"text": "this part is going to look like \"this.name = name\",", "start": 927.792, "duration": 2.808}, {"text": "\"this.color = color\",", "start": 930.6, "duration": 2.4}, {"text": "\"this.weight = weight\", but with that naming this function, this constructor,", "start": 933.0, "duration": 5.522}, {"text": "is doing exactly the same thing as this one so", "start": 938.672, "duration": 2.94}, {"text": "that's really just a style issue. OK moving on, we're", "start": 941.612, "duration": 3.33}, {"text": "almost done here... let's see how we can actually use", "start": 944.942, "duration": 2.78}, {"text": "this constructor. Actually when you define your own constructor, your", "start": 947.722, "duration": 3.93}, {"text": "own custom constructor, the default constructor stops working. So these", "start": 951.652, "duration": 5.38}, {"text": "two blocks of code no longer works and then you", "start": 957.032, "duration": 3.01}, {"text": "can use this new constructor to create new objects, just", "start": 960.042, "duration": 3.802}, {"text": "like this. This one says \"Robot r1 = new Robot(\"Tom\", \"red\", 30)\".", "start": 963.844, "duration": 6.876}, {"text": "So these three arguments, \"Tom\",", "start": 970.76, "duration": 3.2}, {"text": "\"red\", and \"30\", will be passed on to this constructor", "start": 973.974, "duration": 3.92}, {"text": "and then this block of code is going to be", "start": 978.484, "duration": 2.55}, {"text": "run and so r1's name is going to be", "start": 981.034, "duration": 4.36}, {"text": "given \"n\" which is \"Tom\" and then the color will", "start": 985.394, "duration": 2.75}, {"text": "be \"red\" and then \"weight\" will be 30. So this", "start": 988.144, "duration": 3.29}, {"text": "piece of code will actually be equivalent to the", "start": 991.434, "duration": 3.74}, {"text": "whole block of code we had earlier right here. Basically,", "start": 995.174, "duration": 3.52}, {"text": "create a new object and then set the attributes to", "start": 998.694, "duration": 3.78}, {"text": "the given arguments. And then we can do the same", "start": 1002.474, "duration": 3.21}, {"text": "thing for r2 as well by writing", "start": 1005.684, "duration": 3.196}, {"text": "\"Robot r2 = new Robot(\"Jerry\", \"blue\", 40)\". This creates", "start": 1009.04, "duration": 4.76}, {"text": "a new Robot object with the name Jerry, color blue,", "start": 1013.804, "duration": 4.83}, {"text": "and weight 40. And after creating these two objects you'll", "start": 1018.644, "duration": 3.94}, {"text": "be able to use r1 and r2 just", "start": 1022.584, "duration": 3.01}, {"text": "like before by writing r1.introduceSelf() and", "start": 1025.594, "duration": 3.02}, {"text": "r2.introduceSelf(). OK, again this was just", "start": 1028.624, "duration": 3.85}, {"text": "sample code in Java, but it's pretty similar to other", "start": 1032.474, "duration": 2.94}, {"text": "languages too and you'll be able to find links to", "start": 1035.414, "duration": 2.89}, {"text": "sample code in both Java and Python in the description", "start": 1038.304, "duration": 4.15}, {"text": "below. All right, if anything was unclear in this video", "start": 1042.454, "duration": 3.39}, {"text": "please let me know in a comment below so maybe", "start": 1046.054, "duration": 2.33}, {"text": "I can talk about it in the next video. In", "start": 1048.384, "duration": 2.2}, {"text": "the next video I'm also going to talk about how", "start": 1050.584, "duration": 3.23}, {"text": "you know multiple classes and objects can interact with each other,", "start": 1053.914, "duration": 3.02}, {"text": "and with that knowledge you'll be able to finally", "start": 1056.934, "duration": 3.03}, {"text": "start building some data structures like linked lists. I'm also", "start": 1059.964, "duration": 4.13}, {"text": "planning to create a new Python tutorial video on classes", "start": 1064.094, "duration": 3.69}, {"text": "and objects, so look out for that as well. And", "start": 1067.784, "duration": 2.95}, {"text": "special thanks to brilliant.org for sponsoring this", "start": 1070.734, "duration": 2.85}, {"text": "video. You know, some of you may already be", "start": 1073.584, "duration": 2.616}, {"text": "familiar with data structures and algorithms and maybe you're watching", "start": 1076.2, "duration": 3.464}, {"text": "my videos as sort of a refresher. If that's the case,", "start": 1079.664, "duration": 3.42}, {"text": "brilliant.org might just be the right website for", "start": 1083.204, "duration": 2.775}, {"text": "you to learn more advanced concepts in computer science. So", "start": 1085.979, "duration": 3.11}, {"text": "personally, I used this computer memory course to get a", "start": 1089.089, "duration": 2.9}, {"text": "better understanding of how memory works in a computer. For", "start": 1091.989, "duration": 3.43}, {"text": "example, previously I didn't really know how structs in C", "start": 1095.419, "duration": 3.57}, {"text": "are stored on memory... I mean I had a vague", "start": 1098.999, "duration": 2.52}, {"text": "idea but I didn't really know, and I found this", "start": 1101.519, "duration": 2.92}, {"text": "course was really helpful for understanding that. Personally what I", "start": 1104.439, "duration": 3.48}, {"text": "like about Brilliant is, first of all, the fact that", "start": 1107.919, "duration": 2.27}, {"text": "they have really nice visuals like this one, you know", "start": 1110.189, "duration": 2.96}, {"text": "much nicer than mine I would say, and they're helpful", "start": 1113.149, "duration": 2.76}, {"text": "for understanding different concepts visually. Another thing I like", "start": 1115.909, "duration": 3.72}, {"text": "is the fact that they sometimes combine multiple concepts", "start": 1119.639, "duration": 3.22}, {"text": "in a single problem. What I mean by that is,", "start": 1122.919, "duration": 2.35}, {"text": "for example, for this particular problem you need to understand", "start": 1125.269, "duration": 3.24}, {"text": "different things like binary expressions, and how structs in C", "start": 1128.509, "duration": 4.44}, {"text": "are stored on the computer, and how short and char", "start": 1132.949, "duration": 4.05}, {"text": "and different types of data are stored on memory too.", "start": 1137.009, "duration": 2.8}, {"text": "And in my experience in general I have found that, you", "start": 1140.039, "duration": 3.76}, {"text": "know, solving problems is a really good way to review", "start": 1143.799, "duration": 3.08}, {"text": "different concepts at the same time and also learn new", "start": 1146.879, "duration": 2.8}, {"text": "concepts and brilliant.org definitely does a good job of", "start": 1149.679, "duration": 4.29}, {"text": "coming up with good problems to solve and they even", "start": 1153.969, "duration": 2.61}, {"text": "have pretty advanced courses like this", "start": 1156.579, "duration": 2.24}, {"text": "\"Artificial Neural Networks\" course on top of their standard computer", "start": 1158.829, "duration": 3.87}, {"text": "science fundamentals and algorithms courses.", "start": 1162.699, "duration": 2.14}, {"text": "You can just go to brilliant.org/csdojo", "start": 1165.229, "duration": 2.671}, {"text": "to start checking out these courses yourself and you", "start": 1167.9, "duration": 3.409}, {"text": "can get 20% off their annual subscription through that link as well.", "start": 1171.309, "duration": 4.271}, {"text": "All right, as always I'm YK from CSDojo", "start": 1175.7, "duration": 3.14}, {"text": "and you know I'm working really hard here to make", "start": 1178.96, "duration": 3.1}, {"text": "CSDojo better and better so that hopefully, eventually,", "start": 1182.069, "duration": 3.74}, {"text": "it's going to be in a class of its own.", "start": 1185.82, "duration": 2.38}, {"text": "All right I'll see you in the next video.", "start": 1188.62, "duration": 1.38}]