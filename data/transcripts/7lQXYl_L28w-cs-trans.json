[{"text": "The following content is\nprovided under a Creative", "start": 0.79, "duration": 2.4}, {"text": "Commons license.", "start": 3.19, "duration": 1.54}, {"text": "Your support will help\nMIT OpenCourseWare", "start": 4.73, "duration": 2.3}, {"text": "continue to offer high-quality\neducational resources for free.", "start": 7.03, "duration": 4.36}, {"text": "To make a donation or\nview additional materials", "start": 11.39, "duration": 2.6}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.99, "duration": 3.89}, {"text": "at ocw.mit.edu.", "start": 17.88, "duration": 0.96}, {"text": "ERIC GRIMSON: Last\ntime, we started", "start": 24.09, "duration": 1.56}, {"text": "talking about complexity.", "start": 25.65, "duration": 2.384}, {"text": "And I want to quickly\nremind you of what", "start": 28.034, "duration": 1.666}, {"text": "we're doing, because we're\ngoing to talk some more about", "start": 29.7, "duration": 2.01}, {"text": "that today.", "start": 31.71, "duration": 0.65}, {"text": "And when I say \"complexity,\"\nit was the question of,", "start": 32.36, "duration": 3.58}, {"text": "can we estimate the amount\nof resources-- typically", "start": 35.94, "duration": 3.6}, {"text": "time-- that we're going to need\nto get an algorithm to solve", "start": 39.54, "duration": 3.69}, {"text": "a problem of a particular size?", "start": 43.23, "duration": 2.64}, {"text": "And we talked about\nthat both in terms", "start": 45.87, "duration": 1.86}, {"text": "of estimating, how much\ntime is it going to take", "start": 47.73, "duration": 3.48}, {"text": "and using it to go\nthe other direction", "start": 51.21, "duration": 1.74}, {"text": "and think about how design\nchoices in an algorithm", "start": 52.95, "duration": 3.84}, {"text": "have implications for\nthe cost that's going", "start": 56.79, "duration": 2.07}, {"text": "to be associated with that.", "start": 58.86, "duration": 2.14}, {"text": "So we introduced\nthe idea of what", "start": 61.0, "duration": 1.7}, {"text": "we call big O notation,\norders of growth,", "start": 62.7, "duration": 2.069}, {"text": "a way of measuring complexity.", "start": 64.769, "duration": 1.941}, {"text": "And we started talking\nabout different classes", "start": 66.71, "duration": 3.04}, {"text": "of algorithms.", "start": 69.75, "duration": 1.87}, {"text": "So today, I'm going to quickly\nrecap those basic ideas.", "start": 71.62, "duration": 3.392}, {"text": "And what we're\ngoing to do is we're", "start": 75.012, "duration": 1.458}, {"text": "going to see examples of\nstandard classes of algorithms", "start": 76.47, "duration": 3.325}, {"text": "with the idea that\nyou're going to want", "start": 79.795, "duration": 1.625}, {"text": "to begin to recognize when an\nalgorithm is in that class.", "start": 81.42, "duration": 5.01}, {"text": "So very quick recap-- I've\nalready said part of this.", "start": 86.43, "duration": 4.26}, {"text": "We want to have a mechanism,\na method for being", "start": 90.69, "duration": 3.3}, {"text": "able to estimate\nor reason about,", "start": 93.99, "duration": 2.61}, {"text": "how much time do we think\nan algorithm's going", "start": 96.6, "duration": 2.37}, {"text": "to take to solve a problem\nof a particular size.", "start": 98.97, "duration": 2.94}, {"text": "And especially as we increase\nthe size of the input", "start": 101.91, "duration": 3.27}, {"text": "to the algorithm,\nwhat does that do", "start": 105.18, "duration": 1.71}, {"text": "in terms of the increase in the\namount of time that we need?", "start": 106.89, "duration": 4.06}, {"text": "Some ways, we don't care\nabout exact versions.", "start": 110.95, "duration": 2.129}, {"text": "In a second, we're going to\nsee the definition of this.", "start": 113.079, "duration": 2.291}, {"text": "But what we care about\nis that notion of,", "start": 115.37, "duration": 1.708}, {"text": "how does it grow as we\nincrease the problem size.", "start": 117.078, "duration": 3.248}, {"text": "And what we're going\nto focus in going,", "start": 120.326, "duration": 1.624}, {"text": "if you like, in the forward\ndirection-- as I said,", "start": 121.95, "duration": 3.12}, {"text": "a lot of the\ninterest is actually", "start": 125.07, "duration": 1.56}, {"text": "thinking about what\nyou might think", "start": 126.63, "duration": 1.95}, {"text": "of as the backwards\nor reverse direction.", "start": 128.58, "duration": 2.13}, {"text": "How does a choice in algorithm\ndesign impact efficiency", "start": 130.71, "duration": 5.76}, {"text": "of the algorithm?", "start": 136.47, "duration": 1.564}, {"text": "And really, what\nwe want you to do", "start": 138.034, "duration": 1.416}, {"text": "is to begin to recognize\nstandard patterns,", "start": 139.45, "duration": 3.18}, {"text": "that, if you make a\nparticular choice,", "start": 142.63, "duration": 1.62}, {"text": "this fits in a class of\nalgorithms you've seen before.", "start": 144.25, "duration": 2.97}, {"text": "And I know, in essence, how\nmuch time-- what the cost is", "start": 147.22, "duration": 3.42}, {"text": "going to be as I do that.", "start": 150.64, "duration": 2.9}, {"text": "All right, so just to recap,\nas it says on the top,", "start": 153.54, "duration": 2.8}, {"text": "we talked about\norders of growth.", "start": 156.34, "duration": 2.06}, {"text": "And the idea is, we want to be\nable to evaluate a program's", "start": 158.4, "duration": 3.48}, {"text": "efficiency when the\ninput is very big.", "start": 161.88, "duration": 2.94}, {"text": "We talked about timing\nthings just with a timer.", "start": 164.82, "duration": 2.29}, {"text": "We suggested that,\nunfortunately,", "start": 167.11, "duration": 1.82}, {"text": "conflates the algorithm\nwith the implementation", "start": 168.93, "duration": 3.57}, {"text": "with the particular machine.", "start": 172.5, "duration": 1.717}, {"text": "We want to get rid\nof those latter two", "start": 174.217, "duration": 1.583}, {"text": "and just focus on the algorithm.", "start": 175.8, "duration": 1.51}, {"text": "So we're going to talk\nabout counting operations,", "start": 177.31, "duration": 2.66}, {"text": "but in a very general sense.", "start": 179.97, "duration": 1.28}, {"text": "So we're going to\nexpress what we", "start": 181.25, "duration": 1.99}, {"text": "call the growth of\nthe program's runtime", "start": 183.24, "duration": 2.7}, {"text": "as the input size\ngrows very large.", "start": 185.94, "duration": 3.27}, {"text": "And because we're\nonly interested", "start": 189.21, "duration": 1.59}, {"text": "not in the exact\nnumber, but in, if you", "start": 190.8, "duration": 2.64}, {"text": "like, the growth of\nthat, we're going", "start": 193.44, "duration": 1.65}, {"text": "to focus on putting\nan upper bound", "start": 195.09, "duration": 2.16}, {"text": "on the growth, an expression\nthat grows at least as", "start": 197.25, "duration": 2.85}, {"text": "fast as what the cost\nof the algorithm is.", "start": 200.1, "duration": 3.51}, {"text": "Now, you could just cheat and\npick a really big upper bound.", "start": 203.61, "duration": 3.149}, {"text": "That doesn't help us very much.", "start": 206.759, "duration": 1.291}, {"text": "So in general, we're\ngoing to try and use", "start": 208.05, "duration": 1.98}, {"text": "as tight an upper\nbound as we can.", "start": 210.03, "duration": 1.71}, {"text": "What's the class of\nalgorithm it falls in?", "start": 211.74, "duration": 3.18}, {"text": "But as we've seen before, we\ncare about the order of growth,", "start": 214.92, "duration": 2.76}, {"text": "not being exact.", "start": 217.68, "duration": 1.71}, {"text": "So if something grows\nas 2 to the n plus 5n,", "start": 219.39, "duration": 3.93}, {"text": "I don't care about the 5n.", "start": 223.32, "duration": 1.154}, {"text": "Because when n gets\nbig, that 2 to the n", "start": 224.474, "duration": 1.666}, {"text": "is the really big factor.", "start": 226.14, "duration": 1.68}, {"text": "And therefore we're going to\nlook at the largest factors", "start": 227.82, "duration": 2.61}, {"text": "when we think about that.", "start": 230.43, "duration": 1.839}, {"text": "We've seen some examples.", "start": 232.269, "duration": 1.041}, {"text": "We're going to do a\nbunch more examples", "start": 233.31, "duration": 1.625}, {"text": "today to fill those in.", "start": 234.935, "duration": 1.745}, {"text": "One of the things\nthat we want to now do", "start": 236.68, "duration": 1.74}, {"text": "is say, with that\nidea in mind, there", "start": 238.42, "duration": 2.43}, {"text": "are classes of\ncomplexity of algorithms.", "start": 240.85, "duration": 3.88}, {"text": "So in some sense, the best\nones are way up here, O of 1,", "start": 244.73, "duration": 4.22}, {"text": "order 1, constant.", "start": 248.95, "duration": 1.98}, {"text": "It says cost doesn't change as\nI change the size of the input.", "start": 250.93, "duration": 4.858}, {"text": "That's great.", "start": 255.788, "duration": 0.541}, {"text": "It's always going\nto be the same cost.", "start": 256.329, "duration": 2.551}, {"text": "Order log n says the cost\ngrows logarithmically", "start": 258.88, "duration": 3.9}, {"text": "with the size of the input.", "start": 262.78, "duration": 1.44}, {"text": "It's a slow growth, and\nI'm going to remind you", "start": 264.22, "duration": 2.13}, {"text": "of that in a second.", "start": 266.35, "duration": 1.56}, {"text": "We saw lots of examples of\nlinear running time-- we're", "start": 267.91, "duration": 2.55}, {"text": "going to see a few more today--\nwhat we call log-linear,", "start": 270.46, "duration": 3.81}, {"text": "polynomial, and exponential.", "start": 274.27, "duration": 3.296}, {"text": "And the thing I\nwant to remind you", "start": 277.566, "duration": 1.694}, {"text": "is that, ideally--\nwhoops, sorry--", "start": 279.26, "duration": 3.26}, {"text": "we'd like our\nalgorithms to be as", "start": 282.52, "duration": 1.72}, {"text": "close to the top of this\ncategorization as we can.", "start": 284.24, "duration": 2.73}, {"text": "This is actually described in\nincreasing order of complexity.", "start": 286.97, "duration": 3.99}, {"text": "Something that takes\nthe same amount of time", "start": 290.96, "duration": 1.95}, {"text": "no matter how big the input\nis, unless that amount of time", "start": 292.91, "duration": 2.67}, {"text": "is a couple of centuries, seems\nlike a really good algorithm", "start": 295.58, "duration": 2.5}, {"text": "to have.", "start": 298.08, "duration": 0.5}, {"text": "Something that grows\nlinearly is not bad.", "start": 298.58, "duration": 2.61}, {"text": "Something that grows, as we've\nseen down here, exponentially", "start": 301.19, "duration": 2.82}, {"text": "tends to say, this is\ngoing to be painful.", "start": 304.01, "duration": 4.32}, {"text": "And in fact, you can\nsee that graphically.", "start": 308.33, "duration": 1.75}, {"text": "I'll just remind you here.", "start": 310.08, "duration": 1.86}, {"text": "Something that's constant\nsays, if I draw out", "start": 311.94, "duration": 1.98}, {"text": "the amount of time it\ntakes as a function", "start": 313.92, "duration": 1.95}, {"text": "of the size of the\ninput, it doesn't change.", "start": 315.87, "duration": 2.84}, {"text": "Logarithmic glows-- gah,\nsorry-- grows very slowly.", "start": 318.71, "duration": 4.18}, {"text": "Linear will grow,\nobviously, in a linear way.", "start": 322.89, "duration": 4.57}, {"text": "And I actually\nmisspoke last time.", "start": 327.46, "duration": 2.469}, {"text": "I know it's rare for a professor\nto ever admit they misspeak,", "start": 329.929, "duration": 2.541}, {"text": "but I did.", "start": 332.47, "duration": 1.23}, {"text": "Because I said linear is, if you\ndouble the size of the input,", "start": 333.7, "duration": 3.06}, {"text": "it's going to double the\namount of time it takes.", "start": 336.76, "duration": 2.294}, {"text": "Actually, that's an\nincorrect statement.", "start": 339.054, "duration": 1.666}, {"text": "Really, what I\nshould have said was,", "start": 340.72, "duration": 1.83}, {"text": "the increment-- if I go\nfrom, say, 10 to 100,", "start": 342.55, "duration": 2.91}, {"text": "the increase in time-- is going\nto be the same as the increment", "start": 345.46, "duration": 3.15}, {"text": "if I go from 100 to 1,000.", "start": 348.61, "duration": 2.472}, {"text": "Might be more than\ndouble depending", "start": 351.082, "duration": 1.458}, {"text": "on what the constant is.", "start": 352.54, "duration": 1.0}, {"text": "But that growth is linear.", "start": 353.54, "duration": 1.992}, {"text": "If you want to think of\nit, take the derivative", "start": 355.532, "duration": 1.958}, {"text": "of time with respect\nto input size.", "start": 357.49, "duration": 2.156}, {"text": "It's just going\nto be a constant.", "start": 359.646, "duration": 1.374}, {"text": "It's not going to change within.", "start": 361.02, "duration": 1.554}, {"text": "And of course, when\nwe get down to here,", "start": 362.574, "duration": 1.666}, {"text": "things like exponential,\nit grows really fast.", "start": 364.24, "duration": 2.19}, {"text": "And just as a last\nrecap, again, I", "start": 366.43, "duration": 2.46}, {"text": "want to be towards\nthe top of that.", "start": 368.89, "duration": 2.42}, {"text": "There was my little\nchart just showing you", "start": 371.31, "duration": 2.36}, {"text": "things that grow constant, log,\nlinear, log-linear, quadratic,", "start": 373.67, "duration": 4.95}, {"text": "and exponential.", "start": 378.62, "duration": 0.89}, {"text": "If I go from n of 10, to\n100, to 1,000, to a million,", "start": 379.51, "duration": 5.27}, {"text": "you see why I want to be\nat the top of that chart.", "start": 384.78, "duration": 3.21}, {"text": "Something up here that\ngrows logarithmically,", "start": 387.99, "duration": 1.98}, {"text": "the amount of time grows very\nslowly as I increase the input.", "start": 389.97, "duration": 3.9}, {"text": "Down here, well, like\nit says, good luck.", "start": 393.87, "duration": 4.14}, {"text": "It's going to grow\nup really quickly", "start": 398.01, "duration": 1.5}, {"text": "as I move up in that scale.", "start": 399.51, "duration": 2.73}, {"text": "I want to be at the top\nof this chart if I can.", "start": 402.24, "duration": 4.43}, {"text": "OK, with that in mind,\nwhen I'm going to do today", "start": 406.67, "duration": 2.73}, {"text": "is show you examples filling\nin most of this chart.", "start": 409.4, "duration": 3.83}, {"text": "We've already seen\nsome examples.", "start": 413.23, "duration": 1.44}, {"text": "We've seen examples of linear.", "start": 414.67, "duration": 1.62}, {"text": "We've seen examples\nof quadratic.", "start": 416.29, "duration": 1.47}, {"text": "I'm going to just\nremind you of those.", "start": 417.76, "duration": 0.99}, {"text": "What I want to do\nis show you how", "start": 418.75, "duration": 1.77}, {"text": "you can begin to recognize\na choice of an algorithm", "start": 420.52, "duration": 3.21}, {"text": "in terms of where it lies.", "start": 423.73, "duration": 1.92}, {"text": "So algorithms that are\nconstant complexity,", "start": 425.65, "duration": 2.78}, {"text": "they're kind of boring.", "start": 428.43, "duration": 0.97}, {"text": "They tend to be pretty simple.", "start": 429.4, "duration": 1.92}, {"text": "Because this says,\nthis code is going", "start": 431.32, "duration": 2.55}, {"text": "to run in, basically, the same\namount of time independent", "start": 433.87, "duration": 3.54}, {"text": "of the size of the input.", "start": 437.41, "duration": 2.3}, {"text": "Now, notice the\nbottom thing here.", "start": 439.71, "duration": 2.16}, {"text": "It doesn't say you\ncan't-- blah, try again.", "start": 441.87, "duration": 2.7}, {"text": "It doesn't say you couldn't\nhave a loop or a recursive call.", "start": 444.57, "duration": 3.63}, {"text": "You could, it's just that that\nloop cannot depend on the size", "start": 448.2, "duration": 4.71}, {"text": "of the input.", "start": 452.91, "duration": 2.05}, {"text": "So there aren't many\ninteresting algorithms here.", "start": 454.96, "duration": 2.46}, {"text": "We're going to see pieces\nof code that fit into this", "start": 457.42, "duration": 2.58}, {"text": "when we do our analysis.", "start": 460.0, "duration": 1.599}, {"text": "But something that's\nconstant in complexity", "start": 461.599, "duration": 1.791}, {"text": "says, independent of\nthe size of the input.", "start": 463.39, "duration": 3.914}, {"text": "All right, a little more\ninteresting-- not a little,", "start": 467.304, "duration": 2.166}, {"text": "a lot more interesting--\nare algorithms", "start": 469.47, "duration": 2.58}, {"text": "that are logarithmic\nin their complexity.", "start": 472.05, "duration": 1.82}, {"text": "So they're going to\ngrow with the logarithm", "start": 473.87, "duration": 1.99}, {"text": "of the size of the input.", "start": 475.86, "duration": 2.34}, {"text": "You saw an example much\nearlier in the term when Ana", "start": 478.2, "duration": 3.49}, {"text": "showed you bisection search.", "start": 481.69, "duration": 1.35}, {"text": "It was searching for a number\nwith a particular property.", "start": 483.04, "duration": 2.952}, {"text": "I want to show you\nanother example,", "start": 485.992, "duration": 1.458}, {"text": "both to let you recognize\nthe form of the algorithm,", "start": 487.45, "duration": 2.34}, {"text": "but especially, to show you how\nwe can reason about the growth.", "start": 489.79, "duration": 3.42}, {"text": "And that's another trick\ncalled binary search", "start": 493.21, "duration": 2.64}, {"text": "or, again, it's a version\nof bisection search.", "start": 495.85, "duration": 3.75}, {"text": "Suppose I give you a list,\na list of numbers, integers.", "start": 499.6, "duration": 3.26}, {"text": "And I want to know if\na particular element is", "start": 502.86, "duration": 2.17}, {"text": "in that list.", "start": 505.03, "duration": 2.07}, {"text": "We saw, last time, you could\njust walk down the list, just", "start": 507.1, "duration": 2.76}, {"text": "iterate through the entire list\nlooking to see if it's there.", "start": 509.86, "duration": 3.24}, {"text": "In the worst case, which\nis what we worry about,", "start": 513.1, "duration": 2.069}, {"text": "it's going to be linear.", "start": 515.169, "duration": 0.781}, {"text": "You're going to have to look\nat every element in the list", "start": 515.95, "duration": 2.375}, {"text": "till you get to the end.", "start": 518.325, "duration": 1.854}, {"text": "So complexity was\nlinear in that case.", "start": 520.179, "duration": 1.771}, {"text": "And then we said, suppose we\nknow that the list is sorted.", "start": 521.95, "duration": 2.67}, {"text": "It's ordered from\nsmallest to largest.", "start": 524.62, "duration": 3.63}, {"text": "And we saw, a simple\nalgorithm says, again,", "start": 528.25, "duration": 1.89}, {"text": "walk down the list checking\nto see if it's there.", "start": 530.14, "duration": 2.37}, {"text": "But when you get to an element\nthat's bigger than the thing", "start": 532.51, "duration": 3.03}, {"text": "you're looking at,\nyou can just stop.", "start": 535.54, "duration": 2.057}, {"text": "There's no reason to look\nat the rest of the list.", "start": 537.597, "duration": 2.083}, {"text": "They've all got to be\nbigger than the thing you're", "start": 539.68, "duration": 2.1}, {"text": "searching for.", "start": 541.78, "duration": 1.81}, {"text": "Practically, in\nthe average case,", "start": 543.59, "duration": 2.439}, {"text": "that's going to be\nfaster than just looking", "start": 546.029, "duration": 1.791}, {"text": "at an unsorted list.", "start": 547.82, "duration": 1.74}, {"text": "But the complexity\nis still linear.", "start": 549.56, "duration": 2.642}, {"text": "Because in the\nworst case, I've got", "start": 552.202, "duration": 1.458}, {"text": "to go all the way\nthrough the list", "start": 553.66, "duration": 1.416}, {"text": "before I deduce that\nthe thing is not there.", "start": 555.076, "duration": 3.684}, {"text": "OK, so even sequential\nsearch in an ordered list", "start": 558.76, "duration": 3.45}, {"text": "is still linear.", "start": 562.21, "duration": 1.62}, {"text": "Can we do better?", "start": 563.83, "duration": 2.31}, {"text": "And the answer is, sure.", "start": 566.14, "duration": 2.45}, {"text": "So here's how we do better.", "start": 568.59, "duration": 1.899}, {"text": "I'm going to take that list.", "start": 570.489, "duration": 1.166}, {"text": "I'm going to assume it's sorted.", "start": 571.655, "duration": 2.385}, {"text": "And I'm going to pick an index\nthat divides the list in half,", "start": 574.04, "duration": 3.09}, {"text": "just pick the\nmidpoint in the list.", "start": 577.13, "duration": 2.5}, {"text": "And I'm going to\ncheck that value.", "start": 579.63, "duration": 1.62}, {"text": "I'm going to ask, is the element\nin the list at that point", "start": 581.25, "duration": 2.55}, {"text": "the thing I'm looking for?", "start": 583.8, "duration": 1.235}, {"text": "If it is, great, I'm done.", "start": 585.035, "duration": 2.626}, {"text": "If I'm not that lucky,\nI'm then going to ask,", "start": 587.661, "duration": 2.639}, {"text": "is it larger or smaller than\nthe thing I'm looking for?", "start": 590.3, "duration": 4.22}, {"text": "And based on that,\nI'm either going", "start": 594.52, "duration": 2.01}, {"text": "to search the front half or\nthe back half of the list.", "start": 596.53, "duration": 5.652}, {"text": "Ooh, that's nice, OK?", "start": 602.182, "duration": 2.018}, {"text": "Because if you think about\nit, in something that was just", "start": 604.2, "duration": 2.43}, {"text": "a linear algorithm,\nat each step,", "start": 606.63, "duration": 2.33}, {"text": "I reduced the size\nthe problem by 1.", "start": 608.96, "duration": 2.32}, {"text": "I went from a problem of size n\nto a problem of size n minus 1", "start": 611.28, "duration": 4.01}, {"text": "to a problem of size n minus 2.", "start": 615.29, "duration": 2.62}, {"text": "Here, I'm taking a\nproblem of size n.", "start": 617.91, "duration": 2.67}, {"text": "I'm reducing it to\nn/2 in one step,", "start": 620.58, "duration": 3.42}, {"text": "because I can throw\nhalf the list away.", "start": 624.0, "duration": 2.74}, {"text": "So this is a version\nof divide and conquer,", "start": 626.74, "duration": 1.82}, {"text": "things we've seen before.", "start": 628.56, "duration": 1.041}, {"text": "I'm breaking it down\ninto smaller versions", "start": 629.601, "duration": 1.869}, {"text": "of the problem.", "start": 631.47, "duration": 1.21}, {"text": "So let's look at that.", "start": 632.68, "duration": 1.027}, {"text": "And then, let's write some code.", "start": 633.707, "duration": 1.333}, {"text": "And then, let's analyze it.", "start": 635.04, "duration": 1.31}, {"text": "So suppose I have a list\nof size n, all right?", "start": 636.35, "duration": 2.95}, {"text": "There are n elements in there.", "start": 639.3, "duration": 1.8}, {"text": "I'm going to look at\nthe middle one, say,", "start": 641.1, "duration": 1.997}, {"text": "is it the thing I'm looking for.", "start": 643.097, "duration": 1.333}, {"text": "If it's not, is it\nbigger than or less", "start": 644.43, "duration": 2.409}, {"text": "than the thing I'm looking for?", "start": 646.839, "duration": 1.291}, {"text": "And in this case, let's\nassume that, in fact,", "start": 648.13, "duration": 2.52}, {"text": "the thing I'm looking for is\nsmaller than that element.", "start": 650.65, "duration": 3.06}, {"text": "Great.", "start": 653.71, "duration": 0.96}, {"text": "I'm going to throw\naway half the list.", "start": 654.67, "duration": 1.8}, {"text": "Now I only have to look at\nthe lower half of the list.", "start": 656.47, "duration": 2.46}, {"text": "I'll do the same thing.", "start": 658.93, "duration": 1.227}, {"text": "I'll look at the element\nin the middle here.", "start": 660.157, "duration": 1.833}, {"text": "And I'll say, is it the\nthing I'm looking for?", "start": 661.99, "duration": 1.92}, {"text": "If not, is it bigger\nthan or smaller", "start": 663.91, "duration": 2.58}, {"text": "than the thing I'm looking for?", "start": 666.49, "duration": 1.57}, {"text": "OK, and I'm down\nto n/2 elements.", "start": 668.06, "duration": 1.7}, {"text": "And after I do that, I throw\naway half the list again.", "start": 669.76, "duration": 3.775}, {"text": "In this case, I'm assuming\nthat the thing I'm looking for", "start": 673.535, "duration": 2.375}, {"text": "is bigger than\nthat middle point.", "start": 675.91, "duration": 2.91}, {"text": "Until I find it,\nat each step, I'm", "start": 678.82, "duration": 1.74}, {"text": "looking at the middle element.", "start": 680.56, "duration": 1.32}, {"text": "And I'm either throwing\naway the left half", "start": 681.88, "duration": 1.749}, {"text": "or the right half of that list.", "start": 683.629, "duration": 4.251}, {"text": "So after i steps, I'm down to a\nlist of size n over 2 to the i.", "start": 687.88, "duration": 6.051}, {"text": "Now, what's the worst case?", "start": 693.931, "duration": 1.98}, {"text": "The worst case is the\nelement's not in the list.", "start": 695.911, "duration": 1.999}, {"text": "I'm going to have\nto keep doing this", "start": 697.91, "duration": 1.5}, {"text": "until I get down to just\na list of one element.", "start": 699.41, "duration": 4.276}, {"text": "And at that point, if it's\nnot the thing I'm looking for,", "start": 703.686, "duration": 2.374}, {"text": "I know I'm done, and I can stop.", "start": 706.06, "duration": 3.86}, {"text": "Different pattern-- notice\nhow I'm cutting down", "start": 709.92, "duration": 2.182}, {"text": "the size of the problem by 2.", "start": 712.102, "duration": 1.208}, {"text": "So I can ask, before we\nlook at the code, what's", "start": 713.31, "duration": 2.64}, {"text": "the complexity of this?", "start": 715.95, "duration": 2.1}, {"text": "How many steps do I have to\ngo through in the worst case?", "start": 718.05, "duration": 3.24}, {"text": "And I know I'm going to be\ndone looking at the list when", "start": 721.29, "duration": 3.33}, {"text": "n over 2 to the i is\nequal to 1, meaning", "start": 724.62, "duration": 3.28}, {"text": "there's only one element left\nthat I'm still looking at.", "start": 727.9, "duration": 3.44}, {"text": "And I can solve that.", "start": 731.34, "duration": 0.93}, {"text": "It says I'm going to have\nto take, at most, i equal", "start": 732.27, "duration": 2.67}, {"text": "to log n steps, all right?", "start": 734.94, "duration": 3.12}, {"text": "So logarithmically,\nI'm cutting this down.", "start": 738.06, "duration": 2.79}, {"text": "And so the complexity\nof the recursion--", "start": 740.85, "duration": 1.799}, {"text": "we haven't talked\nabout the code yet,", "start": 742.649, "duration": 1.541}, {"text": "but in terms of\nthe number of steps", "start": 744.19, "duration": 1.68}, {"text": "I have to do in\nthe worst case-- is", "start": 745.87, "duration": 2.19}, {"text": "just logarithmic in\nthe length of the list.", "start": 748.06, "duration": 4.41}, {"text": "That's nice.", "start": 752.47, "duration": 1.179}, {"text": "It's a lot better than looking\nat everything inside the list.", "start": 753.649, "duration": 2.541}, {"text": "And in fact, you\ncan see it, right?", "start": 756.19, "duration": 1.91}, {"text": "I don't look at everything\ninside the list here.", "start": 758.1, "duration": 2.28}, {"text": "I'm throwing half the\nthings away at a time.", "start": 760.38, "duration": 3.47}, {"text": "OK, so let's look at\nsome code to do that.", "start": 763.85, "duration": 2.3}, {"text": "Bisection search-- I'm going\nto give it a list of numbers.", "start": 766.15, "duration": 2.52}, {"text": "I'm going to give it\nsomething I'm looking for.", "start": 768.67, "duration": 3.32}, {"text": "We can walk through this code.", "start": 771.99, "duration": 1.26}, {"text": "Hopefully it's\nsomething that you're", "start": 773.25, "duration": 1.01}, {"text": "going to be able to\nrecognize pretty clearly.", "start": 774.26, "duration": 1.915}, {"text": "It says if the list is\nempty, there's nothing there,", "start": 776.175, "duration": 2.625}, {"text": "the thing I'm looking for\ncan't be there, I return False.", "start": 778.8, "duration": 3.65}, {"text": "If there's exactly one\nelement in the list,", "start": 782.45, "duration": 3.52}, {"text": "then I just check it.", "start": 785.97, "duration": 1.59}, {"text": "If that thing's the thing\nI'm looking for, return True.", "start": 787.56, "duration": 2.38}, {"text": "Otherwise, return False.", "start": 789.94, "duration": 1.1}, {"text": "So I'm just going to\nreturn the value there.", "start": 791.04, "duration": 2.49}, {"text": "Otherwise, find the midpoint--\nnotice the integer division", "start": 793.53, "duration": 3.68}, {"text": "here-- find the midpoint\nin that list and check it.", "start": 797.21, "duration": 4.77}, {"text": "In particular, say, if\nthe thing at the midpoint", "start": 801.98, "duration": 2.34}, {"text": "is bigger than the\nthing I'm looking for,", "start": 804.32, "duration": 2.52}, {"text": "then I'm going to\nreturn a recursive call", "start": 806.84, "duration": 2.76}, {"text": "to this function only looking\nat the first half of the list.", "start": 809.6, "duration": 4.79}, {"text": "I'm just slicing into it.", "start": 814.39, "duration": 1.82}, {"text": "Otherwise, I'll\ndo the same thing", "start": 816.21, "duration": 3.15}, {"text": "on the second half of the list.", "start": 819.36, "duration": 2.8}, {"text": "Nice, this is implementing\nexactly what I said.", "start": 822.16, "duration": 3.479}, {"text": "We could actually try it.", "start": 825.639, "duration": 1.041}, {"text": "I'll do that in a\nsecond if I remember.", "start": 826.68, "duration": 1.76}, {"text": "But let's think about\ncomplexity here.", "start": 828.44, "duration": 3.09}, {"text": "That's constant, right?", "start": 831.53, "duration": 2.615}, {"text": "Doesn't depend on\nthe size of the list.", "start": 834.145, "duration": 1.625}, {"text": "That's constant, doesn't\ndepend on the size of the list.", "start": 835.77, "duration": 3.57}, {"text": "That's consonant.", "start": 839.34, "duration": 1.29}, {"text": "Sounds good.", "start": 840.63, "duration": 1.31}, {"text": "And what about that?", "start": 841.94, "duration": 3.79}, {"text": "Well, it looks like it\nshould be constant, right,", "start": 845.73, "duration": 2.45}, {"text": "other than the number of times\nI have to go through there.", "start": 848.18, "duration": 2.416}, {"text": "Remember, I know I'm going\nto have order log n recursive", "start": 850.596, "duration": 3.254}, {"text": "calls.", "start": 853.85, "duration": 0.5}, {"text": "I'm looking at what's\nthe cost to set it up.", "start": 854.35, "duration": 1.96}, {"text": "It looks like it\nshould be constant.", "start": 856.31, "duration": 2.4}, {"text": "So does that.", "start": 858.71, "duration": 1.55}, {"text": "But I'm going to claim it's not.", "start": 860.26, "duration": 2.73}, {"text": "Anybody see why it's not?", "start": 862.99, "duration": 2.49}, {"text": "You can look at the slides\nyou've already printed out.", "start": 865.48, "duration": 3.15}, {"text": "Right there-- I'm actually\ncopying the list, all right?", "start": 868.63, "duration": 4.89}, {"text": "When I slice into\nthe list like that,", "start": 873.52, "duration": 1.94}, {"text": "it makes a copy of the list.", "start": 875.46, "duration": 2.91}, {"text": "Oh, crud.", "start": 878.37, "duration": 2.07}, {"text": "I was about to say\nsomething different,", "start": 880.44, "duration": 1.67}, {"text": "but I won't, because this is\ngoing to cost me a little bit", "start": 882.11, "duration": 3.38}, {"text": "as I think about the work.", "start": 885.49, "duration": 1.23}, {"text": "So let's look at that a\nlittle more carefully.", "start": 886.72, "duration": 4.42}, {"text": "I've got order log\nn search calls.", "start": 891.14, "duration": 4.366}, {"text": "We just deduced that.", "start": 895.506, "duration": 0.874}, {"text": "I've just repeated\nit here, right?", "start": 896.38, "duration": 1.416}, {"text": "On each call, I'm reducing\nthe size of the list in half.", "start": 897.796, "duration": 2.814}, {"text": "So it goes from n, to n/2,\nto n/4, to n/8, to n/16.", "start": 900.61, "duration": 3.77}, {"text": "I'll be done, in\nthe worst case, when", "start": 904.38, "duration": 2.05}, {"text": "I get down to having\nonly a list of size 1.", "start": 906.43, "duration": 2.4}, {"text": "That takes a log n steps,\nbecause n over 2 to the log n", "start": 908.83, "duration": 3.45}, {"text": "is n/n, which is 1.", "start": 912.28, "duration": 3.01}, {"text": "But to set up the\nsearch for each cell,", "start": 915.29, "duration": 4.17}, {"text": "I've got to copy the list.", "start": 919.46, "duration": 2.05}, {"text": "And the list starts out n\nlong, so in principle, I've", "start": 921.51, "duration": 2.72}, {"text": "got order n work to do to\nset up the recursive call.", "start": 924.23, "duration": 4.5}, {"text": "And so by the things\nwe saw last time,", "start": 928.73, "duration": 1.77}, {"text": "I got order log n for the number\nof recursive calls times order", "start": 930.5, "duration": 3.78}, {"text": "n work inside of each call.", "start": 934.28, "duration": 2.73}, {"text": "And that's order n log n.", "start": 937.01, "duration": 3.42}, {"text": "So it's not what I wanted.", "start": 940.43, "duration": 3.38}, {"text": "Now, if you're thinking\nabout this carefully,", "start": 943.81, "duration": 1.9}, {"text": "you'll realize, on each\nstep, I'm not actually", "start": 945.71, "duration": 2.66}, {"text": "copying the whole list.", "start": 948.37, "duration": 1.11}, {"text": "I'm copying half the list, and\nthen, a quarter of the list,", "start": 949.48, "duration": 2.67}, {"text": "and then, an eighth of the list.", "start": 952.15, "duration": 1.816}, {"text": "So if I was actually\nreally careful-- I'm not", "start": 953.966, "duration": 1.874}, {"text": "going to do the math here--\nand in fact, what we'll see--", "start": 955.84, "duration": 2.375}, {"text": "and if you like, in your copious\nspare time, you can go off", "start": 958.215, "duration": 3.022}, {"text": "and work this through--\nwhat you'll discover", "start": 961.237, "duration": 1.833}, {"text": "is that you're actually doing\norder n work to do the copying.", "start": 963.07, "duration": 4.784}, {"text": "But that's still a\nproblem, because then, I've", "start": 967.854, "duration": 1.916}, {"text": "got something that's\norder n plus log n.", "start": 969.77, "duration": 3.63}, {"text": "And the n is going to dominate,\nso this is still linear.", "start": 973.4, "duration": 4.56}, {"text": "Sounds like I led you\ndown a primrose path here.", "start": 977.96, "duration": 2.19}, {"text": "Can we fix this?", "start": 980.15, "duration": 1.53}, {"text": "Sure.", "start": 981.68, "duration": 1.9}, {"text": "Because we could\ndo the following.", "start": 983.58, "duration": 2.7}, {"text": "We could say, when I want\nto look at that list,", "start": 986.28, "duration": 2.06}, {"text": "do I need to copy everything?", "start": 988.34, "duration": 2.43}, {"text": "What about if,\ninstead, I said, here's", "start": 990.77, "duration": 1.74}, {"text": "the beginning and\nthe end of the list.", "start": 992.51, "duration": 2.22}, {"text": "When I test the middle, I'll\nmove one of the pointers", "start": 994.73, "duration": 3.207}, {"text": "to the middle of the list.", "start": 997.937, "duration": 1.083}, {"text": "When I test the middle again,\nI'll move another pointer in.", "start": 999.02, "duration": 2.458}, {"text": "So in other words, I\ncan test the middle.", "start": 1001.478, "duration": 1.742}, {"text": "And based on that,\nI could say, I only", "start": 1003.22, "duration": 1.999}, {"text": "need to search this\npart of the list.", "start": 1005.219, "duration": 1.541}, {"text": "Just keep track of that point\nand that point in the list.", "start": 1006.76, "duration": 3.87}, {"text": "And when I test the\nmiddle again, same idea.", "start": 1010.63, "duration": 3.72}, {"text": "Now I'm not actually\ncopying the list,", "start": 1014.35, "duration": 2.19}, {"text": "I am simply keeping\ntrack of, where", "start": 1016.54, "duration": 3.24}, {"text": "are the pieces of the\nlist that bound my search.", "start": 1019.78, "duration": 4.671}, {"text": "Ha, all right?", "start": 1024.451, "duration": 2.829}, {"text": "I'm still reducing the size of\nthe problem by a factor of 2", "start": 1027.28, "duration": 2.46}, {"text": "at each step.", "start": 1029.74, "duration": 0.66}, {"text": "That's great.", "start": 1030.4, "duration": 0.897}, {"text": "All I'd need to do now,\nthough, is just keep", "start": 1031.297, "duration": 1.833}, {"text": "track of which portion of\nthe list I'm searching.", "start": 1033.13, "duration": 2.64}, {"text": "I'm going to avoid\ncopying the list.", "start": 1035.77, "duration": 2.01}, {"text": "So the number of\nrecursive calls,", "start": 1037.78, "duration": 1.829}, {"text": "again, will be logarithmic.", "start": 1039.609, "duration": 1.26}, {"text": "Let's see if that\nactually fixes my problem.", "start": 1040.869, "duration": 2.071}, {"text": "A little bit of code, not\nas bad as it looks-- I've", "start": 1045.636, "duration": 2.124}, {"text": "got an internal function here\nthat I'm going to come back to.", "start": 1047.76, "duration": 2.757}, {"text": "But let's look at what\nhappens in this case.", "start": 1050.517, "duration": 1.833}, {"text": "I'm going to say, again,\nif there's nothing", "start": 1052.35, "duration": 2.91}, {"text": "in the list, just return False.", "start": 1055.26, "duration": 2.19}, {"text": "Element can't possibly be there.", "start": 1057.45, "duration": 2.06}, {"text": "Otherwise, call this\nfunction with the list,", "start": 1059.51, "duration": 3.19}, {"text": "the element for\nwhom I'm searching,", "start": 1062.7, "duration": 1.98}, {"text": "and the beginning and end of\nthe list-- so 0 at one end,", "start": 1064.68, "duration": 5.7}, {"text": "length of n l minus\n1 at the other end.", "start": 1070.38, "duration": 1.902}, {"text": "It's just that idea\nof, I'm keeping", "start": 1072.282, "duration": 1.458}, {"text": "track of the two pieces, OK?", "start": 1073.74, "duration": 2.91}, {"text": "Now let's look at\nwhat this does.", "start": 1076.65, "duration": 1.785}, {"text": "It says, here's the\nlow part of the list,", "start": 1078.435, "duration": 2.022}, {"text": "the high part of the list.", "start": 1080.457, "duration": 1.083}, {"text": "Initially, it's 0 and\nlength of list minus 1.", "start": 1081.54, "duration": 3.33}, {"text": "It says, if they are the\nsame, oh cool, then I've", "start": 1084.87, "duration": 4.37}, {"text": "got a list of length 1.", "start": 1089.24, "duration": 1.17}, {"text": "Just test to see if it's\nthe thing I'm looking for.", "start": 1090.41, "duration": 3.86}, {"text": "If they're not,\nfind the midpoint.", "start": 1094.27, "duration": 3.15}, {"text": "And the midpoint's\njust the average of low", "start": 1097.42, "duration": 2.01}, {"text": "plus high, integer\ndivision by 2.", "start": 1099.43, "duration": 3.246}, {"text": "Think about it.", "start": 1102.676, "duration": 0.624}, {"text": "If it's 0 and n,\nmidpoint is n/2.", "start": 1103.3, "duration": 3.75}, {"text": "But if it's, for example,\nn/2 and n, midpoint is 3/4 n.", "start": 1107.05, "duration": 5.75}, {"text": "So that mid picks\nthe middle point.", "start": 1112.8, "duration": 4.15}, {"text": "If it's the thing I'm\nlooking for, great, I'm done.", "start": 1116.95, "duration": 2.17}, {"text": "Otherwise, check to see,\nis the thing at the middle", "start": 1119.12, "duration": 2.62}, {"text": "bigger than or less than\nthe thing I'm looking for.", "start": 1121.74, "duration": 3.14}, {"text": "And based on that-- I'm going\nto skip this one for a second--", "start": 1124.88, "duration": 3.41}, {"text": "I'm either going to\nsearch everything", "start": 1128.29, "duration": 1.68}, {"text": "from the low point up\nto the middle point", "start": 1129.97, "duration": 2.46}, {"text": "or from the middle point\nup to the high point.", "start": 1132.43, "duration": 3.39}, {"text": "And the last piece\nhere is, if, in fact,", "start": 1135.82, "duration": 2.37}, {"text": "the low point and the\nmiddle point are the same,", "start": 1138.19, "duration": 2.54}, {"text": "I've got a list of size 1.", "start": 1140.73, "duration": 1.21}, {"text": "There's nothing left to do.", "start": 1141.94, "duration": 0.89}, {"text": "I'm done.", "start": 1142.83, "duration": 0.52}, {"text": "OK, I know it's a lot of code.", "start": 1146.14, "duration": 2.789}, {"text": "I would invite you just\nto walk through it.", "start": 1148.929, "duration": 1.791}, {"text": "But I want to take you\nback again to just, simply,", "start": 1150.72, "duration": 2.76}, {"text": "this point and say,\nhere's what we're doing.", "start": 1153.48, "duration": 3.11}, {"text": "We're starting off with pointers\nat the beginning and end", "start": 1156.59, "duration": 2.55}, {"text": "of the list.", "start": 1159.14, "duration": 1.099}, {"text": "We're testing the middle point.", "start": 1160.239, "duration": 1.291}, {"text": "And based on that,\nwe're giving a call", "start": 1161.53, "duration": 2.65}, {"text": "where, now, the pointer is to\nthe beginning and the middle", "start": 1164.18, "duration": 3.54}, {"text": "of the list, simply\npassing it down,", "start": 1167.72, "duration": 2.06}, {"text": "and same as I go through\nall of these pieces.", "start": 1169.78, "duration": 3.28}, {"text": "So that code now gives\nme what I'd like.", "start": 1173.06, "duration": 3.42}, {"text": "Because here, in the\nprevious case, I had a cost.", "start": 1176.48, "duration": 4.94}, {"text": "The cost was to copy the list.", "start": 1181.42, "duration": 2.4}, {"text": "In this case, it's constant.", "start": 1183.82, "duration": 2.73}, {"text": "Because what am I doing?", "start": 1186.55, "duration": 1.0}, {"text": "I'm passing in three values.", "start": 1187.55, "duration": 1.64}, {"text": "And what does it take\nto compute those values?", "start": 1189.19, "duration": 2.37}, {"text": "It's a constant amount of\nwork, because I'm simply", "start": 1191.56, "duration": 2.49}, {"text": "computing mid right there, just\nwith an arithmetic operation.", "start": 1194.05, "duration": 4.61}, {"text": "And that means\norder log n steps,", "start": 1198.66, "duration": 3.61}, {"text": "because I keep reducing\nthe problem in half.", "start": 1202.27, "duration": 2.42}, {"text": "And the cost at each\npoint is constant.", "start": 1204.69, "duration": 3.13}, {"text": "And this is, as a consequence,\na really nice example", "start": 1207.82, "duration": 3.72}, {"text": "of a logarithmic\ncomplexity function.", "start": 1211.54, "duration": 5.39}, {"text": "Now, if you think about it, I'm\ncheating slightly-- second time", "start": 1216.93, "duration": 3.33}, {"text": "today.", "start": 1220.26, "duration": 1.13}, {"text": "Because we said we really don't\ncare about the implementation.", "start": 1221.39, "duration": 2.74}, {"text": "We want to get a sense of the\ncomplexity of the algorithm.", "start": 1224.13, "duration": 3.24}, {"text": "And that's generally true.", "start": 1227.37, "duration": 1.33}, {"text": "But here is a place in which\nthe implementation actually has", "start": 1228.7, "duration": 2.87}, {"text": "an impact on that complexity.", "start": 1231.57, "duration": 2.34}, {"text": "And I want to be conscious of\nthat as I make these decisions.", "start": 1233.91, "duration": 3.54}, {"text": "But again, logarithmic\nin terms of number", "start": 1237.45, "duration": 2.3}, {"text": "of steps, constant\nwork for each step,", "start": 1239.75, "duration": 2.79}, {"text": "because I'm just\npassing in values.", "start": 1242.54, "duration": 2.27}, {"text": "And as a consequence, the\noverall algorithm is log.", "start": 1244.81, "duration": 4.25}, {"text": "Notice one other thing.", "start": 1249.06, "duration": 2.16}, {"text": "I said I want you to see\ncharacteristics of algorithms", "start": 1251.22, "duration": 3.1}, {"text": "that tell you something\nabout the complexity", "start": 1254.32, "duration": 2.31}, {"text": "of that algorithm.", "start": 1256.63, "duration": 2.14}, {"text": "Something that's iterative and\nreduces the problem by size 1", "start": 1258.77, "duration": 3.45}, {"text": "each time, from n, to n minus\n1, to n minus 2-- linear.", "start": 1262.22, "duration": 4.98}, {"text": "Something that reduces\nthe size of the problem", "start": 1267.2, "duration": 2.07}, {"text": "in half, or in thirds, or\nin quarters each time--", "start": 1269.27, "duration": 4.58}, {"text": "logarithmic,\ngenerally, unless I've", "start": 1273.85, "duration": 1.89}, {"text": "got a hidden cost somewhere.", "start": 1275.74, "duration": 3.824}, {"text": "Here's another\nlittle example just", "start": 1279.564, "duration": 1.416}, {"text": "to give you a sense of log.", "start": 1280.98, "duration": 2.421}, {"text": "I want to convert an\ninteger to a string.", "start": 1283.401, "duration": 2.249}, {"text": "I know I can just\ncall str() on it.", "start": 1285.65, "duration": 1.86}, {"text": "But how might we do that\ninside of the machine?", "start": 1287.51, "duration": 2.907}, {"text": "Well, here's a nice\nlittle algorithm for it.", "start": 1290.417, "duration": 1.833}, {"text": "I'm going to set up\nsomething I call digits.", "start": 1292.25, "duration": 2.14}, {"text": "It's just a string\nof all the digits.", "start": 1294.39, "duration": 2.604}, {"text": "If the thing I'm\ntrying to convert is 0,", "start": 1296.994, "duration": 1.666}, {"text": "I just return the string \"0\".", "start": 1298.66, "duration": 2.4}, {"text": "Otherwise, let's run\nthrough a little loop", "start": 1301.06, "duration": 1.95}, {"text": "where I take that\ninteger divided", "start": 1303.01, "duration": 4.47}, {"text": "by 10, the remainder of that.", "start": 1307.48, "duration": 2.22}, {"text": "What is that?", "start": 1309.7, "duration": 1.26}, {"text": "Oh, that's the zeroth or the\n1-order, the first order bit.", "start": 1310.96, "duration": 4.68}, {"text": "And I'm going to index\ninto digits to find that.", "start": 1315.64, "duration": 3.18}, {"text": "And I'm going to add it on to\na string that I'm [INAUDIBLE].", "start": 1318.82, "duration": 2.935}, {"text": "And I'll divide i by 10.", "start": 1321.755, "duration": 3.065}, {"text": "So this says,\ngiven an integer, I", "start": 1324.82, "duration": 3.02}, {"text": "want to convert it to a string.", "start": 1327.84, "duration": 1.87}, {"text": "I divide the integer by\n10, take the remainder.", "start": 1329.71, "duration": 2.22}, {"text": "That gives me the zeroth, or\nif you like, the ones element.", "start": 1331.93, "duration": 4.135}, {"text": "I index into the\nstring, and I record it.", "start": 1336.065, "duration": 2.675}, {"text": "And then I add it to what\nI get by dividing i by 10", "start": 1338.74, "duration": 3.789}, {"text": "and doing the same thing.", "start": 1342.529, "duration": 1.041}, {"text": "So I'll just walk down\neach of the digits,", "start": 1343.57, "duration": 2.694}, {"text": "converting it into a string.", "start": 1346.264, "duration": 1.166}, {"text": "What I care about is the\norder of growth here.", "start": 1350.38, "duration": 3.44}, {"text": "This is all constant.", "start": 1353.82, "duration": 1.38}, {"text": "All I want to worry about\nhere is, how many times", "start": 1355.2, "duration": 2.37}, {"text": "do I go through the loop.", "start": 1357.57, "duration": 2.0}, {"text": "And inside of the loop,\nthis is just constant.", "start": 1359.57, "duration": 2.31}, {"text": "It doesn't depend on\nthe size of the integer.", "start": 1361.88, "duration": 3.94}, {"text": "So how many times do\nI go through the loop?", "start": 1365.82, "duration": 2.61}, {"text": "Well, how many times\ncan I divide i by 10?", "start": 1368.43, "duration": 4.71}, {"text": "And that's log of i, right?", "start": 1373.14, "duration": 2.17}, {"text": "So it's not i itself.", "start": 1375.31, "duration": 1.4}, {"text": "It's not the size\nof the integer.", "start": 1376.71, "duration": 1.83}, {"text": "It's the number of\ndigits in the integer.", "start": 1378.54, "duration": 2.55}, {"text": "And here's another\nnice example of log.", "start": 1381.09, "duration": 4.221}, {"text": "I'll point you,\nagain, right here.", "start": 1385.311, "duration": 2.789}, {"text": "I'm reducing the\nsize of the problem", "start": 1388.1, "duration": 3.25}, {"text": "by a constant\nfactor-- in this case,", "start": 1391.35, "duration": 1.89}, {"text": "by 10-- each time--\nnice characteristic", "start": 1393.24, "duration": 2.85}, {"text": "of a logarithmic algorithm.", "start": 1396.09, "duration": 3.78}, {"text": "OK, we've got constant.", "start": 1399.87, "duration": 2.01}, {"text": "We've got log.", "start": 1401.88, "duration": 1.095}, {"text": "What about linear?", "start": 1402.975, "duration": 2.615}, {"text": "We saw it last time, right?", "start": 1405.59, "duration": 1.98}, {"text": "Something like searching\na list in sequence", "start": 1407.57, "duration": 1.797}, {"text": "was an example of\nsomething that was linear.", "start": 1409.367, "duration": 1.833}, {"text": "In fact, most of the\nexamples we saw last time", "start": 1411.2, "duration": 2.55}, {"text": "were things with\niterative loops.", "start": 1413.75, "duration": 2.65}, {"text": "So for example, fact, written\nintuitively-- factorial,", "start": 1416.4, "duration": 4.37}, {"text": "right-- n times n\nminus 1 times n minus 2", "start": 1420.77, "duration": 2.19}, {"text": "all the way down to 1.", "start": 1422.96, "duration": 1.46}, {"text": "I set product to 1.", "start": 1424.42, "duration": 1.56}, {"text": "I go for a loop where i\ngoes from 1 up to n minus 1,", "start": 1425.98, "duration": 3.31}, {"text": "or just below n minus\n1-- incrementally", "start": 1429.29, "duration": 2.85}, {"text": "multiplying product by i and\nrestoring that back away.", "start": 1432.14, "duration": 4.057}, {"text": "Again, we know that this loop\nhere-- how many times do I", "start": 1436.197, "duration": 2.333}, {"text": "go through it?", "start": 1438.53, "duration": 0.6}, {"text": "I go through it n times.", "start": 1439.13, "duration": 1.74}, {"text": "The cost inside the loop, there\nare three steps, changing i,", "start": 1440.87, "duration": 3.92}, {"text": "I'm multiplying product times\ni, I'm storing that value back", "start": 1444.79, "duration": 2.77}, {"text": "in product.", "start": 1447.56, "duration": 0.867}, {"text": "And as we saw, that\nconstant doesn't matter.", "start": 1448.427, "duration": 1.833}, {"text": "This is linear.", "start": 1450.26, "duration": 1.26}, {"text": "So n times around the loop,\nconstant cost each time-- order", "start": 1451.52, "duration": 2.97}, {"text": "n.", "start": 1454.49, "duration": 2.16}, {"text": "What about recursive?", "start": 1456.65, "duration": 2.3}, {"text": "I could write fact recursively.", "start": 1458.95, "duration": 2.42}, {"text": "I actually prefer\nit this way, right?", "start": 1461.37, "duration": 1.86}, {"text": "If n is less than or\nequal to 1, return 1.", "start": 1463.23, "duration": 2.01}, {"text": "Otherwise, multiply\nn by whatever I get", "start": 1465.24, "duration": 2.94}, {"text": "by calling this on n minus 1.", "start": 1468.18, "duration": 4.52}, {"text": "The cost inside the\nloop is just constant.", "start": 1472.7, "duration": 2.28}, {"text": "I'm doing one subtraction,\none multiplication.", "start": 1474.98, "duration": 3.18}, {"text": "How many times I go through it?", "start": 1478.16, "duration": 1.86}, {"text": "Again, n times, because I've\ngot to go from n to n minus 1", "start": 1480.02, "duration": 2.97}, {"text": "to n minus 2.", "start": 1482.99, "duration": 1.32}, {"text": "So again, this is linear.", "start": 1484.31, "duration": 4.96}, {"text": "Now, if you were\nto time it, you'd", "start": 1489.27, "duration": 1.53}, {"text": "probably see a difference.", "start": 1490.8, "duration": 1.879}, {"text": "My guess is-- I'm sure\nProfessor Guttag will correct me", "start": 1492.679, "duration": 2.291}, {"text": "if I get it wrong-- is that\nthe factorial one probably", "start": 1494.97, "duration": 2.4}, {"text": "takes a little more\ntime, because you've", "start": 1497.37, "duration": 1.77}, {"text": "got to set up the frame\nfor the recursive call.", "start": 1499.14, "duration": 2.88}, {"text": "But in terms of what we care\nabout, they're the same.", "start": 1502.02, "duration": 2.797}, {"text": "They're both linear.", "start": 1504.817, "duration": 0.833}, {"text": "They're order n.", "start": 1505.65, "duration": 0.95}, {"text": "And so interestingly, both\niterative and recursive", "start": 1506.6, "duration": 3.1}, {"text": "factorial have same\norder of growth.", "start": 1509.7, "duration": 3.88}, {"text": "Again, I want you to\nnotice, what's the key here.", "start": 1513.58, "duration": 3.78}, {"text": "Reducing the size of the problem\nby 1 is indicative, generally,", "start": 1517.36, "duration": 4.53}, {"text": "of something that's going\nto have linear growth.", "start": 1521.89, "duration": 3.06}, {"text": "I say in general.", "start": 1524.95, "duration": 0.79}, {"text": "If it's a loop inside\nof a loop, as we saw,", "start": 1525.74, "duration": 1.64}, {"text": "it might be a little bigger.", "start": 1527.38, "duration": 0.75}, {"text": "But this is generally linear.", "start": 1528.13, "duration": 1.208}, {"text": "Constant, log, linear,\nlog-linear-- that is,", "start": 1532.22, "duration": 5.15}, {"text": "n log n-- we're going\nto see this next time.", "start": 1537.37, "duration": 3.389}, {"text": "I'm certainly going\nto push it ahead.", "start": 1540.759, "duration": 1.541}, {"text": "It invites you to come back\non Wednesday and see this.", "start": 1542.3, "duration": 2.45}, {"text": "It's actually something that's\na really powerful algorithm.", "start": 1544.75, "duration": 2.489}, {"text": "It's going to be really useful.", "start": 1547.239, "duration": 1.291}, {"text": "We're going to look\nat something called", "start": 1548.53, "duration": 1.625}, {"text": "merge sort, which is a very\ncommon sorting algorithm", "start": 1550.155, "duration": 2.505}, {"text": "and has that property\nof being log-linear.", "start": 1552.66, "duration": 1.83}, {"text": "So we'll come back\nto this next time.", "start": 1554.49, "duration": 3.126}, {"text": "How about polynomial?", "start": 1557.616, "duration": 2.844}, {"text": "Well, we saw this\nlast time as well.", "start": 1560.46, "duration": 2.8}, {"text": "This commonly occurs\nwhen we have nested loops", "start": 1563.26, "duration": 3.54}, {"text": "or where we have nested\nrecursive function", "start": 1566.8, "duration": 2.49}, {"text": "calls-- nested loop meaning\nI'm looping over some variable,", "start": 1569.29, "duration": 3.76}, {"text": "and inside of there,\nI've got another loop.", "start": 1573.05, "duration": 2.45}, {"text": "And what we saw\nis the outer loop,", "start": 1575.5, "duration": 1.83}, {"text": "if it's a standard iterative\nthing, will be linear.", "start": 1577.33, "duration": 2.79}, {"text": "But inside of the loop, I'm\ndoing a linear amount of work", "start": 1580.12, "duration": 2.64}, {"text": "each time.", "start": 1582.76, "duration": 0.54}, {"text": "So it becomes n times\nn, so order n squared.", "start": 1583.3, "duration": 4.59}, {"text": "OK, exponential-- these\nare things-- sorry,", "start": 1587.89, "duration": 9.154}, {"text": "yes, I did that right.", "start": 1597.044, "duration": 0.916}, {"text": "I'm going to go back to it.", "start": 1597.96, "duration": 0.62}, {"text": "Exponential-- these are things\nthat we'd like to stay away", "start": 1598.58, "duration": 2.416}, {"text": "from, but sometimes, we can't.", "start": 1600.996, "duration": 1.904}, {"text": "And a common\ncharacteristic here is", "start": 1602.9, "duration": 2.09}, {"text": "when we've got a\nrecursive function", "start": 1604.99, "duration": 1.56}, {"text": "where there's more\nthan one recursive", "start": 1606.55, "duration": 2.58}, {"text": "call inside the problem.", "start": 1609.13, "duration": 4.04}, {"text": "Remember Towers of Hanoi, that\nwonderful demonstration I did.", "start": 1613.17, "duration": 2.915}, {"text": "I was tempted to bring it\nback, because it's always", "start": 1616.085, "duration": 2.125}, {"text": "fun to get a little bit\nof applause when I do it.", "start": 1618.21, "duration": 1.77}, {"text": "But I won't do it this time.", "start": 1619.98, "duration": 0.9}, {"text": "But remember, we\nlooked at that problem", "start": 1620.88, "duration": 1.869}, {"text": "of solving the Towers of Hanoi.", "start": 1622.749, "duration": 1.291}, {"text": "How do I move a stack of size\nn of different-sized disks", "start": 1624.04, "duration": 3.23}, {"text": "from one peg to another\nwhere I can only", "start": 1627.27, "duration": 2.46}, {"text": "move the top disk\nonto another one", "start": 1629.73, "duration": 1.86}, {"text": "and I can't cover\nup a smaller disk?", "start": 1631.59, "duration": 2.52}, {"text": "Want to remind\nyou, we saw, there", "start": 1634.11, "duration": 1.47}, {"text": "was a wonderful recursive\nsolution to that.", "start": 1635.58, "duration": 1.98}, {"text": "It said, move a stack of size\nn minus 1 onto the spare peg.", "start": 1637.56, "duration": 5.51}, {"text": "Move the bottom one.", "start": 1643.07, "duration": 1.39}, {"text": "And then, move that stack\nover onto the thing you", "start": 1644.46, "duration": 3.21}, {"text": "were headed towards, OK?", "start": 1647.67, "duration": 3.14}, {"text": "What's the complexity of that?", "start": 1650.81, "duration": 2.49}, {"text": "Well, I'm going to show you a\ntrick for figuring that out.", "start": 1653.3, "duration": 2.516}, {"text": "It's called a\nrecurrence relation", "start": 1655.816, "duration": 1.374}, {"text": "for a very deliberate reason.", "start": 1657.19, "duration": 1.208}, {"text": "But it'll give us\na little, handy way", "start": 1658.398, "duration": 1.612}, {"text": "to think about, what's\nthe order of growth here.", "start": 1660.01, "duration": 3.61}, {"text": "So I'm going to let t sub\nn denote the time it takes", "start": 1663.62, "duration": 3.84}, {"text": "to move a tower of size n.", "start": 1667.46, "duration": 1.891}, {"text": "And I want to get\nan expression for,", "start": 1669.351, "duration": 1.499}, {"text": "how much time is\nthat going to take.", "start": 1670.85, "duration": 2.4}, {"text": "What do I know?", "start": 1673.25, "duration": 2.04}, {"text": "I know that's 2 times t\nto the n minus 1, right?", "start": 1675.29, "duration": 4.02}, {"text": "I've got to move a stack of\nsize 1 less onto the spare peg,", "start": 1679.31, "duration": 3.9}, {"text": "and then, 1 to move that\nbottom thing over, and then,", "start": 1683.21, "duration": 3.45}, {"text": "whatever it takes me to move\na stack of size n minus 1", "start": 1686.66, "duration": 2.67}, {"text": "over to that peg.", "start": 1689.33, "duration": 3.09}, {"text": "OK, so how does that help me?", "start": 1692.42, "duration": 2.34}, {"text": "Well, let's play the same game.", "start": 1694.76, "duration": 1.4}, {"text": "What's t of n minus 1?", "start": 1696.16, "duration": 3.27}, {"text": "Oh, that's 2t of\nn minus 2 plus 1.", "start": 1699.43, "duration": 4.476}, {"text": "I'm just substituting in.", "start": 1703.906, "duration": 1.514}, {"text": "I'm using exactly the\nsame relationship here.", "start": 1705.42, "duration": 3.66}, {"text": "All right, let's just do\na little math on that.", "start": 1709.08, "duration": 2.35}, {"text": "That's 4t to the n\nminus 2 plus 2 plus 1.", "start": 1711.43, "duration": 3.97}, {"text": "And you're still\ngoing, OK, who cares.", "start": 1715.4, "duration": 1.84}, {"text": "Well, let's do the same\nthing one more time.", "start": 1717.24, "duration": 3.43}, {"text": "t of n minus 2-- that's\n2t of n minus 3 plus 1.", "start": 1720.67, "duration": 5.912}, {"text": "Oh, see the pattern?", "start": 1726.582, "duration": 2.328}, {"text": "You can start to see\nit emerge here, right?", "start": 1728.91, "duration": 3.03}, {"text": "Each time I reduce this, I'm\nadding another power of 2,", "start": 1731.94, "duration": 3.66}, {"text": "and I'm increasing the\ncoefficient out front.", "start": 1735.6, "duration": 4.24}, {"text": "And so, in fact, after k\nsteps, I'll have 1 plus 2", "start": 1739.84, "duration": 3.38}, {"text": "plus 4 all the way up\nto 2 to the k minus 1", "start": 1743.22, "duration": 2.97}, {"text": "plus 2 to the k times\nt sub n minus k.", "start": 1746.19, "duration": 5.331}, {"text": "Hopefully you can see\nit if you just look.", "start": 1751.521, "duration": 1.749}, {"text": "This expression is capturing\nall of those up there.", "start": 1753.27, "duration": 2.7}, {"text": "I'm just pulling\nit out each time.", "start": 1755.97, "duration": 3.32}, {"text": "When am I done?", "start": 1759.29, "duration": 1.85}, {"text": "When this is size 0,\nwhen k is equal to n.", "start": 1761.14, "duration": 3.562}, {"text": "And so that's when I\nget that expression.", "start": 1764.702, "duration": 4.858}, {"text": "If this is going by too fast,\njust walk it through yourself", "start": 1769.56, "duration": 2.53}, {"text": "later on.", "start": 1772.09, "duration": 0.5}, {"text": "But I'm literally just\nusing this expression", "start": 1772.59, "duration": 2.26}, {"text": "to do the reduction\nuntil I see the pattern.", "start": 1774.85, "duration": 2.85}, {"text": "All right, what's that?", "start": 1777.7, "duration": 3.01}, {"text": "Well, if your Course 18\nmajor, you've seen it before.", "start": 1780.71, "duration": 2.46}, {"text": "If you haven't, here's\na nice, little trick.", "start": 1783.17, "duration": 2.57}, {"text": "Let me let a equal that sum,\n2 to the n minus 1 plus 2", "start": 1785.74, "duration": 4.37}, {"text": "to the n minus 2 all\nthe way down to 1.", "start": 1790.11, "duration": 2.95}, {"text": "Let me multiply both the\nleft and the right side by 2.", "start": 1793.06, "duration": 3.61}, {"text": "That gives me, 2a is equal\nto 2 to the n plus 2 to the n", "start": 1796.67, "duration": 3.84}, {"text": "minus 1 all the way down to 2.", "start": 1800.51, "duration": 1.25}, {"text": "I'm just taking\neach of the terms", "start": 1801.76, "duration": 1.374}, {"text": "and multiplying them by 2.", "start": 1803.134, "duration": 3.096}, {"text": "Now subtract this from that.", "start": 1806.23, "duration": 3.345}, {"text": "And then on the left\nside, you get a.", "start": 1809.575, "duration": 2.777}, {"text": "And on the right side,\nyou get that term.", "start": 1812.352, "duration": 1.708}, {"text": "These all cancel out minus\n1-- geometric series, cool.", "start": 1814.06, "duration": 5.78}, {"text": "So that sum is just\n2 to the n minus 1.", "start": 1819.84, "duration": 2.42}, {"text": "And if I plug that\nback in there,", "start": 1822.26, "duration": 3.16}, {"text": "ah, I've got my order of\ngrowth, exponential, 2 to the n.", "start": 1825.42, "duration": 5.424}, {"text": "OK, I was a\nmath/physics undergrad.", "start": 1833.63, "duration": 2.01}, {"text": "I like these kinds of things.", "start": 1835.64, "duration": 1.644}, {"text": "But I wanted you\nto see how we can", "start": 1837.284, "duration": 1.416}, {"text": "reason through it, because this\nis letting us see the growth.", "start": 1838.7, "duration": 3.18}, {"text": "What I want you to\npull away from this is,", "start": 1841.88, "duration": 2.37}, {"text": "notice the characteristic.", "start": 1844.25, "duration": 1.27}, {"text": "In Towers of Hanoi--\nwe're going to do", "start": 1845.52, "duration": 1.583}, {"text": "another example in a\nsecond-- the characteristic", "start": 1847.103, "duration": 2.517}, {"text": "was, at the recursive\nstep, I had not one,", "start": 1849.62, "duration": 3.54}, {"text": "but two recursive calls.", "start": 1853.16, "duration": 3.11}, {"text": "And that is characteristic\nof something", "start": 1856.27, "duration": 1.78}, {"text": "with exponential growth, which\nI just saw here, 2 to the n.", "start": 1858.05, "duration": 4.365}, {"text": "That, by the way,\nI'll remind you", "start": 1862.415, "duration": 1.375}, {"text": "of the story of Towers of--\nTowers of Hanoi, right?", "start": 1863.79, "duration": 2.63}, {"text": "When the priests in that temple\nmove the entire stack from one", "start": 1866.42, "duration": 3.96}, {"text": "peg to another, we all reach\nnirvana, and the world ends.", "start": 1870.38, "duration": 4.05}, {"text": "n is equal to 64 here.", "start": 1874.43, "duration": 2.86}, {"text": "Go figure out what\n2 to the 64 is.", "start": 1877.29, "duration": 1.68}, {"text": "And if you're doing one move\nper second, which they will,", "start": 1878.97, "duration": 3.61}, {"text": "I think we're certainly\ngoing to be here a while", "start": 1882.58, "duration": 2.0}, {"text": "before the universe ends\nand we reach nirvana,", "start": 1884.58, "duration": 2.91}, {"text": "probably several times over.", "start": 1887.49, "duration": 2.18}, {"text": "AUDIENCE: I thought we\nwere already in nirvana.", "start": 1889.67, "duration": 1.964}, {"text": "ERIC GRIMSON: We are in\nnirvana, we're at MIT.", "start": 1891.634, "duration": 1.916}, {"text": "You're right, John.", "start": 1893.55, "duration": 0.51}, {"text": "But we're worrying about\nthe rest of the world.", "start": 1894.06, "duration": 1.958}, {"text": "So, OK, we'll keep moving on.", "start": 1896.018, "duration": 2.542}, {"text": "Nirvana will be next week\nwhen they do the quiz, John.", "start": 1898.56, "duration": 2.31}, {"text": "So we'll keep moving quickly.", "start": 1900.87, "duration": 1.26}, {"text": "All right.", "start": 1902.13, "duration": 2.23}, {"text": "I want to show you\none more example.", "start": 1904.36, "duration": 1.83}, {"text": "It's a cool problem\nfrom math, but mostly", "start": 1906.19, "duration": 1.83}, {"text": "to see that characteristic\nof exponential growth.", "start": 1908.02, "duration": 2.85}, {"text": "And then we're going to\npull all of this together.", "start": 1910.87, "duration": 2.9}, {"text": "This is something\ncalled the power set.", "start": 1913.77, "duration": 1.93}, {"text": "So if I have a set\nof things-- well,", "start": 1915.7, "duration": 1.74}, {"text": "let's assume I have a set of\nintegers-- with no repeats--", "start": 1917.44, "duration": 3.34}, {"text": "so 1 through n, 1, 2,\n3, 4, for example--", "start": 1920.78, "duration": 2.73}, {"text": "I want to generate\nthe collection", "start": 1923.51, "duration": 1.55}, {"text": "of all possible subsets--\nso subset with no elements,", "start": 1925.06, "duration": 5.867}, {"text": "with one element, with two\nelements, with three amounts,", "start": 1930.927, "duration": 2.333}, {"text": "all the way up to n elements.", "start": 1933.26, "duration": 2.54}, {"text": "So for example, if my\nset is 1 through 4,", "start": 1935.8, "duration": 4.91}, {"text": "then the power set\nwould be the empty set", "start": 1940.71, "duration": 3.33}, {"text": "with no elements in it, all of\nthe instances with one element,", "start": 1944.04, "duration": 3.3}, {"text": "all of them with two,\nall of them with three,", "start": 1947.34, "duration": 3.22}, {"text": "and all of them with four.", "start": 1950.56, "duration": 1.682}, {"text": "I'd like to write\ncode to generate this.", "start": 1952.242, "duration": 2.228}, {"text": "It's actually handy problem in\nnumber theory or in set theory.", "start": 1954.47, "duration": 3.42}, {"text": "By the way, the\norder doesn't matter.", "start": 1957.89, "duration": 1.73}, {"text": "I could do it this way, but this\nwould be a perfectly reasonable", "start": 1959.62, "duration": 2.71}, {"text": "way of generating it as well.", "start": 1962.33, "duration": 1.29}, {"text": "And I'm going to come\nback to that in a second", "start": 1963.62, "duration": 1.916}, {"text": "as we think about solving this.", "start": 1965.536, "duration": 1.384}, {"text": "The question is, how would I\ngo about finding all of these.", "start": 1966.92, "duration": 2.76}, {"text": "I'm going to use-- well,\nwe could stop and say,", "start": 1972.5, "duration": 3.53}, {"text": "you could imagine writing\na big iterative loop.", "start": 1976.03, "duration": 2.28}, {"text": "You start with n, and you\ndecide, do I include it or not.", "start": 1978.31, "duration": 2.91}, {"text": "And then you go to n minus 1.", "start": 1981.22, "duration": 1.412}, {"text": "Do I include it or not?", "start": 1982.632, "duration": 0.958}, {"text": "And you could think about\nwriting a big loop that", "start": 1983.59, "duration": 2.01}, {"text": "would generate all\nof these-- actually,", "start": 1985.6, "duration": 1.625}, {"text": "a bunch of nested loops.", "start": 1987.225, "duration": 2.045}, {"text": "But there's a nice\nrecursive solution.", "start": 1989.27, "duration": 2.19}, {"text": "And I want to encourage\nyou to think that way.", "start": 1991.46, "duration": 1.917}, {"text": "So here's the way\nI'm going to do it.", "start": 1993.377, "duration": 1.541}, {"text": "What did we do when we said\nwe want to think recursively?", "start": 1994.918, "duration": 2.642}, {"text": "We say, let's assume we can\nsolve a smaller size problem.", "start": 1997.56, "duration": 4.45}, {"text": "If I want to generate the\npower set of all the integers", "start": 2002.01, "duration": 2.79}, {"text": "from 1 to n, I'm\ngoing to assume that I", "start": 2004.8, "duration": 2.01}, {"text": "can generate the power set of\nintegers from 1 to n minus 1.", "start": 2006.81, "duration": 4.65}, {"text": "If I have that solution, then\nI can construct the solution", "start": 2011.46, "duration": 3.87}, {"text": "to the bigger problem\nreally easily.", "start": 2015.33, "duration": 3.96}, {"text": "Wow.", "start": 2019.29, "duration": 0.72}, {"text": "Well, all of the\nthings that were", "start": 2020.01, "duration": 1.62}, {"text": "in that solution to\nthe smaller problem", "start": 2021.63, "duration": 4.12}, {"text": "have to be part of the\nsolution to the bigger problem.", "start": 2025.75, "duration": 2.25}, {"text": "They're all subsets of\n1 to n, because they're", "start": 2028.0, "duration": 2.42}, {"text": "all subsets of 1 to n minus 1.", "start": 2030.42, "duration": 3.14}, {"text": "So I'm going to\nadd all those in.", "start": 2033.56, "duration": 2.13}, {"text": "And then I'm going to say,\nlet's take each one of those", "start": 2035.69, "duration": 3.15}, {"text": "and add n to each\nof those subsets.", "start": 2038.84, "duration": 2.94}, {"text": "Because that gives me all\nthe rest of the solutions.", "start": 2041.78, "duration": 2.37}, {"text": "I've got all the ways to\nfind solutions without n.", "start": 2044.15, "duration": 2.99}, {"text": "I get all the ways to\nfind solutions with n.", "start": 2047.14, "duration": 2.855}, {"text": "That may sound like a\nlot of gobbledygook,", "start": 2049.995, "duration": 1.749}, {"text": "but let me show you the example.", "start": 2051.744, "duration": 1.435}, {"text": "There is the power\nset of the empty set.", "start": 2053.179, "duration": 3.27}, {"text": "It's just the empty set.", "start": 2056.449, "duration": 2.46}, {"text": "Get the power set of\n1, I include that,", "start": 2058.909, "duration": 2.961}, {"text": "and I include a version\nof everything there with 1", "start": 2061.87, "duration": 3.15}, {"text": "added to it.", "start": 2065.02, "duration": 1.29}, {"text": "There's the power set of 1.", "start": 2066.31, "duration": 3.409}, {"text": "Now, given that, how do\nI get the power set of 2?", "start": 2069.719, "duration": 2.951}, {"text": "Well, both of those are\ncertainly things I want.", "start": 2072.67, "duration": 3.049}, {"text": "And for each one of\nthem, let me just add 2.", "start": 2075.719, "duration": 4.508}, {"text": "And if you look at\nthat, right, that's", "start": 2080.227, "duration": 1.583}, {"text": "the set of all ways of getting\nnothing, 1, 2, or both of them.", "start": 2081.81, "duration": 4.44}, {"text": "And you get the idea.", "start": 2086.25, "duration": 0.94}, {"text": "Now, having that solution, I\ncan get the solution for 3,", "start": 2087.19, "duration": 3.08}, {"text": "because all of those\nhave to belong.", "start": 2090.27, "duration": 1.8}, {"text": "And I simply add 3\nto each one of those.", "start": 2092.07, "duration": 6.35}, {"text": "Oh, that's cool, right?", "start": 2098.42, "duration": 1.876}, {"text": "All right, you don't have to be\na math geek to admit it's cool.", "start": 2100.296, "duration": 2.624}, {"text": "It is kind of cool.", "start": 2102.92, "duration": 0.9}, {"text": "Because it says,\ngee, got a solution", "start": 2103.82, "duration": 3.27}, {"text": "to the smaller problem.", "start": 2107.09, "duration": 1.5}, {"text": "Generating the next\npiece is a natural step.", "start": 2108.59, "duration": 3.482}, {"text": "And you can also see,\nthe size of that set's", "start": 2112.072, "duration": 2.578}, {"text": "doubling each time.", "start": 2114.65, "duration": 0.839}, {"text": "Because you get to 4, I'm\ngoing to add everything", "start": 2115.489, "duration": 2.041}, {"text": "in to all of those pieces--\nreally nice recursive", "start": 2117.53, "duration": 4.83}, {"text": "description.", "start": 2122.36, "duration": 2.28}, {"text": "Let's write some code.", "start": 2124.64, "duration": 2.596}, {"text": "So I'll also hand it out to\nyou, but here's the code.", "start": 2127.236, "duration": 2.283}, {"text": "And I'm going to walk\nthrough it carefully.", "start": 2129.519, "duration": 1.791}, {"text": "And then we're\ngoing to analyze it.", "start": 2131.31, "duration": 1.458}, {"text": "But it's actually, for me,\na beautiful piece of code.", "start": 2132.768, "duration": 2.292}, {"text": "I did not write it,\nby the way, John did.", "start": 2135.06, "duration": 1.8}, {"text": "But it's a beautiful\npiece of code.", "start": 2136.86, "duration": 2.03}, {"text": "I want to generate all\nthe subsets with a power", "start": 2138.89, "duration": 2.2}, {"text": "set of some list of elements.", "start": 2141.09, "duration": 2.87}, {"text": "Here's how I'm going to do it.", "start": 2143.96, "duration": 1.57}, {"text": "I'm going to set up some\ninternal variable called", "start": 2145.53, "duration": 2.89}, {"text": "res, OK?", "start": 2148.42, "duration": 3.39}, {"text": "And then, what am I going to do?", "start": 2151.81, "duration": 1.5}, {"text": "Actually, I don't know\nwhy I put res in there.", "start": 2153.31, "duration": 1.57}, {"text": "I don't need it.", "start": 2154.88, "duration": 0.666}, {"text": "But we'll come back to that.", "start": 2155.546, "duration": 1.434}, {"text": "If the list is empty,\nlength of the list is 0,", "start": 2156.98, "duration": 5.21}, {"text": "I'm going to just\nreturn that solution.", "start": 2162.19, "duration": 3.64}, {"text": "And this is not a typo.", "start": 2165.83, "duration": 2.87}, {"text": "What is that funky thing there?", "start": 2168.7, "duration": 1.83}, {"text": "It is a list of one\nelement, which is", "start": 2170.53, "duration": 3.0}, {"text": "the empty list, which I need.", "start": 2173.53, "duration": 2.01}, {"text": "Because the solution\nin this case", "start": 2175.54, "duration": 1.4}, {"text": "is a set with nothing in it.", "start": 2176.94, "duration": 2.57}, {"text": "So there is the thing I\nreturn in the base case.", "start": 2179.51, "duration": 4.85}, {"text": "Otherwise, what do I do?", "start": 2184.36, "duration": 2.59}, {"text": "I take all the elements of\nthe list except the last one,", "start": 2186.95, "duration": 4.922}, {"text": "and I call it recursively.", "start": 2191.872, "duration": 1.083}, {"text": "I generate all of\nthe subsets of that.", "start": 2192.955, "duration": 2.985}, {"text": "Perfect, so I'm going\nto call that smaller.", "start": 2195.94, "duration": 3.16}, {"text": "I then take the last\nelement, and I make a list", "start": 2199.1, "duration": 2.99}, {"text": "of just the last element.", "start": 2202.09, "duration": 2.357}, {"text": "And what did I say I need to do?", "start": 2204.447, "duration": 1.333}, {"text": "I need all of these guys,\nplus I need all of them", "start": 2205.78, "duration": 4.23}, {"text": "where I add that\nelement in-- oh, nice.", "start": 2210.01, "duration": 3.58}, {"text": "I'll set up new as\na variable here.", "start": 2213.59, "duration": 1.85}, {"text": "And I'll loop over\nall of the elements", "start": 2215.44, "duration": 2.35}, {"text": "from the smaller problem,\nwhere I basically", "start": 2217.79, "duration": 2.72}, {"text": "add that list to that list.", "start": 2220.51, "duration": 3.06}, {"text": "And I put it into new.", "start": 2223.57, "duration": 2.78}, {"text": "That's simply taking all\nof the solutions of subsets", "start": 2226.35, "duration": 2.91}, {"text": "of up to n minus 1 and creating\na new set of subsets where n is", "start": 2229.26, "duration": 3.48}, {"text": "included in every one of them.", "start": 2232.74, "duration": 1.65}, {"text": "And now I take this,\nand I take that.", "start": 2234.39, "duration": 3.83}, {"text": "I append them-- or\nconcatenate them, rather.", "start": 2238.22, "duration": 2.58}, {"text": "I should say \"append them\"--\nconcatenate them together", "start": 2240.8, "duration": 2.25}, {"text": "and return them.", "start": 2243.05, "duration": 1.97}, {"text": "That's a crisp piece of code.", "start": 2245.02, "duration": 3.182}, {"text": "And I'm sorry, John, I have no\nidea why I put res up there.", "start": 2248.202, "duration": 2.458}, {"text": "I don't think I need that\nanywhere in this code.", "start": 2250.66, "duration": 1.82}, {"text": "And I won't blame it on John.", "start": 2252.48, "duration": 1.208}, {"text": "It was my recopying of the code.", "start": 2253.688, "duration": 1.964}, {"text": "AUDIENCE: [INAUDIBLE] .", "start": 2255.652, "duration": 0.958}, {"text": "ERIC GRIMSON: Sorry?", "start": 2256.61, "duration": 0.435}, {"text": "AUDIENCE: Maybe.", "start": 2257.045, "duration": 0.666}, {"text": "ERIC GRIMSON: Maybe, right.", "start": 2257.711, "duration": 2.296}, {"text": "Look, I know I'm flaming at you.", "start": 2260.007, "duration": 1.333}, {"text": "I get to do it.", "start": 2261.34, "duration": 0.63}, {"text": "I'm tenured, as I've said\nmultiple times in this course.", "start": 2261.97, "duration": 2.82}, {"text": "That's a cool piece of code.", "start": 2264.79, "duration": 3.99}, {"text": "Imagine trying to write it\nwith a bunch of loops iterating", "start": 2268.78, "duration": 2.88}, {"text": "over indices.", "start": 2271.66, "duration": 1.47}, {"text": "Good luck.", "start": 2273.13, "duration": 1.32}, {"text": "You can do it.", "start": 2274.45, "duration": 1.18}, {"text": "Maybe it'll be on the quiz.", "start": 2275.63, "duration": 1.22}, {"text": "Actually, no, it won't.", "start": 2276.85, "duration": 0.958}, {"text": "That's way too hard to ask.", "start": 2277.808, "duration": 1.952}, {"text": "But it's a cool piece of\ncode, because I can look at it", "start": 2279.76, "duration": 2.61}, {"text": "and say, what's the solution,\nsolve the smaller problem,", "start": 2282.37, "duration": 3.99}, {"text": "and then, given\nthat, take every one", "start": 2286.36, "duration": 1.627}, {"text": "of the things in\nthat smaller problem,", "start": 2287.987, "duration": 1.583}, {"text": "add that element into it, and\nput the two pieces together.", "start": 2289.57, "duration": 3.88}, {"text": "Wonderful.", "start": 2293.45, "duration": 1.6}, {"text": "OK, with that in mind, let's\nsee if we can figure out", "start": 2295.05, "duration": 4.51}, {"text": "the complexity of this.", "start": 2299.56, "duration": 0.96}, {"text": "Up here, that's constant.", "start": 2303.04, "duration": 2.82}, {"text": "That's OK.", "start": 2305.86, "duration": 1.81}, {"text": "Right there, I've got\nthe recursive call.", "start": 2307.67, "duration": 2.13}, {"text": "So I know, first of\nall, that this is going", "start": 2309.8, "duration": 2.37}, {"text": "to call itself n times, right?", "start": 2312.17, "duration": 3.21}, {"text": "Because each stage reduces\nthe size of the problem by 1.", "start": 2315.38, "duration": 3.13}, {"text": "So if I'm trying to\nget the power set of n,", "start": 2318.51, "duration": 2.207}, {"text": "I'm going to have to\ndo it to get n minus 1,", "start": 2320.717, "duration": 1.833}, {"text": "and then, n minus 2.", "start": 2322.55, "duration": 0.833}, {"text": "So I know the recursion of\ngenSubsets() to genSubsets().", "start": 2323.383, "duration": 3.427}, {"text": "This is going to\ngo around n times.", "start": 2326.81, "duration": 4.21}, {"text": "That's not so bad.", "start": 2331.02, "duration": 1.72}, {"text": "But right down here,\nI've got to figure out,", "start": 2332.74, "duration": 2.79}, {"text": "what's the cost of\nthis, all right?", "start": 2335.53, "duration": 4.334}, {"text": "This is constant.", "start": 2339.864, "duration": 1.466}, {"text": "That's setting up as constant.", "start": 2341.33, "duration": 1.27}, {"text": "That's constant.", "start": 2342.6, "duration": 0.81}, {"text": "But there, I've\ngot another loop.", "start": 2343.41, "duration": 1.95}, {"text": "And the loop depends\non how big smaller is.", "start": 2345.36, "duration": 3.69}, {"text": "And \"smaller's\" a bad choice\nof term here, because it's", "start": 2349.05, "duration": 2.55}, {"text": "going to grow on me.", "start": 2351.6, "duration": 0.89}, {"text": "But let's think about it.", "start": 2352.49, "duration": 1.54}, {"text": "By the way, I'm assuming\nappend is constant time,", "start": 2354.03, "duration": 2.56}, {"text": "which, generally, it is.", "start": 2356.59, "duration": 1.96}, {"text": "The time I need to\nsolve this problem", "start": 2358.55, "duration": 1.98}, {"text": "includes the time to\nsolve the smaller problem.", "start": 2360.53, "duration": 3.82}, {"text": "That recursive call, I know\nthat's going to be linear.", "start": 2364.35, "duration": 2.88}, {"text": "But I also need\nthe time it takes", "start": 2367.23, "duration": 2.13}, {"text": "to make the copy of all the\nthings in that smaller version.", "start": 2369.36, "duration": 4.72}, {"text": "So how big is that?", "start": 2374.08, "duration": 2.43}, {"text": "Oh, crud number two-- number\nof things in the power set", "start": 2376.51, "duration": 5.55}, {"text": "grows as a factor of 2, right?", "start": 2382.06, "duration": 2.0}, {"text": "If I've got something of,\nyou know, 1 through 3,", "start": 2384.06, "duration": 2.119}, {"text": "I've got all the things\nwith nothing in it,", "start": 2386.179, "duration": 1.791}, {"text": "all the things with one\nin it, all the things", "start": 2387.97, "duration": 1.62}, {"text": "with two things in it, all the\nthings with three things in it.", "start": 2389.59, "duration": 2.583}, {"text": "That's 8.", "start": 2392.173, "duration": 0.807}, {"text": "And each time around, I'm\ndoubling the size of it.", "start": 2392.98, "duration": 2.61}, {"text": "So for a set of size k,\nthere are 2 the k cases.", "start": 2395.59, "duration": 4.77}, {"text": "And that says that\nthis loop right here", "start": 2400.36, "duration": 4.07}, {"text": "is going to be\ngrowing exponentially.", "start": 2404.43, "duration": 2.55}, {"text": "Because I've got to go\ndown that entire list", "start": 2406.98, "duration": 1.95}, {"text": "to find all of the pieces.", "start": 2408.93, "duration": 2.39}, {"text": "So what's the\noverall complexity?", "start": 2411.32, "duration": 2.76}, {"text": "I'm going to play the same game.", "start": 2414.08, "duration": 2.77}, {"text": "Let's let t sub n\ncapture the time it takes", "start": 2416.85, "duration": 3.58}, {"text": "to solve a problem of size n.", "start": 2420.43, "duration": 3.394}, {"text": "Just temporarily,\nI'm going to let", "start": 2423.824, "duration": 1.416}, {"text": "s sub n denote the size of the\nsolution for a problem of size", "start": 2425.24, "duration": 3.43}, {"text": "n.", "start": 2428.67, "duration": 0.5}, {"text": "How big is that thing, smaller?", "start": 2429.17, "duration": 2.931}, {"text": "And what do I know?", "start": 2432.101, "duration": 2.649}, {"text": "The amount of time it takes me\nto solve the problem of size n", "start": 2434.75, "duration": 3.67}, {"text": "is the amount of time it\ntakes me to solve the slightly", "start": 2438.42, "duration": 2.84}, {"text": "smaller problem-- that's\nthe recursive call", "start": 2441.26, "duration": 1.86}, {"text": "to genSubsets()-- plus the\namount of time it takes me", "start": 2443.12, "duration": 3.42}, {"text": "to run over that loop looking\nat everything in smaller", "start": 2446.54, "duration": 3.6}, {"text": "and adding in a new version,\nplus some constant c,", "start": 2450.14, "duration": 3.52}, {"text": "which is just the number\nof constant operations,", "start": 2453.66, "duration": 2.0}, {"text": "the constant steps\ninside that loop, OK?", "start": 2455.66, "duration": 1.78}, {"text": "And if I go back to it,\nt sub n is the cost here.", "start": 2457.44, "duration": 4.69}, {"text": "t sub n minus 1\nis the cost there.", "start": 2462.13, "duration": 2.38}, {"text": "s sub n is the size of this.", "start": 2464.51, "duration": 1.62}, {"text": "And then I've got,\none, two, three, four,", "start": 2466.13, "duration": 2.82}, {"text": "five constant steps.", "start": 2468.95, "duration": 1.29}, {"text": "So c is probably 5 in this case.", "start": 2470.24, "duration": 3.56}, {"text": "So what can I say?", "start": 2473.8, "duration": 2.44}, {"text": "There's the relationship.", "start": 2476.24, "duration": 1.86}, {"text": "Because I know s of n minus\n1 is 2 to the n minus 1.", "start": 2478.1, "duration": 3.99}, {"text": "There are 2 to the n minus\n1 elements inside of that.", "start": 2482.09, "duration": 4.561}, {"text": "How do I deal with this?", "start": 2486.651, "duration": 0.999}, {"text": "Let's play the same game.", "start": 2487.65, "duration": 1.05}, {"text": "What's t sub n minus 1?", "start": 2488.7, "duration": 2.25}, {"text": "That's t of n minus 2 plus\n2 to the n minus 2 plus c.", "start": 2490.95, "duration": 5.25}, {"text": "And I could keep doing this.", "start": 2496.2, "duration": 1.32}, {"text": "You can see what the\npattern's going to look like.", "start": 2497.52, "duration": 2.82}, {"text": "I'm going to have k\ntimes c constant steps.", "start": 2500.34, "duration": 3.93}, {"text": "For each reduction, I'm going\nto get another power of 2.", "start": 2504.27, "duration": 2.55}, {"text": "And I'm going to reduce this\noverall term, after k steps,", "start": 2506.82, "duration": 3.3}, {"text": "to t the n minus k.", "start": 2510.12, "duration": 2.77}, {"text": "When am I done?", "start": 2512.89, "duration": 1.47}, {"text": "When that's down to\nsomething of size 0.", "start": 2514.36, "duration": 3.07}, {"text": "And there's the expression.", "start": 2517.43, "duration": 1.879}, {"text": "And what you can\nsee is what I wanted", "start": 2519.309, "duration": 1.541}, {"text": "you to see, order n-- or\nsorry, order 2 to the n--", "start": 2520.85, "duration": 3.79}, {"text": "is exponential in the\nsize of the problem.", "start": 2524.64, "duration": 4.39}, {"text": "What's the characteristic?", "start": 2529.03, "duration": 2.18}, {"text": "Something that has a\nrecursive call-- sorry,", "start": 2531.21, "duration": 3.69}, {"text": "multiple recursive\ncalls at each step--", "start": 2534.9, "duration": 2.13}, {"text": "is likely to lead\nto exponential.", "start": 2537.03, "duration": 2.34}, {"text": "But that can also\nbe buried inside", "start": 2539.37, "duration": 1.86}, {"text": "of how I grow the\nsize of the problem.", "start": 2541.23, "duration": 2.025}, {"text": "And that was the case here.", "start": 2543.255, "duration": 1.125}, {"text": "There's only one recursive\ncall, but that loop", "start": 2544.38, "duration": 2.97}, {"text": "grows in size each time around.", "start": 2547.35, "duration": 3.12}, {"text": "So the complexity\nis exponential.", "start": 2550.47, "duration": 3.725}, {"text": "I'm going to pull this together.", "start": 2554.195, "duration": 2.875}, {"text": "I said one of the things I'd\nlike to start to recognize", "start": 2557.07, "duration": 3.03}, {"text": "is, what are the characteristics\nof a choice in algorithm that", "start": 2560.1, "duration": 2.97}, {"text": "leads to a particular\ncomplexity class.", "start": 2563.07, "duration": 2.7}, {"text": "And you now have some of them.", "start": 2565.77, "duration": 1.706}, {"text": "If the code doesn't depend\non the size of the problem,", "start": 2567.476, "duration": 2.574}, {"text": "that's constant.", "start": 2570.05, "duration": 0.974}, {"text": "And in fact, we've\nbeen using that as we", "start": 2571.024, "duration": 1.666}, {"text": "look at pieces of the code.", "start": 2572.69, "duration": 2.16}, {"text": "If we can reduce the problem--\nI said, in this case--", "start": 2574.85, "duration": 2.85}, {"text": "by half each time, by\nsome constant factor,", "start": 2577.7, "duration": 2.31}, {"text": "from n, to n/2, to\nn/4, to n/8, that", "start": 2580.01, "duration": 3.489}, {"text": "tends to be characteristic--\nunless there's", "start": 2583.499, "duration": 1.791}, {"text": "a hidden cost somewhere else--\nof a logarithmic algorithm.", "start": 2585.29, "duration": 3.3}, {"text": "These are really nice.", "start": 2588.59, "duration": 2.16}, {"text": "Simple things that reduce\nthe size of the problem", "start": 2590.75, "duration": 2.79}, {"text": "by 1 at each step--\nan iterative call", "start": 2593.54, "duration": 1.94}, {"text": "that goes from n, to n minus\n1, and then to n minus 2,", "start": 2595.48, "duration": 2.29}, {"text": "and then to n minus\n3-- characteristic", "start": 2597.77, "duration": 2.82}, {"text": "of linear algorithms.", "start": 2600.59, "duration": 2.3}, {"text": "Log-linear we're going\nto see next time.", "start": 2602.89, "duration": 3.33}, {"text": "Polynomial--\ntypically quadratic n", "start": 2606.22, "duration": 2.76}, {"text": "squared when we have nested\nloops or nested recursive", "start": 2608.98, "duration": 4.2}, {"text": "calls.", "start": 2613.18, "duration": 0.765}, {"text": "I'm looping over something.", "start": 2613.945, "duration": 1.305}, {"text": "Inside of there, I'm\nlooping over something else", "start": 2615.25, "duration": 3.09}, {"text": "on a size that depends on\nthe size of the problem.", "start": 2618.34, "duration": 2.37}, {"text": "And then, we just\nsaw this last one.", "start": 2620.71, "duration": 1.5}, {"text": "Multiple recursive\ncalls at each level", "start": 2622.21, "duration": 2.07}, {"text": "tends to be characteristic\nof exponential.", "start": 2624.28, "duration": 3.285}, {"text": "And as I said, we'd like to\nbe as high up in this list", "start": 2627.565, "duration": 3.495}, {"text": "as we can, because those are\nreally nice algorithms to have.", "start": 2631.06, "duration": 4.61}, {"text": "Let me give you one more\nexample of looking at this,", "start": 2635.67, "duration": 3.08}, {"text": "and then we'll be done.", "start": 2638.75, "duration": 3.39}, {"text": "Fibonacci-- standard\nproblem, right?", "start": 2642.14, "duration": 4.45}, {"text": "The nth Fibonacci number is\nthe sum of the previous two", "start": 2646.59, "duration": 2.43}, {"text": "Fibonacci numbers.", "start": 2649.02, "duration": 0.97}, {"text": "This was the example we\nsaw of multiplying rabbits,", "start": 2649.99, "duration": 2.45}, {"text": "if you like.", "start": 2652.44, "duration": 1.35}, {"text": "Here's an iterative\nversion of Fibonacci, which", "start": 2653.79, "duration": 2.18}, {"text": "says if n is 0, it's just 0.", "start": 2655.97, "duration": 1.87}, {"text": "If it's 1 is just 1.", "start": 2657.84, "duration": 1.83}, {"text": "Otherwise, I'm going\nto set up, initially,", "start": 2659.67, "duration": 3.6}, {"text": "the two previous\nFibonacci numbers.", "start": 2663.27, "duration": 1.59}, {"text": "And then I'm just going\nto run through a loop", "start": 2664.86, "duration": 2.37}, {"text": "where I temporarily keep\ntrack of that number.", "start": 2667.23, "duration": 2.97}, {"text": "I move the second previous one\ninto the last previous one.", "start": 2670.2, "duration": 3.984}, {"text": "I add those two.", "start": 2674.184, "duration": 0.666}, {"text": "That becomes the\nsecond previous number.", "start": 2674.85, "duration": 2.54}, {"text": "And I just keep running\nthrough that loop.", "start": 2677.39, "duration": 2.68}, {"text": "You can go run it.", "start": 2680.07, "duration": 0.75}, {"text": "You see it does the right thing.", "start": 2680.82, "duration": 1.333}, {"text": "What I want to look\nat is the complexity.", "start": 2682.153, "duration": 2.507}, {"text": "So that's constant.", "start": 2684.66, "duration": 1.89}, {"text": "That's constant.", "start": 2686.55, "duration": 2.24}, {"text": "That's linear, because the work\ninside the loop is constant,", "start": 2688.79, "duration": 3.62}, {"text": "but I'm doing it n times.", "start": 2692.41, "duration": 2.25}, {"text": "So this is nice.", "start": 2694.66, "duration": 1.769}, {"text": "[INAUDIBLE] I should say,\nthe bottom thing is constant.", "start": 2696.429, "duration": 2.291}, {"text": "The overall algorithm, the\nworst case is just order n.", "start": 2698.72, "duration": 5.59}, {"text": "Great.", "start": 2704.31, "duration": 1.95}, {"text": "What about the\nrecursive version?", "start": 2706.26, "duration": 3.97}, {"text": "For me, this is much nicer code.", "start": 2710.23, "duration": 1.507}, {"text": "It's nice and clean.", "start": 2711.737, "duration": 0.833}, {"text": "It says if n is equal\nto 0, fib is 0, 0.", "start": 2712.57, "duration": 3.2}, {"text": "If n is equal to 1, fib of\n1-- or the first and second", "start": 2715.77, "duration": 2.63}, {"text": "Fibonacci numbers-- are 0 and 1.", "start": 2718.4, "duration": 1.34}, {"text": "Otherwise, just return\nwhat I get by summing", "start": 2719.74, "duration": 4.5}, {"text": "both of those pieces.", "start": 2724.24, "duration": 3.1}, {"text": "And you can probably\nalready guess", "start": 2727.34, "duration": 1.45}, {"text": "what the complexity is\ngoing to be here, right?", "start": 2728.79, "duration": 2.01}, {"text": "Because I've now\ngot two recursive", "start": 2730.8, "duration": 2.55}, {"text": "calls inside of this call.", "start": 2733.35, "duration": 4.626}, {"text": "So one way to think\nabout it is, if I'm", "start": 2737.976, "duration": 1.624}, {"text": "going to solve the\nproblem up here,", "start": 2739.6, "duration": 2.334}, {"text": "I've got to solve two\nversions of the problem below,", "start": 2741.934, "duration": 2.166}, {"text": "which has got to solve two\nversions of the problem below.", "start": 2744.1, "duration": 2.7}, {"text": "And in general, this is going\nto be exponential, 2 to the n.", "start": 2746.8, "duration": 6.21}, {"text": "Now you say, wait a minute.", "start": 2753.01, "duration": 2.07}, {"text": "I was paying attention\nwhen this guy was yattering", "start": 2755.08, "duration": 2.1}, {"text": "on a couple of weeks ago.", "start": 2757.18, "duration": 1.07}, {"text": "Honest, I was.", "start": 2758.25, "duration": 1.055}, {"text": "And in fact, what we saw\nwas that fib isn't balanced", "start": 2759.305, "duration": 4.715}, {"text": "in terms of how it goes, right?", "start": 2764.02, "duration": 1.847}, {"text": "It's not that, on the\nright-hand side of the tree,", "start": 2765.867, "duration": 2.083}, {"text": "I have to solve all\nof those portions,", "start": 2767.95, "duration": 1.62}, {"text": "because the problem\ngets smaller.", "start": 2769.57, "duration": 2.82}, {"text": "Does that change the complexity?", "start": 2772.39, "duration": 2.88}, {"text": "Well, the answer is,\nit changes the base,", "start": 2775.27, "duration": 3.87}, {"text": "but it's actually\nstill exponential.", "start": 2779.14, "duration": 2.172}, {"text": "And if you want to\ngo look this up,", "start": 2781.312, "duration": 1.458}, {"text": "I'm sure you can find\nWikipedia very quickly.", "start": 2782.77, "duration": 3.06}, {"text": "This actually has a very\ncool exponential growth.", "start": 2785.83, "duration": 4.23}, {"text": "It's the golden ratio\nto the nth power.", "start": 2790.06, "duration": 3.42}, {"text": "And in fact, I\nencourage you to go look", "start": 2793.48, "duration": 2.015}, {"text": "at it in the even more\ncopious spare time you have.", "start": 2795.495, "duration": 2.125}, {"text": "It's a very cool\nproof to see it.", "start": 2797.62, "duration": 1.86}, {"text": "But the bottom line\nis, while we can", "start": 2799.48, "duration": 1.68}, {"text": "do a little bit better\nthan 2 to the n,", "start": 2801.16, "duration": 1.83}, {"text": "it still grows\nexponentially with n.", "start": 2802.99, "duration": 2.641}, {"text": "So what do we have?", "start": 2808.52, "duration": 2.54}, {"text": "We've got big O\nnotation as a way", "start": 2811.06, "duration": 2.31}, {"text": "of talking about comparing\nefficiency of algorithms.", "start": 2813.37, "duration": 3.84}, {"text": "What I want you to\nsee here is that you", "start": 2817.21, "duration": 1.8}, {"text": "ought to be able to begin\nto reason about what's", "start": 2819.01, "duration": 3.48}, {"text": "the cost of an\nalgorithm by recognizing", "start": 2822.49, "duration": 2.55}, {"text": "those common patterns.", "start": 2825.04, "duration": 1.41}, {"text": "I keep saying it, but it's going\nto be really valuable to you.", "start": 2826.45, "duration": 3.18}, {"text": "And you should be\nable to therefore work", "start": 2829.63, "duration": 1.68}, {"text": "the other direction.", "start": 2831.31, "duration": 0.833}, {"text": "When you're given\na new problem, how", "start": 2832.143, "duration": 1.927}, {"text": "do I get this into a\nlinear algorithm if I can?", "start": 2834.07, "duration": 2.94}, {"text": "Log-linear, if I can,\nwould be really great.", "start": 2837.01, "duration": 2.337}, {"text": "But you know, if I\ncan't, how do I stay away", "start": 2839.347, "duration": 1.833}, {"text": "from exponential algorithms?", "start": 2841.18, "duration": 2.38}, {"text": "And finally, what we're\ngoing to show later on", "start": 2843.56, "duration": 2.022}, {"text": "is that, in fact, there\nare some problems that,", "start": 2845.582, "duration": 1.958}, {"text": "as far as we know, are\nfundamentally exponential.", "start": 2847.54, "duration": 3.57}, {"text": "And they're\nexpensive to compute.", "start": 2851.11, "duration": 2.666}, {"text": "The very last\nthing is, you might", "start": 2853.776, "duration": 1.374}, {"text": "have decided I was cheating\nin a different way.", "start": 2855.15, "duration": 3.45}, {"text": "So I'm using a set of\nbuilt-in Python functions.", "start": 2858.6, "duration": 5.362}, {"text": "I'm not going to go\nthrough all of these.", "start": 2863.962, "duration": 1.708}, {"text": "But this is just a\nlist, for example,", "start": 2865.67, "duration": 1.541}, {"text": "for lists, of what\nthe complexity", "start": 2867.211, "duration": 2.549}, {"text": "of those built-in functions are.", "start": 2869.76, "duration": 2.25}, {"text": "And if you look through the\nlist, they kind of make sense.", "start": 2872.01, "duration": 2.67}, {"text": "Indexing, you can go\nstraight to that point.", "start": 2874.68, "duration": 2.15}, {"text": "Computing the length,\nyou compute it once,", "start": 2876.83, "duration": 1.75}, {"text": "you've stored it.", "start": 2878.58, "duration": 1.11}, {"text": "Comparison-- order\nn, because I've", "start": 2879.69, "duration": 2.28}, {"text": "got to compare all the\nelements of the list.", "start": 2881.97, "duration": 2.41}, {"text": "Similarly, to remove\nsomething from the list,", "start": 2884.38, "duration": 2.0}, {"text": "I've got to find where it is\nin the list and remove it.", "start": 2886.38, "duration": 2.35}, {"text": "Worst case, that's\ngoing to be order n.", "start": 2888.73, "duration": 1.7}, {"text": "So you can see that these\noperations are typically", "start": 2890.43, "duration": 4.11}, {"text": "linear in the size of a list.", "start": 2894.54, "duration": 1.32}, {"text": "These are constant.", "start": 2895.86, "duration": 2.03}, {"text": "For dictionaries,\nremember, dictionaries", "start": 2897.89, "duration": 1.705}, {"text": "were this nice thing.", "start": 2899.595, "duration": 0.875}, {"text": "They weren't ordered.", "start": 2900.47, "duration": 0.93}, {"text": "It gave me a power in\nterms of storing them.", "start": 2901.4, "duration": 2.22}, {"text": "But as a consequence, some\nof the costs then go up.", "start": 2903.62, "duration": 4.62}, {"text": "For a list, indexing, going\nto a particular point,", "start": 2908.24, "duration": 2.1}, {"text": "I just go to that\nspot and retrieve it.", "start": 2910.34, "duration": 2.34}, {"text": "Indexing into a\ndictionary, I have", "start": 2912.68, "duration": 1.74}, {"text": "to find that point in the\ndictionary that has the key", "start": 2914.42, "duration": 3.3}, {"text": "and get the value back.", "start": 2917.72, "duration": 1.39}, {"text": "So that's going to be\nlinear, because I have to,", "start": 2919.11, "duration": 2.0}, {"text": "in principle, walk\nall the way down it.", "start": 2921.11, "duration": 2.7}, {"text": "It's a slight misstatement,\nas we'll see later on.", "start": 2923.81, "duration": 2.22}, {"text": "A dictionary actually\nuses a clever indexing", "start": 2926.03, "duration": 2.31}, {"text": "scheme called a hash.", "start": 2928.34, "duration": 1.587}, {"text": "But in the worst case,\nthis is going to be linear.", "start": 2929.927, "duration": 2.083}, {"text": "So you see a trade-off.", "start": 2932.01, "duration": 1.79}, {"text": "For dictionaries,\nI get more power.", "start": 2933.8, "duration": 2.34}, {"text": "I get more flexibility.", "start": 2936.14, "duration": 1.65}, {"text": "But it comes as a cost.", "start": 2937.79, "duration": 2.35}, {"text": "And so these,\nbasically, are what", "start": 2940.14, "duration": 1.88}, {"text": "let me reason on\ntop of the things", "start": 2942.02, "duration": 1.89}, {"text": "I've been doing to\nfigure out complexity.", "start": 2943.91, "duration": 3.234}, {"text": "And next time, we'll do\nthe last piece of this", "start": 2947.144, "duration": 1.916}, {"text": "when we look at sorting.", "start": 2949.06, "duration": 1.15}, {"text": "So we'll see you\nall on Wednesday.", "start": 2950.21, "duration": 2.148}]