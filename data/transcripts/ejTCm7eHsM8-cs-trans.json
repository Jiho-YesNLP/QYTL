[{"text": "hello everyone and welcome back", "start": 6.24, "duration": 5.439}, {"text": "in the previous session we learned about", "start": 9.44, "duration": 4.56}, {"text": "the most popular cache memory mapping", "start": 11.679, "duration": 2.96}, {"text": "technique", "start": 14.0, "duration": 2.88}, {"text": "the set associative mapping in", "start": 14.639, "duration": 3.681}, {"text": "continuation to that", "start": 16.88, "duration": 4.239}, {"text": "today we are at our first installment of", "start": 18.32, "duration": 4.64}, {"text": "solving numerical problems", "start": 21.119, "duration": 4.48}, {"text": "which will concrete our concept on this", "start": 22.96, "duration": 4.0}, {"text": "mapping technique", "start": 25.599, "duration": 4.0}, {"text": "so without any further ado let's get to", "start": 26.96, "duration": 3.92}, {"text": "learning", "start": 29.599, "duration": 3.681}, {"text": "consider this example number one here a", "start": 30.88, "duration": 4.96}, {"text": "byte addressable main memory of size 256", "start": 33.28, "duration": 3.68}, {"text": "megabytes is given", "start": 35.84, "duration": 4.08}, {"text": "the cache size is one megabyte the block", "start": 36.96, "duration": 3.36}, {"text": "is of", "start": 39.92, "duration": 3.6}, {"text": "128 byte size and the organization of", "start": 40.32, "duration": 3.759}, {"text": "the cache", "start": 43.52, "duration": 3.28}, {"text": "is two-way set associative and suppose", "start": 44.079, "duration": 4.8}, {"text": "the usual questions are being asked", "start": 46.8, "duration": 4.0}, {"text": "that means first they are asking us", "start": 48.879, "duration": 4.0}, {"text": "about the physical address split", "start": 50.8, "duration": 4.239}, {"text": "thereafter we need to find out the tag", "start": 52.879, "duration": 3.761}, {"text": "directory size as well", "start": 55.039, "duration": 4.081}, {"text": "however for this particular example", "start": 56.64, "duration": 4.399}, {"text": "suppose we are also being asked about", "start": 59.12, "duration": 3.84}, {"text": "the number of comparators needed", "start": 61.039, "duration": 4.641}, {"text": "and the type of the comparator now let's", "start": 62.96, "duration": 4.159}, {"text": "try to solve this", "start": 65.68, "duration": 3.119}, {"text": "now the byte addressable main memory", "start": 67.119, "duration": 4.401}, {"text": "size is given as 256 megabytes", "start": 68.799, "duration": 5.201}, {"text": "therefore 256 is nothing but 2 to the", "start": 71.52, "duration": 3.2}, {"text": "power 8", "start": 74.0, "duration": 3.119}, {"text": "and megabyte is 2 to the power 20 which", "start": 74.72, "duration": 3.12}, {"text": "results in", "start": 77.119, "duration": 4.081}, {"text": "2 to the power 28 in terms of bytes so", "start": 77.84, "duration": 5.279}, {"text": "the size of the physical address space", "start": 81.2, "duration": 3.44}, {"text": "or the main memory", "start": 83.119, "duration": 3.921}, {"text": "can be written as 2 to the power 28 in", "start": 84.64, "duration": 3.839}, {"text": "terms of bytes", "start": 87.04, "duration": 3.68}, {"text": "therefore for physical address we will", "start": 88.479, "duration": 4.32}, {"text": "be needing 28 bits", "start": 90.72, "duration": 5.039}, {"text": "now the block size is given as 128 bytes", "start": 92.799, "duration": 4.801}, {"text": "which can also be written as 2 to the", "start": 95.759, "duration": 3.601}, {"text": "power 7 bytes", "start": 97.6, "duration": 4.08}, {"text": "therefore for offset we will be needing", "start": 99.36, "duration": 3.68}, {"text": "7 bits", "start": 101.68, "duration": 4.16}, {"text": "so from 28 bits physical address the", "start": 103.04, "duration": 4.719}, {"text": "least significant 7 bits will be used", "start": 105.84, "duration": 2.639}, {"text": "for block", "start": 107.759, "duration": 3.68}, {"text": "or line offset now in order to find out", "start": 108.479, "duration": 4.721}, {"text": "the number of blocks inside the main", "start": 111.439, "duration": 3.921}, {"text": "memory we need to divide the size of the", "start": 113.2, "duration": 4.559}, {"text": "main memory that is 2 to the power 28 by", "start": 115.36, "duration": 4.719}, {"text": "the block size which is 2 to the power 7", "start": 117.759, "duration": 4.881}, {"text": "which will give us 2 to the power 21", "start": 120.079, "duration": 4.241}, {"text": "because 28 minus 7", "start": 122.64, "duration": 5.36}, {"text": "is 21 and therefore 21 bits will be used", "start": 124.32, "duration": 5.439}, {"text": "for the block numbers", "start": 128.0, "duration": 3.68}, {"text": "now the cache size is given as 1", "start": 129.759, "duration": 3.761}, {"text": "megabytes which is nothing but", "start": 131.68, "duration": 4.8}, {"text": "2 to the power 20 in terms of bytes now", "start": 133.52, "duration": 4.799}, {"text": "we already know in order to find out the", "start": 136.48, "duration": 4.08}, {"text": "number of lines inside the cache we need", "start": 138.319, "duration": 4.241}, {"text": "to divide the cache size that is 2 to", "start": 140.56, "duration": 2.88}, {"text": "the power 20", "start": 142.56, "duration": 2.96}, {"text": "by the block or the line size which is 2", "start": 143.44, "duration": 3.2}, {"text": "to the power 7", "start": 145.52, "duration": 3.76}, {"text": "that will give us 2 to the power 13 for", "start": 146.64, "duration": 5.28}, {"text": "obvious reasons because 20 minus 7", "start": 149.28, "duration": 5.039}, {"text": "is 13. now coming to the cache", "start": 151.92, "duration": 3.28}, {"text": "organization", "start": 154.319, "duration": 3.2}, {"text": "it's a two-way set associative cachet", "start": 155.2, "duration": 3.52}, {"text": "that means", "start": 157.519, "duration": 4.08}, {"text": "every set will contain two lines", "start": 158.72, "duration": 4.72}, {"text": "therefore let's find out the number of", "start": 161.599, "duration": 2.561}, {"text": "sets", "start": 163.44, "duration": 3.28}, {"text": "and in order to do so we need to divide", "start": 164.16, "duration": 4.079}, {"text": "the number of cache lines", "start": 166.72, "duration": 4.159}, {"text": "by the set size which will give us 2 to", "start": 168.239, "duration": 4.08}, {"text": "the power 12", "start": 170.879, "duration": 4.0}, {"text": "therefore 12 bits will be used for the", "start": 172.319, "duration": 4.161}, {"text": "set number portion", "start": 174.879, "duration": 3.681}, {"text": "now we can easily find out the number of", "start": 176.48, "duration": 5.28}, {"text": "tag bits subtracting 12 plus 7 from 28", "start": 178.56, "duration": 4.319}, {"text": "which will result in", "start": 181.76, "duration": 4.32}, {"text": "9 bits therefore from the 28 bits", "start": 182.879, "duration": 4.241}, {"text": "physical address", "start": 186.08, "duration": 2.879}, {"text": "7 least significant bits will be used", "start": 187.12, "duration": 3.6}, {"text": "for block or line offset", "start": 188.959, "duration": 4.401}, {"text": "12 bits will be used for set number and", "start": 190.72, "duration": 4.56}, {"text": "9 bits will be used for tag", "start": 193.36, "duration": 4.08}, {"text": "and this is the ps plate that we were", "start": 195.28, "duration": 3.28}, {"text": "looking for", "start": 197.44, "duration": 3.68}, {"text": "now coming to the tag directory size we", "start": 198.56, "duration": 4.8}, {"text": "know there are 2 to the power 13 lines", "start": 201.12, "duration": 3.6}, {"text": "inside the cache", "start": 203.36, "duration": 4.32}, {"text": "therefore 2 to the power 13 entries are", "start": 204.72, "duration": 5.2}, {"text": "going to be inside the tag directory", "start": 207.68, "duration": 5.44}, {"text": "and size of the each tag is 9 bits so 2", "start": 209.92, "duration": 6.16}, {"text": "to the power 13 multiplied by 9 bits is", "start": 213.12, "duration": 4.24}, {"text": "going to give us", "start": 216.08, "duration": 4.32}, {"text": "73 728 bits", "start": 217.36, "duration": 5.2}, {"text": "and that is the answer of our second", "start": 220.4, "duration": 3.119}, {"text": "question", "start": 222.56, "duration": 2.88}, {"text": "now let's find out the answer to our", "start": 223.519, "duration": 3.761}, {"text": "last segment that is the number of", "start": 225.44, "duration": 3.04}, {"text": "comparators needed", "start": 227.28, "duration": 3.599}, {"text": "and the type of comparator now we are", "start": 228.48, "duration": 4.399}, {"text": "dealing with two ways that associative", "start": 230.879, "duration": 2.64}, {"text": "cache", "start": 232.879, "duration": 3.041}, {"text": "therefore every set is going to have two", "start": 233.519, "duration": 3.28}, {"text": "lines", "start": 235.92, "duration": 3.28}, {"text": "so we will be needing only two", "start": 236.799, "duration": 4.961}, {"text": "comparators for the entire cache", "start": 239.2, "duration": 4.959}, {"text": "because every set is having two lines in", "start": 241.76, "duration": 3.199}, {"text": "them", "start": 244.159, "duration": 3.36}, {"text": "then again the size of the tag field is", "start": 244.959, "duration": 3.92}, {"text": "9 bits long", "start": 247.519, "duration": 3.92}, {"text": "therefore the type of the comparator is", "start": 248.879, "duration": 3.681}, {"text": "9 bit", "start": 251.439, "duration": 4.08}, {"text": "so two nine bit comparators will be", "start": 252.56, "duration": 3.6}, {"text": "needed", "start": 255.519, "duration": 2.72}, {"text": "and that is the answer to our final", "start": 256.16, "duration": 3.199}, {"text": "segment", "start": 258.239, "duration": 3.441}, {"text": "now consider this example number two", "start": 259.359, "duration": 4.801}, {"text": "here a byte addressable main memory of", "start": 261.68, "duration": 4.72}, {"text": "size four megabytes is given", "start": 264.16, "duration": 5.52}, {"text": "the block size is mentioned as 64 bytes", "start": 266.4, "duration": 6.64}, {"text": "tag bits are given and for tags 10 bits", "start": 269.68, "duration": 4.799}, {"text": "are specified", "start": 273.04, "duration": 3.599}, {"text": "and we are using a four-way set", "start": 274.479, "duration": 4.0}, {"text": "associative cache", "start": 276.639, "duration": 3.761}, {"text": "suppose now we are being asked about", "start": 278.479, "duration": 4.0}, {"text": "first the physical address split", "start": 280.4, "duration": 4.239}, {"text": "then they are asking us about the cache", "start": 282.479, "duration": 3.121}, {"text": "size", "start": 284.639, "duration": 3.441}, {"text": "now let's try to solve this now the main", "start": 285.6, "duration": 4.72}, {"text": "memory size is given as 4 megabytes", "start": 288.08, "duration": 2.88}, {"text": "therefore", "start": 290.32, "duration": 2.56}, {"text": "in other words physical address space is", "start": 290.96, "duration": 3.44}, {"text": "of 4 megabytes", "start": 292.88, "duration": 3.84}, {"text": "now 4 is 2 square and megabyte is 2 to", "start": 294.4, "duration": 3.6}, {"text": "the power 20", "start": 296.72, "duration": 3.919}, {"text": "which in terms of byte is 2 to the power", "start": 298.0, "duration": 3.6}, {"text": "22", "start": 300.639, "duration": 3.12}, {"text": "hence for physical address we will be", "start": 301.6, "duration": 4.159}, {"text": "needing 22 bits", "start": 303.759, "duration": 4.481}, {"text": "now the block size is given as 64 bytes", "start": 305.759, "duration": 4.0}, {"text": "which can also be written as 2 to the", "start": 308.24, "duration": 1.92}, {"text": "power", "start": 309.759, "duration": 3.521}, {"text": "6 in terms of bytes therefore for offset", "start": 310.16, "duration": 6.319}, {"text": "6 bits will be used so from 22 bits", "start": 313.28, "duration": 4.479}, {"text": "physical address bit", "start": 316.479, "duration": 3.601}, {"text": "least significant 6 bits are going to be", "start": 317.759, "duration": 3.841}, {"text": "used for block or line", "start": 320.08, "duration": 4.399}, {"text": "offset now we can find out the number of", "start": 321.6, "duration": 5.2}, {"text": "blocks inside the main memory dividing", "start": 324.479, "duration": 4.241}, {"text": "the physical address space size that is", "start": 326.8, "duration": 4.32}, {"text": "2 to the power 22 by the block size that", "start": 328.72, "duration": 3.68}, {"text": "is 2 to the power 6", "start": 331.12, "duration": 3.919}, {"text": "which will give us 2 to the power 16", "start": 332.4, "duration": 3.76}, {"text": "because 22", "start": 335.039, "duration": 5.041}, {"text": "minus 6 is 16 bits so 16 bits are going", "start": 336.16, "duration": 6.16}, {"text": "to be used for block numbers", "start": 340.08, "duration": 4.48}, {"text": "now in the question itself the tag bits", "start": 342.32, "duration": 3.439}, {"text": "are mentioned", "start": 344.56, "duration": 3.68}, {"text": "hence 10 bits are going to be used for", "start": 345.759, "duration": 3.841}, {"text": "the tag field", "start": 348.24, "duration": 4.0}, {"text": "thereafter we are using a four-way set", "start": 349.6, "duration": 4.319}, {"text": "associative cache", "start": 352.24, "duration": 4.239}, {"text": "that means every set is going to have", "start": 353.919, "duration": 3.761}, {"text": "four lines or", "start": 356.479, "duration": 4.56}, {"text": "two square lines therefore the set size", "start": 357.68, "duration": 6.079}, {"text": "is two square now we can easily find out", "start": 361.039, "duration": 4.0}, {"text": "the set number bits", "start": 363.759, "duration": 3.601}, {"text": "by subtracting the tag bits from the", "start": 365.039, "duration": 3.761}, {"text": "block number bits that is", "start": 367.36, "duration": 4.64}, {"text": "16 minus 10 which is six so six bits are", "start": 368.8, "duration": 4.8}, {"text": "going to be used for the set number", "start": 372.0, "duration": 2.639}, {"text": "portion", "start": 373.6, "duration": 4.56}, {"text": "therefore from 22 bits physical address", "start": 374.639, "duration": 5.361}, {"text": "six least significant bits are going to", "start": 378.16, "duration": 4.0}, {"text": "be used for block or line offset", "start": 380.0, "duration": 3.84}, {"text": "six bits are going to be used for the", "start": 382.16, "duration": 3.52}, {"text": "set number field and", "start": 383.84, "duration": 4.88}, {"text": "10 bits are being used for tags and that", "start": 385.68, "duration": 5.68}, {"text": "is the physical address split now let's", "start": 388.72, "duration": 3.039}, {"text": "find", "start": 391.36, "duration": 3.92}, {"text": "out the cache size now since there are 6", "start": 391.759, "duration": 5.681}, {"text": "bits for the set number portion", "start": 395.28, "duration": 4.24}, {"text": "therefore the number of sets inside the", "start": 397.44, "duration": 4.72}, {"text": "cache is 2 to the power 6.", "start": 399.52, "duration": 5.6}, {"text": "also we know the set size is 2 square", "start": 402.16, "duration": 3.84}, {"text": "that means", "start": 405.12, "duration": 4.16}, {"text": "every set is having four lines so we now", "start": 406.0, "duration": 5.039}, {"text": "can easily find out the number of", "start": 409.28, "duration": 4.24}, {"text": "lines inside the cache as well in order", "start": 411.039, "duration": 3.361}, {"text": "to do so", "start": 413.52, "duration": 3.76}, {"text": "we need to multiply the number of sets", "start": 414.4, "duration": 3.28}, {"text": "with", "start": 417.28, "duration": 3.6}, {"text": "the set size that is 2 to the power 6", "start": 417.68, "duration": 5.6}, {"text": "multiplied x 2 square which is nothing", "start": 420.88, "duration": 4.08}, {"text": "but 2 to the power 8", "start": 423.28, "duration": 4.88}, {"text": "because 6 plus 2 is nothing but 8.", "start": 424.96, "duration": 5.28}, {"text": "therefore inside the cache there is", "start": 428.16, "duration": 3.599}, {"text": "going to be 2 to the power 8", "start": 430.24, "duration": 4.0}, {"text": "lines and we already know the block size", "start": 431.759, "duration": 3.681}, {"text": "is 2 to the power 6", "start": 434.24, "duration": 3.92}, {"text": "in terms of bytes therefore the cache", "start": 435.44, "duration": 5.12}, {"text": "size can be found out by multiplying the", "start": 438.16, "duration": 3.599}, {"text": "line numbers", "start": 440.56, "duration": 4.72}, {"text": "and the block or line size which results", "start": 441.759, "duration": 3.84}, {"text": "in", "start": 445.28, "duration": 2.639}, {"text": "2 to the power 14 in terms of bytes", "start": 445.599, "duration": 4.16}, {"text": "because 8 plus 6 is nothing but", "start": 447.919, "duration": 4.481}, {"text": "14. now we already know 2 to the power", "start": 449.759, "duration": 3.041}, {"text": "10", "start": 452.4, "duration": 3.28}, {"text": "is kilobyte and we strip down 2 to the", "start": 452.8, "duration": 4.16}, {"text": "power 10 from that", "start": 455.68, "duration": 3.919}, {"text": "making the unit as kilobyte and the", "start": 456.96, "duration": 4.639}, {"text": "remaining 2 to the power 4 is nothing", "start": 459.599, "duration": 3.761}, {"text": "but 16 kilobytes", "start": 461.599, "duration": 6.0}, {"text": "therefore the cache size is 16 kilobytes", "start": 463.36, "duration": 6.88}, {"text": "now observe the way we calculated the", "start": 467.599, "duration": 3.201}, {"text": "cache", "start": 470.24, "duration": 3.359}, {"text": "size a bit carefully in order to find", "start": 470.8, "duration": 4.079}, {"text": "out the cache size", "start": 473.599, "duration": 3.521}, {"text": "we first found out the number of lines", "start": 474.879, "duration": 3.841}, {"text": "which is 2 to the power 8", "start": 477.12, "duration": 4.079}, {"text": "in this case and thereafter we", "start": 478.72, "duration": 3.84}, {"text": "multiplied the number of", "start": 481.199, "duration": 4.4}, {"text": "lines with the block or the line size", "start": 482.56, "duration": 5.6}, {"text": "now backtracking this procedure let's", "start": 485.599, "duration": 5.04}, {"text": "find out how we calculated the number of", "start": 488.16, "duration": 4.0}, {"text": "lines in the first place", "start": 490.639, "duration": 3.761}, {"text": "in order to find out the number of lines", "start": 492.16, "duration": 4.319}, {"text": "we multiplied the number of sets", "start": 494.4, "duration": 4.079}, {"text": "that is 2 to the power 6 in this", "start": 496.479, "duration": 3.28}, {"text": "instance with", "start": 498.479, "duration": 4.0}, {"text": "the set size which is 2 to the power 2", "start": 499.759, "duration": 5.041}, {"text": "for this particular example problem", "start": 502.479, "duration": 4.801}, {"text": "therefore in order to find out the cache", "start": 504.8, "duration": 3.2}, {"text": "size", "start": 507.28, "duration": 3.199}, {"text": "we first multiplied the number of sets", "start": 508.0, "duration": 3.84}, {"text": "with the set size", "start": 510.479, "duration": 3.68}, {"text": "and that gave us the number of lines", "start": 511.84, "duration": 3.6}, {"text": "inside the cache", "start": 514.159, "duration": 3.76}, {"text": "and afterwards we multiplied the number", "start": 515.44, "duration": 5.36}, {"text": "of lines inside the cache with the block", "start": 517.919, "duration": 4.401}, {"text": "or the line size", "start": 520.8, "duration": 4.32}, {"text": "eventually that gave us the cache size", "start": 522.32, "duration": 3.92}, {"text": "in total", "start": 525.12, "duration": 3.76}, {"text": "now this formula will be very useful in", "start": 526.24, "duration": 4.88}, {"text": "solving various types of numerical", "start": 528.88, "duration": 3.36}, {"text": "problems", "start": 531.12, "duration": 3.92}, {"text": "let's observe that in the next example", "start": 532.24, "duration": 4.719}, {"text": "consider this example number three", "start": 535.04, "duration": 4.56}, {"text": "where the cache size is given as 256", "start": 536.959, "duration": 3.601}, {"text": "kilobytes", "start": 539.6, "duration": 3.6}, {"text": "the tag bits are provided as eight bits", "start": 540.56, "duration": 3.2}, {"text": "and", "start": 543.2, "duration": 3.84}, {"text": "the caches of eight-way set associative", "start": 543.76, "duration": 4.639}, {"text": "organization", "start": 547.04, "duration": 3.359}, {"text": "now suppose they are asking us about the", "start": 548.399, "duration": 4.56}, {"text": "byte reducible main memory size", "start": 550.399, "duration": 5.681}, {"text": "now let's try to solve this suppose the", "start": 552.959, "duration": 4.481}, {"text": "physical address split", "start": 556.08, "duration": 4.24}, {"text": "is something like this so we already", "start": 557.44, "duration": 4.8}, {"text": "know 8 bits are going to be used for the", "start": 560.32, "duration": 2.8}, {"text": "tags", "start": 562.24, "duration": 3.68}, {"text": "and assuming x bits are there for the", "start": 563.12, "duration": 4.159}, {"text": "set number portion", "start": 565.92, "duration": 3.44}, {"text": "and white bits are being used for the", "start": 567.279, "duration": 3.761}, {"text": "block or line offset", "start": 569.36, "duration": 4.4}, {"text": "now using the formula we just saw we", "start": 571.04, "duration": 3.44}, {"text": "already know", "start": 573.76, "duration": 3.12}, {"text": "in order to calculate the cache size we", "start": 574.48, "duration": 3.52}, {"text": "need the number of", "start": 576.88, "duration": 3.84}, {"text": "sets multiplied with the set size and", "start": 578.0, "duration": 4.48}, {"text": "with this entire thing we need to", "start": 580.72, "duration": 3.36}, {"text": "multiply the block size", "start": 582.48, "duration": 4.24}, {"text": "and that will be our equation now let's", "start": 584.08, "duration": 4.0}, {"text": "substitute the values", "start": 586.72, "duration": 3.36}, {"text": "that is the cache size is already given", "start": 588.08, "duration": 4.16}, {"text": "as 256 kilobytes right", "start": 590.08, "duration": 5.12}, {"text": "so 256 kilobytes we are substituting in", "start": 592.24, "duration": 4.56}, {"text": "place of cache size", "start": 595.2, "duration": 3.759}, {"text": "now x bits are being used for the set", "start": 596.8, "duration": 4.24}, {"text": "number portion therefore the number of", "start": 598.959, "duration": 5.12}, {"text": "sets is nothing but 2 to the power x now", "start": 601.04, "duration": 4.64}, {"text": "coming to the set size", "start": 604.079, "duration": 3.521}, {"text": "as you can see it's a a to a set", "start": 605.68, "duration": 3.279}, {"text": "associative cache", "start": 607.6, "duration": 4.08}, {"text": "therefore every set it will be having 8", "start": 608.959, "duration": 4.0}, {"text": "lines in them", "start": 611.68, "duration": 4.48}, {"text": "so 2 to the power x multiplied by 8", "start": 612.959, "duration": 5.601}, {"text": "will give us the number of lines inside", "start": 616.16, "duration": 3.6}, {"text": "the cache", "start": 618.56, "duration": 3.839}, {"text": "now coming to the block size y bits are", "start": 619.76, "duration": 4.4}, {"text": "being used for the block or line", "start": 622.399, "duration": 4.481}, {"text": "offset therefore the block size is", "start": 624.16, "duration": 4.799}, {"text": "nothing but 2 to the power y", "start": 626.88, "duration": 4.48}, {"text": "now it's a byte addressable memory isn't", "start": 628.959, "duration": 3.12}, {"text": "it", "start": 631.36, "duration": 3.44}, {"text": "therefore we can convert 256 kilobyte", "start": 632.079, "duration": 4.32}, {"text": "into 2 to the power 8", "start": 634.8, "duration": 4.56}, {"text": "plus 10 because 256 is 2 to the power 8", "start": 636.399, "duration": 4.56}, {"text": "and kilobyte is nothing but 2 to the", "start": 639.36, "duration": 2.64}, {"text": "power 10", "start": 640.959, "duration": 2.641}, {"text": "now in the right hand side of the", "start": 642.0, "duration": 3.36}, {"text": "equation 8 is", "start": 643.6, "duration": 4.64}, {"text": "a value it's not a variable so for the", "start": 645.36, "duration": 4.96}, {"text": "sake of simplification let's bring all", "start": 648.24, "duration": 4.159}, {"text": "the values to one single side of the", "start": 650.32, "duration": 2.88}, {"text": "equation", "start": 652.399, "duration": 3.601}, {"text": "now how will we do that since we want 8", "start": 653.2, "duration": 4.24}, {"text": "to be on the left hand side of the", "start": 656.0, "duration": 2.399}, {"text": "equation", "start": 657.44, "duration": 3.28}, {"text": "we divide both the sides with the same", "start": 658.399, "duration": 3.761}, {"text": "value 8.", "start": 660.72, "duration": 2.72}, {"text": "now on the right hand side of the", "start": 662.16, "duration": 3.2}, {"text": "equation this and this", "start": 663.44, "duration": 5.12}, {"text": "8 would cancel themselves out leaving us", "start": 665.36, "duration": 3.599}, {"text": "with", "start": 668.56, "duration": 3.6}, {"text": "2 to the power 8 plus 10 divided by 8 on", "start": 668.959, "duration": 4.481}, {"text": "the left hand side", "start": 672.16, "duration": 4.16}, {"text": "so the equation becomes 2 to the power x", "start": 673.44, "duration": 5.2}, {"text": "multiplied by 2 to the power y", "start": 676.32, "duration": 4.639}, {"text": "leaving only the variable portions on", "start": 678.64, "duration": 3.68}, {"text": "the right hand side", "start": 680.959, "duration": 3.681}, {"text": "now 2 to the power x multiplied by 2 to", "start": 682.32, "duration": 3.12}, {"text": "the power y", "start": 684.64, "duration": 3.12}, {"text": "can be substituted as 2 to the power x", "start": 685.44, "duration": 3.36}, {"text": "plus y", "start": 687.76, "duration": 3.92}, {"text": "and simplifying this portion it becomes", "start": 688.8, "duration": 5.36}, {"text": "2 to the power 18 divided by 2 cube", "start": 691.68, "duration": 4.8}, {"text": "which is nothing but 2 to the power 15", "start": 694.16, "duration": 5.84}, {"text": "because 18 minus 3 is nothing but 15.", "start": 696.48, "duration": 6.16}, {"text": "therefore we can state x plus y is", "start": 700.0, "duration": 4.32}, {"text": "nothing but 15.", "start": 702.64, "duration": 3.6}, {"text": "now we can easily find out the physical", "start": 704.32, "duration": 3.04}, {"text": "address bits", "start": 706.24, "duration": 3.2}, {"text": "so for the physical address bits we", "start": 707.36, "duration": 4.08}, {"text": "already know eight bits are being used", "start": 709.44, "duration": 2.32}, {"text": "for", "start": 711.44, "duration": 3.839}, {"text": "tags and the remaining x plus y bits", "start": 711.76, "duration": 6.24}, {"text": "we already calculated to be 15.", "start": 715.279, "duration": 3.521}, {"text": "therefore", "start": 718.0, "duration": 2.88}, {"text": "the physical address is going to be of", "start": 718.8, "duration": 3.76}, {"text": "23 bits", "start": 720.88, "duration": 4.24}, {"text": "therefore the main memory size is 2 to", "start": 722.56, "duration": 3.92}, {"text": "the power 23", "start": 725.12, "duration": 3.76}, {"text": "in terms of bytes because it's a byte to", "start": 726.48, "duration": 3.84}, {"text": "disable memory", "start": 728.88, "duration": 4.0}, {"text": "now 2 to the power 23 bytes can be", "start": 730.32, "duration": 3.68}, {"text": "converted into", "start": 732.88, "duration": 3.519}, {"text": "2 to the power 3 megabytes because 2 to", "start": 734.0, "duration": 4.639}, {"text": "the power 20 is megabytes and we have", "start": 736.399, "duration": 3.201}, {"text": "stripped down", "start": 738.639, "duration": 4.401}, {"text": "the remaining 2 cube which gives us 8", "start": 739.6, "duration": 5.6}, {"text": "megabytes and that is the size of the", "start": 743.04, "duration": 4.96}, {"text": "main memory", "start": 745.2, "duration": 5.12}, {"text": "so that was all for this session i", "start": 748.0, "duration": 4.48}, {"text": "believe it was useful to you all", "start": 750.32, "duration": 4.56}, {"text": "in the next discussion we will solve few", "start": 752.48, "duration": 4.159}, {"text": "more example problems", "start": 754.88, "duration": 3.759}, {"text": "so i hope to see you in the next one", "start": 756.639, "duration": 16.561}, {"text": "thank you all for watching", "start": 758.639, "duration": 14.561}]