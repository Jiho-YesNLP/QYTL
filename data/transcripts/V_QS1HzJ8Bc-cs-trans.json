[{"text": "[Music]", "start": 3.02, "duration": 3.3}, {"text": "hello", "start": 6.399, "duration": 3.441}, {"text": "everyone welcome back in our previous", "start": 7.12, "duration": 4.72}, {"text": "session we learned about the cashier", "start": 9.84, "duration": 2.799}, {"text": "memory", "start": 11.84, "duration": 3.04}, {"text": "from this session onwards we will focus", "start": 12.639, "duration": 3.921}, {"text": "on different cache memory mapping", "start": 14.88, "duration": 3.28}, {"text": "techniques starting with the direct", "start": 16.56, "duration": 2.799}, {"text": "memory mapping", "start": 18.16, "duration": 4.24}, {"text": "so gear up and let's get to learning so", "start": 19.359, "duration": 4.881}, {"text": "as you can see in here this is the", "start": 22.4, "duration": 3.36}, {"text": "conceptual block diagram of the", "start": 24.24, "duration": 2.879}, {"text": "secondary memory", "start": 25.76, "duration": 3.519}, {"text": "and this is a conceptual block diagram", "start": 27.119, "duration": 3.441}, {"text": "of main memory", "start": 29.279, "duration": 3.28}, {"text": "now we already know programs in the", "start": 30.56, "duration": 3.92}, {"text": "computer permanently reside in the", "start": 32.559, "duration": 3.201}, {"text": "secondary storage", "start": 34.48, "duration": 3.919}, {"text": "during execution the same programs turn", "start": 35.76, "duration": 3.84}, {"text": "into processes", "start": 38.399, "duration": 3.521}, {"text": "just like our friend mr clark joseph", "start": 39.6, "duration": 3.44}, {"text": "can't hear", "start": 41.92, "duration": 3.04}, {"text": "now every process is subdivided into", "start": 43.04, "duration": 3.519}, {"text": "equal sized pages", "start": 44.96, "duration": 3.759}, {"text": "likewise the main memory is also split", "start": 46.559, "duration": 3.84}, {"text": "into equi-sized frames", "start": 48.719, "duration": 4.32}, {"text": "and the size of each frame is as same as", "start": 50.399, "duration": 4.241}, {"text": "the size of each page", "start": 53.039, "duration": 3.601}, {"text": "the process of subdividing the processes", "start": 54.64, "duration": 3.84}, {"text": "into the pages and then bringing them", "start": 56.64, "duration": 3.12}, {"text": "into the main memory", "start": 58.48, "duration": 3.28}, {"text": "is the job of the operating system and", "start": 59.76, "duration": 3.2}, {"text": "for the details of that", "start": 61.76, "duration": 2.719}, {"text": "you can refer to our beautifully", "start": 62.96, "duration": 3.68}, {"text": "presented operating systems course", "start": 64.479, "duration": 4.721}, {"text": "but for today we are here to learn about", "start": 66.64, "duration": 4.159}, {"text": "how the elements are brought from the", "start": 69.2, "duration": 4.08}, {"text": "main memory into the cache memory", "start": 70.799, "duration": 4.161}, {"text": "the organization of the cache and the", "start": 73.28, "duration": 3.76}, {"text": "main memory is almost similar to this", "start": 74.96, "duration": 3.44}, {"text": "organization", "start": 77.04, "duration": 3.68}, {"text": "in this the parts of the main memory are", "start": 78.4, "duration": 3.52}, {"text": "termed as blocks", "start": 80.72, "duration": 3.36}, {"text": "and the parts of the cache are named as", "start": 81.92, "duration": 3.04}, {"text": "lines", "start": 84.08, "duration": 3.12}, {"text": "also the line size is as same as the", "start": 84.96, "duration": 3.28}, {"text": "block size", "start": 87.2, "duration": 3.52}, {"text": "now remember these all are concepts we", "start": 88.24, "duration": 4.4}, {"text": "won't just go on drawing the lines and", "start": 90.72, "duration": 2.64}, {"text": "the blocks", "start": 92.64, "duration": 2.799}, {"text": "on the caches and the rams these", "start": 93.36, "duration": 3.759}, {"text": "illustrations are just for the sake of", "start": 95.439, "duration": 3.201}, {"text": "understanding", "start": 97.119, "duration": 3.841}, {"text": "now a smallest addressable memory unit", "start": 98.64, "duration": 4.08}, {"text": "is called a word", "start": 100.96, "duration": 3.839}, {"text": "and a byte addressable memory means the", "start": 102.72, "duration": 4.88}, {"text": "size of each word is one byte", "start": 104.799, "duration": 5.36}, {"text": "let's assume we have a main memory with", "start": 107.6, "duration": 5.76}, {"text": "64 word size and the size of each block", "start": 110.159, "duration": 3.841}, {"text": "is given as", "start": 113.36, "duration": 3.359}, {"text": "four words hence the number of blocks in", "start": 114.0, "duration": 3.759}, {"text": "the main memory", "start": 116.719, "duration": 4.881}, {"text": "is 64 by 4 that is 16 so that blocks are", "start": 117.759, "duration": 4.96}, {"text": "numbered as", "start": 121.6, "duration": 5.68}, {"text": "0 1 2 3 up to 15.", "start": 122.719, "duration": 7.201}, {"text": "now coming to the 64 main memory words", "start": 127.28, "duration": 5.36}, {"text": "that is starting from 0 up until 63", "start": 129.92, "duration": 4.64}, {"text": "they are organized in the main memory", "start": 132.64, "duration": 3.44}, {"text": "somewhat like this", "start": 134.56, "duration": 4.08}, {"text": "because each and every memory block is", "start": 136.08, "duration": 4.96}, {"text": "supposed to have only four words", "start": 138.64, "duration": 4.88}, {"text": "now we know using one bit place we can", "start": 141.04, "duration": 3.919}, {"text": "address two locations", "start": 143.52, "duration": 3.68}, {"text": "that is zero to the memory location zero", "start": 144.959, "duration": 4.321}, {"text": "and one to the memory cell one", "start": 147.2, "duration": 4.08}, {"text": "similarly with two bit places four", "start": 149.28, "duration": 3.679}, {"text": "locations can be addressed", "start": 151.28, "duration": 4.88}, {"text": "zero zero for m zero zero 1 for m 1", "start": 152.959, "duration": 6.801}, {"text": "1 0 for m 2 and 1 1 for m 3", "start": 156.16, "duration": 6.88}, {"text": "so for 8 memory cells we will be needing", "start": 159.76, "duration": 7.44}, {"text": "log 8 base 2 that is log 2 cube base 2", "start": 163.04, "duration": 5.36}, {"text": "that is 3 bit", "start": 167.2, "duration": 4.48}, {"text": "places similarly in order to address", "start": 168.4, "duration": 6.32}, {"text": "0 to 63 that is 64 words", "start": 171.68, "duration": 6.08}, {"text": "we will be needing log 64 base 2", "start": 174.72, "duration": 6.64}, {"text": "which actually results in 6 bits", "start": 177.76, "duration": 6.8}, {"text": "now these 6 bits are called pa bits or", "start": 181.36, "duration": 4.48}, {"text": "physical address bits", "start": 184.56, "duration": 3.28}, {"text": "and the reason behind that is the main", "start": 185.84, "duration": 3.679}, {"text": "memory is sometimes referred to as", "start": 187.84, "duration": 3.039}, {"text": "physical address space", "start": 189.519, "duration": 3.041}, {"text": "and in this particular physical address", "start": 190.879, "duration": 4.321}, {"text": "space there are 0 to 15 that is 16", "start": 192.56, "duration": 3.2}, {"text": "blocks", "start": 195.2, "duration": 2.56}, {"text": "and in order to locate each one of them", "start": 195.76, "duration": 3.199}, {"text": "we will be needing", "start": 197.76, "duration": 3.759}, {"text": "log 16 base 2 that is logs 2 to the", "start": 198.959, "duration": 3.28}, {"text": "power 4", "start": 201.519, "duration": 3.521}, {"text": "base 2 which is 4 bits so the pa bits", "start": 202.239, "duration": 3.92}, {"text": "are split like", "start": 205.04, "duration": 3.52}, {"text": "the most significant 4 bits are used for", "start": 206.159, "duration": 3.841}, {"text": "identifying the blocks", "start": 208.56, "duration": 3.599}, {"text": "and the least significant two bits are", "start": 210.0, "duration": 3.44}, {"text": "used for addressing", "start": 212.159, "duration": 4.481}, {"text": "each word in each block so the zero zero", "start": 213.44, "duration": 5.519}, {"text": "will be addressing to the zeroth word", "start": 216.64, "duration": 5.12}, {"text": "zero one for the first word one zero for", "start": 218.959, "duration": 4.721}, {"text": "the second word and similarly one one", "start": 221.76, "duration": 3.759}, {"text": "for the third word", "start": 223.68, "duration": 4.0}, {"text": "now let me show you how meaningful the", "start": 225.519, "duration": 3.601}, {"text": "pa split is", "start": 227.68, "duration": 3.04}, {"text": "suppose the processor generates the", "start": 229.12, "duration": 4.16}, {"text": "physical address zero followed by five", "start": 230.72, "duration": 3.439}, {"text": "ones", "start": 233.28, "duration": 3.519}, {"text": "now following our ps plate the most", "start": 234.159, "duration": 4.481}, {"text": "significant four bits that is zero", "start": 236.799, "duration": 3.44}, {"text": "triple one which is nothing but seven", "start": 238.64, "duration": 2.799}, {"text": "will be referring to the", "start": 240.239, "duration": 2.801}, {"text": "block number seven and the least", "start": 241.439, "duration": 3.52}, {"text": "significant two bits one one", "start": 243.04, "duration": 3.919}, {"text": "will refer to the last word of that", "start": 244.959, "duration": 3.521}, {"text": "particular block", "start": 246.959, "duration": 3.84}, {"text": "let's analyze the generated physical", "start": 248.48, "duration": 3.44}, {"text": "address", "start": 250.799, "duration": 3.281}, {"text": "if we consider all the bit places", "start": 251.92, "duration": 3.44}, {"text": "magnitudes and", "start": 254.08, "duration": 3.679}, {"text": "add up all the values which has ones", "start": 255.36, "duration": 3.52}, {"text": "underneath of them", "start": 257.759, "duration": 4.081}, {"text": "we get the value as 31 and that is the", "start": 258.88, "duration": 5.039}, {"text": "exact value of the word", "start": 261.84, "duration": 3.76}, {"text": "which was being pointed out by the", "start": 263.919, "duration": 3.041}, {"text": "physical address", "start": 265.6, "duration": 4.64}, {"text": "isn't it beautiful now let's assume we", "start": 266.96, "duration": 5.6}, {"text": "have a cache of 16 words", "start": 270.24, "duration": 4.239}, {"text": "and the block size was already given to", "start": 272.56, "duration": 3.44}, {"text": "us as four words", "start": 274.479, "duration": 3.841}, {"text": "now we already know both the block and", "start": 276.0, "duration": 4.16}, {"text": "the line are equal in sizes", "start": 278.32, "duration": 4.159}, {"text": "in that case line size is also going to", "start": 280.16, "duration": 3.68}, {"text": "be 4 words", "start": 282.479, "duration": 3.681}, {"text": "therefore number of lines in the cache", "start": 283.84, "duration": 3.6}, {"text": "is 16 by 4", "start": 286.16, "duration": 4.319}, {"text": "that is 4 which is 0 1", "start": 287.44, "duration": 6.08}, {"text": "2 and 3. and in order to identify four", "start": 290.479, "duration": 4.16}, {"text": "different lines", "start": 293.52, "duration": 3.6}, {"text": "we will be needing log 4 base 2 that is", "start": 294.639, "duration": 6.801}, {"text": "log 2 square base 2 which is 2 bits", "start": 297.12, "duration": 4.32}, {"text": "well it's pretty obvious that all the", "start": 303.919, "duration": 3.761}, {"text": "main memory blocks can't really be", "start": 306.08, "duration": 4.24}, {"text": "assigned to all the cache aligns at once", "start": 307.68, "duration": 4.56}, {"text": "therefore we have to perform something", "start": 310.32, "duration": 3.92}, {"text": "called mapping now the mapping takes", "start": 312.24, "duration": 3.76}, {"text": "place in round robin manner", "start": 314.24, "duration": 3.2}, {"text": "so these are the blocks of the main", "start": 316.0, "duration": 3.759}, {"text": "memory and these are the cache lines", "start": 317.44, "duration": 4.319}, {"text": "the zeroth block will be mapped onto the", "start": 319.759, "duration": 4.0}, {"text": "zeroth line the first block will be", "start": 321.759, "duration": 3.521}, {"text": "mapped onto the first line", "start": 323.759, "duration": 3.201}, {"text": "the second block is going to be mapped", "start": 325.28, "duration": 4.16}, {"text": "onto the second line and the third block", "start": 326.96, "duration": 4.799}, {"text": "will be mapped onto the third line at", "start": 329.44, "duration": 4.24}, {"text": "this point we might think that for the", "start": 331.759, "duration": 3.761}, {"text": "fourth block and the rest there are no", "start": 333.68, "duration": 3.44}, {"text": "available cache lines", "start": 335.52, "duration": 3.76}, {"text": "but there the round robin manner comes", "start": 337.12, "duration": 3.44}, {"text": "at rescue", "start": 339.28, "duration": 3.68}, {"text": "so the fourth block will be mapped onto", "start": 340.56, "duration": 4.4}, {"text": "the zeroth line and the fifth one is", "start": 342.96, "duration": 4.16}, {"text": "going to be mapped onto the first line", "start": 344.96, "duration": 8.88}, {"text": "and this keeps on following", "start": 347.12, "duration": 6.72}, {"text": "now this is the complete mapping if we", "start": 354.32, "duration": 3.84}, {"text": "observe closely", "start": 356.88, "duration": 3.039}, {"text": "the least significant two bits of the", "start": 358.16, "duration": 3.84}, {"text": "block number is actually dictating which", "start": 359.919, "duration": 4.161}, {"text": "cache a line to map onto", "start": 362.0, "duration": 4.16}, {"text": "like the block number zero four eight", "start": 364.08, "duration": 4.08}, {"text": "twelve they are going to get mapped on", "start": 366.16, "duration": 3.52}, {"text": "to the line number zero", "start": 368.16, "duration": 3.759}, {"text": "the block numbers one five nine and", "start": 369.68, "duration": 3.2}, {"text": "thirteen", "start": 371.919, "duration": 3.441}, {"text": "mapped on to the line number one for", "start": 372.88, "duration": 3.12}, {"text": "blocks", "start": 375.36, "duration": 3.279}, {"text": "two six ten and fourteen they are going", "start": 376.0, "duration": 4.16}, {"text": "to get mapped onto the line number", "start": 378.639, "duration": 4.721}, {"text": "two and finally block number 3 7", "start": 380.16, "duration": 5.92}, {"text": "11 and 15 these are going to get mapped", "start": 383.36, "duration": 3.279}, {"text": "onto the", "start": 386.08, "duration": 3.6}, {"text": "line number three so this is a many to", "start": 386.639, "duration": 4.721}, {"text": "one relation", "start": 389.68, "duration": 4.88}, {"text": "so finally the pa bits are split like", "start": 391.36, "duration": 3.92}, {"text": "this", "start": 394.56, "duration": 2.72}, {"text": "the least significant two bits are", "start": 395.28, "duration": 3.919}, {"text": "called block or line offset", "start": 397.28, "duration": 4.16}, {"text": "they determine each word inside either", "start": 399.199, "duration": 3.921}, {"text": "block or line", "start": 401.44, "duration": 4.24}, {"text": "now the rest are called block numbers", "start": 403.12, "duration": 4.72}, {"text": "now from the block numbers the last two", "start": 405.68, "duration": 2.88}, {"text": "bits", "start": 407.84, "duration": 2.799}, {"text": "are known as line number because they", "start": 408.56, "duration": 3.199}, {"text": "actually dictate", "start": 410.639, "duration": 3.601}, {"text": "which cache a line that particular block", "start": 411.759, "duration": 4.081}, {"text": "will be mapping onto", "start": 414.24, "duration": 4.799}, {"text": "so the remaining bits are known as tag", "start": 415.84, "duration": 3.919}, {"text": "bits", "start": 419.039, "duration": 2.801}, {"text": "now let's try and understand why these", "start": 419.759, "duration": 4.0}, {"text": "are called tag bits", "start": 421.84, "duration": 4.24}, {"text": "now let's select block number 3 and", "start": 423.759, "duration": 4.081}, {"text": "analyze its contents", "start": 426.08, "duration": 6.08}, {"text": "12 13 14 15 and these are their 6-bit", "start": 427.84, "duration": 5.919}, {"text": "binary equivalents", "start": 432.16, "duration": 4.08}, {"text": "also we witnessed that like block number", "start": 433.759, "duration": 4.081}, {"text": "three block number seven", "start": 436.24, "duration": 4.239}, {"text": "eleven and fifteen are also mapped onto", "start": 437.84, "duration": 4.16}, {"text": "the same cache line that is", "start": 440.479, "duration": 3.921}, {"text": "client number three so let's observe", "start": 442.0, "duration": 3.919}, {"text": "their contents as well", "start": 444.4, "duration": 6.16}, {"text": "block number seven's got 28 29 30 and 31", "start": 445.919, "duration": 8.56}, {"text": "11 has 44 45 46 and 47", "start": 450.56, "duration": 8.72}, {"text": "and for 15 there is 60 61 62 and 63.", "start": 454.479, "duration": 7.361}, {"text": "now observe this for block number three", "start": 459.28, "duration": 3.68}, {"text": "the tag bits are", "start": 461.84, "duration": 4.16}, {"text": "0 0 for block number 7 the tag bits are", "start": 462.96, "duration": 3.519}, {"text": "0", "start": 466.0, "duration": 3.52}, {"text": "1 for 11 the tag bits are 1 0", "start": 466.479, "duration": 6.72}, {"text": "and 15 it's 1 1. so do you understand", "start": 469.52, "duration": 4.88}, {"text": "the pattern", "start": 473.199, "duration": 3.68}, {"text": "so actually these bits will identify", "start": 474.4, "duration": 3.6}, {"text": "which one of the blocks", "start": 476.879, "duration": 4.16}, {"text": "is present in the caching basically they", "start": 478.0, "duration": 4.639}, {"text": "work as the tags", "start": 481.039, "duration": 4.641}, {"text": "and thus the naming so to conclude", "start": 482.639, "duration": 4.801}, {"text": "this memory mapping technique is called", "start": 485.68, "duration": 4.16}, {"text": "direct mapping as the main memory blocks", "start": 487.44, "duration": 4.0}, {"text": "are mapped directly onto the cache", "start": 489.84, "duration": 2.32}, {"text": "alliance", "start": 491.44, "duration": 3.84}, {"text": "and the mapping procedure is strict", "start": 492.16, "duration": 5.28}, {"text": "so that was all for this session i hope", "start": 495.28, "duration": 4.08}, {"text": "now you have a lucid understanding about", "start": 497.44, "duration": 3.84}, {"text": "the entire concept of direct memory", "start": 499.36, "duration": 3.119}, {"text": "mapping technique", "start": 501.28, "duration": 3.199}, {"text": "from the next session onwards we will", "start": 502.479, "duration": 4.16}, {"text": "solve interesting numerical problems", "start": 504.479, "duration": 4.4}, {"text": "related to this concept hope to see you", "start": 506.639, "duration": 3.28}, {"text": "in the next one", "start": 508.879, "duration": 12.751}, {"text": "thank you all for watching", "start": 509.919, "duration": 12.48}, {"text": "[Music]", "start": 521.63, "duration": 2.849}, {"text": "you", "start": 522.399, "duration": 2.08}]