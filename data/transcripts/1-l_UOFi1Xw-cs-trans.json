[{"text": "hey everyone in my last few videos i", "start": 0.0, "duration": 4.24}, {"text": "made a q a website for", "start": 2.48, "duration": 3.76}, {"text": "quarters and i still work on it from", "start": 4.24, "duration": 3.119}, {"text": "time to time", "start": 6.24, "duration": 3.12}, {"text": "but in this video i decided to switch", "start": 7.359, "duration": 3.36}, {"text": "topics and", "start": 9.36, "duration": 3.12}, {"text": "restart my data structures and", "start": 10.719, "duration": 3.521}, {"text": "algorithms series", "start": 12.48, "duration": 3.359}, {"text": "now in a previous video which i", "start": 14.24, "duration": 3.039}, {"text": "published a long time ago", "start": 15.839, "duration": 2.801}, {"text": "we learned the linked list data", "start": 17.279, "duration": 3.361}, {"text": "structure it looked", "start": 18.64, "duration": 4.479}, {"text": "like this one where we had a bunch of", "start": 20.64, "duration": 4.08}, {"text": "nodes that are connected to each other", "start": 23.119, "duration": 5.041}, {"text": "in a single direction and each node", "start": 24.72, "duration": 6.24}, {"text": "in the structure had a class like this", "start": 28.16, "duration": 4.48}, {"text": "it's called node and it has two", "start": 30.96, "duration": 2.8}, {"text": "attributes", "start": 32.64, "duration": 3.84}, {"text": "uh integer data and next which is also a", "start": 33.76, "duration": 3.76}, {"text": "node", "start": 36.48, "duration": 4.48}, {"text": "now a tree is a similar data structure", "start": 37.52, "duration": 5.84}, {"text": "to a linked list and the only difference", "start": 40.96, "duration": 4.079}, {"text": "is that in a linked list", "start": 43.36, "duration": 3.679}, {"text": "each node can only link to one other", "start": 45.039, "duration": 4.721}, {"text": "node but in a tree each node can link to", "start": 47.039, "duration": 4.321}, {"text": "multiple other nodes", "start": 49.76, "duration": 4.72}, {"text": "so here's one example of a tree as you", "start": 51.36, "duration": 4.08}, {"text": "can see", "start": 54.48, "duration": 3.599}, {"text": "each node here is linking to multiple", "start": 55.44, "duration": 3.279}, {"text": "nodes", "start": 58.079, "duration": 3.601}, {"text": "here each node is linking to at least", "start": 58.719, "duration": 4.801}, {"text": "three other nodes", "start": 61.68, "duration": 4.96}, {"text": "and so for this particular structure", "start": 63.52, "duration": 5.68}, {"text": "the class of each node might look like", "start": 66.64, "duration": 4.32}, {"text": "this one", "start": 69.2, "duration": 3.36}, {"text": "as you can see this one is called node", "start": 70.96, "duration": 3.68}, {"text": "again and it has four attributes", "start": 72.56, "duration": 4.239}, {"text": "uh integer data just like before", "start": 74.64, "duration": 4.4}, {"text": "sometimes this one is called value", "start": 76.799, "duration": 5.121}, {"text": "but we're calling data here and we have", "start": 79.04, "duration": 4.079}, {"text": "three children", "start": 81.92, "duration": 4.8}, {"text": "uh all of them are nose and so for", "start": 83.119, "duration": 4.64}, {"text": "example", "start": 86.72, "duration": 5.12}, {"text": "if you look at this particular node here", "start": 87.759, "duration": 6.881}, {"text": "the three children are set to these", "start": 91.84, "duration": 3.2}, {"text": "three", "start": 94.64, "duration": 4.56}, {"text": "other nodes and if you look at", "start": 95.04, "duration": 7.039}, {"text": "this node right here this one has only", "start": 99.2, "duration": 3.76}, {"text": "two children", "start": 102.079, "duration": 3.761}, {"text": "this one and this one so if you want to", "start": 102.96, "duration": 4.4}, {"text": "express that in code", "start": 105.84, "duration": 4.959}, {"text": "you can just set the two of the children", "start": 107.36, "duration": 6.799}, {"text": "to those nodes and the last child", "start": 110.799, "duration": 6.401}, {"text": "to null or none to show that", "start": 114.159, "duration": 6.161}, {"text": "it doesn't exist and if you look at", "start": 117.2, "duration": 6.48}, {"text": "this node it doesn't have any", "start": 120.32, "duration": 6.799}, {"text": "children so you can set all of these", "start": 123.68, "duration": 6.24}, {"text": "children knows to null or none depending", "start": 127.119, "duration": 3.92}, {"text": "on the language", "start": 129.92, "duration": 3.2}, {"text": "that you're using now let's take a look", "start": 131.039, "duration": 5.041}, {"text": "at another example of a tree", "start": 133.12, "duration": 6.479}, {"text": "so this one is drawn from top to bottom", "start": 136.08, "duration": 4.239}, {"text": "instead of", "start": 139.599, "duration": 2.561}, {"text": "left to right but it has the same kind", "start": 140.319, "duration": 3.681}, {"text": "of structure the more important", "start": 142.16, "duration": 2.56}, {"text": "difference", "start": 144.0, "duration": 3.599}, {"text": "is that each node has almost two", "start": 144.72, "duration": 3.68}, {"text": "children", "start": 147.599, "duration": 3.841}, {"text": "here so the class of each node might", "start": 148.4, "duration": 3.6}, {"text": "look like", "start": 151.44, "duration": 3.12}, {"text": "this one instead as you can see we have", "start": 152.0, "duration": 4.879}, {"text": "integer data just like before", "start": 154.56, "duration": 4.8}, {"text": "but now we have only two children which", "start": 156.879, "duration": 3.521}, {"text": "we're calling left", "start": 159.36, "duration": 4.239}, {"text": "and right and just like this when a tree", "start": 160.4, "duration": 3.839}, {"text": "has", "start": 163.599, "duration": 4.241}, {"text": "at most true truth it's called", "start": 164.239, "duration": 6.561}, {"text": "a binary tree now to help you understand", "start": 167.84, "duration": 4.64}, {"text": "what a tree is exactly", "start": 170.8, "duration": 3.6}, {"text": "we're going to call this little game", "start": 172.48, "duration": 4.08}, {"text": "called is this a tree", "start": 174.4, "duration": 3.44}, {"text": "basically i'm going to show you a", "start": 176.56, "duration": 3.759}, {"text": "structure and you just need to answer if", "start": 177.84, "duration": 4.16}, {"text": "it's a tree or not", "start": 180.319, "duration": 4.721}, {"text": "so let me start with this one this one", "start": 182.0, "duration": 5.92}, {"text": "uh doesn't have integers inside them", "start": 185.04, "duration": 3.919}, {"text": "instead it has", "start": 187.92, "duration": 5.44}, {"text": "strings but of course it's still a tree", "start": 188.959, "duration": 7.36}, {"text": "and what about this one well it's a", "start": 193.36, "duration": 4.239}, {"text": "linked list", "start": 196.319, "duration": 4.321}, {"text": "but it's also a tree", "start": 197.599, "duration": 5.121}, {"text": "and the way i think about it is that", "start": 200.64, "duration": 3.28}, {"text": "each node", "start": 202.72, "duration": 4.4}, {"text": "could have multiple children", "start": 203.92, "duration": 6.56}, {"text": "just like that but it just", "start": 207.12, "duration": 6.24}, {"text": "doesn't so it's kind of a boring example", "start": 210.48, "duration": 3.759}, {"text": "but technically", "start": 213.36, "duration": 5.12}, {"text": "speaking it's also a tree and what about", "start": 214.239, "duration": 8.08}, {"text": "this one well it might look like a tree", "start": 218.48, "duration": 6.96}, {"text": "but it's not because one constraint", "start": 222.319, "duration": 5.601}, {"text": "of something being a tree is that there", "start": 225.44, "duration": 5.04}, {"text": "are no two references", "start": 227.92, "duration": 5.519}, {"text": "that link to the same node and these two", "start": 230.48, "duration": 4.08}, {"text": "references", "start": 233.439, "duration": 5.36}, {"text": "violate that condition and what about", "start": 234.56, "duration": 8.8}, {"text": "this last one well again", "start": 238.799, "duration": 7.201}, {"text": "it violates the definition of being", "start": 243.36, "duration": 4.0}, {"text": "something being a tree", "start": 246.0, "duration": 4.799}, {"text": "for the same reason these two references", "start": 247.36, "duration": 7.28}, {"text": "point to the same node so it's not a", "start": 250.799, "duration": 4.72}, {"text": "tree", "start": 254.64, "duration": 2.559}, {"text": "and another way to see that this is not", "start": 255.519, "duration": 3.28}, {"text": "a tree is", "start": 257.199, "duration": 5.041}, {"text": "that it has a cycle here and whenever", "start": 258.799, "duration": 5.281}, {"text": "there's a cycle", "start": 262.24, "duration": 5.12}, {"text": "that's not a tree so you might say well", "start": 264.08, "duration": 6.48}, {"text": "what is a tree exactly then well a tree", "start": 267.36, "duration": 6.0}, {"text": "is a structure in which there are nodes", "start": 270.56, "duration": 4.639}, {"text": "that are connected to each other", "start": 273.36, "duration": 5.44}, {"text": "and there's a way to go from the", "start": 275.199, "duration": 6.401}, {"text": "root node to every other node in the", "start": 278.8, "duration": 3.76}, {"text": "structure", "start": 281.6, "duration": 4.0}, {"text": "so the root node in this particular tree", "start": 282.56, "duration": 3.84}, {"text": "is this one", "start": 285.6, "duration": 3.76}, {"text": "and there's a way for us to get to every", "start": 286.4, "duration": 3.84}, {"text": "other node", "start": 289.36, "duration": 3.04}, {"text": "from the root node in this structure and", "start": 290.24, "duration": 3.6}, {"text": "it's the same thing", "start": 292.4, "duration": 4.4}, {"text": "with this tree or this linked list", "start": 293.84, "duration": 4.32}, {"text": "there's this root node", "start": 296.8, "duration": 3.92}, {"text": "and there's a way to get to every other", "start": 298.16, "duration": 3.039}, {"text": "node", "start": 300.72, "duration": 2.8}, {"text": "from the root node but as soon as there", "start": 301.199, "duration": 3.521}, {"text": "are two references", "start": 303.52, "duration": 3.44}, {"text": "in this structure that refer to the same", "start": 304.72, "duration": 3.199}, {"text": "node", "start": 306.96, "duration": 3.04}, {"text": "for example this one then it's not a", "start": 307.919, "duration": 3.041}, {"text": "tree anymore", "start": 310.0, "duration": 3.44}, {"text": "so that's basically what a tree is and", "start": 310.96, "duration": 3.2}, {"text": "by the way", "start": 313.44, "duration": 3.84}, {"text": "the root node of a tree is", "start": 314.16, "duration": 6.16}, {"text": "a node without any parents so what that", "start": 317.28, "duration": 3.44}, {"text": "means", "start": 320.32, "duration": 3.68}, {"text": "is that whatever the root node is no", "start": 320.72, "duration": 6.56}, {"text": "other node refers to that one okay", "start": 324.0, "duration": 5.36}, {"text": "now that you hopefully have a clear idea", "start": 327.28, "duration": 3.44}, {"text": "of what a tree is", "start": 329.36, "duration": 4.0}, {"text": "let's practice using a tree with this", "start": 330.72, "duration": 4.08}, {"text": "problem", "start": 333.36, "duration": 5.92}, {"text": "you're given a tree for example this one", "start": 334.8, "duration": 7.6}, {"text": "with the root being here and this is a", "start": 339.28, "duration": 4.56}, {"text": "binary tree", "start": 342.4, "duration": 4.16}, {"text": "so the class of each node will look like", "start": 343.84, "duration": 3.199}, {"text": "this", "start": 346.56, "duration": 3.68}, {"text": "it has an integer data and it has two", "start": 347.039, "duration": 5.921}, {"text": "children left and right and the problem", "start": 350.24, "duration": 3.28}, {"text": "is", "start": 352.96, "duration": 3.2}, {"text": "writing a function which we're going to", "start": 353.52, "duration": 3.2}, {"text": "call", "start": 356.16, "duration": 3.52}, {"text": "find sum which takes the root of this", "start": 356.72, "duration": 3.36}, {"text": "tree", "start": 359.68, "duration": 3.44}, {"text": "as the input and returns the sum of", "start": 360.08, "duration": 6.0}, {"text": "all the values within the street so if", "start": 363.12, "duration": 5.359}, {"text": "you're given this particular root", "start": 366.08, "duration": 4.0}, {"text": "you want to be able to return 20 from", "start": 368.479, "duration": 3.521}, {"text": "this function because we have", "start": 370.08, "duration": 5.04}, {"text": "2 plus 3 plus 5 plus 6 plus 4 which is", "start": 372.0, "duration": 7.039}, {"text": "20. and try solving this problem", "start": 375.12, "duration": 6.88}, {"text": "in of and in time where n is the number", "start": 379.039, "duration": 3.6}, {"text": "of nodes", "start": 382.0, "duration": 4.16}, {"text": "in this tree okay and here's my solution", "start": 382.639, "duration": 5.12}, {"text": "and by the way if you want to try", "start": 386.16, "duration": 3.28}, {"text": "running my solution", "start": 387.759, "duration": 4.241}, {"text": "in either python or java you can find", "start": 389.44, "duration": 3.12}, {"text": "that", "start": 392.0, "duration": 3.759}, {"text": "at this url csojo.io", "start": 392.56, "duration": 6.479}, {"text": "tree like i said before we're calling", "start": 395.759, "duration": 4.16}, {"text": "this function", "start": 399.039, "duration": 4.0}, {"text": "find sum and it's taking the root of", "start": 399.919, "duration": 4.321}, {"text": "whatever", "start": 403.039, "duration": 3.6}, {"text": "tree that you're given and we're going", "start": 404.24, "duration": 3.28}, {"text": "to implement", "start": 406.639, "duration": 3.201}, {"text": "this function recursively here and the", "start": 407.52, "duration": 3.6}, {"text": "first thing we're going to do is we're", "start": 409.84, "duration": 2.4}, {"text": "going to define", "start": 411.12, "duration": 4.72}, {"text": "the base case and that's going to be", "start": 412.24, "duration": 8.64}, {"text": "when the given root is null or none", "start": 415.84, "duration": 8.079}, {"text": "which is that the given root is just", "start": 420.88, "duration": 6.56}, {"text": "an empty tree for example this", "start": 423.919, "duration": 7.28}, {"text": "empty tree right here then the sum of", "start": 427.44, "duration": 5.039}, {"text": "all the values", "start": 431.199, "duration": 4.961}, {"text": "in this empty tree is of course zero", "start": 432.479, "duration": 7.28}, {"text": "so we want to return zero in that case", "start": 436.16, "duration": 5.84}, {"text": "and otherwise uh for example if we're", "start": 439.759, "duration": 3.681}, {"text": "given", "start": 442.0, "duration": 3.919}, {"text": "this blue height right here in this", "start": 443.44, "duration": 4.159}, {"text": "recursive function", "start": 445.919, "duration": 5.28}, {"text": "then the sum of all the nodes", "start": 447.599, "duration": 7.201}, {"text": "in this tree is the sum", "start": 451.199, "duration": 6.72}, {"text": "of this current value", "start": 454.8, "duration": 6.16}, {"text": "plus the sum of all the nodes in the", "start": 457.919, "duration": 4.56}, {"text": "right subtree", "start": 460.96, "duration": 4.72}, {"text": "and the sum of all the nodes in the left", "start": 462.479, "duration": 6.881}, {"text": "subtree we can express that", "start": 465.68, "duration": 7.199}, {"text": "with this one line here we're returning", "start": 469.36, "duration": 7.2}, {"text": "the current value or root.data", "start": 472.879, "duration": 7.121}, {"text": "plus the sum of uh all the nodes in the", "start": 476.56, "duration": 6.16}, {"text": "left subtree so let's find sum of red", "start": 480.0, "duration": 3.84}, {"text": "dot left", "start": 482.72, "duration": 3.599}, {"text": "and the sum of all the nodes in the", "start": 483.84, "duration": 3.919}, {"text": "right subtree", "start": 486.319, "duration": 5.681}, {"text": "so let's find some of that right", "start": 487.759, "duration": 7.361}, {"text": "this function would only take of n", "start": 492.0, "duration": 6.16}, {"text": "in time to execute where n is the number", "start": 495.12, "duration": 3.359}, {"text": "of", "start": 498.16, "duration": 3.28}, {"text": "nodes in the given tree and let's think", "start": 498.479, "duration": 4.16}, {"text": "about why", "start": 501.44, "duration": 3.12}, {"text": "well first we need to count the number", "start": 502.639, "duration": 3.441}, {"text": "of times this function is going to be", "start": 504.56, "duration": 2.4}, {"text": "called", "start": 506.08, "duration": 2.72}, {"text": "and that's going to be the number of", "start": 506.96, "duration": 4.079}, {"text": "nodes in the given tree", "start": 508.8, "duration": 5.28}, {"text": "because for each node this function", "start": 511.039, "duration": 7.041}, {"text": "is going to be called once plus all the", "start": 514.08, "duration": 7.12}, {"text": "empty nodes or these empty", "start": 518.08, "duration": 6.4}, {"text": "trees that i didn't draw earlier", "start": 521.2, "duration": 6.4}, {"text": "in this representation of the tree", "start": 524.48, "duration": 5.12}, {"text": "and so this function is going to be", "start": 527.6, "duration": 3.04}, {"text": "called at most", "start": 529.6, "duration": 4.799}, {"text": "about 2n times or of 2n", "start": 530.64, "duration": 6.879}, {"text": "times which is the same thing as", "start": 534.399, "duration": 6.481}, {"text": "of n times and so this function is going", "start": 537.519, "duration": 4.0}, {"text": "to be called", "start": 540.88, "duration": 4.24}, {"text": "of n times and each time this function", "start": 541.519, "duration": 6.801}, {"text": "is called let's think about how", "start": 545.12, "duration": 6.24}, {"text": "how much time it takes to execute well", "start": 548.32, "duration": 5.76}, {"text": "if you look at each line uh if you look", "start": 551.36, "duration": 4.0}, {"text": "at this line", "start": 554.08, "duration": 3.6}, {"text": "it only takes a constant amount of time", "start": 555.36, "duration": 3.28}, {"text": "or of one", "start": 557.68, "duration": 4.4}, {"text": "because we're simply checking uh this", "start": 558.64, "duration": 6.08}, {"text": "simple if condition and it's the same", "start": 562.08, "duration": 4.08}, {"text": "thing as", "start": 564.72, "duration": 4.239}, {"text": "this line it only takes off one in time", "start": 566.16, "duration": 4.4}, {"text": "returning zero", "start": 568.959, "duration": 4.401}, {"text": "and this line as well we're simply", "start": 570.56, "duration": 4.0}, {"text": "adding up", "start": 573.36, "duration": 3.599}, {"text": "these three numbers so once we have the", "start": 574.56, "duration": 3.12}, {"text": "results", "start": 576.959, "duration": 3.521}, {"text": "for these two recursive calls adding up", "start": 577.68, "duration": 4.4}, {"text": "these three numbers", "start": 580.48, "duration": 5.12}, {"text": "would only take off one in time or", "start": 582.08, "duration": 6.72}, {"text": "a constant amount of time and so each", "start": 585.6, "duration": 4.799}, {"text": "time this function is called", "start": 588.8, "duration": 5.52}, {"text": "it only takes one and it's called", "start": 590.399, "duration": 6.401}, {"text": "o of n times so multiplying them", "start": 594.32, "duration": 3.84}, {"text": "together", "start": 596.8, "duration": 3.599}, {"text": "we get the total amount of time this", "start": 598.16, "duration": 4.0}, {"text": "function takes to execute", "start": 600.399, "duration": 4.081}, {"text": "or the time complexity of this function", "start": 602.16, "duration": 3.28}, {"text": "and that's going to be", "start": 604.48, "duration": 4.0}, {"text": "of n now that's it for this problem", "start": 605.44, "duration": 5.519}, {"text": "and my introduction to trees but if you", "start": 608.48, "duration": 4.24}, {"text": "need more practice using trees", "start": 610.959, "duration": 3.761}, {"text": "and there's another interesting problem", "start": 612.72, "duration": 3.92}, {"text": "that i think is much harder", "start": 614.72, "duration": 3.84}, {"text": "and it's a problem i talked about a", "start": 616.64, "duration": 4.4}, {"text": "while ago as a coding interview question", "start": 618.56, "duration": 4.64}, {"text": "so i'm gonna put a link to that video in", "start": 621.04, "duration": 3.68}, {"text": "the description below", "start": 623.2, "duration": 3.6}, {"text": "anyway thank you as always for watching", "start": 624.72, "duration": 3.679}, {"text": "my videos and i'll see you guys in the", "start": 626.8, "duration": 4.479}, {"text": "next one", "start": 628.399, "duration": 2.88}]