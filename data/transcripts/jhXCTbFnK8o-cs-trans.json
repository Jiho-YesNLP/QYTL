[{"text": "Hi, I\u2019m Carrie Anne, and welcome to CrashCourse\nComputer Science!", "start": 3.12, "duration": 2.839}, {"text": "Over the past two episodes, we\u2019ve talked\na lot about computer security.", "start": 5.959, "duration": 3.22}, {"text": "But the fact is, there\u2019s no such thing as\na perfectly, 100% secure, computer system.", "start": 9.179, "duration": 4.901}, {"text": "There will always be bugs and security experts\nknow that.", "start": 14.08, "duration": 3.06}, {"text": "So system architects employ a strategy called\ndefence in depth, which uses many layers of", "start": 17.14, "duration": 4.2}, {"text": "varying security mechanisms to frustrate attackers.", "start": 21.34, "duration": 2.44}, {"text": "It\u2019s a bit like how castles are designed\n\u2013 first you\u2019ve got to dodge the archers,", "start": 23.78, "duration": 4.2}, {"text": "then cross the moat, scale the walls, avoid\nthe hot oil, get over the ramparts, and defeat", "start": 27.98, "duration": 4.56}, {"text": "the guards before you get to the throne room,\nbut in this case we\u2019re talking about one", "start": 32.54, "duration": 3.909}, {"text": "of the most common forms of computer security\n- Cryptography.", "start": 36.449, "duration": 3.411}, {"text": "INTRO", "start": 39.86, "duration": 9.2}, {"text": "The word cryptography comes from the roots\n\u2018crypto\u2019 and \u2018graphy\u2019, roughly translating", "start": 49.06, "duration": 4.06}, {"text": "to \u201csecret writing\u201d.", "start": 53.12, "duration": 1.66}, {"text": "In order to make information secret, you use\na cipher \u2013 an algorithm that converts plain", "start": 54.78, "duration": 4.099}, {"text": "text into ciphertext, which is gibberish unless\nyou have a key that lets you undo the cipher.", "start": 58.879, "duration": 5.07}, {"text": "The process of making text secret is called\nencryption, and the reverse process is called", "start": 63.949, "duration": 4.481}, {"text": "decryption.", "start": 68.43, "duration": 0.87}, {"text": "Ciphers have been used long before computers\nshowed up.", "start": 69.3, "duration": 2.28}, {"text": "Julius Caesar used what\u2019s now called a Caesar\ncipher, to encrypt private correspondence.", "start": 71.58, "duration": 4.31}, {"text": "He would shift the letters in a message forward\nby three places.", "start": 75.89, "duration": 2.55}, {"text": "So, A became D, and the word \"brutus\" became\nthis: \"euxwxv\".", "start": 78.44, "duration": 3.32}, {"text": "To decipher the message, recipients had to\nknow both the algorithm and the number to", "start": 81.76, "duration": 3.33}, {"text": "shift by, which acted as the key.", "start": 85.09, "duration": 2.27}, {"text": "The Caesar cipher is one example of a larger\nclass of techniques called substitution ciphers.", "start": 87.36, "duration": 4.9}, {"text": "These replace every letter in a message with\nsomething else according to a translation.", "start": 92.26, "duration": 3.68}, {"text": "A big drawback of basic substitution ciphers\nis that letter frequencies are preserved.", "start": 95.94, "duration": 4.56}, {"text": "For example, E is the most common letter in\nEnglish, so if your cipher translates E to", "start": 100.5, "duration": 4.32}, {"text": "an X, then X will show up the most frequently\nin the ciphertext.", "start": 104.82, "duration": 3.45}, {"text": "A skilled cryptanalyst can work backwards\nfrom these kinds of statistics to figure out", "start": 108.27, "duration": 3.69}, {"text": "the message.", "start": 111.96, "duration": 1.0}, {"text": "Indeed, it was the breaking of a substitution\ncipher that led to the execution of Mary,", "start": 112.96, "duration": 3.49}, {"text": "Queen of Scots, in 1587 for plotting to kill\nQueen Elizabeth.", "start": 116.45, "duration": 3.69}, {"text": "Another fundamental class of techniques are\npermutation ciphers.", "start": 120.14, "duration": 2.61}, {"text": "Let\u2019s look at a simple example, called a\ncolumnar transposition cipher.", "start": 122.75, "duration": 3.97}, {"text": "Here, we take a message, and fill the letters\ninto a grid.", "start": 126.72, "duration": 3.099}, {"text": "In this case, we\u2019ve chosen 5 by 5.", "start": 129.819, "duration": 2.071}, {"text": "To encrypt our message, we read out the characters\nin a different order, let\u2019s say from the", "start": 131.89, "duration": 4.09}, {"text": "bottom left, working upwards, one column at\na time.", "start": 135.98, "duration": 3.149}, {"text": "The new letter ordering, what\u2019s called a\npermutation, is the encrypted message.", "start": 139.129, "duration": 4.33}, {"text": "The ordering direction, as well as the 5 by\n5 grid size, serves as the key.", "start": 143.459, "duration": 4.31}, {"text": "Like before, if the cipher and key are known,\na recipient can reverse the process to reveal", "start": 147.769, "duration": 4.19}, {"text": "the original message.", "start": 151.959, "duration": 1.221}, {"text": "By the 1900s, cryptography was mechanized\nin the form of encryption machines.", "start": 153.18, "duration": 4.169}, {"text": "The most famous was the German Enigma, used\nby the Nazis to encrypt their wartime communications.", "start": 157.349, "duration": 4.81}, {"text": "As we discussed back in Episode 15, the Enigma\nwas a typewriter-like machine, with a keyboard", "start": 162.159, "duration": 4.251}, {"text": "and lampboard, both showing the full alphabet.", "start": 166.41, "duration": 2.27}, {"text": "Above that, there was a series of configurable\nrotors that were the key to the Enigma\u2019s", "start": 168.68, "duration": 4.3}, {"text": "encryption capability.", "start": 172.98, "duration": 1.0}, {"text": "First, let\u2019s look at just one rotor.", "start": 173.98, "duration": 2.42}, {"text": "One side had electrical contacts for all 26\nletters.", "start": 176.4, "duration": 3.129}, {"text": "These connected to the other side of the rotor\nusing cross-crossing wires that swapped one", "start": 179.529, "duration": 3.841}, {"text": "letter for another.", "start": 183.37, "duration": 1.05}, {"text": "If \u2018H\u2019 went in, \u2018K\u2019 might come out\nthe other side.", "start": 184.42, "duration": 2.899}, {"text": "If \u201cK\u2019 went in, \u2018F\u2019 might come out,\nand so on.", "start": 187.319, "duration": 2.48}, {"text": "This letter swapping behavior should sound\nfamiliar: it\u2019s a substitution cipher!", "start": 189.799, "duration": 4.58}, {"text": "But, the Enigma was more sophisticated because\nit used three or more rotors in a row, each", "start": 194.379, "duration": 4.94}, {"text": "feeding into the next.", "start": 199.32, "duration": 1.62}, {"text": "Rotors could also be rotated to one of 26\npossible starting positions, and they could", "start": 200.94, "duration": 4.64}, {"text": "be inserted in different orders, providing\na lot of different substitution mappings.", "start": 205.58, "duration": 4.06}, {"text": "Following the rotors was a special circuit\ncalled a reflector.", "start": 209.64, "duration": 2.849}, {"text": "Instead of passing the signal on to another\nrotor, it connected every pin to another,", "start": 212.489, "duration": 4.711}, {"text": "and sent the electrical signal back through\nthe rotors.", "start": 217.2, "duration": 2.269}, {"text": "Finally, there was a plugboard at the front\nof the machine that allowed letters coming", "start": 219.469, "duration": 3.05}, {"text": "from the keyboard to be optionally swapped,\nadding another level of complexity.", "start": 222.519, "duration": 3.851}, {"text": "With our simplified circuit, let\u2019s encrypt\na letter on this example enigma configuration.", "start": 226.37, "duration": 5.049}, {"text": "If we press the \u2018H\u2019 key, electricity flows\nthrough the plugboard, then the rotors, hits", "start": 231.419, "duration": 4.74}, {"text": "the reflector, comes back through the rotors\nand plugboard, and illuminates the letter", "start": 236.159, "duration": 3.401}, {"text": "\u2018L\u2019 on the lampboard.", "start": 239.56, "duration": 1.0}, {"text": "So H is encrypted to L.", "start": 240.56, "duration": 1.37}, {"text": "Note that the circuit can flow both ways \u2013 so\nif we typed the letter \u2018L\u2019, \u2018H\u2019 would", "start": 241.93, "duration": 4.059}, {"text": "light up.", "start": 245.989, "duration": 1.0}, {"text": "In other words, it\u2019s the same process for\nencrypting and decrypting; you just have to", "start": 246.989, "duration": 3.97}, {"text": "make sure the sending and receiving machines\nhave the same initial configuration.", "start": 250.959, "duration": 3.61}, {"text": "If you look carefully at this circuit, you\u2019ll\nnotice it\u2019s impossible for a letter to be", "start": 254.569, "duration": 4.561}, {"text": "encrypted as itself, which turned out to be\na fatal cryptographic weakness.", "start": 259.13, "duration": 3.07}, {"text": "Finally, to prevent the Enigma from being\na simple substitution cipher, every single", "start": 262.2, "duration": 4.38}, {"text": "time a letter was entered, the rotors advanced\nby one spot, sort of like an odometer in a", "start": 266.58, "duration": 4.62}, {"text": "car.", "start": 271.2, "duration": 0.76}, {"text": "So if you entered the text A-A-A, it might\ncome out as B-D-K, where the substitution", "start": 271.96, "duration": 4.66}, {"text": "mapping changed with every key press.", "start": 276.62, "duration": 1.88}, {"text": "The Enigma was a tough cookie to crack, for\nsure.", "start": 278.509, "duration": 2.28}, {"text": "But as we discussed in Episode 15, Alan Turing\nand his colleagues at Bletchley Park were", "start": 280.789, "duration": 4.231}, {"text": "able to break Enigma codes and largely automate\nthe process.", "start": 285.02, "duration": 2.84}, {"text": "But with the advent of computers, cryptography\nmoved from hardware into software.", "start": 287.86, "duration": 4.54}, {"text": "One of the earliest software ciphers to become\nwidespread was the Data Encryption Standard", "start": 292.4, "duration": 4.0}, {"text": "developed by IBM and the NSA in 1977.", "start": 296.4, "duration": 3.52}, {"text": "DES, as it was known, originally used binary\nkeys that were 56 bits long, which means that", "start": 299.92, "duration": 5.119}, {"text": "there are 2 to the 56, or about 72 quadrillion\ndifferent keys.", "start": 305.039, "duration": 4.151}, {"text": "Back in 1977, that meant that nobody \u2013 except\nperhaps the NSA \u2013 had enough computing power", "start": 309.19, "duration": 4.969}, {"text": "to brute-force all possible keys.", "start": 314.159, "duration": 1.991}, {"text": "But, by 1999, a quarter-million dollar computer\ncould try every possible DES key in just two", "start": 316.15, "duration": 5.82}, {"text": "days, rendering the cipher insecure.", "start": 321.97, "duration": 2.22}, {"text": "So, in 2001, the Advanced Encryption Standard\n(AES) was finalized and published.", "start": 324.19, "duration": 4.87}, {"text": "AES is designed to use much bigger keys \u2013 128,\n192 or 256 bits in size \u2013 making brute force", "start": 329.06, "duration": 7.97}, {"text": "attacks much, much harder.", "start": 337.03, "duration": 1.06}, {"text": "For a 128-bit keys, you'd need trillions of\nyears to try every combination, even if you", "start": 338.09, "duration": 6.12}, {"text": "used every single computer on the planet today.", "start": 344.21, "duration": 2.67}, {"text": "So you better get started!", "start": 346.88, "duration": 1.159}, {"text": "AES chops data up into 16-byte blocks, and\nthen applies a series of substitutions and", "start": 348.039, "duration": 5.451}, {"text": "permutations, based on the key value, plus\nsome other operations to obscure the message,", "start": 353.49, "duration": 4.56}, {"text": "and this process is repeated ten or more times\nfor each block.", "start": 358.05, "duration": 3.519}, {"text": "You might be wondering: why only ten rounds?", "start": 361.569, "duration": 2.271}, {"text": "Or why only 128 bit keys, and not ten thousand\nbit keys?", "start": 363.84, "duration": 3.389}, {"text": "Well, it\u2019s a performance tradeoff.", "start": 367.229, "duration": 2.491}, {"text": "If it took hours to encrypt and send an email,\nor minutes to connect to a secure website,", "start": 369.72, "duration": 4.19}, {"text": "people wouldn't use it.", "start": 373.91, "duration": 1.25}, {"text": "AES balances performance and security to provide\npractical cryptography.", "start": 375.16, "duration": 3.86}, {"text": "Today, AES is used everywhere, from encrypting\nfiles on iPhones and transmitting data over", "start": 379.02, "duration": 4.769}, {"text": "WiFi with WPA2, to accessing websites using HTTPS.", "start": 383.789, "duration": 4.041}, {"text": "So far, the cryptographic techniques we\u2019ve\ndiscussed rely on keys that are known by both", "start": 387.83, "duration": 4.66}, {"text": "sender and recipient.", "start": 392.49, "duration": 1.609}, {"text": "The sender encrypts a message using a key, and the recipient decrypts it using the same key.", "start": 394.1, "duration": 4.78}, {"text": "In the old days, keys would be shared by voice,\nor physically; for example, the Germans distributed", "start": 398.88, "duration": 4.8}, {"text": "codebooks with daily settings for their Enigma\nmachines.", "start": 403.68, "duration": 2.84}, {"text": "But this strategy could never work in the\ninternet era.", "start": 406.52, "duration": 3.13}, {"text": "Imagine having to crack open a codebook to\nconnect to youtube!", "start": 409.65, "duration": 3.06}, {"text": "What\u2019s needed is a way for a server to send\na secret key over the public internet to a", "start": 412.71, "duration": 3.91}, {"text": "user wishing to connect securely.", "start": 416.62, "duration": 2.4}, {"text": "It seems like that wouldn\u2019t be secure, because\nif the key is sent in the open and intercepted", "start": 419.02, "duration": 3.94}, {"text": "by a hacker, couldn\u2019t they use that to decrypt\nall communication between the two?", "start": 422.96, "duration": 4.03}, {"text": "The solution is key exchange!", "start": 426.99, "duration": 2.139}, {"text": "\u2013 An algorithm that lets two computers agree\non a key without ever sending one.", "start": 429.129, "duration": 3.971}, {"text": "We can do this with one-way functions \u2013 mathematical\noperations that are very easy to do in one", "start": 433.1, "duration": 4.86}, {"text": "direction, but hard to reverse.", "start": 437.96, "duration": 1.919}, {"text": "To show you how one-way functions work, let\u2019s\nuse paint colors as an analogy.", "start": 439.879, "duration": 4.111}, {"text": "It\u2019s easy to mix paint colors together,\nbut it\u2019s not so easy to figure out the constituent", "start": 443.99, "duration": 4.0}, {"text": "colors that were used to make a mixed paint\ncolor.", "start": 447.99, "duration": 2.519}, {"text": "You\u2019d have to test a lot of possibilities\nto figure it out.", "start": 450.509, "duration": 2.88}, {"text": "In this metaphor, our secret key is a unique\nshade of paint.", "start": 453.389, "duration": 3.161}, {"text": "First, there\u2019s a public paint color that\neveryone can see.", "start": 456.55, "duration": 2.83}, {"text": "Then, John and I each pick a secret paint\ncolor.", "start": 459.38, "duration": 2.45}, {"text": "To exchange keys, I mix my secret paint color\nwith the public paint color.", "start": 461.83, "duration": 4.089}, {"text": "Then, I send that mixed color to John by any\nmeans \u2013 mail, carrier pigeon, whatever.", "start": 465.919, "duration": 4.53}, {"text": "John does the same \u2013 mixing his secret paint\ncolor with the public color, then sending", "start": 470.449, "duration": 4.071}, {"text": "that to me.", "start": 474.52, "duration": 1.0}, {"text": "When I receive John\u2019s color, I simply add\nmy private color to create a blend of all", "start": 475.52, "duration": 3.429}, {"text": "three paints.", "start": 478.949, "duration": 1.0}, {"text": "John does the same with my mixed color.", "start": 479.949, "duration": 1.96}, {"text": "And Voila!", "start": 481.909, "duration": 1.0}, {"text": "We both end up with the same paint color!", "start": 482.909, "duration": 1.79}, {"text": "We can use this as a shared secret, even though\nwe never sent each other our individual secret", "start": 484.699, "duration": 4.9}, {"text": "colors.", "start": 489.599, "duration": 1.0}, {"text": "A snooping outside observer would know partial\ninformation, but they\u2019d find it very difficult", "start": 490.599, "duration": 4.29}, {"text": "to figure out our shared secret color.", "start": 494.889, "duration": 2.041}, {"text": "Of course, sending and mixing paint colors\nisn\u2019t going to work well for transmitting", "start": 496.93, "duration": 3.31}, {"text": "computer data.", "start": 500.24, "duration": 1.26}, {"text": "But luckily, mathematical one-way functions\nare perfect, and this is what Diffie-Hellman", "start": 501.5, "duration": 4.09}, {"text": "Key Exchange uses.", "start": 505.59, "duration": 1.35}, {"text": "In Diffie-Hellman, the one-way function is\nmodular exponentiation.", "start": 506.94, "duration": 3.62}, {"text": "This means taking one number, the base, to\nthe power of another number, the exponent,", "start": 510.56, "duration": 4.05}, {"text": "and taking the remainder when dividing by\na third number, the modulus.", "start": 514.61, "duration": 3.289}, {"text": "So, for example, if we wanted to calculate\n3 to the 5th power, modulo 31, we would calculate", "start": 517.899, "duration": 5.81}, {"text": "3 to the 5th, which is 243, then take the\nremainder when divided by 31, which is 26.", "start": 523.709, "duration": 6.75}, {"text": "The hard part is figuring out the exponent\ngiven only the result and the base.", "start": 530.459, "duration": 3.75}, {"text": "If I tell you I raised 3 to some secret number,\nmodulo 31, and got 7 as the remainder, you'd", "start": 534.209, "duration": 5.18}, {"text": "have to test a lot of exponents to know which\none I picked.", "start": 539.389, "duration": 2.811}, {"text": "If we make these numbers big, say hundreds\nof digits long, then finding the secret exponent", "start": 542.2, "duration": 4.61}, {"text": "is nearly impossible.", "start": 546.81, "duration": 1.41}, {"text": "Now let\u2019s talk about how Diffie-Hellman\nuses modular exponentiation to calculate a", "start": 548.22, "duration": 4.08}, {"text": "shared key.", "start": 552.3, "duration": 1.0}, {"text": "First, there's a set of public values \u2013 the\nbase and the modulus, that, like our public", "start": 553.3, "duration": 4.539}, {"text": "paint color, everyone gets to know... even\nthe bad guys!", "start": 557.839, "duration": 3.391}, {"text": "To send a message securely to John, I would\npick a secret exponent: X.", "start": 561.23, "duration": 3.66}, {"text": "Then, I\u2019d calculate B to the power of X,\nmodulo M.", "start": 564.89, "duration": 3.389}, {"text": "I send this big number over to John.", "start": 568.279, "duration": 2.261}, {"text": "John does the same, picking a secret exponent\nY, and sending me B to the Y modulo M.", "start": 570.54, "duration": 4.93}, {"text": "To create a shared secret key, I take what\nJohn sent me, and take it to the power of", "start": 575.47, "duration": 4.809}, {"text": "X, my secret exponent.", "start": 580.279, "duration": 1.81}, {"text": "This is mathematically equivalent to B to\nthe XY modulus M.", "start": 582.089, "duration": 3.631}, {"text": "John does the same, taking what I sent to\nhim to the power of Y, and we both end up", "start": 585.72, "duration": 4.03}, {"text": "with the exact same number!", "start": 589.75, "duration": 1.78}, {"text": "It\u2019s a secret shared key, even though we\nnever sent each other our secret number.", "start": 591.53, "duration": 4.67}, {"text": "We can use this big number as a shared key\nfor encrypted communication, using something", "start": 596.2, "duration": 4.39}, {"text": "like AES for encryption.", "start": 600.59, "duration": 1.91}, {"text": "Diffie-Hellman key exchange is one method\nfor establishing a shared key.", "start": 602.5, "duration": 3.85}, {"text": "These keys that can be used by both sender\nand receiver, to encrypt and decrypt messages,", "start": 606.35, "duration": 4.13}, {"text": "are called symmetric keys because the key\nis the same on both sides.", "start": 610.48, "duration": 4.19}, {"text": "The Caesar Cipher, Enigma and AES are all\nsymmetric encryption.", "start": 614.67, "duration": 3.729}, {"text": "There\u2019s also asymmetric encryption, where\nthere are two different keys, most often one", "start": 618.399, "duration": 4.68}, {"text": "that\u2019s public and another that\u2019s private.", "start": 623.079, "duration": 1.581}, {"text": "So, people can encrypt a message using a public\nkey that only the recipient, with their private", "start": 624.66, "duration": 4.82}, {"text": "key, can decrypt.", "start": 629.48, "duration": 1.33}, {"text": "In other words, knowing the public key only\nlets you encrypt, but not decrypt \u2013 it\u2019s", "start": 630.81, "duration": 4.469}, {"text": "asymmetric!", "start": 635.279, "duration": 1.0}, {"text": "So, think about boxes with padlocks that you\ncan open with a key.", "start": 636.279, "duration": 3.131}, {"text": "To receive a secure message, I can give a\nsender a box and padlock.", "start": 639.41, "duration": 3.6}, {"text": "They put their message in it and lock it shut.", "start": 643.01, "duration": 2.079}, {"text": "Now, they can send that box back to me and\nonly I can open it, with my private key.", "start": 645.089, "duration": 4.671}, {"text": "After locking the box, neither the sender,\nnor anyone else who finds the box, can open", "start": 649.76, "duration": 4.36}, {"text": "it without brute force.", "start": 654.13, "duration": 1.37}, {"text": "In the same way, a digital public key can\nencrypt something that can only be decrypted", "start": 655.51, "duration": 3.89}, {"text": "with a private key.", "start": 659.4, "duration": 1.0}, {"text": "The reverse is possible too: encrypting something\nwith a private key that can be decrypted with", "start": 660.4, "duration": 4.58}, {"text": "a public key.", "start": 664.98, "duration": 1.0}, {"text": "This is used for signing, where a server encrypts\ndata using their private key.", "start": 665.98, "duration": 4.48}, {"text": "Anyone can decrypt it using the server's public\nkey.", "start": 670.46, "duration": 2.9}, {"text": "This acts like an unforgeable signature, as\nonly the owner, using their private key, can", "start": 673.36, "duration": 4.5}, {"text": "encrypt.", "start": 677.86, "duration": 1.19}, {"text": "It proves that you're getting data from the\nright server or person, and not an imposter.", "start": 679.05, "duration": 3.92}, {"text": "The most popular asymmetric encryption technique\nused today is RSA, named after its inventors:", "start": 682.97, "duration": 5.09}, {"text": "Rivest, Shamir and Adleman.", "start": 688.06, "duration": 2.0}, {"text": "So, now you know all the \u201ckey\u201d parts of\nmodern cryptography: symmetric encryption,", "start": 690.06, "duration": 4.279}, {"text": "key exchange and public-key cryptography.", "start": 694.339, "duration": 2.06}, {"text": "When you connect to a secure website, like\nyour bank, that little padlock icon means", "start": 696.399, "duration": 3.981}, {"text": "that your computer has used public key cryptography\nto verify the server, key exchange to establish", "start": 700.38, "duration": 5.11}, {"text": "a secret temporary key, and symmetric encryption\nto protect all the back-and-forth communication", "start": 705.49, "duration": 4.769}, {"text": "from prying eyes.", "start": 710.259, "duration": 1.041}, {"text": "Whether you're buying something online, sending\nemails to BFFs, or just browsing cat videos,", "start": 711.3, "duration": 4.93}, {"text": "cryptography keeps all that safe, private\nand secure.", "start": 716.24, "duration": 2.28}, {"text": "Thanks cryptography!", "start": 718.52, "duration": 2.12}]