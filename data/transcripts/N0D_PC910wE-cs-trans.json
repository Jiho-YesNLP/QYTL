[{"text": "hello everyone and welcome back in the", "start": 6.16, "duration": 5.92}, {"text": "last session we learned about the", "start": 10.0, "duration": 3.92}, {"text": "reduction pattern of the number of", "start": 12.08, "duration": 4.72}, {"text": "connections in raw matrix from this", "start": 13.92, "duration": 5.439}, {"text": "session onwards we will mainly focus on", "start": 16.8, "duration": 5.04}, {"text": "the decoder combinational circuit within", "start": 19.359, "duration": 3.76}, {"text": "the rom chip", "start": 21.84, "duration": 4.16}, {"text": "so without any further ado let's get to", "start": 23.119, "duration": 3.841}, {"text": "learning", "start": 26.0, "duration": 3.199}, {"text": "now if you all remember during the", "start": 26.96, "duration": 4.88}, {"text": "construction of decoder we first took", "start": 29.199, "duration": 5.52}, {"text": "the demultiplexer also known as the data", "start": 31.84, "duration": 4.719}, {"text": "distributor because in this", "start": 34.719, "duration": 4.641}, {"text": "combinational circuit based on these", "start": 36.559, "duration": 5.361}, {"text": "select lines the input can be propagated", "start": 39.36, "duration": 5.039}, {"text": "to any one of the output lines", "start": 41.92, "duration": 4.639}, {"text": "now during the session of introduction", "start": 44.399, "duration": 3.921}, {"text": "to primary memory", "start": 46.559, "duration": 4.48}, {"text": "we change the input line of this circuit", "start": 48.32, "duration": 4.719}, {"text": "into an enable line", "start": 51.039, "duration": 5.04}, {"text": "and finally when we convert these select", "start": 53.039, "duration": 5.921}, {"text": "lines into input lines", "start": 56.079, "duration": 5.921}, {"text": "the circuit becomes a decoder circuit", "start": 58.96, "duration": 5.44}, {"text": "and we deduce that the decoder is", "start": 62.0, "duration": 5.04}, {"text": "basically the demultiplexer without any", "start": 64.4, "duration": 4.079}, {"text": "data input", "start": 67.04, "duration": 4.16}, {"text": "now let's reconsider the actual truth", "start": 68.479, "duration": 5.201}, {"text": "table of this particular decoder circuit", "start": 71.2, "duration": 4.64}, {"text": "for a moment shall we", "start": 73.68, "duration": 6.64}, {"text": "so if we observe closely in reality o0", "start": 75.84, "duration": 8.639}, {"text": "produces 1 for this entire sequence 1 0", "start": 80.32, "duration": 9.6}, {"text": "0 that is e is 1 i 1 and i 0 are 0's", "start": 84.479, "duration": 8.481}, {"text": "similarly to be really accurate one", "start": 89.92, "duration": 6.879}, {"text": "produces 1 for this entire sequence 1 0", "start": 92.96, "duration": 10.08}, {"text": "1 that is e is 1 i 1 is 0 and i 0 is 1.", "start": 96.799, "duration": 9.6}, {"text": "now for o2 to be activated we need this", "start": 103.04, "duration": 8.16}, {"text": "entire sequence 1 1 0 that is e is 1 i 1", "start": 106.399, "duration": 7.841}, {"text": "is 1 and i 0 is zero", "start": 111.2, "duration": 6.879}, {"text": "finally o3 will generate one for this", "start": 114.24, "duration": 8.08}, {"text": "entire sequence one one one that is e i", "start": 118.079, "duration": 8.4}, {"text": "one and i zero all are ones", "start": 122.32, "duration": 9.52}, {"text": "so to be precise o0 actually is e and i1", "start": 126.479, "duration": 7.281}, {"text": "bar i0 bar", "start": 131.84, "duration": 7.119}, {"text": "o1 actually is e and i1 bar i0", "start": 133.76, "duration": 11.119}, {"text": "o2 is e and i1 i0 bar and finally o3", "start": 138.959, "duration": 7.28}, {"text": "actually is", "start": 144.879, "duration": 4.401}, {"text": "e and i1 i0", "start": 146.239, "duration": 6.08}, {"text": "now the question remains why are we so", "start": 149.28, "duration": 5.36}, {"text": "much interested about this e", "start": 152.319, "duration": 4.56}, {"text": "and the answer to that question is", "start": 154.64, "duration": 5.28}, {"text": "during implementation e is sometimes", "start": 156.879, "duration": 5.281}, {"text": "considered as input line", "start": 159.92, "duration": 5.039}, {"text": "let me illustrate that", "start": 162.16, "duration": 5.28}, {"text": "consider this combinational circuit", "start": 164.959, "duration": 5.36}, {"text": "we are to determine the function f now", "start": 167.44, "duration": 5.519}, {"text": "observe this is a two to four decoder", "start": 170.319, "duration": 4.721}, {"text": "and the or gate is attached to the", "start": 172.959, "duration": 6.0}, {"text": "output lines o1 and o2 and interestingly", "start": 175.04, "duration": 6.479}, {"text": "along with the inputs a and b which are", "start": 178.959, "duration": 4.801}, {"text": "given to the decoder through the i1 and", "start": 181.519, "duration": 5.521}, {"text": "i0 input lines respectively", "start": 183.76, "duration": 6.08}, {"text": "the input c is fed through the enable", "start": 187.04, "duration": 3.68}, {"text": "line", "start": 189.84, "duration": 6.0}, {"text": "so basically o0 is e and a bar b bar and", "start": 190.72, "duration": 7.68}, {"text": "since c is being fed through the enable", "start": 195.84, "duration": 3.759}, {"text": "line e", "start": 198.4, "duration": 4.88}, {"text": "it's actually c and a bar b bar", "start": 199.599, "duration": 7.2}, {"text": "so o1 is c and a bar b", "start": 203.28, "duration": 6.64}, {"text": "o2 is c and a b bar", "start": 206.799, "duration": 7.601}, {"text": "and finally o3 is c and a b", "start": 209.92, "duration": 8.64}, {"text": "so f becomes o1 or o2", "start": 214.4, "duration": 5.52}, {"text": "in other words", "start": 218.56, "duration": 3.84}, {"text": "c a b bar", "start": 219.92, "duration": 3.36}, {"text": "or", "start": 222.4, "duration": 1.6}, {"text": "c", "start": 223.28, "duration": 2.319}, {"text": "a bar b", "start": 224.0, "duration": 5.2}, {"text": "now if we take c common out of these two", "start": 225.599, "duration": 8.0}, {"text": "it becomes c and a bar b or a b bar", "start": 229.2, "duration": 9.44}, {"text": "which actually is c and a xor b", "start": 233.599, "duration": 7.601}, {"text": "and thus we determine f", "start": 238.64, "duration": 5.04}, {"text": "so this is how the enable line can be", "start": 241.2, "duration": 5.599}, {"text": "used as input and this ability comes", "start": 243.68, "duration": 5.6}, {"text": "very handy during the expansion of", "start": 246.799, "duration": 4.08}, {"text": "decoders", "start": 249.28, "duration": 4.72}, {"text": "now expansion of decoder is a phenomenon", "start": 250.879, "duration": 5.281}, {"text": "where using decoders of lower", "start": 254.0, "duration": 5.199}, {"text": "configuration we can construct a decoder", "start": 256.16, "duration": 5.12}, {"text": "with higher configuration", "start": 259.199, "duration": 3.601}, {"text": "let me explain", "start": 261.28, "duration": 4.32}, {"text": "suppose we are going to construct a two", "start": 262.8, "duration": 4.88}, {"text": "to four decoder with one two two", "start": 265.6, "duration": 3.28}, {"text": "decoders", "start": 267.68, "duration": 4.0}, {"text": "now clearly two to four configuration is", "start": 268.88, "duration": 4.56}, {"text": "higher than one two two", "start": 271.68, "duration": 3.92}, {"text": "let's take a closer look at a one to two", "start": 273.44, "duration": 5.36}, {"text": "decoder in this we will have one input", "start": 275.6, "duration": 6.08}, {"text": "line one enable line which gives us the", "start": 278.8, "duration": 7.2}, {"text": "output line o0 which actually is e and i", "start": 281.68, "duration": 5.2}, {"text": "bar", "start": 286.0, "duration": 3.199}, {"text": "and the output line one", "start": 286.88, "duration": 5.039}, {"text": "which is again e and i", "start": 289.199, "duration": 7.361}, {"text": "now logically when we feed 0 through e o", "start": 291.919, "duration": 8.321}, {"text": "0 will be activated for the sequence 0 0", "start": 296.56, "duration": 6.72}, {"text": "and o 1 will be activated for the", "start": 300.24, "duration": 5.12}, {"text": "sequence 0 1.", "start": 303.28, "duration": 6.479}, {"text": "on the contrary if we feed 1 through e", "start": 305.36, "duration": 7.52}, {"text": "o 0 will be activated for the sequence 1", "start": 309.759, "duration": 4.081}, {"text": "0", "start": 312.88, "duration": 3.44}, {"text": "and o 1 will be activated for the", "start": 313.84, "duration": 4.48}, {"text": "sequence 1 1", "start": 316.32, "duration": 4.319}, {"text": "so basically based on what is being", "start": 318.32, "duration": 5.12}, {"text": "propagated through the enable line we", "start": 320.639, "duration": 4.801}, {"text": "can figure out the proper input", "start": 323.44, "duration": 4.64}, {"text": "sequences which are needed to activate", "start": 325.44, "duration": 4.64}, {"text": "the desired output line", "start": 328.08, "duration": 5.119}, {"text": "and this is the basic structure of a one", "start": 330.08, "duration": 4.64}, {"text": "two two decoder", "start": 333.199, "duration": 3.921}, {"text": "now let's move on to the construction of", "start": 334.72, "duration": 5.68}, {"text": "the 224 decoder in a two to four decoder", "start": 337.12, "duration": 5.76}, {"text": "as we all know there will be three input", "start": 340.4, "duration": 4.639}, {"text": "lines including of course the enable", "start": 342.88, "duration": 5.36}, {"text": "line as well and four output lines", "start": 345.039, "duration": 5.041}, {"text": "now let's dive into the internal", "start": 348.24, "duration": 3.36}, {"text": "architecture", "start": 350.08, "duration": 4.16}, {"text": "if you observe there are four output", "start": 351.6, "duration": 5.52}, {"text": "lines and we are to construct this two", "start": 354.24, "duration": 5.6}, {"text": "to four decoder with the help of one two", "start": 357.12, "duration": 4.799}, {"text": "two decoders so", "start": 359.84, "duration": 4.24}, {"text": "we will need two different one two two", "start": 361.919, "duration": 5.28}, {"text": "decoders in order to cover these four", "start": 364.08, "duration": 4.559}, {"text": "output lines", "start": 367.199, "duration": 4.56}, {"text": "now to control these two we will need", "start": 368.639, "duration": 6.801}, {"text": "another one to two decoder now why so it", "start": 371.759, "duration": 5.681}, {"text": "will be clear in a moment", "start": 375.44, "duration": 4.64}, {"text": "we just learned that based on what is", "start": 377.44, "duration": 4.879}, {"text": "being fed through the enable line we can", "start": 380.08, "duration": 4.239}, {"text": "determine the input sequence for the", "start": 382.319, "duration": 4.641}, {"text": "desired output line right", "start": 384.319, "duration": 6.641}, {"text": "so if we feed o0 of this decoder to this", "start": 386.96, "duration": 5.44}, {"text": "enable line", "start": 390.96, "duration": 4.959}, {"text": "and o1 to this particular enable line", "start": 392.4, "duration": 5.84}, {"text": "let me show you what happens", "start": 395.919, "duration": 4.961}, {"text": "we all know o0 is supposed to be", "start": 398.24, "duration": 5.92}, {"text": "activated for the input sequence 0 0 of", "start": 400.88, "duration": 5.039}, {"text": "i1 and i0", "start": 404.16, "duration": 4.159}, {"text": "o1 will be activated for the input", "start": 405.919, "duration": 4.56}, {"text": "sequence 0 1", "start": 408.319, "duration": 4.32}, {"text": "o2 will be activated for the input", "start": 410.479, "duration": 6.16}, {"text": "sequence 1 0 and o 3 will be activated", "start": 412.639, "duration": 6.801}, {"text": "for the input sequence 1 1.", "start": 416.639, "duration": 7.12}, {"text": "now observe if through i1 we feed 0", "start": 419.44, "duration": 6.8}, {"text": "due to the activation of o0", "start": 423.759, "duration": 5.601}, {"text": "this decoder will be enabled and thus we", "start": 426.24, "duration": 7.04}, {"text": "get to activate either output line o0 or", "start": 429.36, "duration": 7.279}, {"text": "o1 of this 2 to 4 decoder as in both the", "start": 433.28, "duration": 6.96}, {"text": "cases i1 happens to be zero on the other", "start": 436.639, "duration": 7.68}, {"text": "hand if we feed one through i1 o1 will", "start": 440.24, "duration": 6.72}, {"text": "be activated which will then enable this", "start": 444.319, "duration": 4.641}, {"text": "decoder giving us the choice of", "start": 446.96, "duration": 4.959}, {"text": "activating either the output line o2 or", "start": 448.96, "duration": 4.16}, {"text": "o3", "start": 451.919, "duration": 3.441}, {"text": "because if you observe for both these", "start": 453.12, "duration": 5.28}, {"text": "lines i1 happens to be 1.", "start": 455.36, "duration": 4.959}, {"text": "now for all these", "start": 458.4, "duration": 4.16}, {"text": "if you observe i 0", "start": 460.319, "duration": 7.44}, {"text": "for o0 and o2 it's 0 and for o1 and o3", "start": 462.56, "duration": 7.919}, {"text": "it's 1. and we get to activate any one", "start": 467.759, "duration": 6.321}, {"text": "of the lines of either o0 and o2 or o1", "start": 470.479, "duration": 6.4}, {"text": "and o3 depending on whichever decoder", "start": 474.08, "duration": 7.2}, {"text": "has been enabled due to i1 so we feed i0", "start": 476.879, "duration": 6.32}, {"text": "to both the input lines of these", "start": 481.28, "duration": 3.12}, {"text": "decoders", "start": 483.199, "duration": 4.241}, {"text": "and finally the enable line is fed into", "start": 484.4, "duration": 6.479}, {"text": "the e input of this decoder so this is", "start": 487.44, "duration": 6.159}, {"text": "the complete two to four decoder which", "start": 490.879, "duration": 5.521}, {"text": "we just constructed using one two two", "start": 493.599, "duration": 4.081}, {"text": "decoders", "start": 496.4, "duration": 4.0}, {"text": "now notice the procedure we first", "start": 497.68, "duration": 5.68}, {"text": "covered all the output lines using these", "start": 500.4, "duration": 4.32}, {"text": "decoders", "start": 503.36, "duration": 4.64}, {"text": "therefore we will call it level one and", "start": 504.72, "duration": 5.84}, {"text": "the decoder which gets the e input", "start": 508.0, "duration": 5.839}, {"text": "directly is the last level which in this", "start": 510.56, "duration": 6.64}, {"text": "case is level two and interestingly", "start": 513.839, "duration": 5.44}, {"text": "which one of the level one decoders will", "start": 517.2, "duration": 4.56}, {"text": "be enabled is actually decided by the", "start": 519.279, "duration": 4.721}, {"text": "output lines of the decoder of the next", "start": 521.76, "duration": 5.84}, {"text": "level that is by the decoder of level 2.", "start": 524.0, "duration": 6.16}, {"text": "let's now have another illustration for", "start": 527.6, "duration": 4.56}, {"text": "even better understanding", "start": 530.16, "duration": 4.88}, {"text": "let's construct a three to eight decoder", "start": 532.16, "duration": 6.4}, {"text": "using one two two decoders shall we now", "start": 535.04, "duration": 6.0}, {"text": "clearly for a three to eight decoder", "start": 538.56, "duration": 4.8}, {"text": "there will be one enable line three", "start": 541.04, "duration": 5.44}, {"text": "input lines and eight output lines", "start": 543.36, "duration": 5.68}, {"text": "and as usual we will begin the", "start": 546.48, "duration": 5.359}, {"text": "construction from level one", "start": 549.04, "duration": 4.4}, {"text": "now think about it", "start": 551.839, "duration": 4.721}, {"text": "there are eight output lines right and", "start": 553.44, "duration": 5.92}, {"text": "one one two two decoder can cover only", "start": 556.56, "duration": 5.92}, {"text": "two lines hence in order to cover all", "start": 559.36, "duration": 6.479}, {"text": "these eight lines we will need four one", "start": 562.48, "duration": 5.68}, {"text": "two two decoders isn't it", "start": 565.839, "duration": 4.401}, {"text": "now coming to the next level that is in", "start": 568.16, "duration": 3.28}, {"text": "level two", "start": 570.24, "duration": 3.68}, {"text": "we need decoders to control the enable", "start": 571.44, "duration": 5.28}, {"text": "lines of the decoders of level one", "start": 573.92, "duration": 5.599}, {"text": "so one decoder for the enable lines of", "start": 576.72, "duration": 6.16}, {"text": "these two decoders and another one which", "start": 579.519, "duration": 6.721}, {"text": "will be in charge of these two decoders", "start": 582.88, "duration": 6.16}, {"text": "so two more one two two decoders for", "start": 586.24, "duration": 4.159}, {"text": "level two", "start": 589.04, "duration": 4.64}, {"text": "finally in level three we will only need", "start": 590.399, "duration": 5.841}, {"text": "another decoder so that it can be in", "start": 593.68, "duration": 5.12}, {"text": "charge of the enable lines of these two", "start": 596.24, "duration": 5.44}, {"text": "decoders of level two now similar to the", "start": 598.8, "duration": 5.2}, {"text": "earlier illustration the most", "start": 601.68, "duration": 4.399}, {"text": "significant bit of the input sequence", "start": 604.0, "duration": 5.12}, {"text": "that is the input line i2 will be fade", "start": 606.079, "duration": 5.041}, {"text": "into the input line of this level 3", "start": 609.12, "duration": 3.12}, {"text": "decoder", "start": 611.12, "duration": 4.32}, {"text": "input line i1 will then be fed into the", "start": 612.24, "duration": 6.08}, {"text": "input lines of the level 2 decoders and", "start": 615.44, "duration": 6.639}, {"text": "finally the input line i0 which happens", "start": 618.32, "duration": 6.24}, {"text": "to be the least significant bit in the", "start": 622.079, "duration": 5.281}, {"text": "input sequence will be given to all the", "start": 624.56, "duration": 6.0}, {"text": "input lines of the decoders of level 1.", "start": 627.36, "duration": 5.44}, {"text": "now what about the enable input", "start": 630.56, "duration": 4.16}, {"text": "it is going to be fed into the enable", "start": 632.8, "duration": 4.08}, {"text": "line of the decoder of the last level", "start": 634.72, "duration": 4.64}, {"text": "that is the level 3 decoder", "start": 636.88, "duration": 5.84}, {"text": "now observe when we feed 1 through this", "start": 639.36, "duration": 6.32}, {"text": "enable input the level 3 decoder gets", "start": 642.72, "duration": 5.679}, {"text": "enabled which actually enables the", "start": 645.68, "duration": 4.64}, {"text": "entire organization", "start": 648.399, "duration": 5.12}, {"text": "suppose we give the input 101 through", "start": 650.32, "duration": 4.8}, {"text": "the input lines", "start": 653.519, "duration": 3.921}, {"text": "now for this particular decoder", "start": 655.12, "duration": 4.8}, {"text": "since it's already enabled due to the", "start": 657.44, "duration": 6.32}, {"text": "input 1 o1 will be activated which in", "start": 659.92, "duration": 6.479}, {"text": "turn will enable this decoder of level", "start": 663.76, "duration": 3.519}, {"text": "2.", "start": 666.399, "duration": 3.761}, {"text": "now for this level 2 decoder since the", "start": 667.279, "duration": 7.281}, {"text": "input propagated through i1 is 0", "start": 670.16, "duration": 7.359}, {"text": "o0 will be activated enabling this", "start": 674.56, "duration": 5.839}, {"text": "particular decoder of level 1.", "start": 677.519, "duration": 6.241}, {"text": "now for this level 1 decoder the input", "start": 680.399, "duration": 6.961}, {"text": "propagated through i 0 is 1.", "start": 683.76, "duration": 6.8}, {"text": "so this particular output line that is", "start": 687.36, "duration": 6.08}, {"text": "o5 will be activated", "start": 690.56, "duration": 4.8}, {"text": "now you do the math", "start": 693.44, "duration": 6.0}, {"text": "the binary input sequence 1 0 1 means 5", "start": 695.36, "duration": 6.64}, {"text": "in decimal and yes for the input", "start": 699.44, "duration": 6.24}, {"text": "sequence 1 0 1 the output line o5 got", "start": 702.0, "duration": 5.519}, {"text": "activated right", "start": 705.68, "duration": 5.04}, {"text": "so this is how we can construct a 3 to 8", "start": 707.519, "duration": 5.921}, {"text": "decoder using 4", "start": 710.72, "duration": 3.919}, {"text": "plus 2", "start": 713.44, "duration": 4.0}, {"text": "plus one that is seven one two two", "start": 714.639, "duration": 4.561}, {"text": "decoders", "start": 717.44, "duration": 4.48}, {"text": "now if i ask you in order to construct", "start": 719.2, "duration": 5.28}, {"text": "one six to sixty-four decoder", "start": 721.92, "duration": 4.719}, {"text": "how many three to eight decoders will be", "start": 724.48, "duration": 4.64}, {"text": "needed can you figure that out it's", "start": 726.639, "duration": 4.241}, {"text": "actually pretty simple", "start": 729.12, "duration": 4.08}, {"text": "think about it", "start": 730.88, "duration": 4.88}, {"text": "if we are using three to eight decoders", "start": 733.2, "duration": 5.6}, {"text": "for the construction eight output lines", "start": 735.76, "duration": 6.319}, {"text": "can be covered by a single decoder right", "start": 738.8, "duration": 5.44}, {"text": "therefore hypothetically", "start": 742.079, "duration": 4.801}, {"text": "one line can be covered by one by eight", "start": 744.24, "duration": 3.92}, {"text": "decoders", "start": 746.88, "duration": 3.6}, {"text": "by the way which actually isn't possible", "start": 748.16, "duration": 4.239}, {"text": "and that's why we are using the term", "start": 750.48, "duration": 4.08}, {"text": "hypothetically just for the sake of", "start": 752.399, "duration": 3.44}, {"text": "calculation", "start": 754.56, "duration": 4.8}, {"text": "therefore 64 lines can be covered by 1", "start": 755.839, "duration": 7.761}, {"text": "by 8 multiplied by 64 decoders that is 8", "start": 759.36, "duration": 6.56}, {"text": "decoders to be accurate", "start": 763.6, "duration": 3.919}, {"text": "so in level 1", "start": 765.92, "duration": 5.2}, {"text": "we will need 8 3 to 8 decoders", "start": 767.519, "duration": 7.601}, {"text": "now let's talk about level 2.", "start": 771.12, "duration": 4.0}, {"text": "now all these 8 decoders of level 1 will", "start": 775.2, "duration": 6.639}, {"text": "have 8 enable lines for which the", "start": 778.639, "duration": 5.281}, {"text": "decoders of the next level will be in", "start": 781.839, "duration": 3.041}, {"text": "charge", "start": 783.92, "duration": 3.359}, {"text": "and since we are using three to eight", "start": 784.88, "duration": 5.6}, {"text": "decoders we know eight lines can be", "start": 787.279, "duration": 5.601}, {"text": "covered by a single decoder", "start": 790.48, "duration": 6.479}, {"text": "so in total eight plus one that is eight", "start": 792.88, "duration": 7.199}, {"text": "level one decoders and one level two", "start": 796.959, "duration": 6.32}, {"text": "decoder that is in total nine decoders", "start": 800.079, "duration": 4.401}, {"text": "are needed", "start": 803.279, "duration": 2.8}, {"text": "easy right", "start": 804.48, "duration": 4.88}, {"text": "now in general if we are to construct", "start": 806.079, "duration": 6.801}, {"text": "m22 raised to the power m decoder using", "start": 809.36, "duration": 6.88}, {"text": "n 2 2 raised to the power n decoders", "start": 812.88, "duration": 6.319}, {"text": "let's derive how many of these are", "start": 816.24, "duration": 4.0}, {"text": "needed", "start": 819.199, "duration": 3.601}, {"text": "now the configuration m 2 2 raised to", "start": 820.24, "duration": 6.0}, {"text": "the power m can also be stated as", "start": 822.8, "duration": 6.719}, {"text": "log m base 2 to m", "start": 826.24, "duration": 5.92}, {"text": "because when we apply log base 2 to this", "start": 829.519, "duration": 3.68}, {"text": "order", "start": 832.16, "duration": 4.72}, {"text": "m becomes log m base 2 and 2 raised to", "start": 833.199, "duration": 6.481}, {"text": "the power m becomes just m", "start": 836.88, "duration": 6.0}, {"text": "similarly the configuration n 2 2 raised", "start": 839.68, "duration": 6.56}, {"text": "to the power n can also be stated as log", "start": 842.88, "duration": 5.84}, {"text": "n base 2 to n", "start": 846.24, "duration": 4.159}, {"text": "now in level 1", "start": 848.72, "duration": 4.72}, {"text": "m output lines are covered by m by n", "start": 850.399, "duration": 4.24}, {"text": "decoders", "start": 853.44, "duration": 3.68}, {"text": "now why so think about it", "start": 854.639, "duration": 5.361}, {"text": "according to this modified configuration", "start": 857.12, "duration": 5.36}, {"text": "m is now the total number of output", "start": 860.0, "duration": 4.88}, {"text": "lines of the decoder to be constructed", "start": 862.48, "duration": 5.359}, {"text": "and n output lines can be covered by a", "start": 864.88, "duration": 7.12}, {"text": "single log n base 2 to n decoder", "start": 867.839, "duration": 7.201}, {"text": "therefore in order to cover m lines by", "start": 872.0, "duration": 6.32}, {"text": "the decoders with n output lines we will", "start": 875.04, "duration": 5.76}, {"text": "need m by n decoders", "start": 878.32, "duration": 3.68}, {"text": "isn't it", "start": 880.8, "duration": 4.719}, {"text": "now these m by n decoders will have m by", "start": 882.0, "duration": 7.68}, {"text": "n enable lines and in level 2 m by n", "start": 885.519, "duration": 7.12}, {"text": "enable lines are covered by m by n", "start": 889.68, "duration": 6.64}, {"text": "divided by n that is m by n square", "start": 892.639, "duration": 4.961}, {"text": "decoders", "start": 896.32, "duration": 4.879}, {"text": "then again in level 3 these m by n", "start": 897.6, "duration": 6.56}, {"text": "square enable lines can be covered by m", "start": 901.199, "duration": 7.841}, {"text": "by n square divided by n that is m by n", "start": 904.16, "duration": 6.72}, {"text": "cube decoders", "start": 909.04, "duration": 5.52}, {"text": "now suppose the last level is level k", "start": 910.88, "duration": 6.24}, {"text": "observing the pattern we can say", "start": 914.56, "duration": 6.16}, {"text": "the m by n raised to the power k minus 1", "start": 917.12, "duration": 5.92}, {"text": "enable lines of the decoders of k minus", "start": 920.72, "duration": 6.64}, {"text": "1 level can be covered by n by n raised", "start": 923.04, "duration": 6.56}, {"text": "to the power k decoders", "start": 927.36, "duration": 3.76}, {"text": "now think about it", "start": 929.6, "duration": 4.08}, {"text": "in the last level the number of decoders", "start": 931.12, "duration": 5.92}, {"text": "required will always be one that is in", "start": 933.68, "duration": 6.56}, {"text": "the last level one single decoder will", "start": 937.04, "duration": 5.68}, {"text": "be sufficient enough to cover all the", "start": 940.24, "duration": 4.32}, {"text": "enable lines of the decoders of the", "start": 942.72, "duration": 3.28}, {"text": "previous level", "start": 944.56, "duration": 4.88}, {"text": "therefore the value of m by n raised to", "start": 946.0, "duration": 6.959}, {"text": "the power k can at most be one", "start": 949.44, "duration": 8.319}, {"text": "hence m is less than equals to n raised", "start": 952.959, "duration": 6.56}, {"text": "to the power k", "start": 957.759, "duration": 4.801}, {"text": "now if we apply log base n to both the", "start": 959.519, "duration": 4.161}, {"text": "sides", "start": 962.56, "duration": 4.48}, {"text": "m becomes log m base n and on the right", "start": 963.68, "duration": 5.839}, {"text": "hand side we are left with k", "start": 967.04, "duration": 6.799}, {"text": "because log n base n is actually 1 and", "start": 969.519, "duration": 7.041}, {"text": "when we apply log with the same base the", "start": 973.839, "duration": 5.12}, {"text": "exponent comes down as a multiplicative", "start": 976.56, "duration": 3.6}, {"text": "prefix", "start": 978.959, "duration": 5.601}, {"text": "so log m base n is less than equals to k", "start": 980.16, "duration": 5.76}, {"text": "in other words", "start": 984.56, "duration": 5.04}, {"text": "k is greater than or equals to this", "start": 985.92, "duration": 6.08}, {"text": "you all know this property of logarithm", "start": 989.6, "duration": 5.359}, {"text": "right where if we apply the log with the", "start": 992.0, "duration": 6.959}, {"text": "same base to this log m base n we can", "start": 994.959, "duration": 9.281}, {"text": "rewrite it as log m base 2 by log n base", "start": 998.959, "duration": 8.721}, {"text": "2 and for the ease of calculation log", "start": 1004.24, "duration": 6.24}, {"text": "base 2 has been applied here now since", "start": 1007.68, "duration": 4.719}, {"text": "we are trying to find out the least", "start": 1010.48, "duration": 4.719}, {"text": "value of k which is quite evident from", "start": 1012.399, "duration": 5.201}, {"text": "the greater than equals to operator", "start": 1015.199, "duration": 6.721}, {"text": "we can state k equals to ceiling of log", "start": 1017.6, "duration": 8.56}, {"text": "m base 2 by log n base 2. this means it", "start": 1021.92, "duration": 6.639}, {"text": "is the maximum number of levels because", "start": 1026.16, "duration": 5.039}, {"text": "if you remember we presumed the last", "start": 1028.559, "duration": 4.321}, {"text": "level would be k", "start": 1031.199, "duration": 4.161}, {"text": "therefore the total number of decoders", "start": 1032.88, "duration": 6.959}, {"text": "required is summation k equals 1 to", "start": 1035.36, "duration": 9.28}, {"text": "ceiling of log m base 2 by log n base 2", "start": 1039.839, "duration": 8.24}, {"text": "m by n raised to the power k", "start": 1044.64, "duration": 5.6}, {"text": "basically the number of levels which is", "start": 1048.079, "duration": 6.321}, {"text": "denoted by k will start from 1 and go up", "start": 1050.24, "duration": 7.84}, {"text": "to log m base 2 by log n base 2 and with", "start": 1054.4, "duration": 6.399}, {"text": "the increasing value of k in each level", "start": 1058.08, "duration": 5.04}, {"text": "the value of the exponent of n will", "start": 1060.799, "duration": 4.161}, {"text": "increase in each level", "start": 1063.12, "duration": 3.919}, {"text": "well don't worry if it feels a little", "start": 1064.96, "duration": 4.719}, {"text": "complex to comprehend we will ease it up", "start": 1067.039, "duration": 4.161}, {"text": "with the next example", "start": 1069.679, "duration": 5.12}, {"text": "let's now construct a 7 to 128 decoder", "start": 1071.2, "duration": 5.839}, {"text": "using 3 to 8 decoders", "start": 1074.799, "duration": 3.921}, {"text": "we will try to figure out the total", "start": 1077.039, "duration": 3.841}, {"text": "number of 3 to 8 decoders needed for", "start": 1078.72, "duration": 4.56}, {"text": "this specific organization using the", "start": 1080.88, "duration": 5.6}, {"text": "formula that we just derived but before", "start": 1083.28, "duration": 5.519}, {"text": "that do remember we changed the", "start": 1086.48, "duration": 4.8}, {"text": "configuration didn't we", "start": 1088.799, "duration": 3.841}, {"text": "so for us", "start": 1091.28, "duration": 6.399}, {"text": "m is 128 and log m base 2 is 7", "start": 1092.64, "duration": 9.2}, {"text": "and this is the derived formula", "start": 1097.679, "duration": 4.161}, {"text": "now m is 128 and n is 8.", "start": 1101.919, "duration": 6.081}, {"text": "so let's find out the number of levels", "start": 1106.0, "duration": 2.88}, {"text": "first", "start": 1108.0, "duration": 3.84}, {"text": "now from the formula we know this is the", "start": 1108.88, "duration": 6.24}, {"text": "number of levels that is sealing off log", "start": 1111.84, "duration": 7.04}, {"text": "m base 2 by log n base 2.", "start": 1115.12, "duration": 5.2}, {"text": "now observe", "start": 1118.88, "duration": 7.28}, {"text": "since m is 128 hence log m base 2 is 7", "start": 1120.32, "duration": 10.64}, {"text": "and since n is 8 hence log n base 2 is", "start": 1126.16, "duration": 6.16}, {"text": "nothing but 3.", "start": 1130.96, "duration": 5.839}, {"text": "so ceiling of 7 by 3 gives us the value", "start": 1132.32, "duration": 5.44}, {"text": "3", "start": 1136.799, "duration": 3.281}, {"text": "so there will be 3 levels", "start": 1137.76, "duration": 4.88}, {"text": "so the total number of decoders required", "start": 1140.08, "duration": 5.92}, {"text": "can be calculated as m by n raised to", "start": 1142.64, "duration": 6.88}, {"text": "the power 1 that is 128 divided by 8 to", "start": 1146.0, "duration": 7.44}, {"text": "the power 1 in the first level plus m by", "start": 1149.52, "duration": 7.2}, {"text": "n raised to the power 2 that is 128", "start": 1153.44, "duration": 6.16}, {"text": "divided by 8 square in the second level", "start": 1156.72, "duration": 6.72}, {"text": "plus 128 by 8 cube in the third or the", "start": 1159.6, "duration": 5.28}, {"text": "final level", "start": 1163.44, "duration": 4.72}, {"text": "now 128 by 8 is 16", "start": 1164.88, "duration": 8.88}, {"text": "plus 128 by 8 square that is 128 by 64", "start": 1168.16, "duration": 10.8}, {"text": "is 2. and finally 128 by 8 cube that is", "start": 1173.76, "duration": 9.68}, {"text": "128 by 128 itself which gives us 1.", "start": 1178.96, "duration": 10.32}, {"text": "so in total 16 plus 2 plus 1 that is 19", "start": 1183.44, "duration": 7.28}, {"text": "decoders", "start": 1189.28, "duration": 2.56}, {"text": "so", "start": 1190.72, "duration": 2.4}, {"text": "19", "start": 1191.84, "duration": 4.16}, {"text": "3 to 8 decoders will be needed in order", "start": 1193.12, "duration": 7.6}, {"text": "to construct one single 7 to 128 decoder", "start": 1196.0, "duration": 7.52}, {"text": "so this is how expansion of decoders", "start": 1200.72, "duration": 5.28}, {"text": "that is higher configuration decoders", "start": 1203.52, "duration": 4.96}, {"text": "are created using decoders with lower", "start": 1206.0, "duration": 4.799}, {"text": "orders and in order to find out the", "start": 1208.48, "duration": 4.88}, {"text": "total number of decoders needed we can", "start": 1210.799, "duration": 5.76}, {"text": "use this formula but do remember the", "start": 1213.36, "duration": 7.84}, {"text": "change of the configuration before that", "start": 1216.559, "duration": 6.801}, {"text": "all right people that will be all for", "start": 1221.2, "duration": 3.359}, {"text": "this session", "start": 1223.36, "duration": 3.36}, {"text": "i hope the concept of expansion of", "start": 1224.559, "duration": 4.48}, {"text": "decoders is clear to you now", "start": 1226.72, "duration": 4.959}, {"text": "if you want to explore more similar", "start": 1229.039, "duration": 5.52}, {"text": "concept using multiplexers in the max", "start": 1231.679, "duration": 5.281}, {"text": "tree series has already been beautifully", "start": 1234.559, "duration": 4.401}, {"text": "explained in our digital electronics", "start": 1236.96, "duration": 2.88}, {"text": "course", "start": 1238.96, "duration": 2.88}, {"text": "go ahead and check that out", "start": 1239.84, "duration": 4.4}, {"text": "in the next session we will learn", "start": 1241.84, "duration": 5.36}, {"text": "another approach of decoder expansion", "start": 1244.24, "duration": 4.96}, {"text": "so i hope to see you in the next one", "start": 1247.2, "duration": 4.35}, {"text": "thank you all for watching", "start": 1249.2, "duration": 2.53}, {"text": "[Music]", "start": 1251.55, "duration": 2.35}, {"text": "[Applause]", "start": 1251.73, "duration": 10.35}, {"text": "[Music]", "start": 1253.9, "duration": 10.259}, {"text": "you", "start": 1262.08, "duration": 2.079}]