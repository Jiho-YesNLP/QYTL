[{"text": "hello", "start": 6.16, "duration": 4.96}, {"text": "everyone and welcome back so far we have", "start": 7.12, "duration": 6.08}, {"text": "seen quite a few cache memory mapping", "start": 11.12, "duration": 3.92}, {"text": "techniques and we have also solved", "start": 13.2, "duration": 4.159}, {"text": "various numerical problems pertaining to", "start": 15.04, "duration": 3.36}, {"text": "all of them", "start": 17.359, "duration": 3.121}, {"text": "so in this particular session we are", "start": 18.4, "duration": 4.16}, {"text": "going to have a comparative study", "start": 20.48, "duration": 4.08}, {"text": "in order to understand the distinctive", "start": 22.56, "duration": 3.92}, {"text": "natures of different kind of cache and", "start": 24.56, "duration": 3.68}, {"text": "memory mapping techniques with the help", "start": 26.48, "duration": 3.76}, {"text": "of a constructive illustration", "start": 28.24, "duration": 4.56}, {"text": "so without any further ado let's get to", "start": 30.24, "duration": 3.76}, {"text": "learning", "start": 32.8, "duration": 3.36}, {"text": "suppose we are provided with some data", "start": 34.0, "duration": 4.0}, {"text": "there is a main memory of size 8", "start": 36.16, "duration": 3.2}, {"text": "gigabytes is given", "start": 38.0, "duration": 3.36}, {"text": "the block size is specified as 2", "start": 39.36, "duration": 4.24}, {"text": "kilobytes and the cache is given of the", "start": 41.36, "duration": 2.64}, {"text": "size", "start": 43.6, "duration": 3.439}, {"text": "4 megabytes now since the memory is byte", "start": 44.0, "duration": 3.84}, {"text": "redressable", "start": 47.039, "duration": 3.121}, {"text": "we know we need to change all the units", "start": 47.84, "duration": 4.08}, {"text": "into their respective bytes", "start": 50.16, "duration": 3.919}, {"text": "therefore the main memory size is going", "start": 51.92, "duration": 3.44}, {"text": "to be 2 to the power", "start": 54.079, "duration": 4.721}, {"text": "33 in terms of bytes because 8 is 2q", "start": 55.36, "duration": 6.24}, {"text": "and gigabytes is 2 to the power 30.", "start": 58.8, "duration": 4.88}, {"text": "therefore for physical address we will", "start": 61.6, "duration": 3.919}, {"text": "be needing 33 bits", "start": 63.68, "duration": 3.52}, {"text": "now coming to the block size it is 2", "start": 65.519, "duration": 3.761}, {"text": "kilobytes which is in terms of byte is 2", "start": 67.2, "duration": 3.36}, {"text": "to the power 11.", "start": 69.28, "duration": 3.519}, {"text": "therefore for block offset we will be", "start": 70.56, "duration": 3.599}, {"text": "needing 11 bits", "start": 72.799, "duration": 3.201}, {"text": "now the cache size is given as 4", "start": 74.159, "duration": 4.401}, {"text": "megabytes which in terms of byte is 2 to", "start": 76.0, "duration": 4.0}, {"text": "the power 22 because", "start": 78.56, "duration": 3.84}, {"text": "4 is 2 square and megabyte is 2 to the", "start": 80.0, "duration": 3.68}, {"text": "power 20.", "start": 82.4, "duration": 3.2}, {"text": "now we can find out the number of cache", "start": 83.68, "duration": 4.24}, {"text": "lines dividing the cache size that is 2", "start": 85.6, "duration": 3.76}, {"text": "to the power 22", "start": 87.92, "duration": 3.36}, {"text": "by the block or the line size that is 2", "start": 89.36, "duration": 3.119}, {"text": "to the power 11", "start": 91.28, "duration": 3.199}, {"text": "which will give us 2 to the power 11", "start": 92.479, "duration": 4.801}, {"text": "because 22 minus 11 is 11.", "start": 94.479, "duration": 5.041}, {"text": "therefore there are 2 to the power 11", "start": 97.28, "duration": 4.24}, {"text": "lines inside the cache", "start": 99.52, "duration": 3.599}, {"text": "now let's observe what will be the", "start": 101.52, "duration": 3.44}, {"text": "physical address split in terms of", "start": 103.119, "duration": 2.401}, {"text": "direct", "start": 104.96, "duration": 2.96}, {"text": "associative and set associative mapping", "start": 105.52, "duration": 3.52}, {"text": "respectively", "start": 107.92, "duration": 3.12}, {"text": "now we know for physical address we will", "start": 109.04, "duration": 4.56}, {"text": "be needing 33 bits and the block offset", "start": 111.04, "duration": 2.96}, {"text": "is of", "start": 113.6, "duration": 2.96}, {"text": "11 bits which will remain the same for", "start": 114.0, "duration": 4.0}, {"text": "all the different memory mapping", "start": 116.56, "duration": 2.159}, {"text": "techniques", "start": 118.0, "duration": 2.64}, {"text": "now coming to the direct mapping we", "start": 118.719, "duration": 4.0}, {"text": "already know there are 2 to the power 11", "start": 120.64, "duration": 4.159}, {"text": "number of lines inside the cache", "start": 122.719, "duration": 4.161}, {"text": "therefore 11 bits are going to be used", "start": 124.799, "duration": 4.08}, {"text": "for the line number portion", "start": 126.88, "duration": 3.84}, {"text": "now since we are dealing with direct", "start": 128.879, "duration": 3.761}, {"text": "mapping we know the number of tagged", "start": 130.72, "duration": 2.96}, {"text": "bits can be found", "start": 132.64, "duration": 2.72}, {"text": "out from the ratio between the main", "start": 133.68, "duration": 3.84}, {"text": "memory and the cache memory size which", "start": 135.36, "duration": 2.72}, {"text": "will give", "start": 137.52, "duration": 3.439}, {"text": "us 2 to the power 11 specifying that 2", "start": 138.08, "duration": 4.0}, {"text": "to the power 11", "start": 140.959, "duration": 2.961}, {"text": "main memory blocks will be mapped onto", "start": 142.08, "duration": 3.6}, {"text": "the each of the cache lines", "start": 143.92, "duration": 3.76}, {"text": "therefore the number of tag bits is", "start": 145.68, "duration": 3.919}, {"text": "nothing but 11 bits", "start": 147.68, "duration": 5.36}, {"text": "so from 33 bits physical address 11 most", "start": 149.599, "duration": 5.041}, {"text": "significant bits will be used for the", "start": 153.04, "duration": 2.24}, {"text": "tag", "start": 154.64, "duration": 2.72}, {"text": "11 bits will be used for the line number", "start": 155.28, "duration": 3.039}, {"text": "and the 11", "start": 157.36, "duration": 2.64}, {"text": "least significant bits will be used for", "start": 158.319, "duration": 3.521}, {"text": "block or line offset", "start": 160.0, "duration": 4.16}, {"text": "now coming to associative mapping we", "start": 161.84, "duration": 4.64}, {"text": "know for the entire block number we will", "start": 164.16, "duration": 5.52}, {"text": "be needing 33-11 that is 22 bits", "start": 166.48, "duration": 5.2}, {"text": "and since there are no restrictions", "start": 169.68, "duration": 3.76}, {"text": "about placing the main memory blocks", "start": 171.68, "duration": 4.16}, {"text": "into the cache lines we also know that", "start": 173.44, "duration": 4.32}, {"text": "the entire block number bits will be", "start": 175.84, "duration": 3.52}, {"text": "used for the tags", "start": 177.76, "duration": 3.36}, {"text": "now let's talk about the physical", "start": 179.36, "duration": 3.36}, {"text": "address plate in terms of set", "start": 181.12, "duration": 2.88}, {"text": "associative mapping", "start": 182.72, "duration": 3.28}, {"text": "now we also know that we can't really", "start": 184.0, "duration": 4.319}, {"text": "find out the ps plate if we don't really", "start": 186.0, "duration": 3.519}, {"text": "specify the way", "start": 188.319, "duration": 3.681}, {"text": "in set associative mapping therefore", "start": 189.519, "duration": 4.881}, {"text": "arbitrarily let's assume it's a four-way", "start": 192.0, "duration": 4.239}, {"text": "set associative mapping", "start": 194.4, "duration": 4.72}, {"text": "now since it's a four-way we know every", "start": 196.239, "duration": 5.201}, {"text": "set is going to have four lines in them", "start": 199.12, "duration": 4.399}, {"text": "that is two to the power two are two", "start": 201.44, "duration": 3.439}, {"text": "square lines inside", "start": 203.519, "duration": 4.08}, {"text": "every set therefore the number of sets", "start": 204.879, "duration": 4.561}, {"text": "can be found out dividing the cache", "start": 207.599, "duration": 3.92}, {"text": "alliance that is 2 to the power 11", "start": 209.44, "duration": 4.56}, {"text": "by the set size which is 2 square which", "start": 211.519, "duration": 3.921}, {"text": "will give us 2 to the power", "start": 214.0, "duration": 3.84}, {"text": "9 bits therefore 9 bits are going to be", "start": 215.44, "duration": 4.079}, {"text": "used for the set number", "start": 217.84, "duration": 3.92}, {"text": "and finally for tag bits we will be", "start": 219.519, "duration": 5.521}, {"text": "needing 33 minus 9 plus 11 that is 20", "start": 221.76, "duration": 3.92}, {"text": "that is", "start": 225.04, "duration": 3.36}, {"text": "13 bits so these are the different", "start": 225.68, "duration": 4.72}, {"text": "physical address plate for", "start": 228.4, "duration": 4.72}, {"text": "direct associative and four way set", "start": 230.4, "duration": 4.399}, {"text": "associative mapping", "start": 233.12, "duration": 3.36}, {"text": "now let's try to find out the key", "start": 234.799, "duration": 3.44}, {"text": "differences with the help of these", "start": 236.48, "duration": 3.2}, {"text": "physical address splits", "start": 238.239, "duration": 5.441}, {"text": "shall we so this is the physical address", "start": 239.68, "duration": 5.6}, {"text": "plate for direct mapping", "start": 243.68, "duration": 4.08}, {"text": "this one is for associative mapping and", "start": 245.28, "duration": 3.84}, {"text": "this one we acquired", "start": 247.76, "duration": 3.52}, {"text": "for four-way set associative mapping", "start": 249.12, "duration": 4.24}, {"text": "from the same main memory and cache", "start": 251.28, "duration": 3.44}, {"text": "organization", "start": 253.36, "duration": 2.96}, {"text": "now we will have a prominent", "start": 254.72, "duration": 3.919}, {"text": "understanding of this comparative study", "start": 256.32, "duration": 4.0}, {"text": "with the help of this chart", "start": 258.639, "duration": 4.081}, {"text": "as you can see the parameters are kept", "start": 260.32, "duration": 3.599}, {"text": "column wise", "start": 262.72, "duration": 3.68}, {"text": "and the rows are there for different", "start": 263.919, "duration": 5.041}, {"text": "mapping techniques now coming to tag", "start": 266.4, "duration": 3.96}, {"text": "bits which is used for the", "start": 268.96, "duration": 4.16}, {"text": "identification of the main memory blocks", "start": 270.36, "duration": 4.52}, {"text": "inside the cache lines", "start": 273.12, "duration": 4.799}, {"text": "in direct mapping we are using 11 bits", "start": 274.88, "duration": 5.599}, {"text": "in associative mapping we are using 22", "start": 277.919, "duration": 4.961}, {"text": "bits and for four-way set associative", "start": 280.479, "duration": 3.041}, {"text": "mapping", "start": 282.88, "duration": 3.759}, {"text": "13-bit stacks are used now the number of", "start": 283.52, "duration": 5.52}, {"text": "the cache lines is a sole property of", "start": 286.639, "duration": 3.28}, {"text": "the cache", "start": 289.04, "duration": 3.439}, {"text": "that depends on the size of the line or", "start": 289.919, "duration": 3.441}, {"text": "the block", "start": 292.479, "duration": 3.041}, {"text": "and it has got nothing to do with the", "start": 293.36, "duration": 3.92}, {"text": "cache memory mapping techniques", "start": 295.52, "duration": 4.08}, {"text": "therefore the number of cache lines will", "start": 297.28, "duration": 4.16}, {"text": "remain the same for all the different", "start": 299.6, "duration": 3.68}, {"text": "cache memory mapping techniques", "start": 301.44, "duration": 4.16}, {"text": "which we calculated to be 2 to the power", "start": 303.28, "duration": 3.359}, {"text": "11.", "start": 305.6, "duration": 3.599}, {"text": "now coming to the tag directory size we", "start": 306.639, "duration": 3.361}, {"text": "know the number", "start": 309.199, "duration": 3.28}, {"text": "of tag directory entries will be as same", "start": 310.0, "duration": 4.24}, {"text": "as the number of cache lines are in", "start": 312.479, "duration": 2.481}, {"text": "there", "start": 314.24, "duration": 2.88}, {"text": "however the tag directory size", "start": 314.96, "duration": 3.84}, {"text": "altogether will vary", "start": 317.12, "duration": 3.359}, {"text": "because of the different number of tag", "start": 318.8, "duration": 4.16}, {"text": "bits in different mapping techniques", "start": 320.479, "duration": 5.041}, {"text": "therefore for direct mapping the size of", "start": 322.96, "duration": 4.64}, {"text": "the tag directory is going to be 2 to", "start": 325.52, "duration": 4.16}, {"text": "the power 11 multiplied by", "start": 327.6, "duration": 5.52}, {"text": "11 tag bits now coming to associative", "start": 329.68, "duration": 5.76}, {"text": "mapping the tag directory size will be 2", "start": 333.12, "duration": 5.04}, {"text": "to the power 11 multiplied by 22", "start": 335.44, "duration": 5.68}, {"text": "tag bits similarly in case of four-way", "start": 338.16, "duration": 4.879}, {"text": "set associative mapping", "start": 341.12, "duration": 4.4}, {"text": "the size of the tag directory will be 2", "start": 343.039, "duration": 3.761}, {"text": "to the power 11", "start": 345.52, "duration": 4.88}, {"text": "multiplied by 13 tag bits now as you can", "start": 346.8, "duration": 5.92}, {"text": "see the number of tag directory entries", "start": 350.4, "duration": 4.56}, {"text": "in every case is going to be the same", "start": 352.72, "duration": 4.8}, {"text": "however the tag directory size will", "start": 354.96, "duration": 3.2}, {"text": "differ", "start": 357.52, "duration": 3.28}, {"text": "because of the different tag bit size", "start": 358.16, "duration": 4.56}, {"text": "now let's talk about how many number of", "start": 360.8, "duration": 3.92}, {"text": "comparators we are going to need for", "start": 362.72, "duration": 3.52}, {"text": "different mapping techniques", "start": 364.72, "duration": 3.599}, {"text": "coming to direct mapping we already know", "start": 366.24, "duration": 4.0}, {"text": "it's a very strict mapping policy", "start": 368.319, "duration": 4.16}, {"text": "and for block identification we are", "start": 370.24, "duration": 4.64}, {"text": "going to compare only a single cache", "start": 372.479, "duration": 3.761}, {"text": "line at a time", "start": 374.88, "duration": 3.68}, {"text": "therefore for direct mapping the number", "start": 376.24, "duration": 4.079}, {"text": "of comparators we will be needing is", "start": 378.56, "duration": 3.04}, {"text": "only one", "start": 380.319, "duration": 3.921}, {"text": "whereas in case of associative mapping", "start": 381.6, "duration": 4.24}, {"text": "we already have witnessed", "start": 384.24, "duration": 4.799}, {"text": "this flexible nature that means we don't", "start": 385.84, "duration": 3.6}, {"text": "have", "start": 389.039, "duration": 2.561}, {"text": "any restrictions on placing any of the", "start": 389.44, "duration": 4.24}, {"text": "main memory blocks into any of the cache", "start": 391.6, "duration": 2.879}, {"text": "lines", "start": 393.68, "duration": 3.28}, {"text": "therefore for associative mapping we", "start": 394.479, "duration": 4.801}, {"text": "will be needing 2 to the power 11 number", "start": 396.96, "duration": 3.679}, {"text": "of comparators", "start": 399.28, "duration": 3.52}, {"text": "because we need the comparators to be", "start": 400.639, "duration": 4.481}, {"text": "associated with all the cache lines and", "start": 402.8, "duration": 4.48}, {"text": "hence 2 to the power 11 number of", "start": 405.12, "duration": 3.6}, {"text": "comparators", "start": 407.28, "duration": 3.759}, {"text": "now coming to four-way set associative", "start": 408.72, "duration": 4.64}, {"text": "mapping we know due to the four-way", "start": 411.039, "duration": 4.481}, {"text": "every set inside the cache is going to", "start": 413.36, "duration": 3.839}, {"text": "have four lines in them", "start": 415.52, "duration": 4.079}, {"text": "that means we will be comparing only", "start": 417.199, "duration": 4.56}, {"text": "four lines belonging to the same set", "start": 419.599, "duration": 4.961}, {"text": "during block identification therefore", "start": 421.759, "duration": 4.56}, {"text": "the number of comparators we will be", "start": 424.56, "duration": 3.919}, {"text": "needing for four-way set associative", "start": 426.319, "duration": 2.72}, {"text": "mapping", "start": 428.479, "duration": 3.521}, {"text": "is going to be four so to summarize the", "start": 429.039, "duration": 5.121}, {"text": "number of comparators needed for direct", "start": 432.0, "duration": 4.24}, {"text": "mapping will always be one", "start": 434.16, "duration": 4.0}, {"text": "coming to associative mapping it will be", "start": 436.24, "duration": 4.0}, {"text": "as same as the number of cache lines are", "start": 438.16, "duration": 2.8}, {"text": "in there", "start": 440.24, "duration": 2.799}, {"text": "and coming to koa set associative", "start": 440.96, "duration": 4.16}, {"text": "mapping it will be depending on the", "start": 443.039, "duration": 2.72}, {"text": "value of", "start": 445.12, "duration": 4.0}, {"text": "k which is in this case is 4. now coming", "start": 445.759, "duration": 5.041}, {"text": "to the type of the comparators", "start": 449.12, "duration": 4.32}, {"text": "it totally depends upon the tag size", "start": 450.8, "duration": 3.28}, {"text": "because", "start": 453.44, "duration": 2.64}, {"text": "comparing the tags associated to the", "start": 454.08, "duration": 3.119}, {"text": "cache airlines", "start": 456.08, "duration": 2.8}, {"text": "with the tag field of the physical", "start": 457.199, "duration": 4.081}, {"text": "address we can actually specify", "start": 458.88, "duration": 4.879}, {"text": "either the block's presence or absence", "start": 461.28, "duration": 3.68}, {"text": "inside the cache", "start": 463.759, "duration": 3.521}, {"text": "so in this specific scenario for direct", "start": 464.96, "duration": 4.639}, {"text": "mapping we calculated the tag bits to be", "start": 467.28, "duration": 3.359}, {"text": "11 bits", "start": 469.599, "duration": 4.481}, {"text": "therefore we will be needing one 11 bit", "start": 470.639, "duration": 4.641}, {"text": "comparator", "start": 474.08, "duration": 3.839}, {"text": "whereas in case of associative mapping", "start": 475.28, "duration": 5.039}, {"text": "since the tag bits are of 22 bits", "start": 477.919, "duration": 5.28}, {"text": "we will be needing 2 to the power 11", "start": 480.319, "duration": 4.88}, {"text": "22-bit comparators", "start": 483.199, "duration": 4.481}, {"text": "similarly for 4-way set associative", "start": 485.199, "duration": 3.12}, {"text": "mapping", "start": 487.68, "duration": 3.919}, {"text": "the tag size is of 13 bits therefore", "start": 488.319, "duration": 7.201}, {"text": "we will be needing 4 13 bit comparators", "start": 491.599, "duration": 6.081}, {"text": "so these are the differences of", "start": 495.52, "duration": 3.6}, {"text": "different cache memory mapping", "start": 497.68, "duration": 2.32}, {"text": "techniques", "start": 499.12, "duration": 2.96}, {"text": "nonetheless do always remember that the", "start": 500.0, "duration": 4.0}, {"text": "number of lines inside the cachet", "start": 502.08, "duration": 4.16}, {"text": "depends solely upon the cache's overall", "start": 504.0, "duration": 2.8}, {"text": "size", "start": 506.24, "duration": 3.44}, {"text": "and the block or the line size so it has", "start": 506.8, "duration": 4.64}, {"text": "got nothing to do with different memory", "start": 509.68, "duration": 2.799}, {"text": "mapping techniques", "start": 511.44, "duration": 3.12}, {"text": "and that's why it remained the same for", "start": 512.479, "duration": 3.601}, {"text": "all of them", "start": 514.56, "duration": 3.76}, {"text": "now on a special note we have already", "start": 516.08, "duration": 3.92}, {"text": "talked about set associative", "start": 518.32, "duration": 4.639}, {"text": "mapping as a combination of both direct", "start": 520.0, "duration": 4.88}, {"text": "and associative mappings positive", "start": 522.959, "duration": 2.88}, {"text": "features", "start": 524.88, "duration": 3.519}, {"text": "in continuation of that discussion for a", "start": 525.839, "duration": 4.641}, {"text": "k way set associative mapping", "start": 528.399, "duration": 6.081}, {"text": "if the value of k is 1 that means", "start": 530.48, "duration": 6.88}, {"text": "every set is going to have a single line", "start": 534.48, "duration": 3.52}, {"text": "that means", "start": 537.36, "duration": 3.68}, {"text": "every line is a set in that case it is", "start": 538.0, "duration": 3.92}, {"text": "as same as", "start": 541.04, "duration": 3.68}, {"text": "direct mapping because in direct mapping", "start": 541.92, "duration": 4.96}, {"text": "every main memory block is mapped onto a", "start": 544.72, "duration": 3.84}, {"text": "specific cache a line", "start": 546.88, "duration": 4.56}, {"text": "on the other hand if the value of k is n", "start": 548.56, "duration": 3.279}, {"text": "where", "start": 551.44, "duration": 2.48}, {"text": "n being the number of lines inside the", "start": 551.839, "duration": 3.921}, {"text": "cache that means", "start": 553.92, "duration": 4.08}, {"text": "there will be a single set which will", "start": 555.76, "duration": 4.8}, {"text": "include all the lines inside the cache", "start": 558.0, "duration": 5.04}, {"text": "that means the entire cache will be a", "start": 560.56, "duration": 3.6}, {"text": "single set", "start": 563.04, "duration": 3.12}, {"text": "in that case it is nothing but", "start": 564.16, "duration": 3.359}, {"text": "associative mapping", "start": 566.16, "duration": 3.679}, {"text": "because we can place a main memory block", "start": 567.519, "duration": 3.921}, {"text": "anywhere inside the set", "start": 569.839, "duration": 3.761}, {"text": "which is nothing but the entire cache", "start": 571.44, "duration": 4.64}, {"text": "and that is fully associated mapping", "start": 573.6, "duration": 6.4}, {"text": "isn't it so do remember these facts", "start": 576.08, "duration": 5.92}, {"text": "all right everyone that will be all for", "start": 580.0, "duration": 4.32}, {"text": "this session in the upcoming sessions we", "start": 582.0, "duration": 4.08}, {"text": "will solve few more previous year", "start": 584.32, "duration": 3.44}, {"text": "questions so i hope to see you in the", "start": 586.08, "duration": 2.4}, {"text": "next ones", "start": 587.76, "duration": 3.46}, {"text": "thank you all for watching", "start": 588.48, "duration": 2.92}, {"text": "[Music]", "start": 591.22, "duration": 2.35}, {"text": "[Applause]", "start": 591.4, "duration": 12.359}, {"text": "[Music]", "start": 593.57, "duration": 10.189}]