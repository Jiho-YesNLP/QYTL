[{"text": "The following content is\nprovided under a Creative", "start": 0.79, "duration": 2.4}, {"text": "Commons license.", "start": 3.19, "duration": 1.54}, {"text": "Your support will help\nMIT OpenCourseWare", "start": 4.73, "duration": 2.3}, {"text": "continue to offer high quality\neducational resources for free.", "start": 7.03, "duration": 4.36}, {"text": "To make a donation or\nview additional materials", "start": 11.39, "duration": 2.6}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.99, "duration": 3.89}, {"text": "at ocw.mit.edu.", "start": 17.88, "duration": 0.97}, {"text": "ERIC GRIMSON: Ladies\nand gentlemen, I'd", "start": 31.86, "duration": 2.94}, {"text": "like to get started.", "start": 34.8, "duration": 2.53}, {"text": "My name's Eric Grimson.", "start": 37.33, "duration": 1.16}, {"text": "I have the privilege of\nserving as MIT'S chancellor", "start": 38.49, "duration": 2.79}, {"text": "for academic advancement, you\ncan go look up what that means,", "start": 41.28, "duration": 3.19}, {"text": "and like John I'm a\nformer head of course six.", "start": 44.47, "duration": 3.8}, {"text": "This term, with\nAna and John, I'm", "start": 48.27, "duration": 1.59}, {"text": "going to be splitting the\nlectures, so I'm up to date.", "start": 49.86, "duration": 3.21}, {"text": "OK last time Ana introduced\nthe first of the compound data", "start": 53.07, "duration": 5.04}, {"text": "types, tuples and lists.", "start": 58.11, "duration": 3.06}, {"text": "She showed lots of ways\nof manipulating them,", "start": 61.17, "duration": 2.53}, {"text": "lots of built in things for\nmanipulating those structures.", "start": 63.7, "duration": 3.054}, {"text": "And the key difference\nbetween the two of them", "start": 66.754, "duration": 1.916}, {"text": "was that tuples were immutable,\nmeaning you could not", "start": 68.67, "duration": 3.24}, {"text": "change them, lists\nwere mutable, they", "start": 71.91, "duration": 2.4}, {"text": "could be changed, or mutated.", "start": 74.31, "duration": 1.98}, {"text": "And that led to both some nice\npower and some opportunities", "start": 76.29, "duration": 3.03}, {"text": "for challenges.", "start": 79.32, "duration": 1.09}, {"text": "And, in particular, she showed\nyou things like aliasing,", "start": 80.41, "duration": 2.96}, {"text": "where you could have two names\npointing to the same list", "start": 83.37, "duration": 2.37}, {"text": "structure, and\nbecause of that, you", "start": 85.74, "duration": 1.62}, {"text": "could change the\ncontents of one,", "start": 87.36, "duration": 2.16}, {"text": "it would change the appearance\nof the contents of the other,", "start": 89.52, "duration": 3.42}, {"text": "and that leads to\nsome nice challenges.", "start": 92.94, "duration": 1.95}, {"text": "So the side effects\nof mutability", "start": 94.89, "duration": 1.53}, {"text": "are one of the things you're\ngoing to see, both as a plus", "start": 96.42, "duration": 2.375}, {"text": "and minus, as we go\nthrough the course.", "start": 98.795, "duration": 3.565}, {"text": "Today we're going to take\na different direction", "start": 102.36, "duration": 3.147}, {"text": "for a little while, we're\ngoing to talk about recursion.", "start": 105.507, "duration": 2.333}, {"text": "It Is a powerful\nand wonderful tool", "start": 107.84, "duration": 2.11}, {"text": "for solving\ncomputational problems.", "start": 109.95, "duration": 3.0}, {"text": "We're then going to look at\nanother kind of compound data", "start": 112.95, "duration": 3.51}, {"text": "structure, a dictionary,\nwhich is also mutable.", "start": 116.46, "duration": 2.75}, {"text": "And then we're going to put the\ntwo pieces together and show", "start": 119.21, "duration": 2.5}, {"text": "how together they actually\ngive you a lot of power", "start": 121.71, "duration": 2.19}, {"text": "for solving some really neat\nproblems very effectively.", "start": 123.9, "duration": 4.6}, {"text": "But I want to start\nwith recursion.", "start": 128.5, "duration": 3.11}, {"text": "Perhaps one of the most\nmysterious, at least according", "start": 131.61, "duration": 2.34}, {"text": "to programmer's, concepts in\ncomputer science, one that", "start": 133.95, "duration": 2.55}, {"text": "leads to lots of really\nbad computer science jokes,", "start": 136.5, "duration": 2.34}, {"text": "actually all computer\nscience jokes are bad,", "start": 138.84, "duration": 2.25}, {"text": "but these are particularly bad.", "start": 141.09, "duration": 2.34}, {"text": "So let's start with the obvious\nquestion, what is recursion?", "start": 143.43, "duration": 3.96}, {"text": "If you go to the ultimate\nsource of knowledge, Wikipedia,", "start": 147.39, "duration": 3.87}, {"text": "you get something that\nsays, in essence, recursion", "start": 151.26, "duration": 3.09}, {"text": "is the process of repeating\nitems in a self-similar way.", "start": 154.35, "duration": 5.36}, {"text": "Well that's really\nhelpful, right?", "start": 159.71, "duration": 2.086}, {"text": "But we're going to see that\nidea because recursion,", "start": 161.796, "duration": 2.124}, {"text": "as we're going to\nsee in a second,", "start": 163.92, "duration": 1.416}, {"text": "is the idea of taking a problem\nand reducing it to a smaller", "start": 165.336, "duration": 4.914}, {"text": "version of the same\nproblem, and using that idea", "start": 170.25, "duration": 3.06}, {"text": "to actually tackle a bunch of\nreally interesting problems.", "start": 173.31, "duration": 3.0}, {"text": "But recursion gets used\nin a lot of places.", "start": 176.31, "duration": 1.832}, {"text": "So it's this idea of\nusing, or repeating,", "start": 178.142, "duration": 1.708}, {"text": "the idea multiple times.", "start": 179.85, "duration": 1.95}, {"text": "So wouldn't it be great if your\n3D printer printed 3D printers?", "start": 181.8, "duration": 3.9}, {"text": "And you could just keep\ndoing that all the way along.", "start": 185.7, "duration": 3.51}, {"text": "Or one that's a\nlittle more common,", "start": 189.21, "duration": 1.53}, {"text": "it's actually got\na wonderful name,", "start": 190.74, "duration": 1.458}, {"text": "it's called mise en abyme,\nin art, sometimes referred", "start": 192.198, "duration": 2.772}, {"text": "to as the Droste\neffect, pictures", "start": 194.97, "duration": 2.172}, {"text": "that have inside them a\npicture of the picture, which", "start": 197.142, "duration": 2.208}, {"text": "has inside them a picture of the\npicture, and you get the idea.", "start": 199.35, "duration": 2.94}, {"text": "And of course, one\nof the things you", "start": 202.29, "duration": 1.5}, {"text": "want to think about\nin recursion is not", "start": 203.79, "duration": 1.624}, {"text": "to have it go on infinitely.", "start": 205.414, "duration": 1.968}, {"text": "And yes there are even light\nbulb jokes about recursion,", "start": 207.382, "duration": 2.333}, {"text": "if you can't read\nit, it says, how many", "start": 209.715, "duration": 1.624}, {"text": "twists does it take to\nscrew in a light bulb?", "start": 211.339, "duration": 3.101}, {"text": "And it says, if it's already\nscrewed in, the answer is 0.", "start": 214.44, "duration": 4.17}, {"text": "Otherwise, twist it once, ask\nme again, add 1 to my answer.", "start": 218.61, "duration": 4.17}, {"text": "And that's actually a nice\ndescription of recursion.", "start": 222.78, "duration": 3.69}, {"text": "So let's look at\nit more seriously.", "start": 226.47, "duration": 1.68}, {"text": "What is recursion?", "start": 228.15, "duration": 2.55}, {"text": "I want to describe it both\nabstractly, or algorithmically,", "start": 230.7, "duration": 4.78}, {"text": "and semantically or, if you\nlike, in terms of programming.", "start": 235.48, "duration": 4.37}, {"text": "Abstractly, this is a\ngreat instance of something", "start": 239.85, "duration": 2.82}, {"text": "often called divide-and-conquer,\nor sometimes called", "start": 242.67, "duration": 3.1}, {"text": "decrease-and-conquer.", "start": 245.77, "duration": 1.95}, {"text": "And the idea of\nrecursion is, I want", "start": 247.72, "duration": 1.79}, {"text": "to take a problem I'm trying\nto solve and say, how could I", "start": 249.51, "duration": 3.57}, {"text": "reduce it to a simpler\nversion of the same problem,", "start": 253.08, "duration": 4.069}, {"text": "plus some things\nI know how to do?", "start": 257.149, "duration": 2.045}, {"text": "And then that\nsimpler version, I'm", "start": 259.194, "duration": 1.416}, {"text": "going to reduce\nit again and keep", "start": 260.61, "duration": 1.374}, {"text": "doing that until I get\ndown to a simple case", "start": 261.984, "duration": 2.973}, {"text": "that I can solve directly.", "start": 264.957, "duration": 1.083}, {"text": "That is how we're going to\nthink about designing solutions", "start": 266.04, "duration": 3.66}, {"text": "to problems.", "start": 269.7, "duration": 2.01}, {"text": "Semantically, this is typically\ngoing to lead to the case", "start": 271.71, "duration": 3.45}, {"text": "where a program, a\ndefinition of function,", "start": 275.16, "duration": 3.06}, {"text": "will refer to\nitself in its body.", "start": 278.22, "duration": 3.12}, {"text": "It will call itself\ninside its body.", "start": 281.34, "duration": 3.379}, {"text": "Now, if you remember your\nhigh school geometry teacher,", "start": 284.719, "duration": 2.291}, {"text": "she probably would wrap your\nknuckles, which you're not", "start": 287.01, "duration": 1.8}, {"text": "allowed to do, because\nin things like geometry", "start": 288.81, "duration": 2.172}, {"text": "you can't define something\nin terms of itself, right?", "start": 290.982, "duration": 2.208}, {"text": "That's not allowed.", "start": 293.19, "duration": 1.53}, {"text": "In recursion, this is OK.", "start": 294.72, "duration": 1.74}, {"text": "Our definition of a procedure\ncan in its body call itself,", "start": 296.46, "duration": 4.53}, {"text": "so long as I have what\nI call a base case,", "start": 300.99, "duration": 2.85}, {"text": "a way of stopping that\nunwinding of the problems,", "start": 303.84, "duration": 4.26}, {"text": "when I get to something\nI can solve directly.", "start": 308.1, "duration": 2.545}, {"text": "And so what we're going to do\nis avoid infinite recursion", "start": 310.645, "duration": 2.375}, {"text": "by ensuring that we have\nat least one or more base", "start": 313.02, "duration": 2.19}, {"text": "cases that are easy to solve.", "start": 315.21, "duration": 1.86}, {"text": "And then the basic\nidea is I just", "start": 317.07, "duration": 1.5}, {"text": "want to solve the same\nproblem on some simpler", "start": 318.57, "duration": 2.34}, {"text": "input with the idea\nof using that solution", "start": 320.91, "duration": 2.7}, {"text": "to solve the larger problem.", "start": 323.61, "duration": 2.26}, {"text": "OK, let's look at an\nexample, and to set", "start": 325.87, "duration": 1.997}, {"text": "the stage I'm going to go back\nto something you've been doing,", "start": 327.867, "duration": 2.583}, {"text": "iterative algorithms.", "start": 330.45, "duration": 1.65}, {"text": "For loops, while\nloops, they naturally", "start": 332.1, "duration": 2.07}, {"text": "lead to what we would\ncall iterative algorithms,", "start": 334.17, "duration": 2.31}, {"text": "and these algorithms\ncan be described", "start": 336.48, "duration": 2.04}, {"text": "as being captured by a\nset of state variables,", "start": 338.52, "duration": 3.99}, {"text": "meaning one or more variables\nthat tell us exactly", "start": 342.51, "duration": 3.12}, {"text": "the state of the computation.", "start": 345.63, "duration": 2.26}, {"text": "That's a lot of words,\nlet's look at an example.", "start": 347.89, "duration": 2.857}, {"text": "I know it's trivial,\nbut bear with me.", "start": 350.747, "duration": 1.583}, {"text": "Suppose I want to do\ninteger multiplication,", "start": 352.33, "duration": 2.09}, {"text": "multiply two integers\ntogether, and all", "start": 354.42, "duration": 2.4}, {"text": "I have available\nto me is addition.", "start": 356.82, "duration": 2.26}, {"text": "So a times b is the same as\nadding a to itself b times.", "start": 359.08, "duration": 4.54}, {"text": "If I'm thinking about\nthis iteratively,", "start": 363.62, "duration": 2.32}, {"text": "I could capture this computation\nwith two state variables.", "start": 365.94, "duration": 4.14}, {"text": "One we'd just call\nthe iteration number,", "start": 370.08, "duration": 3.12}, {"text": "and it would be\nsomething, for example,", "start": 373.2, "duration": 2.22}, {"text": "that starts at b, and each time\nthrough the loop reduces 1.", "start": 375.42, "duration": 4.0}, {"text": "One.", "start": 379.42, "duration": 0.5}, {"text": "And it will keep doing that\nuntil I've counted down", "start": 379.92, "duration": 2.16}, {"text": "b times, and I get down to 0.", "start": 382.08, "duration": 2.61}, {"text": "And at the same\ntime, I would have", "start": 384.69, "duration": 1.44}, {"text": "some value of the\ncomputation, I might call it", "start": 386.13, "duration": 1.98}, {"text": "result, which starts at 0,\nfirst time through adds an a,", "start": 388.11, "duration": 4.41}, {"text": "next time through\nadds an a, and it just", "start": 392.52, "duration": 1.8}, {"text": "keeps track of how\nmany things have", "start": 394.32, "duration": 1.92}, {"text": "I added up, until I get done.", "start": 396.24, "duration": 2.399}, {"text": "And yeah, I know you\ncould just do mult,", "start": 398.639, "duration": 1.666}, {"text": "but this is trying\nto get this idea", "start": 400.305, "duration": 1.545}, {"text": "of, how would I do\nthis iteratively.", "start": 401.85, "duration": 3.31}, {"text": "So I might start off with i,\nsaying there are b things still", "start": 405.16, "duration": 5.0}, {"text": "to add, and the result is 1.", "start": 410.16, "duration": 1.2}, {"text": "The first time through the\nloop, I add an a, reduce i by 1.", "start": 411.36, "duration": 3.96}, {"text": "Next time through the\nloop, I add in another a,", "start": 415.32, "duration": 2.19}, {"text": "reduce i by 1, and\nyou get the idea.", "start": 417.51, "duration": 2.17}, {"text": "I just walk down it\nuntil, eventually, I got", "start": 419.68, "duration": 2.3}, {"text": "to the end of this computation.", "start": 421.98, "duration": 3.7}, {"text": "So we could write code\nfor this, and, actually,", "start": 425.68, "duration": 2.01}, {"text": "it should be pretty\nstraightforward.", "start": 427.69, "duration": 1.97}, {"text": "There it is.", "start": 429.66, "duration": 1.51}, {"text": "Going to call it mult_iter,\ntakes in two arguments a and b,", "start": 431.17, "duration": 4.084}, {"text": "and I'm going to capture\nexactly that process.", "start": 435.254, "duration": 1.916}, {"text": "So notice what I\ndo, I set up result", "start": 437.17, "duration": 2.16}, {"text": "internally as just\na little variable", "start": 439.33, "duration": 1.62}, {"text": "I'm going to use to\naccumulate things.", "start": 440.95, "duration": 2.1}, {"text": "And then, there\nis the iteration,", "start": 443.05, "duration": 2.83}, {"text": "as long as b is greater\nthan 0 what do I do?", "start": 445.88, "duration": 3.44}, {"text": "Add a to result, store\nit away, reduce b by 1,", "start": 449.32, "duration": 4.31}, {"text": "and I'll keep doing\nthat until b gets", "start": 453.63, "duration": 1.84}, {"text": "down to being equal\nto 0, in which case", "start": 455.47, "duration": 2.13}, {"text": "I just return the result.\nOK, simple solution.", "start": 457.6, "duration": 6.01}, {"text": "Now, let's think about\nthis a different way.", "start": 463.61, "duration": 4.16}, {"text": "A times b is just adding\na to itself b times,", "start": 467.77, "duration": 3.45}, {"text": "and that's the same as a\nplus adding a to a itself", "start": 471.22, "duration": 6.7}, {"text": "b minus 1 times.", "start": 477.92, "duration": 2.79}, {"text": "OK, that sounds\nlike leisure to me,", "start": 480.71, "duration": 2.07}, {"text": "that sounds like just\nplaying with words.", "start": 482.78, "duration": 2.04}, {"text": "But it's really important,\nbecause what is this?", "start": 484.82, "duration": 3.38}, {"text": "Ah, that's just a\ntimes b minus 1,", "start": 488.2, "duration": 4.67}, {"text": "by the definition\nof the top point.", "start": 492.87, "duration": 2.89}, {"text": "And I know you're\ntotally impressed,", "start": 495.76, "duration": 1.74}, {"text": "but this is actually really\ncool, because what have I done?", "start": 497.5, "duration": 2.92}, {"text": "I've taken one problem,\nthis one up here,", "start": 500.42, "duration": 3.76}, {"text": "and I've reduced it to a simpler\nversion of the same problem,", "start": 504.18, "duration": 3.69}, {"text": "plus some things\nI know how to do.", "start": 507.87, "duration": 2.15}, {"text": "And how would I solve this?", "start": 510.02, "duration": 1.74}, {"text": "Same trick, that's a\ntimes a times b minus 2,", "start": 511.76, "duration": 4.35}, {"text": "I would just unwrap\nit one more time,", "start": 516.11, "duration": 1.62}, {"text": "and I would just keep\ndoing that until I get down", "start": 517.73, "duration": 2.85}, {"text": "to something I can solve\ndirectly, a base case.", "start": 520.58, "duration": 2.89}, {"text": "And that's easy, when b equal\nto 1, the answer is just a.", "start": 523.47, "duration": 3.77}, {"text": "Or I could do when b is equal\nto 0 the answer is just 0.", "start": 527.24, "duration": 4.49}, {"text": "And there's code\nto capture that.", "start": 531.73, "duration": 2.54}, {"text": "Different form, wonderful\ncompact description,", "start": 534.27, "duration": 3.24}, {"text": "what does it say?", "start": 537.51, "duration": 0.76}, {"text": "It says, if I'm at the base\ncase, if b is equal to 1,", "start": 538.27, "duration": 5.2}, {"text": "the answer is just a.", "start": 543.47, "duration": 2.09}, {"text": "Otherwise, I'm going to solve\nthe same problem with a smaller", "start": 545.56, "duration": 4.28}, {"text": "version and add it to a\nand return that result.", "start": 549.84, "duration": 4.92}, {"text": "And that's nice, crisp\ncharacterization of a problem.", "start": 554.76, "duration": 4.21}, {"text": "Recursive definition that\nreduces a problem to a simpler", "start": 558.97, "duration": 2.43}, {"text": "version of the same problem.", "start": 561.4, "duration": 3.03}, {"text": "OK, let's look at\nanother example.", "start": 564.43, "duration": 3.83}, {"text": "Classic problem in recursion\nis to compute factorial,", "start": 568.26, "duration": 2.46}, {"text": "right? n factorial,\nor n bang if you", "start": 570.72, "duration": 1.98}, {"text": "like, n exclamation point\nis n times n minus 1,", "start": 572.7, "duration": 2.88}, {"text": "all the way down to 1.", "start": 575.58, "duration": 0.97}, {"text": "So it's the product of\nall the integers from 1", "start": 576.55, "duration": 2.09}, {"text": "up to n assuming n is\na positive integer.", "start": 578.64, "duration": 3.26}, {"text": "So we can ask the\nsame question if I", "start": 581.9, "duration": 1.53}, {"text": "wanted to solve this recursively\nwhat would the base case be?", "start": 583.43, "duration": 4.26}, {"text": "Well, when n is equal\nto 1, it's just 1.", "start": 587.69, "duration": 4.686}, {"text": "In the recursive case,\nwill n times n minus 1", "start": 592.376, "duration": 2.894}, {"text": "all the way down to 1,\nthat's the same as n times", "start": 595.27, "duration": 3.45}, {"text": "n minus 1 factorial.", "start": 598.72, "duration": 3.28}, {"text": "So I can easily write\nout the base case,", "start": 602.0, "duration": 4.21}, {"text": "and I've got a nice recursive\nsolution to this problem.", "start": 606.21, "duration": 2.58}, {"text": "OK, if you're like me and\nthis is the first time you've", "start": 611.99, "duration": 2.849}, {"text": "seen it, it feels like\nI've taken your head", "start": 614.839, "duration": 1.791}, {"text": "and twisted it\nabout 180 degrees.", "start": 616.63, "duration": 1.71}, {"text": "I'm going to take it another\n180 degrees because you might", "start": 618.34, "duration": 2.622}, {"text": "be saying, well,\nwait a minute, how", "start": 620.962, "duration": 1.458}, {"text": "do you know it really stops.", "start": 622.42, "duration": 1.66}, {"text": "How do you know it really\nterminates the computation?", "start": 624.08, "duration": 3.89}, {"text": "So let's look at it.", "start": 627.97, "duration": 1.44}, {"text": "There is my definition for\nfact, short for factorial.", "start": 629.41, "duration": 4.18}, {"text": "Fact of 1 is, if n is\nequal to 1 return 1,", "start": 633.59, "duration": 2.61}, {"text": "otherwise return n\ntimes fact of n minus 1.", "start": 636.2, "duration": 3.7}, {"text": "And let's use the tools\nthat Ana talked about,", "start": 639.9, "duration": 2.09}, {"text": "in terms of an\nenvironment at a scope,", "start": 641.99, "duration": 2.22}, {"text": "and think about\nwhat happens here.", "start": 644.21, "duration": 2.43}, {"text": "So when I read that in or I\nevaluate that in Python, it", "start": 646.64, "duration": 2.43}, {"text": "creates a definition that binds\nthe name fact to some code,", "start": 649.07, "duration": 4.81}, {"text": "just all of that stuff\nover here plus the name", "start": 653.88, "duration": 2.06}, {"text": "for the formal parameter, hasn't\ndone anything with it yet.", "start": 655.94, "duration": 4.11}, {"text": "And then I'm going to\nevaluate print a fact of 4.", "start": 660.05, "duration": 4.3}, {"text": "Print needs a value, so it has\nto get the value of fact of 4,", "start": 664.35, "duration": 3.346}, {"text": "and we know what that does.", "start": 667.696, "duration": 1.124}, {"text": "It looks up fact, there it\nis, it's procedure definition.", "start": 668.82, "duration": 5.04}, {"text": "So it creates a new\nframe, a new environment,", "start": 673.86, "duration": 2.13}, {"text": "it calls that procedure,\nand inside that frame", "start": 675.99, "duration": 3.3}, {"text": "the formal parameter for fact\nis bound to the value passed in.", "start": 679.29, "duration": 5.02}, {"text": "So n is bound to 4.", "start": 684.31, "duration": 2.28}, {"text": "That frame is scoped\nby this global frame", "start": 686.59, "duration": 2.73}, {"text": "meaning it's going to inherit\nthings in the global frame.", "start": 689.32, "duration": 2.597}, {"text": "And what does it do?", "start": 691.917, "duration": 0.833}, {"text": "It says, inside of this frame\nevaluate the body of fact.", "start": 692.75, "duration": 5.67}, {"text": "OK, so it says as n equal to 1?", "start": 698.42, "duration": 2.91}, {"text": "Nope, it's not, it's 4.", "start": 701.33, "duration": 2.44}, {"text": "So in that case, go to the\nelse statement and says,", "start": 703.77, "duration": 2.46}, {"text": "oh, return n times fact of n\nand n as 4, fact of n minus 1", "start": 706.23, "duration": 4.77}, {"text": "says I need to return\n4 times fact of 3.", "start": 711.0, "duration": 5.53}, {"text": "4 is easy, multiplication\nis easy, fact of 3,", "start": 716.53, "duration": 3.202}, {"text": "ah yes, I look up fact.", "start": 719.732, "duration": 2.348}, {"text": "Now I'm in this frame,\nI don't see fact there,", "start": 722.08, "duration": 2.13}, {"text": "but I go up to that frame.", "start": 724.21, "duration": 1.3}, {"text": "There's the definition\nfor fact, and we're", "start": 725.51, "duration": 2.12}, {"text": "going to do the rest of\nthis a little more quickly,", "start": 727.63, "duration": 1.65}, {"text": "what does that do?", "start": 729.28, "duration": 0.75}, {"text": "It creates a new\nframe called by fact.", "start": 730.03, "duration": 3.57}, {"text": "And the argument passed\nin for n is n minus 1,", "start": 733.6, "duration": 4.37}, {"text": "that value, right there, of 3.", "start": 737.97, "duration": 1.45}, {"text": "So 3 is now bound to n.", "start": 739.42, "duration": 2.87}, {"text": "Same game, evaluate the\nbody is n equal to 1?", "start": 742.29, "duration": 2.917}, {"text": "No, so in that case, I'm going\nto go to the return statement,", "start": 745.207, "duration": 2.903}, {"text": "it says return 3\ntimes fact of 2.", "start": 748.11, "duration": 3.39}, {"text": "And notice it's only\nlooking at this value of n", "start": 751.5, "duration": 2.372}, {"text": "because that's the\nframe in which I'm in.", "start": 753.872, "duration": 1.708}, {"text": "It never sees that value of n.", "start": 755.58, "duration": 3.9}, {"text": "OK, aren't you glad I\ndidn't do fact of 400?", "start": 759.48, "duration": 2.37}, {"text": "We've only got two more to\ngo, but you get the idea.", "start": 761.85, "duration": 2.25}, {"text": "Same thing, I need\nto get fact of 2", "start": 764.1, "duration": 1.67}, {"text": "is going to call fact\nagain with n bound to 2.", "start": 765.77, "duration": 3.07}, {"text": "Relative that evaluates the\nbody and is not yet equal to 1.", "start": 768.84, "duration": 3.15}, {"text": "That says I'm going\nto the else clause", "start": 771.99, "duration": 1.62}, {"text": "and return 2 times fact of 1.", "start": 773.61, "duration": 2.72}, {"text": "I call fact again,\nnow with n bound to 1,", "start": 776.33, "duration": 3.32}, {"text": "and, fortunately, now\nthat clause is true,", "start": 779.65, "duration": 3.44}, {"text": "and it says return 1.", "start": 783.09, "duration": 4.35}, {"text": "Whoops, sorry, before I do,\nso there's the base case.", "start": 787.44, "duration": 3.077}, {"text": "And it may seem apparent to you,\nbut this is important, right?", "start": 790.517, "duration": 2.583}, {"text": "I'm unwinding this\ntill I get to something", "start": 793.1, "duration": 1.92}, {"text": "that can stop the computation.", "start": 795.02, "duration": 2.01}, {"text": "Now I'm simply going to\ngather the computation up,", "start": 797.03, "duration": 2.16}, {"text": "because it says return 1.", "start": 799.19, "duration": 1.11}, {"text": "Who asked for it?", "start": 800.3, "duration": 1.49}, {"text": "Well that call to fact of 1.", "start": 801.79, "duration": 2.3}, {"text": "So that reduces to\nreturn 2 times 1.", "start": 804.09, "duration": 3.26}, {"text": "And who called for that?", "start": 807.35, "duration": 1.29}, {"text": "Fact of 2.", "start": 808.64, "duration": 1.23}, {"text": "That reduces to return a 3 times\n2, which reduces to 4 times", "start": 809.87, "duration": 4.35}, {"text": "6, which reduces\nto printing out 24.", "start": 814.22, "duration": 2.46}, {"text": "So it unwinds it down to\na base case and it stops.", "start": 819.28, "duration": 3.56}, {"text": "A couple of observations, notice\nhow each recursive call creates", "start": 822.84, "duration": 4.83}, {"text": "its own frame, and\nas a consequence,", "start": 827.67, "duration": 2.45}, {"text": "there's no confusion about\nwhich value of n I'm using.", "start": 830.12, "duration": 4.02}, {"text": "Also notice, in the other\nframes, n was not changed.", "start": 834.14, "duration": 2.94}, {"text": "We did not mutate it.", "start": 837.08, "duration": 0.93}, {"text": "So we're literally\ncreating a local scope", "start": 838.01, "duration": 2.01}, {"text": "for that recursive call,\nwhich is exactly what we want.", "start": 840.02, "duration": 3.91}, {"text": "Also notice how there was\na sense of flow of control", "start": 843.93, "duration": 3.65}, {"text": "in computing fact of something,\nthat reduces to returning n", "start": 847.58, "duration": 3.16}, {"text": "times fact of n minus 1, and\nthat creates a new scope.", "start": 850.74, "duration": 4.71}, {"text": "And that will simply\nkeep unwinding", "start": 855.45, "duration": 1.65}, {"text": "until I get to something\nthat can return a value", "start": 857.1, "duration": 2.1}, {"text": "and then I gather all\nthose frames back up.", "start": 859.2, "duration": 2.65}, {"text": "So there's a natural\nflow of control here.", "start": 861.85, "duration": 2.55}, {"text": "But most importantly, there's no\nconfusion about which variable", "start": 864.4, "duration": 2.99}, {"text": "I'm using when I'm\nlooking for a value of n.", "start": 867.39, "duration": 3.201}, {"text": "All right, because this\nis often a place where", "start": 870.591, "duration": 2.368}, {"text": "things get a little confusing,\nI want to do one more example.", "start": 872.959, "duration": 2.541}, {"text": "But let me first\nshow you side by side", "start": 875.5, "duration": 2.82}, {"text": "the two different\nversions of factorial.", "start": 878.32, "duration": 2.096}, {"text": "Actually, I have lied slightly,\nwe didn't show this one earlier", "start": 880.416, "duration": 2.624}, {"text": "but there's factorial if I\nwanted to do it iteratively.", "start": 883.04, "duration": 2.291}, {"text": "I'd set up some\ninitial variable to 1,", "start": 885.331, "duration": 3.199}, {"text": "and then I'd just\nrun through a loop.", "start": 888.53, "duration": 1.77}, {"text": "For example, from 1 up to just\nbelow n minus 1, or 1 up to n,", "start": 890.3, "duration": 4.88}, {"text": "multiplying it and putting\nit back into return product.", "start": 895.18, "duration": 5.33}, {"text": "Which one do you like more?", "start": 900.51, "duration": 2.31}, {"text": "You can't say neither\nyou have to pick one.", "start": 902.82, "duration": 1.98}, {"text": "Show of hands, how many\nof you like this one?", "start": 904.8, "duration": 3.3}, {"text": "Some hesitant ones, how\nmany prefer this one?", "start": 908.1, "duration": 2.608}, {"text": "Yeah, that's my view.", "start": 910.708, "duration": 3.142}, {"text": "I'm biased, but I really\nlike the recursive one.", "start": 913.85, "duration": 2.28}, {"text": "It is crisper to look at,\nyou can see what it's doing.", "start": 916.13, "duration": 3.48}, {"text": "I'm reducing this\nproblem to a simpler", "start": 919.61, "duration": 2.07}, {"text": "version of that problem.", "start": 921.68, "duration": 2.466}, {"text": "Pick your own\nversion but I would", "start": 924.146, "duration": 1.374}, {"text": "argue that the\nrecursive version is", "start": 925.52, "duration": 1.53}, {"text": "more intuitive to understand.", "start": 927.05, "duration": 2.1}, {"text": "From a programmer's\nperspective, it's", "start": 929.15, "duration": 1.92}, {"text": "actually often more\nefficient to write,", "start": 931.07, "duration": 1.8}, {"text": "because I don't have to think\nabout interior variables.", "start": 932.87, "duration": 3.27}, {"text": "Depending on the machine,\nit may not be as efficient", "start": 936.14, "duration": 3.12}, {"text": "when you call it because\nin the recursive version", "start": 939.26, "duration": 2.7}, {"text": "I've got it set up,\nthat set of frames.", "start": 941.96, "duration": 2.4}, {"text": "And some versions\nof these languages", "start": 944.36, "duration": 1.5}, {"text": "are actually very\nefficient about it,", "start": 945.86, "duration": 1.541}, {"text": "some of them a little less so.", "start": 947.401, "duration": 1.305}, {"text": "But given the speed\nof computers today,", "start": 948.706, "duration": 1.624}, {"text": "who cares as long as it actually\njust does the computation.", "start": 950.33, "duration": 4.46}, {"text": "Right, one more example,\nhow do we really", "start": 954.79, "duration": 2.58}, {"text": "know our recursive code works?", "start": 957.37, "duration": 2.354}, {"text": "Well, we just did a\nsimulation but let's", "start": 959.724, "duration": 1.666}, {"text": "look at it one more way.", "start": 961.39, "duration": 2.29}, {"text": "The iterative version,\nwhat can I say about it?", "start": 963.68, "duration": 3.65}, {"text": "Well, I know it's\ngoing to terminate", "start": 967.33, "duration": 2.06}, {"text": "because b is initially\npositive, assuming", "start": 969.39, "duration": 2.13}, {"text": "I gave it an appropriate value.", "start": 971.52, "duration": 2.22}, {"text": "It decreases by 1 every\ntime around this loop,", "start": 973.74, "duration": 2.88}, {"text": "at some point it has to get\nless than 1, it's going to stop.", "start": 976.62, "duration": 3.24}, {"text": "So I can conclude it's\nalways going to terminate.", "start": 979.86, "duration": 3.19}, {"text": "What about the\nrecursive version?", "start": 983.05, "duration": 2.65}, {"text": "Well, if I call it with\nb equal to one, I'm done.", "start": 985.7, "duration": 4.3}, {"text": "If I call it with\nb greater than one,", "start": 990.0, "duration": 3.16}, {"text": "again it's going to reduce it\nby one on the recursive call,", "start": 993.16, "duration": 2.629}, {"text": "which means on each recursive\ncall it's going to reduce", "start": 995.789, "duration": 2.291}, {"text": "and eventually it\ngets down to a place,", "start": 998.08, "duration": 1.897}, {"text": "assuming I gave it a\npositive integer, where", "start": 999.977, "duration": 1.833}, {"text": "b is equal to one.", "start": 1001.81, "duration": 1.53}, {"text": "So it'll stop, which just good.", "start": 1003.34, "duration": 3.7}, {"text": "What we just did was\nwe used the great tool", "start": 1007.04, "duration": 2.34}, {"text": "from math, second best\ndepartment at MIT.", "start": 1009.38, "duration": 5.084}, {"text": "Wow, I didn't even get any\nhisses on that one, John,", "start": 1014.464, "duration": 2.166}, {"text": "all right, and\nI'm now in trouble", "start": 1016.63, "duration": 2.16}, {"text": "with the head of\nthe math department.", "start": 1018.79, "duration": 2.36}, {"text": "So now that I got\nyour attention,", "start": 1021.15, "duration": 1.47}, {"text": "and yes, all computer\nscience jokes are bad,", "start": 1022.62, "duration": 1.979}, {"text": "and mine are really\nbad, but I'm tenured.", "start": 1024.599, "duration": 2.041}, {"text": "You cannot do a\ndamn thing about it.", "start": 1026.64, "duration": 3.874}, {"text": "Let's look at mathematical\ninduction which turns out", "start": 1030.514, "duration": 2.166}, {"text": "to be a tool that lets\nus think about programs", "start": 1032.68, "duration": 2.22}, {"text": "in a really nice way.", "start": 1034.9, "duration": 1.927}, {"text": "You haven't seen\nthis, here's the idea", "start": 1036.827, "duration": 1.583}, {"text": "of mathematical induction.", "start": 1038.41, "duration": 1.199}, {"text": "If I want to prove\na statement, and we", "start": 1039.609, "duration": 2.671}, {"text": "refer to it as being\nindexed on the integers.", "start": 1042.28, "duration": 2.14}, {"text": "In other words, it's some\nmathematical statement", "start": 1044.42, "duration": 2.24}, {"text": "that runs over integers.", "start": 1046.66, "duration": 1.64}, {"text": "If I want to prove it's true for\nall values of those integers,", "start": 1048.3, "duration": 4.36}, {"text": "mathematically I'd do\nit by simply proving", "start": 1052.66, "duration": 1.92}, {"text": "it's true for the smallest\nvalue of n typically", "start": 1054.58, "duration": 3.06}, {"text": "n is equal to 0 or 1, and then\nI do an interesting thing.", "start": 1057.64, "duration": 3.67}, {"text": "I say I need to prove that\nif it's true for an arbitrary", "start": 1061.31, "duration": 3.0}, {"text": "value of n, I'm just going\nto prove that it's also then", "start": 1064.31, "duration": 3.0}, {"text": "true for n plus 1.", "start": 1067.31, "duration": 2.22}, {"text": "And if I can do those\ntwo things I can then", "start": 1069.53, "duration": 1.95}, {"text": "conclude for an infinite\nnumber of values of n", "start": 1071.48, "duration": 2.91}, {"text": "it's always true.", "start": 1074.39, "duration": 1.712}, {"text": "Then we'll relate it back\nto programming in a second,", "start": 1076.102, "duration": 2.208}, {"text": "but let me show you a\nsimple example of this, one", "start": 1078.31, "duration": 2.041}, {"text": "that you may have seen.", "start": 1080.351, "duration": 1.819}, {"text": "If I had the integers from 0 up\nto n, or even from 1 up to n,", "start": 1082.17, "duration": 3.52}, {"text": "I claim that's the same as\nn times n plus 1 over 2.", "start": 1085.69, "duration": 4.47}, {"text": "So 1, 2, 3, that's 6, right.", "start": 1090.16, "duration": 2.06}, {"text": "And that's exactly\nright, 3 times 4,", "start": 1092.22, "duration": 2.34}, {"text": "which is divided by 2,\nwhich gives me out 6.", "start": 1094.56, "duration": 3.18}, {"text": "How would I prove this?", "start": 1097.74, "duration": 2.1}, {"text": "Well, by induction?", "start": 1099.84, "duration": 1.716}, {"text": "I need to do the simple\ncases if n is equal to 0,", "start": 1101.556, "duration": 3.624}, {"text": "well then this side is just 0.", "start": 1105.18, "duration": 1.89}, {"text": "And that's 0 times 1,\nwhich is 0 divided by true.", "start": 1107.07, "duration": 2.52}, {"text": "So 0 equals 0, it's true.", "start": 1109.59, "duration": 2.62}, {"text": "Now the inductive step.", "start": 1112.21, "duration": 2.15}, {"text": "I'm going to assume\nit's true for some k,", "start": 1114.36, "duration": 1.89}, {"text": "I should have picked\nn, but for some k,", "start": 1116.25, "duration": 2.28}, {"text": "and then what I need to show\nis it's true for k plus 1.", "start": 1118.53, "duration": 3.65}, {"text": "Well, there's the\nleft hand side,", "start": 1122.18, "duration": 3.02}, {"text": "and I want to show that\nthis is equal to that.", "start": 1125.2, "duration": 3.65}, {"text": "And I'm going do it by using\nexactly this recursive idea,", "start": 1128.85, "duration": 2.79}, {"text": "because what do I know, I know\nthat this sum, in here, I'm", "start": 1131.64, "duration": 4.02}, {"text": "assuming is true.", "start": 1135.66, "duration": 2.44}, {"text": "And so that says that the left\nhand side, the first portion", "start": 1138.1, "duration": 3.23}, {"text": "of it, is just k\ntimes k plus 1 over 2,", "start": 1141.33, "duration": 2.67}, {"text": "that's the definition of the\nthing I'm assuming is true.", "start": 1144.0, "duration": 2.82}, {"text": "To that I'm going\nto add k plus 1.", "start": 1146.82, "duration": 3.331}, {"text": "Well, you can do\nthe algebra, right?", "start": 1150.151, "duration": 1.499}, {"text": "That's k plus 1\nall times k over 2", "start": 1151.65, "duration": 2.67}, {"text": "plus 1, which is\nk plus 2 over 2.", "start": 1154.32, "duration": 3.93}, {"text": "Oh cool, it's exactly that.", "start": 1158.25, "duration": 3.75}, {"text": "Having done that, I\ncan now conclude this", "start": 1162.0, "duration": 1.92}, {"text": "is true for all values of n.", "start": 1163.92, "duration": 3.77}, {"text": "What does it have to\ndo with programming?", "start": 1167.69, "duration": 3.306}, {"text": "That's exactly what\nwe're doing when we think", "start": 1170.996, "duration": 1.874}, {"text": "about recursive code, right?", "start": 1172.87, "duration": 2.58}, {"text": "We're saying, show that\nit's true for the base case,", "start": 1175.45, "duration": 2.85}, {"text": "and then what I'm\nessentially assuming", "start": 1178.3, "duration": 1.74}, {"text": "is that, if it works for\nvalues smaller than b,", "start": 1180.04, "duration": 4.08}, {"text": "then does the code return\nthe right answer for b?", "start": 1184.12, "duration": 2.7}, {"text": "And the answer is,\nabsolutely it does,", "start": 1186.82, "duration": 1.8}, {"text": "and I'm using induction to\ndeduce that, in fact, my code", "start": 1188.62, "duration": 3.12}, {"text": "does the right thing.", "start": 1191.74, "duration": 2.86}, {"text": "Why am I torturing\nyou with this?", "start": 1194.6, "duration": 2.58}, {"text": "Because this is the way I want\nyou to think about recursion.", "start": 1197.18, "duration": 3.307}, {"text": "When I'm going to\nbreak a problem down", "start": 1200.487, "duration": 1.583}, {"text": "into a smaller version\nof the same problem,", "start": 1202.07, "duration": 1.92}, {"text": "I can assume that the smaller\nversion gives the answer.", "start": 1203.99, "duration": 2.73}, {"text": "All I have to do is make sure\nthat what I combined together", "start": 1206.72, "duration": 2.73}, {"text": "gives me out the right result.", "start": 1209.45, "duration": 3.06}, {"text": "OK, you may be\nwondering what I'm", "start": 1212.51, "duration": 3.44}, {"text": "doing with these wonderful\nhigh tech toys down here.", "start": 1215.95, "duration": 2.55}, {"text": "I want to show you another\nexample of recursion.", "start": 1218.5, "duration": 2.192}, {"text": "So far we've seen simple things\nthat have just had one base", "start": 1220.692, "duration": 2.458}, {"text": "case, and this is a\nmythical story called", "start": 1223.15, "duration": 2.55}, {"text": "The towers of Hanoi and\nthis story, as I heard it,", "start": 1225.7, "duration": 2.34}, {"text": "is there's a temporal\nsomewhere in Hanoi", "start": 1228.04, "duration": 2.49}, {"text": "with three tall spikes and 64\njewel-encrusted golden disks", "start": 1230.53, "duration": 5.1}, {"text": "all of a different size.", "start": 1235.63, "duration": 1.97}, {"text": "They all started out on\none spike with the property", "start": 1237.6, "duration": 2.58}, {"text": "that they were ordered from\nsmallest down to largest.", "start": 1240.18, "duration": 3.39}, {"text": "And there are priests in this\ntemple who are moving the disks", "start": 1243.57, "duration": 2.85}, {"text": "one at a time, one per\nsecond, and their goal", "start": 1246.42, "duration": 2.16}, {"text": "is to move the entire stack\nfrom one spike to another spike.", "start": 1248.58, "duration": 4.69}, {"text": "And when they do\nnirvana is achieved", "start": 1253.27, "duration": 2.49}, {"text": "and we all get a\nreally great life.", "start": 1255.76, "duration": 2.44}, {"text": "We'll talk separately\nabout how long", "start": 1258.2, "duration": 1.59}, {"text": "is this going to take because\nthere's one trick to it.", "start": 1259.79, "duration": 2.25}, {"text": "They can never cover a smaller\ndisk with a larger disk", "start": 1262.04, "duration": 3.34}, {"text": "as they're doing it, so\nthey've got a third disk", "start": 1265.38, "duration": 2.0}, {"text": "as a temporary thing.", "start": 1267.38, "duration": 1.781}, {"text": "And I want to show you\nhow to solve this problem", "start": 1269.161, "duration": 1.999}, {"text": "because you're going to write\ncode with my help in a second,", "start": 1271.16, "duration": 2.22}, {"text": "or I'm going to write\ncode with your help", "start": 1273.38, "duration": 1.38}, {"text": "in a second to solve it.", "start": 1274.76, "duration": 1.0}, {"text": "So let's look at it,\nso watch carefully,", "start": 1275.76, "duration": 2.03}, {"text": "moving a disk of size one,\nwell that's pretty easy, right?", "start": 1277.79, "duration": 4.17}, {"text": "Moving a disk of\nsize two, we'll just", "start": 1281.96, "duration": 1.59}, {"text": "put this one on the spare\none while you move it over", "start": 1283.55, "duration": 2.166}, {"text": "so you don't cover it up.", "start": 1285.716, "duration": 1.134}, {"text": "That's easy.", "start": 1286.85, "duration": 1.8}, {"text": "Moving a disk of\nsize three, you've", "start": 1288.65, "duration": 1.874}, {"text": "got be a little more careful,\nyou can't cover up a smaller", "start": 1290.524, "duration": 2.416}, {"text": "one with a larger one, so\nyou have to really think", "start": 1292.94, "duration": 1.71}, {"text": "about where you're putting it.", "start": 1294.65, "duration": 1.095}, {"text": "It would help with these things\ndidn't juggle and there you go,", "start": 1295.745, "duration": 2.624}, {"text": "you got it done.", "start": 1298.369, "duration": 1.697}, {"text": "All right, you're watching?", "start": 1300.066, "duration": 1.124}, {"text": "You've got to do four.", "start": 1301.19, "duration": 0.75}, {"text": "To do four, again, you've got to\nbe really careful not to cover", "start": 1301.94, "duration": 2.625}, {"text": "things up as you do this.", "start": 1304.565, "duration": 1.605}, {"text": "You want to get the bottom\none eventually exposed,", "start": 1306.17, "duration": 2.19}, {"text": "and so are you going to\npull that one over there.", "start": 1308.36, "duration": 1.45}, {"text": "If you do the\npattern really well,", "start": 1309.81, "duration": 1.25}, {"text": "you won't notice if I make\na serious mistake as I'm", "start": 1311.06, "duration": 2.125}, {"text": "doing this, which I just did.", "start": 1313.185, "duration": 1.425}, {"text": "But I'm going to\nrecover from that", "start": 1314.61, "duration": 1.416}, {"text": "and do it that way to\nput this one over here,", "start": 1316.026, "duration": 2.204}, {"text": "and that one goes there, and\nif I did this in Harvard Square", "start": 1318.23, "duration": 2.629}, {"text": "I could make money.", "start": 1320.859, "duration": 0.791}, {"text": "There you go, right?", "start": 1321.65, "duration": 0.836}, {"text": "OK, got the solution?", "start": 1325.92, "duration": 3.01}, {"text": "See how to solve it?", "start": 1328.93, "duration": 1.27}, {"text": "Could you write code for this?", "start": 1330.2, "duration": 2.4}, {"text": "Eh, maybe not.", "start": 1332.6, "duration": 3.0}, {"text": "That's on the\nquiz, thanks, John,", "start": 1335.6, "duration": 1.5}, {"text": "don't tell them\non the quiz, damn.", "start": 1337.1, "duration": 2.1}, {"text": "All right, I want to claim\nthough that in fact there's", "start": 1339.2, "duration": 3.99}, {"text": "a beautiful recursive solution.", "start": 1343.19, "duration": 3.379}, {"text": "And here's the way to\nthink about it recursively.", "start": 1346.569, "duration": 2.041}, {"text": "I want to move a\ntower of size n,", "start": 1348.61, "duration": 3.13}, {"text": "I'm going to assume I\ncan move smaller towers", "start": 1351.74, "duration": 2.017}, {"text": "and then it's really easy.", "start": 1353.757, "duration": 1.083}, {"text": "What do I do, I take a\nstack of size n minus 1,", "start": 1354.84, "duration": 3.02}, {"text": "I move it onto the spare one,\nI move the bottom one over,", "start": 1357.86, "duration": 3.42}, {"text": "and then I move a\nstack of size n minus 1", "start": 1361.28, "duration": 2.81}, {"text": "to there, beautiful,\nrecursive solution.", "start": 1364.09, "duration": 3.65}, {"text": "And how do I move\nthe smaller stack?", "start": 1367.74, "duration": 1.5}, {"text": "Just the same way,\nI just unwind it,", "start": 1369.24, "duration": 3.77}, {"text": "simple, and, in fact, the\ncode follows exactly that.", "start": 1373.01, "duration": 5.84}, {"text": "OK, I do a little\n[INAUDIBLE] domain up here", "start": 1378.85, "duration": 2.23}, {"text": "to try and get your\nattention, but notice", "start": 1381.08, "duration": 2.22}, {"text": "by doing that what did I do?", "start": 1383.3, "duration": 1.581}, {"text": "I asked you to think\nabout it recursively,", "start": 1384.881, "duration": 1.749}, {"text": "the recursive solution,\nwhen you see it,", "start": 1386.63, "duration": 2.31}, {"text": "is in fact very straightforward,\nand there's the code.", "start": 1388.94, "duration": 4.87}, {"text": "Dead trivial, well,\nthat trivial is unfair,", "start": 1393.81, "duration": 1.95}, {"text": "but it's very simple.", "start": 1395.76, "duration": 1.08}, {"text": "Right?", "start": 1396.84, "duration": 0.6}, {"text": "I simply write something,\nso let me describe it,", "start": 1397.44, "duration": 2.61}, {"text": "I need to say how big\nof tower am I moving", "start": 1400.05, "duration": 2.19}, {"text": "and I'm going to label the\nthree stacks a from, a to,", "start": 1402.24, "duration": 3.34}, {"text": "and a spare.", "start": 1405.58, "duration": 1.344}, {"text": "I have a little procedure\nthat just prints out", "start": 1406.924, "duration": 1.916}, {"text": "the move for me, and\nthen what's the solution?", "start": 1408.84, "duration": 3.81}, {"text": "If it's just a stack of size\none, just print the move,", "start": 1412.65, "duration": 2.7}, {"text": "take it to from--\nfrom from to to.", "start": 1415.35, "duration": 2.67}, {"text": "Otherwise, move a\ntower of size n minus 1", "start": 1418.02, "duration": 3.29}, {"text": "from the from spot to\nthe spare spot, then move", "start": 1421.31, "duration": 5.35}, {"text": "what's left of tower\nsize one from to two,", "start": 1426.66, "duration": 2.97}, {"text": "and then take that\nthing are stuck on spare", "start": 1429.63, "duration": 2.22}, {"text": "and move it over to\ntwo, and I'm done.", "start": 1431.85, "duration": 4.65}, {"text": "In that code that we handed\nout, you'll see this code,", "start": 1436.5, "duration": 2.785}, {"text": "you can run it.", "start": 1439.285, "duration": 0.625}, {"text": "I'm not going to print\nit out because, if I did,", "start": 1439.91, "duration": 1.4}, {"text": "you are just going\nto say, OK, it", "start": 1441.31, "duration": 1.49}, {"text": "looks like it does the\nright kind of thing.", "start": 1442.8, "duration": 2.17}, {"text": "Look at the code, nice\nand easy, and that's", "start": 1444.97, "duration": 3.226}, {"text": "what we like you to do when\nyou're given a problem.", "start": 1448.196, "duration": 2.124}, {"text": "We asked you to think\nabout recursively.", "start": 1450.32, "duration": 1.666}, {"text": "How do I solve\nthis with a smaller", "start": 1451.986, "duration": 1.804}, {"text": "version of the same problem?", "start": 1453.79, "duration": 2.13}, {"text": "And then how do I use that\nto build the larger solution?", "start": 1455.92, "duration": 3.39}, {"text": "This case is a little different.", "start": 1459.31, "duration": 2.08}, {"text": "You could argue that\nthis is not really", "start": 1461.39, "duration": 1.64}, {"text": "a recursive call here, it's\njust moving the bottom one,", "start": 1463.03, "duration": 2.291}, {"text": "I could have done that directly.", "start": 1465.321, "duration": 1.549}, {"text": "But I've got two recursive\ncalls in the body here.", "start": 1466.87, "duration": 4.55}, {"text": "I have to move a\nsmaller stack twice.", "start": 1471.42, "duration": 2.29}, {"text": "We're going to come back\nto that in a little bit.", "start": 1473.71, "duration": 4.16}, {"text": "Let me show you one other\nexample of recursion that", "start": 1477.87, "duration": 2.85}, {"text": "runs a little bit differently.", "start": 1480.72, "duration": 2.495}, {"text": "In this case it's going to\nhave multiple base cases", "start": 1483.215, "duration": 2.125}, {"text": "and this is another\nvery old problem,", "start": 1485.34, "duration": 1.29}, {"text": "it's called the\nFibonacci numbers.", "start": 1486.63, "duration": 1.416}, {"text": "It's based on something\nfrom several centuries", "start": 1488.046, "duration": 2.304}, {"text": "ago when a gentleman,\nnamed Leonardo of Pisa,", "start": 1490.35, "duration": 2.25}, {"text": "also known as Fibonacci,\nasked the following challenge.", "start": 1492.6, "duration": 3.75}, {"text": "He said, I'm going to put\na newborn pair of rabbits,", "start": 1496.35, "duration": 2.22}, {"text": "one male and one female, into an\nenclosure, a pan of some sort.", "start": 1498.57, "duration": 4.3}, {"text": "And the rabbits have the\nfollowing properties,", "start": 1502.87, "duration": 2.42}, {"text": "they mate at age one month, so\nthey take a month to mature.", "start": 1505.29, "duration": 4.37}, {"text": "After a one month\ngestation period,", "start": 1509.66, "duration": 1.99}, {"text": "they produce another pair of\nrabbits, a male and a female,", "start": 1511.65, "duration": 3.9}, {"text": "and he says I'm going to assume\nthat the rabbits never die.", "start": 1515.55, "duration": 3.48}, {"text": "So each month mature females are\ngoing to produce another pair.", "start": 1519.03, "duration": 3.15}, {"text": "And his question was, how\nmany female rabbits are there", "start": 1522.18, "duration": 2.49}, {"text": "at the end of a year, or\ntwo years, or three years?", "start": 1524.67, "duration": 2.74}, {"text": "The idea is, I start off\nwith two immature rabbits,", "start": 1530.04, "duration": 3.65}, {"text": "after one month\nthey've matured, which", "start": 1533.69, "duration": 2.58}, {"text": "means after another month, they\nwill have produced a new pair.", "start": 1536.27, "duration": 5.43}, {"text": "After another month, that mature\npair has produced another pair,", "start": 1541.7, "duration": 3.06}, {"text": "and the immature\npair has matured.", "start": 1544.76, "duration": 3.18}, {"text": "Which means, after\nanother month,", "start": 1547.94, "duration": 1.59}, {"text": "those two mature pairs are\ngoing to produce offspring,", "start": 1549.53, "duration": 4.24}, {"text": "and that immature\npair has matured.", "start": 1553.77, "duration": 2.7}, {"text": "And you get the idea,\nand after several months,", "start": 1556.47, "duration": 3.33}, {"text": "you get to Australia.", "start": 1559.8, "duration": 1.352}, {"text": "You can also see this is going\nto be interesting to think", "start": 1563.175, "duration": 2.375}, {"text": "about how do you compute this,\nbut what I want you to see", "start": 1565.55, "duration": 1.95}, {"text": "is the recursive solution to it.", "start": 1567.5, "duration": 1.41}, {"text": "So how could we capture this?", "start": 1568.91, "duration": 3.0}, {"text": "Well here's another way\nof thinking about it,", "start": 1571.91, "duration": 2.22}, {"text": "after the first\nmonth, and I know", "start": 1574.13, "duration": 1.41}, {"text": "we're going to do\nthis funny thing,", "start": 1575.54, "duration": 1.458}, {"text": "we're going to index it\n0, so call it month 0.", "start": 1576.998, "duration": 1.962}, {"text": "There is 1 female\nwhich is immature.", "start": 1578.96, "duration": 3.08}, {"text": "After the second\nmonth, that female", "start": 1582.04, "duration": 2.24}, {"text": "is mature and now pregnant which\nmeans after the third month it", "start": 1584.28, "duration": 4.59}, {"text": "has produced an offspring.", "start": 1588.87, "duration": 2.57}, {"text": "And more generally,\nthat the n-th month,", "start": 1591.44, "duration": 3.3}, {"text": "after we get past the first\nfew cases, what do we have?", "start": 1594.74, "duration": 3.52}, {"text": "Any female that was\nthere two months ago", "start": 1598.26, "duration": 3.21}, {"text": "has produced an offspring.", "start": 1601.47, "duration": 2.69}, {"text": "Because it's taken at\nleast one month to mature,", "start": 1604.16, "duration": 2.05}, {"text": "if it hasn't\nalready been mature,", "start": 1606.21, "duration": 1.375}, {"text": "and then it's going to\nproduce an offspring.", "start": 1607.585, "duration": 1.985}, {"text": "And any female that\nwas around last month", "start": 1609.57, "duration": 3.24}, {"text": "is still around because\nthey never die off.", "start": 1612.81, "duration": 2.52}, {"text": "So this is a little different.", "start": 1615.33, "duration": 1.28}, {"text": "This is now the number\nof females at month n", "start": 1616.61, "duration": 3.46}, {"text": "is the number of females\nT month n minus 1,", "start": 1620.07, "duration": 2.13}, {"text": "plus the number of females\nand month n minus 2.", "start": 1622.2, "duration": 3.4}, {"text": "So two recursive calls, but\nwith different arguments.", "start": 1625.6, "duration": 5.29}, {"text": "Different from towers of Hanoi,\nwhere there were two recursive", "start": 1630.89, "duration": 3.54}, {"text": "calls, but with the\nsame sized problem.", "start": 1634.43, "duration": 1.77}, {"text": "So now I need two\nbase cases, one", "start": 1639.67, "duration": 3.29}, {"text": "for when n is equal to 0,\none for when n is equal to 1.", "start": 1642.96, "duration": 4.0}, {"text": "And then I've got\nthat recursive case,", "start": 1646.96, "duration": 2.85}, {"text": "so there's a nice\nlittle piece of code.", "start": 1649.81, "duration": 4.352}, {"text": "Fibonacci, I'm going to assume\nx is an integer greater than", "start": 1654.162, "duration": 2.458}, {"text": "or equal to 0.", "start": 1656.62, "duration": 0.64}, {"text": "I'm going to return\nFibonacci of x.", "start": 1657.26, "duration": 2.15}, {"text": "And you can see now it says,\nif either x is equal to 0", "start": 1659.41, "duration": 3.45}, {"text": "or x is equal to 1\nI'm going to return 1,", "start": 1662.86, "duration": 3.0}, {"text": "otherwise, reduce it to two\nsimpler versions of the problem", "start": 1665.86, "duration": 4.95}, {"text": "but with different\narguments, and I add them up.", "start": 1670.81, "duration": 4.66}, {"text": "OK, and if we go look at this,\nwe can actually run this,", "start": 1675.47, "duration": 4.16}, {"text": "if I can find my code.", "start": 1679.63, "duration": 1.835}, {"text": "Which is right there,\nand I'm just going to,", "start": 1681.465, "duration": 8.335}, {"text": "so we can, for example,\ncheck it by saying fib of 0.", "start": 1689.8, "duration": 3.21}, {"text": "I just hit a bug\nwhich I don't see.", "start": 1701.076, "duration": 2.224}, {"text": "Let me try it again.", "start": 1707.044, "duration": 1.156}, {"text": "I'll try it one more\ntime with fib of 0.", "start": 1712.58, "duration": 3.0}, {"text": "Darn, it's wrong, let me try it.", "start": 1721.45, "duration": 7.737}, {"text": "I've got two different\nversions of fib", "start": 1729.187, "duration": 1.583}, {"text": "in here, that's what\nI've got going on.", "start": 1730.77, "duration": 1.29}, {"text": "So let me do it again,\nlet's do fib of 1.", "start": 1732.06, "duration": 1.835}, {"text": "There we go, fib of 2 which\nis 2, fib of 3 just three,", "start": 1733.895, "duration": 5.365}, {"text": "and fib of 4 which should\nadd the previous two, which", "start": 1739.26, "duration": 2.4}, {"text": "gives me 5.", "start": 1741.66, "duration": 0.831}, {"text": "There we go.", "start": 1742.491, "duration": 0.499}, {"text": "Sorry about that, I\nhad two versions of fib", "start": 1742.99, "duration": 2.09}, {"text": "in my file, which is\nwhy it complained at me.", "start": 1745.08, "duration": 2.844}, {"text": "And which is why\nyou should always", "start": 1747.924, "duration": 1.416}, {"text": "read the error instructions\nbecause it tells you", "start": 1749.34, "duration": 2.0}, {"text": "what you did wrong.", "start": 1751.34, "duration": 2.42}, {"text": "Let's go on and look at one\nmore example of doing recursion,", "start": 1753.76, "duration": 3.567}, {"text": "and we're going to\ndo dictionaries,", "start": 1757.327, "duration": 1.458}, {"text": "and then we're going to\npull it all together.", "start": 1758.785, "duration": 2.635}, {"text": "So far we've been doing\nrecursion on numerical things,", "start": 1761.42, "duration": 3.52}, {"text": "we can do it on\nnon-numerical things.", "start": 1764.94, "duration": 1.79}, {"text": "So a nice way of\nthinking about this is,", "start": 1766.73, "duration": 1.86}, {"text": "how would I tell if a string\nof characters is a palindrome?", "start": 1768.59, "duration": 2.76}, {"text": "Meaning it reads the same\nbackwards and forwards.", "start": 1771.35, "duration": 2.89}, {"text": "Probably the most\nfamous palindrome", "start": 1774.24, "duration": 1.71}, {"text": "is attributed to Napoleon\n\"Able was I ere I saw Elba.\"", "start": 1775.95, "duration": 3.99}, {"text": "Given that Napoleon\nwas French, I really", "start": 1779.94, "duration": 1.83}, {"text": "doubt he said \"Able\nwas I ere I saw Elba,\"", "start": 1781.77, "duration": 2.27}, {"text": "but it's a great palindrome.", "start": 1784.04, "duration": 1.95}, {"text": "Or another one attributed\nto Anne Michaels", "start": 1785.99, "duration": 1.87}, {"text": "\"Are we not drawn we few\ndrawn onward to a new era,\"", "start": 1787.86, "duration": 5.07}, {"text": "reads the same\nbackwards and forwards.", "start": 1792.93, "duration": 2.49}, {"text": "It's fun to think about how\ndo you create the palindromes.", "start": 1795.42, "duration": 3.14}, {"text": "I want to write\ncode to solve this.", "start": 1798.56, "duration": 3.167}, {"text": "Again, I want to think\nabout it recursively,", "start": 1801.727, "duration": 1.833}, {"text": "so here's what I'm going to do.", "start": 1803.56, "duration": 1.67}, {"text": "I'm first going to take\na string of characters,", "start": 1805.23, "duration": 3.0}, {"text": "reduce them all to\nlowercase, and strip out", "start": 1808.23, "duration": 2.7}, {"text": "spaces and punctuation.", "start": 1810.93, "duration": 1.36}, {"text": "I just want the characters.", "start": 1812.29, "duration": 3.17}, {"text": "And once I got\nthat, I want to say,", "start": 1815.46, "duration": 1.65}, {"text": "is that string, that\nlist of characters", "start": 1817.11, "duration": 2.04}, {"text": "or that collection of characters\nas I should say, a palindrome?", "start": 1819.15, "duration": 3.73}, {"text": "And I'm going to think\nabout it recursively,", "start": 1822.88, "duration": 2.06}, {"text": "and that's actually pretty easy.", "start": 1824.94, "duration": 2.81}, {"text": "If it's either 0 or 1\nlong, it's a palindrome.", "start": 1827.75, "duration": 4.57}, {"text": "Otherwise you could think\nabout having an index", "start": 1832.32, "duration": 2.254}, {"text": "at each end of this thing\nand sort of counting", "start": 1834.574, "duration": 1.916}, {"text": "into the middle,\nbut it's much easier", "start": 1836.49, "duration": 1.83}, {"text": "to say take the two at the\nend, if they're the same,", "start": 1838.32, "duration": 3.61}, {"text": "then check to see what's left\nin the middle is a palindrome,", "start": 1841.93, "duration": 2.96}, {"text": "and if those two properties\nare true, I'm done.", "start": 1844.89, "duration": 3.28}, {"text": "And notice what I just did I\nnicely reduced a bigger problem", "start": 1848.17, "duration": 3.77}, {"text": "to a slightly smaller problem.", "start": 1851.94, "duration": 1.25}, {"text": "It's exactly what I want to do.", "start": 1853.19, "duration": 2.92}, {"text": "OK?", "start": 1856.11, "duration": 1.08}, {"text": "So it says to check is\nthis, I'm going to reduce it", "start": 1857.19, "duration": 3.516}, {"text": "to just the string\nof characters,", "start": 1860.706, "duration": 1.374}, {"text": "and then I'm going to check if\nthat's a palindrome by pulling", "start": 1862.08, "duration": 2.541}, {"text": "those two off and checking\nto see they're the same,", "start": 1864.621, "duration": 2.899}, {"text": "and then checking to see if the\nmiddle is itself a palindrome.", "start": 1867.52, "duration": 3.451}, {"text": "How would I write it?", "start": 1874.66, "duration": 1.384}, {"text": "I'm going to create a procedure\nup here, isPalindrome.", "start": 1876.044, "duration": 3.718}, {"text": "I'm going to have inside of it\ntwo internal procedures that", "start": 1879.762, "duration": 2.458}, {"text": "do the work for me.", "start": 1882.22, "duration": 0.81}, {"text": "The first one is simply\ngoing to reduce this", "start": 1883.03, "duration": 2.97}, {"text": "to all lowercase with no spaces.", "start": 1886.0, "duration": 2.22}, {"text": "And notice what I can do because\ns is a string of characters.", "start": 1888.22, "duration": 4.14}, {"text": "I can use the built in string\nmethod lower, so there's", "start": 1892.36, "duration": 3.33}, {"text": "that dot notation, s.lower.", "start": 1895.69, "duration": 2.04}, {"text": "It says. apply the\nmethod lower to a string.", "start": 1897.73, "duration": 2.67}, {"text": "I need an open and close\nper end to actually call", "start": 1900.4, "duration": 2.64}, {"text": "that procedure, and\nthat will mutate", "start": 1903.04, "duration": 2.34}, {"text": "s to just be all lowercase.", "start": 1905.38, "duration": 2.874}, {"text": "And then I'm going\nto run a little loop,", "start": 1908.254, "duration": 1.666}, {"text": "I'll set up answer or ans\nto be an empty string,", "start": 1909.92, "duration": 2.58}, {"text": "and then, for everything\ninside that mutated string,", "start": 1912.5, "duration": 3.56}, {"text": "I'll simply say, if it's inside\nthis string, if it's a letter,", "start": 1916.06, "duration": 5.51}, {"text": "add it into answer.", "start": 1921.57, "duration": 1.59}, {"text": "If it's a space or comma or\nsomething else I'll ignore it,", "start": 1923.16, "duration": 2.58}, {"text": "and when I'm done\njust return answer,", "start": 1925.74, "duration": 2.16}, {"text": "strips it down to lowercase.", "start": 1927.9, "duration": 2.55}, {"text": "And then I'm going to pass that\ninto isPal which simply says,", "start": 1930.45, "duration": 4.36}, {"text": "if this is either\n0 or 1 long, it's", "start": 1934.81, "duration": 2.97}, {"text": "a palindrome, returned true.", "start": 1937.78, "duration": 2.19}, {"text": "Otherwise, check to see that\nthe first and last element", "start": 1939.97, "duration": 4.53}, {"text": "of the string are\nthe same, notice", "start": 1944.5, "duration": 2.13}, {"text": "the indexing to get\ninto the last element,", "start": 1946.63, "duration": 2.46}, {"text": "and similarly just\nslice into the string,", "start": 1949.09, "duration": 2.22}, {"text": "ignoring the first and\nlast element, and ask", "start": 1951.31, "duration": 2.82}, {"text": "is that a palindrome.", "start": 1954.13, "duration": 2.75}, {"text": "And then just call it,\nand that will do it.", "start": 1956.88, "duration": 3.231}, {"text": "And again there's a nice example\nof that in the code I'm not", "start": 1960.111, "duration": 2.499}, {"text": "going to run it, I'll let\nyou just go look at it,", "start": 1962.61, "duration": 1.5}, {"text": "but it will actually pull\nout something that checks,", "start": 1964.11, "duration": 2.166}, {"text": "is this a palindrome.", "start": 1966.276, "duration": 2.244}, {"text": "Notice again, what\nI'm doing here.", "start": 1968.52, "duration": 2.89}, {"text": "I'm doing divide-and-conquer.", "start": 1971.41, "duration": 1.46}, {"text": "I'm taking a problem reducing\nit, I keep saying this,", "start": 1972.87, "duration": 2.52}, {"text": "to a simpler version\nof the same problem.", "start": 1975.39, "duration": 2.31}, {"text": "Keep unwinding it\ntill I get down", "start": 1977.7, "duration": 1.65}, {"text": "to something I can\nsolve directly,", "start": 1979.35, "duration": 1.51}, {"text": "my base case and I'm done.", "start": 1980.86, "duration": 2.46}, {"text": "And that's really\nthe heart of thinking", "start": 1983.32, "duration": 1.85}, {"text": "about recursive\nsolutions to problems.", "start": 1985.17, "duration": 2.912}, {"text": "I would hope that one of\nthe things I remember,", "start": 1988.082, "duration": 1.958}, {"text": "besides my really\nlousy patter up here,", "start": 1990.04, "duration": 2.73}, {"text": "is the idea of Towers of\nHanoi, because to me it's", "start": 1992.77, "duration": 2.37}, {"text": "one of the nicest\nexamples of a problem that", "start": 1995.14, "duration": 2.25}, {"text": "would be hard to\nsolve iteratively,", "start": 1997.39, "duration": 2.79}, {"text": "but when you see the\nrecursive solution is", "start": 2000.18, "duration": 2.07}, {"text": "pretty straightforward.", "start": 2002.25, "duration": 1.32}, {"text": "Keep that in mind as you\nthink about doing recursion.", "start": 2003.57, "duration": 4.44}, {"text": "OK, let's switch\ngears, and let's", "start": 2008.01, "duration": 2.19}, {"text": "talk very briefly about\nanother kind of data type", "start": 2010.2, "duration": 2.73}, {"text": "called a dictionary.", "start": 2012.93, "duration": 1.747}, {"text": "And the idea of a\ndictionary I'm going", "start": 2014.677, "duration": 1.583}, {"text": "to motivate with\na simple example.", "start": 2016.26, "duration": 2.59}, {"text": "There's a quiz coming\nup on Thursday.", "start": 2018.85, "duration": 1.73}, {"text": "I know you don't\nwant to hear that,", "start": 2020.58, "duration": 0.97}, {"text": "but there is, which means we're\ngoing to be recording grades.", "start": 2021.55, "duration": 2.57}, {"text": "And so imagine I wanted to\nbuild a little database just", "start": 2024.12, "duration": 2.46}, {"text": "to keep track of\ngrades of students.", "start": 2026.58, "duration": 2.346}, {"text": "So one of the ways\nI could do it,", "start": 2028.926, "duration": 1.374}, {"text": "I could create a list with\nthe names of the students,", "start": 2030.3, "duration": 2.83}, {"text": "I could create another\nlist with their grades,", "start": 2033.13, "duration": 2.45}, {"text": "and a third list with the\nactual subject or course", "start": 2035.58, "duration": 3.07}, {"text": "from which they got that great.", "start": 2038.65, "duration": 2.731}, {"text": "I keep a separate list\nfor each one of them,", "start": 2041.381, "duration": 2.249}, {"text": "keep them of the same\nlength, and in essence,", "start": 2043.63, "duration": 2.23}, {"text": "what I'm doing here is\nI'm storing information", "start": 2045.86, "duration": 2.93}, {"text": "at the same index in each list.", "start": 2048.79, "duration": 4.96}, {"text": "So Ana, who's going to have to\ntake the class again, gets a B,", "start": 2053.75, "duration": 3.15}, {"text": "John, who's created the class,\ngets an A plus, Sorry Ana,", "start": 2056.9, "duration": 3.85}, {"text": "John's had a longer time at it.", "start": 2060.75, "duration": 2.38}, {"text": "All right, bad jokes\naside, what I'm doing", "start": 2063.13, "duration": 1.75}, {"text": "is I can imagine\njust creating lists.", "start": 2064.88, "duration": 1.44}, {"text": "I could create lists of\nlists, but a simple way", "start": 2066.32, "duration": 1.958}, {"text": "is to do lists where\nbasically at each index", "start": 2068.278, "duration": 3.082}, {"text": "I've got associated information.", "start": 2071.36, "duration": 3.18}, {"text": "It's a simple way\nto deal with it.", "start": 2074.54, "duration": 2.56}, {"text": "Getting a grade out takes\na little bit of work", "start": 2077.1, "duration": 2.22}, {"text": "because if I want to\nget the grade associated", "start": 2079.32, "duration": 2.069}, {"text": "with a particular\nstudent, what would I do?", "start": 2081.389, "duration": 2.911}, {"text": "I would go into the name list\nand use the method index, which", "start": 2084.3, "duration": 4.31}, {"text": "you've seen before, again\nnotice the dot notation", "start": 2088.61, "duration": 2.25}, {"text": "it says, this is a list,\nuse the index method,", "start": 2090.86, "duration": 3.0}, {"text": "call it on student, and\nwhatever the value of student", "start": 2093.86, "duration": 3.089}, {"text": "is, it will find\nthat in the list,", "start": 2096.949, "duration": 1.441}, {"text": "return the index at\nthat point, and then I", "start": 2098.39, "duration": 3.24}, {"text": "can use that to go in and\nget the grade in the course", "start": 2101.63, "duration": 3.06}, {"text": "and return something out.", "start": 2104.69, "duration": 3.42}, {"text": "Simple way to do it but\na little ugly, right,", "start": 2108.11, "duration": 2.919}, {"text": "because among other\nthings, I've got things", "start": 2111.029, "duration": 1.791}, {"text": "stored in different\nplaces in the list.", "start": 2112.82, "duration": 2.112}, {"text": "I've got to think about if\nI'm going to add something", "start": 2114.932, "duration": 2.208}, {"text": "to the list I've got to put them\nin the same spot in the list.", "start": 2117.14, "duration": 2.97}, {"text": "I've got to remember to\nalways index using integers", "start": 2120.11, "duration": 2.61}, {"text": "which is what we know how to\ndo with lists, at least so far.", "start": 2122.72, "duration": 5.17}, {"text": "It would be nice if I had\na better way to do it,", "start": 2127.89, "duration": 2.161}, {"text": "and that's exactly\nwhat a dictionary", "start": 2130.051, "duration": 1.499}, {"text": "is going to provide for me.", "start": 2131.55, "duration": 2.08}, {"text": "So rather than\nindexing on integers", "start": 2133.63, "duration": 2.61}, {"text": "I'd like to index directly\non the item of interest.", "start": 2136.24, "duration": 2.55}, {"text": "I'd like to say\nwhere's Ana's record", "start": 2138.79, "duration": 2.55}, {"text": "and find that in\none data structure.", "start": 2141.34, "duration": 2.65}, {"text": "And so, whereas a list\nis indexed by integers,", "start": 2143.99, "duration": 3.05}, {"text": "and has elements associated\nwith it, a dictionary is going", "start": 2147.04, "duration": 3.84}, {"text": "to combine a key, or if you\nlike, a name of some sort,", "start": 2150.88, "duration": 4.79}, {"text": "with an actual value.", "start": 2155.67, "duration": 1.53}, {"text": "And we're going to\nindex just by the name", "start": 2157.2, "duration": 1.95}, {"text": "or the label as we go into it.", "start": 2159.15, "duration": 3.41}, {"text": "So let me show\nyou some examples.", "start": 2162.56, "duration": 2.65}, {"text": "First of all, to create a\ndictionary I use curly braces,", "start": 2165.21, "duration": 2.54}, {"text": "open closed curly brace,\nso an empty dictionary", "start": 2167.75, "duration": 2.04}, {"text": "would be simply that call.", "start": 2169.79, "duration": 1.76}, {"text": "If I want to create\nan actual dictionary,", "start": 2171.55, "duration": 2.35}, {"text": "before I insert\nthings into it, I", "start": 2173.9, "duration": 1.53}, {"text": "use a little bit of\na funky notation.", "start": 2175.43, "duration": 2.52}, {"text": "It is a key or a label,\na colon, and then", "start": 2177.95, "duration": 4.02}, {"text": "a value, in this\ncase the string Ana", "start": 2181.97, "duration": 2.28}, {"text": "and the string b, followed\nby a comma which separates it", "start": 2184.25, "duration": 3.96}, {"text": "from the next pairing\nof a key and a label,", "start": 2188.21, "duration": 4.08}, {"text": "or a key and a value, and so on.", "start": 2192.29, "duration": 3.79}, {"text": "So if I do this what it\ndoes in my dictionary", "start": 2196.08, "duration": 2.06}, {"text": "is it creates pairings of\nthose labels with the values", "start": 2198.14, "duration": 6.0}, {"text": "I associated with them.", "start": 2204.14, "duration": 3.11}, {"text": "OK, these are pretty\nsimple, but in fact, there's", "start": 2207.25, "duration": 3.617}, {"text": "lots of nice things\nwe can do with it.", "start": 2210.867, "duration": 1.583}, {"text": "So once we've got them indexing\nnow is similar to a list", "start": 2212.45, "duration": 3.33}, {"text": "but not done by a number,\nit's done by value.", "start": 2215.78, "duration": 2.34}, {"text": "So if that's my key, I can\nsay, what's John's grade,", "start": 2218.12, "duration": 4.23}, {"text": "notice the call, it's grades,\nwhich is in my dictionary,", "start": 2222.35, "duration": 2.88}, {"text": "open close square brackets,\nwith the label John.", "start": 2225.23, "duration": 3.807}, {"text": "And what it does, it goes in and\nfinds that in the dictionary,", "start": 2229.037, "duration": 2.583}, {"text": "returns the value\nassociated with it.", "start": 2231.62, "duration": 2.482}, {"text": "If I ask for something\nnot in the dictionary,", "start": 2234.102, "duration": 1.878}, {"text": "it's going to give\nme a key error.", "start": 2235.98, "duration": 3.4}, {"text": "Other things we can\ndo with dictionaries,", "start": 2239.38, "duration": 2.95}, {"text": "we can add entries just\nlike we would do with lists.", "start": 2242.33, "duration": 4.68}, {"text": "Grades as a dictionary, in open\nand closed square brackets,", "start": 2247.01, "duration": 3.45}, {"text": "I put in a new\nlabel and a value,", "start": 2250.46, "duration": 4.52}, {"text": "and that adds that\nto the dictionary.", "start": 2254.98, "duration": 3.5}, {"text": "I can test if something's in\nthe dictionary by simply saying,", "start": 2258.48, "duration": 3.3}, {"text": "is this label in\ngrades, and it simply", "start": 2261.78, "duration": 3.66}, {"text": "checks all of the labels or\nthe keys for the dictionary", "start": 2265.44, "duration": 3.63}, {"text": "to see if it's there, and\nif it's not returns false.", "start": 2269.07, "duration": 4.06}, {"text": "I can remove entries, del,\nsomething we've seen before,", "start": 2273.13, "duration": 3.75}, {"text": "a very generic thing.", "start": 2276.88, "duration": 0.979}, {"text": "It will delete something,\nand in this case,", "start": 2277.859, "duration": 1.791}, {"text": "it says, in the\ndictionary grades,", "start": 2279.65, "duration": 2.09}, {"text": "find the entry associated\nwith that key, sorry, Ana,", "start": 2281.74, "duration": 3.9}, {"text": "you're about to be\nflushed, remove it.", "start": 2285.64, "duration": 3.879}, {"text": "She's only getting a b in\nthe class and she teaches it.", "start": 2289.519, "duration": 2.291}, {"text": "We've got to do something\nabout this, right?", "start": 2291.81, "duration": 3.502}, {"text": "So I can add things,\nI can delete things,", "start": 2295.312, "duration": 1.708}, {"text": "I can test if things are there.", "start": 2297.02, "duration": 1.395}, {"text": "Let me show you a\ncouple of other things", "start": 2298.415, "duration": 1.905}, {"text": "about dictionaries.", "start": 2300.32, "duration": 2.56}, {"text": "I can ask for all of the\nkeys in the dictionary.", "start": 2302.88, "duration": 4.08}, {"text": "Notice the format, there is\nthat dot notation, grades", "start": 2306.96, "duration": 2.43}, {"text": "as a dictionary, it says, use\nthe keys method associated", "start": 2309.39, "duration": 3.09}, {"text": "with this data\nstructure dictionaries.", "start": 2312.48, "duration": 2.55}, {"text": "Open close actually\ncalls it, and it gives me", "start": 2315.03, "duration": 2.61}, {"text": "back a collection of all the\nkeys in some arbitrary order.", "start": 2317.64, "duration": 6.191}, {"text": "I'm going to use\na funny term here", "start": 2323.831, "duration": 1.659}, {"text": "which I'm not certain\nwe've seen so far.", "start": 2325.49, "duration": 1.84}, {"text": "It returns something we call\nan iterable, it's like range.", "start": 2327.33, "duration": 3.23}, {"text": "Think of it as giving us back\nthe equivalent of a list,", "start": 2330.56, "duration": 2.34}, {"text": "it's not actually\na list, but it's", "start": 2332.9, "duration": 1.416}, {"text": "something we can walk down.", "start": 2334.316, "duration": 1.594}, {"text": "Which is exactly why I\ncan then say, is something", "start": 2335.91, "duration": 2.3}, {"text": "in a dictionary, because it\nreturns this set of keys,", "start": 2338.21, "duration": 4.02}, {"text": "and I can test to see\nsomething's in there.", "start": 2342.23, "duration": 2.07}, {"text": "I can similarly get\nall of the values", "start": 2344.3, "duration": 2.2}, {"text": "if I wanted to look at them,\ngiving us out two iterables.", "start": 2346.5, "duration": 4.97}, {"text": "Here are the key things to keep\nin mind about dictionaries.", "start": 2351.47, "duration": 5.27}, {"text": "The values can be anything,\nany type, mutable, immutable.", "start": 2356.74, "duration": 4.249}, {"text": "They could be duplicates.", "start": 2360.989, "duration": 1.041}, {"text": "That'd actually makes sense,\nI could have the same value", "start": 2362.03, "duration": 1.77}, {"text": "associated, for example,\nthe same grade associated", "start": 2363.8, "duration": 2.22}, {"text": "with different people,\nthat's perfectly fine.", "start": 2366.02, "duration": 2.52}, {"text": "The values could be lists, they\ncould be other data structures,", "start": 2368.54, "duration": 2.7}, {"text": "they could even be\nother dictionaries.", "start": 2371.24, "duration": 1.583}, {"text": "They can be anything,\nwhich is great.", "start": 2372.823, "duration": 2.847}, {"text": "The keys, the first part of it\nare a little more structure.", "start": 2375.67, "duration": 4.92}, {"text": "They need to be unique.", "start": 2380.59, "duration": 2.16}, {"text": "Well duh, that make sense.", "start": 2382.75, "duration": 1.14}, {"text": "If I have that same key in\ntwo places in the dictionary,", "start": 2383.89, "duration": 2.61}, {"text": "when I go to look\nit up, how am I", "start": 2386.5, "duration": 1.08}, {"text": "going to know which one I want?", "start": 2387.58, "duration": 1.291}, {"text": "So it needs to be\nunique, and they also", "start": 2388.871, "duration": 2.369}, {"text": "need to be immutable,\nwhich also makes sense.", "start": 2391.24, "duration": 3.014}, {"text": "If I'm storing something\nin a key in the dictionary,", "start": 2394.254, "duration": 2.166}, {"text": "and I can go and change\nthe value of the key,", "start": 2396.42, "duration": 2.637}, {"text": "how am I going to remember\nwhat I was looking for?", "start": 2399.057, "duration": 2.083}, {"text": "So they can only be things like\nints, floats, strings, tuples,", "start": 2401.14, "duration": 4.37}, {"text": "Booleans.", "start": 2405.51, "duration": 1.282}, {"text": "I don't recommend using\nfloats because you need", "start": 2406.792, "duration": 1.958}, {"text": "to make sure it's\nexactly the same float", "start": 2408.75, "duration": 1.62}, {"text": "and that's sometimes a\nlittle bit challenging,", "start": 2410.37, "duration": 1.95}, {"text": "but nonetheless, you can have\nany immutable type as your key.", "start": 2412.32, "duration": 3.27}, {"text": "And notice that there's no\norder to the keys or the values.", "start": 2415.59, "duration": 3.08}, {"text": "They are simply stored\narbitrarily by the Python", "start": 2418.67, "duration": 2.44}, {"text": "as it puts them in.", "start": 2421.11, "duration": 2.38}, {"text": "So if I compare these two, lists\nor ordered sequences indexed", "start": 2423.49, "duration": 3.72}, {"text": "by integers, I look them\nup by integer index,", "start": 2427.21, "duration": 3.27}, {"text": "and the indices have to have\nan order as a consequence.", "start": 2430.48, "duration": 2.52}, {"text": "Dictionaries are this\nnice generalization,", "start": 2433.0, "duration": 2.67}, {"text": "arbitrarily match\nkeys to values.", "start": 2435.67, "duration": 2.16}, {"text": "I simply look up one\nitem by looking up things", "start": 2437.83, "duration": 2.64}, {"text": "under the appropriate key.", "start": 2440.47, "duration": 1.98}, {"text": "All I require is that the\nkeys have to be immutable.", "start": 2442.45, "duration": 4.82}, {"text": "OK, I want to do\ntwo last things I've", "start": 2447.27, "duration": 1.72}, {"text": "got seven minutes to go here.", "start": 2448.99, "duration": 2.18}, {"text": "I want to show you an example\nof using dictionaries,", "start": 2451.17, "duration": 2.482}, {"text": "and I'm going to do this\nwith a little bit more", "start": 2453.652, "duration": 1.958}, {"text": "interesting, I hope, example.", "start": 2455.61, "duration": 1.208}, {"text": "I want to analyze song lyrics.", "start": 2456.818, "duration": 1.753}, {"text": "Now I'm going to show\nyou, you can already", "start": 2458.571, "duration": 1.749}, {"text": "tell the difference between\nmy age and Ana's age.", "start": 2460.32, "duration": 2.14}, {"text": "She used Taylor Swift\nand Justin Bieber.", "start": 2462.46, "duration": 3.372}, {"text": "I'm going to use The Beatles.", "start": 2465.832, "duration": 1.208}, {"text": "That's more my generation.", "start": 2467.04, "duration": 1.35}, {"text": "Most of you have never\nheard of The Beatles", "start": 2468.39, "duration": 1.35}, {"text": "unless you watched\nShining Time Station where", "start": 2469.74, "duration": 1.875}, {"text": "you saw Ringo Starr, right?", "start": 2471.615, "duration": 2.247}, {"text": "OK, what I'm going\nto do is, I want", "start": 2473.862, "duration": 1.458}, {"text": "to write a little\nset of procedures", "start": 2475.32, "duration": 1.68}, {"text": "that record the frequencies\nof words in a song lyric.", "start": 2477.0, "duration": 4.5}, {"text": "So I'm going to match strings,\nor words, to integers.", "start": 2481.5, "duration": 3.01}, {"text": "How many times did that word\nappear in the song lyric?", "start": 2484.51, "duration": 3.47}, {"text": "And then I want to ask,\ncan I easily figure out", "start": 2487.98, "duration": 2.4}, {"text": "which words occur most\noften, and how many times.", "start": 2490.38, "duration": 3.247}, {"text": "Then I'm going to\ngather them together", "start": 2493.627, "duration": 1.583}, {"text": "to see what are the most\ncommon words in here.", "start": 2495.21, "duration": 1.917}, {"text": "And I'm going to do that where\nI'm going to let a user say,", "start": 2497.127, "duration": 2.458}, {"text": "I want every word that appears\nmore than some number of times.", "start": 2499.585, "duration": 2.945}, {"text": "It's a simple\nexample, but I want", "start": 2502.53, "duration": 1.62}, {"text": "you to see how a mutation\nof the dictionary", "start": 2504.15, "duration": 1.83}, {"text": "gives you a really powerful\ntool for solving this problem.", "start": 2505.98, "duration": 3.97}, {"text": "So let's write the\ncode to do that.", "start": 2509.95, "duration": 2.824}, {"text": "It's also in the\nhandout, here we go.", "start": 2512.774, "duration": 2.816}, {"text": "Lyrics to frequency's, lyrics is\njust a list of words, strings.", "start": 2515.59, "duration": 5.189}, {"text": "So I'm going to set up\nan empty dictionary,", "start": 2520.779, "duration": 1.791}, {"text": "there's that open\nclose curly brace,", "start": 2522.57, "duration": 2.43}, {"text": "and here's what I want to do.", "start": 2525.0, "duration": 1.71}, {"text": "I'm going to walk through\nall the words in lyrics.", "start": 2526.71, "duration": 2.22}, {"text": "You've seen this\nbefore, this is looping", "start": 2528.93, "duration": 1.666}, {"text": "over every word in lyrics.", "start": 2530.596, "duration": 2.094}, {"text": "Ah, notice what I'm going to do.", "start": 2532.69, "duration": 1.64}, {"text": "I'm going to simply say-- so\nthe first part is, I can easily", "start": 2534.33, "duration": 3.63}, {"text": "iterate over the list,\n--but now I'm going to say,", "start": 2537.96, "duration": 2.22}, {"text": "if the word is in\nthe dictionary,", "start": 2540.18, "duration": 3.22}, {"text": "and because the\ndictionary is iterable,", "start": 2543.4, "duration": 2.07}, {"text": "it's simply going to give\nme back all of the keys,", "start": 2545.47, "duration": 2.13}, {"text": "it's simply going to\nsay, in this case,", "start": 2547.6, "duration": 1.624}, {"text": "if it's in the dictionary,\nit's already there,", "start": 2549.224, "duration": 2.826}, {"text": "I've got some value\nassociated with it,", "start": 2552.05, "duration": 1.84}, {"text": "get the value out, add\n1 to it, put it back in.", "start": 2553.89, "duration": 3.15}, {"text": "If it's not already\nin the dictionary,", "start": 2559.64, "duration": 1.9}, {"text": "this is the first time\nI've seen it, just store it", "start": 2561.54, "duration": 2.72}, {"text": "into the dictionary.", "start": 2564.26, "duration": 1.6}, {"text": "And when I'm done just\nreturn the dictionary.", "start": 2565.86, "duration": 2.715}, {"text": "OK?", "start": 2568.575, "duration": 2.175}, {"text": "So I'm going to, if I can do\nthis right with my Python,", "start": 2570.75, "duration": 2.42}, {"text": "show you an example of this.", "start": 2573.17, "duration": 1.91}, {"text": "I have put in one of the\ngreat classic Beatles songs,", "start": 2575.08, "duration": 5.82}, {"text": "you might recognize\nit right there.", "start": 2580.9, "duration": 2.419}, {"text": "Mostly because it's got a whole\nlot of repetitions of things.", "start": 2583.319, "duration": 2.541}, {"text": "So she loves you yeah,\nyeah, yeah, yeah.", "start": 2585.86, "duration": 1.972}, {"text": "Sorry, actually they sing\nit better than I just", "start": 2587.832, "duration": 1.958}, {"text": "did it sarcastically.", "start": 2589.79, "duration": 1.56}, {"text": "Sorry about that, but I\ngot she loves you there,", "start": 2591.35, "duration": 2.04}, {"text": "and here's my code up\nhere, lyrics to frequency.", "start": 2593.39, "duration": 2.53}, {"text": "So let's see what\nhappens if we call it.", "start": 2595.92, "duration": 2.31}, {"text": "And we say lyrics to\nfrequencies she loves you.", "start": 2598.23, "duration": 8.29}, {"text": "And it would help\nif I can type, all", "start": 2609.66, "duration": 1.7}, {"text": "right, we'll try it\none more time, lyrics", "start": 2611.36, "duration": 2.58}, {"text": "to frequency's, she loves you.", "start": 2613.94, "duration": 10.16}, {"text": "Cool, this gave me\nback a dictionary,", "start": 2624.1, "duration": 3.64}, {"text": "you can see the curly\nbraces, and there", "start": 2627.74, "duration": 2.247}, {"text": "are all the words that appear\nin there and the number of times", "start": 2629.987, "duration": 2.583}, {"text": "that they appear.", "start": 2632.57, "duration": 2.79}, {"text": "What's the order?", "start": 2635.36, "duration": 1.4}, {"text": "You don't care.", "start": 2636.76, "duration": 1.14}, {"text": "You don't know.", "start": 2637.9, "duration": 0.69}, {"text": "What we want to do\nis to think about", "start": 2638.59, "duration": 1.5}, {"text": "how can we analyze\nthis, so let's go back", "start": 2640.09, "duration": 1.77}, {"text": "and look at the\nlast piece of this.", "start": 2641.86, "duration": 2.17}, {"text": "Which is, OK, I can convert\nlyrics to frequencies.", "start": 2644.03, "duration": 5.78}, {"text": "So here's the next thing\nI want to do, how do I", "start": 2649.81, "duration": 2.75}, {"text": "find the most common words?", "start": 2652.56, "duration": 2.1}, {"text": "Well, here's what\nI'm going to do,", "start": 2654.66, "duration": 1.86}, {"text": "frequencies is the\ndictionary, something", "start": 2656.52, "duration": 2.64}, {"text": "that I just pulled out.", "start": 2659.16, "duration": 2.41}, {"text": "So I can use the\nvalues method on it", "start": 2661.57, "duration": 2.66}, {"text": "which returns and iterable,\nas I said earlier,", "start": 2664.23, "duration": 2.1}, {"text": "again notice the open close\nbecause I got to call it.", "start": 2666.33, "duration": 2.53}, {"text": "That gives me back\nan iterable that", "start": 2668.86, "duration": 2.379}, {"text": "has all of the frequencies\ninside of there,", "start": 2671.239, "duration": 1.791}, {"text": "because it's an iterable,\nI can use max on it,", "start": 2673.03, "duration": 3.142}, {"text": "and it will take that\neditable and give me back", "start": 2676.172, "duration": 1.958}, {"text": "the biggest value.", "start": 2678.13, "duration": 1.315}, {"text": "I'm going to call that\nbest, I'm going to set up", "start": 2679.445, "duration": 2.25}, {"text": "words to be an empty\nlist, and then I'm", "start": 2681.695, "duration": 1.625}, {"text": "just going to walk\nthrough all of the entries", "start": 2683.32, "duration": 1.89}, {"text": "in the dictionary saying,\nif the value at that entry", "start": 2685.21, "duration": 4.47}, {"text": "is equal to best add\nthat entry into words,", "start": 2689.68, "duration": 3.99}, {"text": "just append it onto\nthe end of the list.", "start": 2693.67, "duration": 2.59}, {"text": "And when I'm done\nall of that loop,", "start": 2696.26, "duration": 1.5}, {"text": "I'm just going to return a\ntuple of both the collections", "start": 2697.76, "duration": 3.2}, {"text": "of words that period\nthat many times", "start": 2700.96, "duration": 2.49}, {"text": "and how often they appeared.", "start": 2703.45, "duration": 1.905}, {"text": "I'm going to show you\nan example in a second,", "start": 2705.355, "duration": 1.875}, {"text": "but notice I'm simply using the\nproperties of the dictionary.", "start": 2707.23, "duration": 3.224}, {"text": "The last thing I want\nto do then is say,", "start": 2710.454, "duration": 1.666}, {"text": "I want to see how\noften the words appear.", "start": 2712.12, "duration": 1.99}, {"text": "So I'm going to give it a\ndictionary and a minimum number", "start": 2714.11, "duration": 3.05}, {"text": "of times.", "start": 2717.16, "duration": 1.37}, {"text": "And here I'm going to set\nresult up to be an empty list,", "start": 2718.53, "duration": 2.59}, {"text": "I'm going to create\na flag called false,", "start": 2721.12, "duration": 1.98}, {"text": "it's going to keep\ntrack of when I'm done.", "start": 2723.1, "duration": 2.04}, {"text": "And as long as I'm\nnot yet done, I'll", "start": 2725.14, "duration": 2.31}, {"text": "call that previous\nprocedure that's", "start": 2727.45, "duration": 1.5}, {"text": "going to give me back\nthe most common words", "start": 2728.95, "duration": 2.16}, {"text": "and how often they appeared.", "start": 2731.11, "duration": 2.27}, {"text": "I check and remember\nit was a tuple,", "start": 2733.38, "duration": 1.54}, {"text": "how often do they appear, if\nit's bigger than the thing", "start": 2734.92, "duration": 2.291}, {"text": "I'm looking for, I'll\nadd that into my result.", "start": 2737.211, "duration": 3.929}, {"text": "And then the best\npart is, I'm now", "start": 2741.14, "duration": 2.16}, {"text": "going to walk\nthrough all the words", "start": 2743.3, "duration": 1.68}, {"text": "that appeared that many\ntimes, and just delete them", "start": 2744.98, "duration": 2.94}, {"text": "from the dictionary.", "start": 2747.92, "duration": 1.734}, {"text": "I can mutate the dictionary.", "start": 2749.654, "duration": 1.166}, {"text": "And by doing that, I can go\nback around and do this again,", "start": 2750.82, "duration": 3.522}, {"text": "and it will pull out how\nmany times has this appeared", "start": 2754.342, "duration": 2.208}, {"text": "and keep doing it.", "start": 2756.55, "duration": 0.99}, {"text": "When I can go all\nthe way through that,", "start": 2757.54, "duration": 1.71}, {"text": "if I can't find any\nmore, I'll set the flag", "start": 2759.25, "duration": 2.22}, {"text": "to true which means it\nwill drop out of here", "start": 2761.47, "duration": 2.07}, {"text": "and return the result. I'm going\nto let you run this yourself,", "start": 2763.54, "duration": 3.667}, {"text": "if you do that, you'll\nfind that it comes up with,", "start": 2767.207, "duration": 2.083}, {"text": "not surprisingly, I think\nyeah is the most common one", "start": 2769.29, "duration": 2.29}, {"text": "and she loves you, followed\nby loves and a few others.", "start": 2771.58, "duration": 2.854}, {"text": "What I want you to see here\nis how the dictionary captured", "start": 2774.434, "duration": 2.416}, {"text": "the pieces we wanted to.", "start": 2776.85, "duration": 2.58}, {"text": "Very last one,\nthere's Fibonacci,", "start": 2779.43, "duration": 3.68}, {"text": "as we called it before.", "start": 2783.11, "duration": 2.36}, {"text": "It's actually\nincredibly inefficient,", "start": 2785.47, "duration": 2.07}, {"text": "because if I call it, I\nhave to do all the sub", "start": 2787.54, "duration": 2.21}, {"text": "calls until I get down to\nthe base case, which is OK.", "start": 2789.75, "duration": 3.13}, {"text": "But notice, every\nother thing I do here,", "start": 2792.88, "duration": 3.15}, {"text": "I've actually\ncomputed those values.", "start": 2796.03, "duration": 3.05}, {"text": "I'm wasting measures,\nor wasting time,", "start": 2799.08, "duration": 2.04}, {"text": "it's not so bad with fib of\n5, but if this is fib of 20,", "start": 2801.12, "duration": 3.06}, {"text": "almost everything on the\nright hand side of this tree", "start": 2804.18, "duration": 2.58}, {"text": "I've already computed once.", "start": 2806.76, "duration": 1.5}, {"text": "That means fibs\nvery inefficient.", "start": 2808.26, "duration": 3.62}, {"text": "I can improve it by using a\ndictionary, very handy tool.", "start": 2811.88, "duration": 4.05}, {"text": "I'm going to call fib not\nonly with a value of n,", "start": 2815.93, "duration": 2.79}, {"text": "but a dictionary\nwhich initially I'm", "start": 2818.72, "duration": 1.5}, {"text": "going to initialized\nto the base cases.", "start": 2820.22, "duration": 3.03}, {"text": "And notice what I do, I'm\ngoing to say if I've already", "start": 2823.25, "duration": 2.25}, {"text": "computed this, just return\nthe value in the dictionary.", "start": 2825.5, "duration": 4.08}, {"text": "If I haven't, go ahead\nand do the computation,", "start": 2829.58, "duration": 3.09}, {"text": "store it in the\ndictionary at that point,", "start": 2832.67, "duration": 2.73}, {"text": "and return the answer.", "start": 2835.4, "duration": 2.512}, {"text": "Different way of\nthinking about it,", "start": 2837.912, "duration": 1.458}, {"text": "and the reason this is really\nnice is a method called", "start": 2839.37, "duration": 2.25}, {"text": "memoization, is if\nI call fib of 34", "start": 2841.62, "duration": 4.47}, {"text": "the standard way it takes 11\nmillion plus recursive calls", "start": 2846.09, "duration": 4.56}, {"text": "to get the answer out.", "start": 2850.65, "duration": 1.035}, {"text": "It takes a long time.", "start": 2851.685, "duration": 1.215}, {"text": "I've given you some\ncode for it, you", "start": 2852.9, "duration": 1.5}, {"text": "can try it and see\nhow long it takes.", "start": 2854.4, "duration": 2.46}, {"text": "Using the dictionary to keep\ntrack of intermediate values,", "start": 2856.86, "duration": 3.85}, {"text": "65 calls.", "start": 2860.71, "duration": 1.862}, {"text": "And if you try it, you'll\nsee the difference in speed", "start": 2862.572, "duration": 2.208}, {"text": "as you run this.", "start": 2864.78, "duration": 1.26}, {"text": "So dictionaries\nare valuable, not", "start": 2866.04, "duration": 1.47}, {"text": "only for just storing\naway data, they're", "start": 2867.51, "duration": 1.83}, {"text": "valuable on procedure calls when\nthose intermediate values are", "start": 2869.34, "duration": 4.41}, {"text": "not going to change.", "start": 2873.75, "duration": 1.375}, {"text": "What you're going to\nsee as we go along", "start": 2875.125, "duration": 1.625}, {"text": "is we're going to use exactly\nthese ideas, using dictionaries", "start": 2876.75, "duration": 2.64}, {"text": "to capture information, but\nespecially using recursion", "start": 2879.39, "duration": 3.21}, {"text": "to break bigger problems\ndown into smaller", "start": 2882.6, "duration": 1.89}, {"text": "versions of the same problem,\nto use that as a tool", "start": 2884.49, "duration": 2.67}, {"text": "for solving what turn out\nto be really complex things.", "start": 2887.16, "duration": 3.27}, {"text": "And with that, we'll\nsee you next time.", "start": 2890.43, "duration": 2.98}]