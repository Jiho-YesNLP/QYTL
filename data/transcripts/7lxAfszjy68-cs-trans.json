[{"text": "hello everyone and welcome back in the", "start": 6.24, "duration": 6.399}, {"text": "previous session we talked about cachet", "start": 10.24, "duration": 4.479}, {"text": "design and there we talked a little bit", "start": 12.639, "duration": 4.64}, {"text": "about various cache replacement policies", "start": 14.719, "duration": 5.041}, {"text": "however we didn't go into the details of", "start": 17.279, "duration": 5.361}, {"text": "those so as promised from this session", "start": 19.76, "duration": 4.72}, {"text": "onwards we will be discussing about", "start": 22.64, "duration": 3.92}, {"text": "various cache replacement policies", "start": 24.48, "duration": 4.639}, {"text": "starting with random replacement first", "start": 26.56, "duration": 5.2}, {"text": "in first out last in first out and", "start": 29.119, "duration": 4.96}, {"text": "finally the optimal cache replacement", "start": 31.76, "duration": 3.36}, {"text": "policy", "start": 34.079, "duration": 3.601}, {"text": "so without any further ado let's get to", "start": 35.12, "duration": 3.759}, {"text": "learning", "start": 37.68, "duration": 3.039}, {"text": "now in the previous session during our", "start": 38.879, "duration": 3.68}, {"text": "discussion of cache design we came", "start": 40.719, "duration": 4.081}, {"text": "across the block replacement phase", "start": 42.559, "duration": 4.32}, {"text": "basically it's required when the cache", "start": 44.8, "duration": 4.56}, {"text": "suffers from either capacity or conflict", "start": 46.879, "duration": 5.441}, {"text": "miss in any of these two scenarios we", "start": 49.36, "duration": 5.519}, {"text": "evict one block from the cache and make", "start": 52.32, "duration": 4.96}, {"text": "space for the newly requested block", "start": 54.879, "duration": 4.561}, {"text": "now during this phase we came across a", "start": 57.28, "duration": 4.4}, {"text": "very vital question which was which", "start": 59.44, "duration": 3.759}, {"text": "block to replace", "start": 61.68, "duration": 4.0}, {"text": "now for direct mapping if we observe", "start": 63.199, "duration": 4.641}, {"text": "closely suppose these are the main", "start": 65.68, "duration": 3.92}, {"text": "memory blocks and these are the cache", "start": 67.84, "duration": 2.639}, {"text": "lines", "start": 69.6, "duration": 3.68}, {"text": "basically we have 16 main memory blocks", "start": 70.479, "duration": 4.561}, {"text": "and four cache aligns", "start": 73.28, "duration": 3.92}, {"text": "now suppose the processor request the", "start": 75.04, "duration": 4.8}, {"text": "main memory block number 40. now if you", "start": 77.2, "duration": 4.559}, {"text": "remember since the main memory block", "start": 79.84, "duration": 4.88}, {"text": "number 14 in binary is triple 1 0 in", "start": 81.759, "duration": 5.201}, {"text": "that case the least significant two bits", "start": 84.72, "duration": 4.64}, {"text": "will determine where inside the cache", "start": 86.96, "duration": 4.159}, {"text": "the main memory block will be mapped", "start": 89.36, "duration": 4.079}, {"text": "onto and since the least significant two", "start": 91.119, "duration": 4.801}, {"text": "bits are one zero therefore the main", "start": 93.439, "duration": 4.401}, {"text": "memory block number fourteen will be", "start": 95.92, "duration": 4.559}, {"text": "placed inside the cache line number two", "start": 97.84, "duration": 4.959}, {"text": "now suppose the processor now is asking", "start": 100.479, "duration": 4.801}, {"text": "for the main memory block number six in", "start": 102.799, "duration": 5.441}, {"text": "this case also if you observe the least", "start": 105.28, "duration": 4.64}, {"text": "significant two bits of the block number", "start": 108.24, "duration": 4.4}, {"text": "is one zero therefore the main memory", "start": 109.92, "duration": 4.64}, {"text": "block number six will also be mapped", "start": 112.64, "duration": 4.56}, {"text": "onto the cache line number two replacing", "start": 114.56, "duration": 5.28}, {"text": "14 and the same will happen if the", "start": 117.2, "duration": 5.519}, {"text": "processor asks for the block number two", "start": 119.84, "duration": 5.12}, {"text": "and the block number 10. therefore in", "start": 122.719, "duration": 4.241}, {"text": "terms of direct mapping all the main", "start": 124.96, "duration": 3.999}, {"text": "memory blocks have their cache a line", "start": 126.96, "duration": 5.2}, {"text": "specified so for block replacement", "start": 128.959, "duration": 5.601}, {"text": "no need for any decision to make since", "start": 132.16, "duration": 4.159}, {"text": "it's pretty straightforward in case of", "start": 134.56, "duration": 3.12}, {"text": "direct mapping", "start": 136.319, "duration": 3.92}, {"text": "on the contrary in case of associative", "start": 137.68, "duration": 5.04}, {"text": "and set associative mapping a particular", "start": 140.239, "duration": 4.72}, {"text": "main memory block can be placed anywhere", "start": 142.72, "duration": 5.28}, {"text": "inside the cache if it is associative", "start": 144.959, "duration": 5.28}, {"text": "and if it is set associative the main", "start": 148.0, "duration": 4.319}, {"text": "memory block can be placed anywhere", "start": 150.239, "duration": 3.921}, {"text": "inside a particular set", "start": 152.319, "duration": 4.321}, {"text": "therefore for block placement we have", "start": 154.16, "duration": 5.28}, {"text": "availability of choices therefore for", "start": 156.64, "duration": 4.879}, {"text": "block replacement we will be needing", "start": 159.44, "duration": 4.72}, {"text": "cache replacement policies since unlike", "start": 161.519, "duration": 5.041}, {"text": "direct mapping the cache line is not", "start": 164.16, "duration": 4.64}, {"text": "specified for a particular main memory", "start": 166.56, "duration": 4.8}, {"text": "block in any of these two cases now", "start": 168.8, "duration": 4.88}, {"text": "having cash replacement policies", "start": 171.36, "duration": 4.4}, {"text": "actually help us reduce the cashier", "start": 173.68, "duration": 4.559}, {"text": "misses since once the newly requested", "start": 175.76, "duration": 4.8}, {"text": "block is placed inside the cachet during", "start": 178.239, "duration": 4.401}, {"text": "its future reference it will be found", "start": 180.56, "duration": 3.84}, {"text": "inside the cache itself", "start": 182.64, "duration": 4.64}, {"text": "resulting in cache hit this will also", "start": 184.4, "duration": 5.6}, {"text": "help minimize the miss penalty now miss", "start": 187.28, "duration": 4.879}, {"text": "penalty refers to the time required by", "start": 190.0, "duration": 4.319}, {"text": "the processor to get the data from the", "start": 192.159, "duration": 4.321}, {"text": "next level of memory hierarchy during", "start": 194.319, "duration": 4.961}, {"text": "the cache misses therefore with the", "start": 196.48, "duration": 5.039}, {"text": "reduced number of cache misses the miss", "start": 199.28, "duration": 4.72}, {"text": "penalty is bound to be minimized", "start": 201.519, "duration": 4.881}, {"text": "therefore the cache replacement policies", "start": 204.0, "duration": 4.239}, {"text": "are required for associative and set", "start": 206.4, "duration": 4.24}, {"text": "associative mapping not in case of", "start": 208.239, "duration": 4.881}, {"text": "direct mapping now let's talk about the", "start": 210.64, "duration": 4.959}, {"text": "various cache replacement policies shall", "start": 213.12, "duration": 5.44}, {"text": "we during our previous discussion we did", "start": 215.599, "duration": 4.56}, {"text": "mention about the different cache", "start": 218.56, "duration": 3.8}, {"text": "replacement policies now regarding", "start": 220.159, "duration": 4.561}, {"text": "recency-based and the frequency based", "start": 222.36, "duration": 4.92}, {"text": "policies we will discuss in the next", "start": 224.72, "duration": 4.879}, {"text": "session today we are going to discuss", "start": 227.28, "duration": 4.4}, {"text": "about the random replacement the first", "start": 229.599, "duration": 4.321}, {"text": "in first out and the last in first out", "start": 231.68, "duration": 4.08}, {"text": "and finally the optimal replacement", "start": 233.92, "duration": 4.64}, {"text": "policies so let's begin with random", "start": 235.76, "duration": 5.44}, {"text": "replacement now in this specific case we", "start": 238.56, "duration": 4.64}, {"text": "choose the block to be evicted from the", "start": 241.2, "duration": 4.959}, {"text": "cache at random therefore the access", "start": 243.2, "duration": 5.52}, {"text": "information is not really required which", "start": 246.159, "duration": 4.72}, {"text": "is actually required by most of the", "start": 248.72, "duration": 4.64}, {"text": "other cache replacement policies and", "start": 250.879, "duration": 4.56}, {"text": "finally it's not really implemented", "start": 253.36, "duration": 4.559}, {"text": "anymore it used to be implemented in", "start": 255.439, "duration": 5.52}, {"text": "advanced risk machine architectures we", "start": 257.919, "duration": 5.201}, {"text": "will talk about risk architectures in", "start": 260.959, "duration": 3.921}, {"text": "our upcoming sessions", "start": 263.12, "duration": 4.4}, {"text": "now this is the core concept of random", "start": 264.88, "duration": 4.879}, {"text": "replacement now the next replacement", "start": 267.52, "duration": 5.52}, {"text": "policy is fifo here the cache blocks are", "start": 269.759, "duration": 5.921}, {"text": "evicted in their order of arrival", "start": 273.04, "duration": 5.439}, {"text": "basically the cache behaves as a first", "start": 275.68, "duration": 4.64}, {"text": "in first out queue", "start": 278.479, "duration": 4.16}, {"text": "that means whichever block comes the", "start": 280.32, "duration": 4.879}, {"text": "first will be evicted from the cache", "start": 282.639, "duration": 3.601}, {"text": "first", "start": 285.199, "duration": 2.961}, {"text": "now let's understand this with the help", "start": 286.24, "duration": 4.0}, {"text": "of an illustration suppose we have a", "start": 288.16, "duration": 4.0}, {"text": "fully associative cache with four", "start": 290.24, "duration": 4.64}, {"text": "different lines and initially the cache", "start": 292.16, "duration": 4.64}, {"text": "is empty now since it is fully", "start": 294.88, "duration": 4.56}, {"text": "associative for the first four block", "start": 296.8, "duration": 5.52}, {"text": "requests the cache will be filled as", "start": 299.44, "duration": 4.64}, {"text": "this", "start": 302.32, "duration": 4.719}, {"text": "now at this point the cache is full", "start": 304.08, "duration": 5.52}, {"text": "now suppose at this point the processor", "start": 307.039, "duration": 4.801}, {"text": "requests for a new block", "start": 309.6, "duration": 5.12}, {"text": "in that case the block which got placed", "start": 311.84, "duration": 5.199}, {"text": "inside the cache if at first will be", "start": 314.72, "duration": 5.36}, {"text": "evicted and make space for the newly", "start": 317.039, "duration": 4.561}, {"text": "requested block", "start": 320.08, "duration": 4.08}, {"text": "now after the block is placed the cache", "start": 321.6, "duration": 4.64}, {"text": "will again become full", "start": 324.16, "duration": 4.8}, {"text": "now at this point if the processor again", "start": 326.24, "duration": 5.28}, {"text": "asks for a new block in that case", "start": 328.96, "duration": 4.72}, {"text": "amongst all the blocks present inside", "start": 331.52, "duration": 4.56}, {"text": "the cachet whichever got placed inside", "start": 333.68, "duration": 5.44}, {"text": "the cache at first will be evicted and", "start": 336.08, "duration": 6.0}, {"text": "make space for the newly requested block", "start": 339.12, "duration": 5.2}, {"text": "also after this the cashier will again", "start": 342.08, "duration": 3.44}, {"text": "become full", "start": 344.32, "duration": 4.24}, {"text": "so this is how the first in first out or", "start": 345.52, "duration": 6.239}, {"text": "the fifo cash replacement policy works", "start": 348.56, "duration": 5.359}, {"text": "now let's solve a question related to", "start": 351.759, "duration": 4.72}, {"text": "this concept for better understanding", "start": 353.919, "duration": 4.56}, {"text": "consider this question", "start": 356.479, "duration": 4.081}, {"text": "consider a fully associative cache", "start": 358.479, "duration": 4.56}, {"text": "memory with four lines that implements", "start": 360.56, "duration": 4.639}, {"text": "first in first out cache replacement", "start": 363.039, "duration": 5.28}, {"text": "policy for the following block requests", "start": 365.199, "duration": 5.041}, {"text": "now there are some block requests", "start": 368.319, "duration": 4.401}, {"text": "mentioned now we have to find out the", "start": 370.24, "duration": 5.679}, {"text": "miss and the hit ratio respectively so", "start": 372.72, "duration": 5.919}, {"text": "let's try to solve it now it's mentioned", "start": 375.919, "duration": 6.161}, {"text": "that the cache has four lines", "start": 378.639, "duration": 5.921}, {"text": "and for cache replacement the first in", "start": 382.08, "duration": 4.72}, {"text": "first out cache replacement policy is", "start": 384.56, "duration": 4.88}, {"text": "used now since it's a fully associative", "start": 386.8, "duration": 4.399}, {"text": "cache that means there is no", "start": 389.44, "duration": 3.52}, {"text": "restrictions about placing the main", "start": 391.199, "duration": 4.641}, {"text": "memory blocks inside the cache therefore", "start": 392.96, "duration": 5.12}, {"text": "for the first four block requests the", "start": 395.84, "duration": 4.88}, {"text": "cache alliance will be filled like this", "start": 398.08, "duration": 5.04}, {"text": "that means the main memory block number", "start": 400.72, "duration": 4.4}, {"text": "two will be placed inside the cache", "start": 403.12, "duration": 4.56}, {"text": "first followed by the main memory blocks", "start": 405.12, "duration": 5.12}, {"text": "number 3 4 and 7.", "start": 407.68, "duration": 4.48}, {"text": "now during the turn of main memory block", "start": 410.24, "duration": 5.44}, {"text": "number 6 the cache is full and here for", "start": 412.16, "duration": 6.24}, {"text": "cache replacement we need to perform the", "start": 415.68, "duration": 5.519}, {"text": "first in first out rule that means", "start": 418.4, "duration": 5.04}, {"text": "amongst all these main memory blocks", "start": 421.199, "duration": 5.041}, {"text": "placed inside the cache we are to evict", "start": 423.44, "duration": 5.28}, {"text": "the one which got inside the cache at", "start": 426.24, "duration": 4.88}, {"text": "first that is the block number two will", "start": 428.72, "duration": 4.8}, {"text": "be evicted and make space for block", "start": 431.12, "duration": 5.12}, {"text": "number six now the next block request is", "start": 433.52, "duration": 5.519}, {"text": "the block request 3 it will be a cache a", "start": 436.24, "duration": 5.6}, {"text": "hit and the same will follow in case of", "start": 439.039, "duration": 6.16}, {"text": "block request 4 and 7 both of them will", "start": 441.84, "duration": 5.04}, {"text": "be cache hits", "start": 445.199, "duration": 3.921}, {"text": "now during the block request number 5", "start": 446.88, "duration": 4.879}, {"text": "the cache is again full so we have to", "start": 449.12, "duration": 5.04}, {"text": "perform first in first out", "start": 451.759, "duration": 4.88}, {"text": "therefore amongst all the blocks present", "start": 454.16, "duration": 4.879}, {"text": "inside the cache the one which got", "start": 456.639, "duration": 4.56}, {"text": "placed inside the cache at first that is", "start": 459.039, "duration": 4.481}, {"text": "the block number three will be evicted", "start": 461.199, "duration": 4.4}, {"text": "and make space for the main memory block", "start": 463.52, "duration": 4.64}, {"text": "number 5. now thereafter the block", "start": 465.599, "duration": 5.6}, {"text": "requests 4 and 7 will result in cache", "start": 468.16, "duration": 5.039}, {"text": "hits since they already are inside the", "start": 471.199, "duration": 3.12}, {"text": "cache", "start": 473.199, "duration": 4.081}, {"text": "now coming to block request 8 the cache", "start": 474.319, "duration": 5.201}, {"text": "is again full so we again have to", "start": 477.28, "duration": 4.8}, {"text": "perform first in first out that is", "start": 479.52, "duration": 4.48}, {"text": "amongst all the blocks present inside", "start": 482.08, "duration": 4.16}, {"text": "the cache the one which got into the", "start": 484.0, "duration": 4.08}, {"text": "cache at first which is in this case", "start": 486.24, "duration": 4.48}, {"text": "block number 4 will be evicted and make", "start": 488.08, "duration": 4.48}, {"text": "space for the main memory block number", "start": 490.72, "duration": 2.72}, {"text": "eight", "start": 492.56, "duration": 3.6}, {"text": "now let's figure out the miss ratio now", "start": 493.44, "duration": 4.8}, {"text": "the miss ratio can be figured out by", "start": 496.16, "duration": 5.039}, {"text": "placing the number of misses upon total", "start": 498.24, "duration": 5.6}, {"text": "number of block requests and multiplying", "start": 501.199, "duration": 5.361}, {"text": "that value with hundred percent", "start": 503.84, "duration": 5.199}, {"text": "now there are 12 block requests all", "start": 506.56, "duration": 5.599}, {"text": "together and there are one two three", "start": 509.039, "duration": 5.92}, {"text": "four five six and seven misses so", "start": 512.159, "duration": 4.88}, {"text": "multiplying hundred percent with seven", "start": 514.959, "duration": 3.88}, {"text": "upon twelve we get", "start": 517.039, "duration": 5.36}, {"text": "58.33 percent and that is the miss ratio", "start": 518.839, "duration": 6.041}, {"text": "in this specific scenario now since the", "start": 522.399, "duration": 6.081}, {"text": "miss ratio is 58.33 percent in order to", "start": 524.88, "duration": 6.24}, {"text": "find out the hit ratio we take the miss", "start": 528.48, "duration": 5.76}, {"text": "ratio and subtract that from 100 percent", "start": 531.12, "duration": 5.24}, {"text": "which will give us roughly", "start": 534.24, "duration": 6.8}, {"text": "41.66 percent so the hit ratio is 41.66", "start": 536.36, "duration": 7.479}, {"text": "percent approximately and the miss ratio", "start": 541.04, "duration": 6.64}, {"text": "is approximately 58.33 percent now if we", "start": 543.839, "duration": 6.241}, {"text": "observe closely we encountered seven", "start": 547.68, "duration": 5.52}, {"text": "misses amongst them four were compulsory", "start": 550.08, "duration": 5.92}, {"text": "misses that means the block request two", "start": 553.2, "duration": 5.12}, {"text": "three four and seven were compulsory", "start": 556.0, "duration": 4.88}, {"text": "misses and the remaining three were", "start": 558.32, "duration": 4.32}, {"text": "capacity misses", "start": 560.88, "duration": 3.92}, {"text": "because if you remember during the turns", "start": 562.64, "duration": 6.08}, {"text": "of block requests 6 5 and 8 every time", "start": 564.8, "duration": 6.719}, {"text": "they got placed inside the cache before", "start": 568.72, "duration": 4.96}, {"text": "that the cache was full", "start": 571.519, "duration": 5.76}, {"text": "therefore these are capacity misses", "start": 573.68, "duration": 5.76}, {"text": "now let's talk about the next cache", "start": 577.279, "duration": 6.081}, {"text": "replacement policy that is lifo now lifo", "start": 579.44, "duration": 6.8}, {"text": "evicts the most recently added block", "start": 583.36, "duration": 6.479}, {"text": "that literally means last in first out", "start": 586.24, "duration": 6.159}, {"text": "basically whichever block gets placed", "start": 589.839, "duration": 5.281}, {"text": "inside the cache at last will be evicted", "start": 592.399, "duration": 3.761}, {"text": "first", "start": 595.12, "duration": 4.159}, {"text": "so in this case the cache behaves like a", "start": 596.16, "duration": 6.239}, {"text": "stack now what's a stack it's similar to", "start": 599.279, "duration": 6.161}, {"text": "these things which were referred to as", "start": 602.399, "duration": 5.281}, {"text": "played bouncy things by our friend", "start": 605.44, "duration": 5.12}, {"text": "enthusiastic parker here now let me show", "start": 607.68, "duration": 5.36}, {"text": "you how lifo works suppose we have a", "start": 610.56, "duration": 5.04}, {"text": "cache with four lines now since it is", "start": 613.04, "duration": 5.12}, {"text": "working as a stack we have numbered the", "start": 615.6, "duration": 4.72}, {"text": "cache a line starting from 0 at the", "start": 618.16, "duration": 5.119}, {"text": "bottom up until 3 at the top", "start": 620.32, "duration": 5.44}, {"text": "and since it's a fully associative cache", "start": 623.279, "duration": 4.481}, {"text": "we can place the main memory blocks", "start": 625.76, "duration": 4.8}, {"text": "inside the cache like this that means", "start": 627.76, "duration": 5.12}, {"text": "the block number 0 will be placed inside", "start": 630.56, "duration": 4.8}, {"text": "the cache at first followed by the block", "start": 632.88, "duration": 6.24}, {"text": "numbers 3 4 and 9 and at this point of", "start": 635.36, "duration": 6.08}, {"text": "time the cache becomes full", "start": 639.12, "duration": 4.959}, {"text": "now if the processor requests a new", "start": 641.44, "duration": 5.519}, {"text": "block in that case the block number nine", "start": 644.079, "duration": 4.961}, {"text": "which got placed inside the cache at", "start": 646.959, "duration": 4.481}, {"text": "last according to fleet four will be", "start": 649.04, "duration": 4.799}, {"text": "evicted and makes space for the newly", "start": 651.44, "duration": 4.32}, {"text": "requested block which is block number", "start": 653.839, "duration": 4.161}, {"text": "one in this case and afterwards block", "start": 655.76, "duration": 4.16}, {"text": "number one is placed the cache will", "start": 658.0, "duration": 4.8}, {"text": "again become full at this point of time", "start": 659.92, "duration": 5.52}, {"text": "if the processor request another block", "start": 662.8, "duration": 5.2}, {"text": "in that case the block number one which", "start": 665.44, "duration": 4.88}, {"text": "got placed inside the cache at last will", "start": 668.0, "duration": 5.2}, {"text": "be evicted and make space for the newly", "start": 670.32, "duration": 4.8}, {"text": "requested block that is block number", "start": 673.2, "duration": 4.639}, {"text": "five which again will make the cache a", "start": 675.12, "duration": 3.839}, {"text": "as full", "start": 677.839, "duration": 4.321}, {"text": "and this is how lifo works", "start": 678.959, "duration": 5.841}, {"text": "now next up is optimal replacement", "start": 682.16, "duration": 5.84}, {"text": "policy this one affects the block that", "start": 684.8, "duration": 5.2}, {"text": "won't be referred for the longest period", "start": 688.0, "duration": 4.32}, {"text": "of time in future", "start": 690.0, "duration": 4.48}, {"text": "now we are neither doctor strange nor", "start": 692.32, "duration": 4.88}, {"text": "doctor faith therefore prediction of the", "start": 694.48, "duration": 6.0}, {"text": "block request is impossible however the", "start": 697.2, "duration": 5.12}, {"text": "working principle of the optimal", "start": 700.48, "duration": 4.4}, {"text": "replacement policy can be illustrated in", "start": 702.32, "duration": 5.28}, {"text": "pen and paper so let me illustrate that", "start": 704.88, "duration": 5.04}, {"text": "with the help of these block requests", "start": 707.6, "duration": 4.479}, {"text": "suppose we have a fully associative", "start": 709.92, "duration": 4.08}, {"text": "cache with four lines", "start": 712.079, "duration": 4.401}, {"text": "now since it's fully associative for the", "start": 714.0, "duration": 4.72}, {"text": "first four block requests the cache", "start": 716.48, "duration": 4.4}, {"text": "aligns will be filled like this", "start": 718.72, "duration": 5.2}, {"text": "now during the block request 6 the cache", "start": 720.88, "duration": 4.48}, {"text": "is already full", "start": 723.92, "duration": 4.159}, {"text": "therefore in order to determine which of", "start": 725.36, "duration": 5.279}, {"text": "the cache block is going to be evicted", "start": 728.079, "duration": 4.56}, {"text": "we need to look ahead into the future", "start": 730.639, "duration": 3.2}, {"text": "requests", "start": 732.639, "duration": 3.921}, {"text": "and from these we can easily determine", "start": 733.839, "duration": 5.041}, {"text": "that the block number 2 is not going to", "start": 736.56, "duration": 4.719}, {"text": "be used for the longest period of time", "start": 738.88, "duration": 5.36}, {"text": "therefore block 2 will be evicted making", "start": 741.279, "duration": 4.881}, {"text": "space for the main memory block number", "start": 744.24, "duration": 2.88}, {"text": "six", "start": 746.16, "duration": 3.2}, {"text": "now for the next three block request", "start": 747.12, "duration": 4.64}, {"text": "these will be cache hits as they are", "start": 749.36, "duration": 4.96}, {"text": "already present inside the cache", "start": 751.76, "duration": 4.56}, {"text": "now during the turn of block request", "start": 754.32, "duration": 4.72}, {"text": "number five the cache happens to be full", "start": 756.32, "duration": 5.92}, {"text": "again therefore in order to determine", "start": 759.04, "duration": 5.599}, {"text": "which of the block inside the cache is", "start": 762.24, "duration": 4.64}, {"text": "going to be evicted we'll need to look", "start": 764.639, "duration": 5.2}, {"text": "ahead inside the future block request so", "start": 766.88, "duration": 5.28}, {"text": "that we can determine that the block", "start": 769.839, "duration": 5.44}, {"text": "numbers 6 and 3 are not going to be used", "start": 772.16, "duration": 5.679}, {"text": "for the longest period of time in future", "start": 775.279, "duration": 5.441}, {"text": "now it's a tie isn't it now in this kind", "start": 777.839, "duration": 5.921}, {"text": "of situations we take first in first out", "start": 780.72, "duration": 6.32}, {"text": "as tie breaker that means among these", "start": 783.76, "duration": 5.68}, {"text": "two whichever got placed inside the", "start": 787.04, "duration": 5.359}, {"text": "cache at first will be evicted therefore", "start": 789.44, "duration": 5.519}, {"text": "the block 3 will be evicted and make", "start": 792.399, "duration": 4.801}, {"text": "space for the main memory block number", "start": 794.959, "duration": 3.12}, {"text": "5.", "start": 797.2, "duration": 3.6}, {"text": "now once 5 is placed thereafter the", "start": 798.079, "duration": 5.121}, {"text": "block requests four and seven will be", "start": 800.8, "duration": 4.719}, {"text": "again cache hits since they are already", "start": 803.2, "duration": 4.72}, {"text": "present inside the cache now coming to", "start": 805.519, "duration": 5.12}, {"text": "the block request number eight the cache", "start": 807.92, "duration": 4.24}, {"text": "is again full", "start": 810.639, "duration": 4.32}, {"text": "and since at 8 our streak of block", "start": 812.16, "duration": 5.44}, {"text": "requests ends and therefore we don't", "start": 814.959, "duration": 5.281}, {"text": "have anything to look ahead and thus all", "start": 817.6, "duration": 5.039}, {"text": "the elements inside the cache are good", "start": 820.24, "duration": 5.039}, {"text": "for eviction", "start": 822.639, "duration": 5.76}, {"text": "now if you observe again it's a tie and", "start": 825.279, "duration": 5.601}, {"text": "for tie breaker we use first in first", "start": 828.399, "duration": 5.12}, {"text": "out so in that case the block number", "start": 830.88, "duration": 5.04}, {"text": "four will be replaced and make space for", "start": 833.519, "duration": 4.721}, {"text": "the main memory block number eight", "start": 835.92, "duration": 4.0}, {"text": "now since the prediction of block", "start": 838.24, "duration": 4.719}, {"text": "requests is impossible therefore it", "start": 839.92, "duration": 5.039}, {"text": "can't really be implemented", "start": 842.959, "duration": 4.481}, {"text": "however this is widely used as a", "start": 844.959, "duration": 4.801}, {"text": "efficiency measuring tool for real", "start": 847.44, "duration": 5.36}, {"text": "replacement algorithms that means since", "start": 849.76, "duration": 5.519}, {"text": "it produces the optimal outcome it can", "start": 852.8, "duration": 4.64}, {"text": "be used as a tool for efficiency", "start": 855.279, "duration": 3.841}, {"text": "measuring for other replacement", "start": 857.44, "duration": 4.8}, {"text": "algorithms now it was proposed by l.a", "start": 859.12, "duration": 6.56}, {"text": "bellady in 1966 and that's why it is", "start": 862.24, "duration": 5.44}, {"text": "also known as bellady's optimal", "start": 865.68, "duration": 4.48}, {"text": "algorithm so this is the underlying", "start": 867.68, "duration": 6.24}, {"text": "concept of optimal replacement policy", "start": 870.16, "duration": 5.919}, {"text": "all right everyone that will be all for", "start": 873.92, "duration": 4.64}, {"text": "this session in this session we learned", "start": 876.079, "duration": 4.32}, {"text": "about some of the cash replacement", "start": 878.56, "duration": 3.68}, {"text": "policies starting with random", "start": 880.399, "duration": 4.401}, {"text": "replacement followed by first in first", "start": 882.24, "duration": 5.36}, {"text": "out last in first out and finally the", "start": 884.8, "duration": 5.279}, {"text": "optimal replacement policy which is also", "start": 887.6, "duration": 5.359}, {"text": "known as biladdie's optimal algorithm in", "start": 890.079, "duration": 4.961}, {"text": "the next session we will discuss about", "start": 892.959, "duration": 4.801}, {"text": "the recency and frequency based policies", "start": 895.04, "duration": 4.96}, {"text": "so i hope to see you in the next one", "start": 897.76, "duration": 4.66}, {"text": "thank you all for watching", "start": 900.0, "duration": 2.59}, {"text": "[Music]", "start": 902.42, "duration": 2.35}, {"text": "[Applause]", "start": 902.59, "duration": 10.369}, {"text": "[Music]", "start": 904.77, "duration": 10.27}, {"text": "you", "start": 912.959, "duration": 2.081}]