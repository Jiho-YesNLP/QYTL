[{"text": "hello everyone and welcome back", "start": 6.24, "duration": 6.24}, {"text": "in the last couple of sessions we have", "start": 10.24, "duration": 4.68}, {"text": "been studying about decoder expansion", "start": 12.48, "duration": 5.44}, {"text": "procedures now in this session we will", "start": 14.92, "duration": 5.88}, {"text": "learn what impact do they have on the", "start": 17.92, "duration": 4.56}, {"text": "architecture of rom", "start": 20.8, "duration": 5.04}, {"text": "so without any further ado let's get to", "start": 22.48, "duration": 4.4}, {"text": "learning", "start": 25.84, "duration": 4.56}, {"text": "now we already know within a rom chip", "start": 26.88, "duration": 6.32}, {"text": "there is a decoder circuit and a rom", "start": 30.4, "duration": 4.159}, {"text": "matrix", "start": 33.2, "duration": 3.12}, {"text": "and during the session of introduction", "start": 34.559, "duration": 4.481}, {"text": "to primary memory we embedded the half", "start": 36.32, "duration": 5.6}, {"text": "adder logic that is the carry and the", "start": 39.04, "duration": 5.999}, {"text": "sum functions within a rom circuit", "start": 41.92, "duration": 5.36}, {"text": "let's reconsider this circuit", "start": 45.039, "duration": 4.0}, {"text": "i would like to reintroduce the", "start": 47.28, "duration": 3.84}, {"text": "architecture of this particular circuit", "start": 49.039, "duration": 4.721}, {"text": "from a different perspective this time", "start": 51.12, "duration": 5.2}, {"text": "now if you all remember whenever we have", "start": 53.76, "duration": 5.439}, {"text": "discussed this circuit we considered it", "start": 56.32, "duration": 5.52}, {"text": "to be just a means of representing", "start": 59.199, "duration": 5.201}, {"text": "boolean functions through these vertical", "start": 61.84, "duration": 4.959}, {"text": "connections and these horizontal", "start": 64.4, "duration": 5.039}, {"text": "connections are the mean terms", "start": 66.799, "duration": 6.241}, {"text": "observe in the carry functions sop the", "start": 69.439, "duration": 7.04}, {"text": "mean term 3 is there and that's why the", "start": 73.04, "duration": 5.119}, {"text": "vertical connection of the carry", "start": 76.479, "duration": 3.441}, {"text": "function has the link with the", "start": 78.159, "duration": 4.721}, {"text": "horizontal connection m3", "start": 79.92, "duration": 6.96}, {"text": "now in sums sop we have the mean terms 1", "start": 82.88, "duration": 7.04}, {"text": "and 2 and that's the reason why the", "start": 86.88, "duration": 5.599}, {"text": "connection of sum has the links with the", "start": 89.92, "duration": 5.92}, {"text": "decoder output lines m1 and m2", "start": 92.479, "duration": 5.921}, {"text": "now instead of observing the circuit", "start": 95.84, "duration": 5.12}, {"text": "with respect to carry and sum", "start": 98.4, "duration": 5.28}, {"text": "let's examine it with respect to the", "start": 100.96, "duration": 5.76}, {"text": "decoder's output lines that is these", "start": 103.68, "duration": 5.36}, {"text": "horizontal connections", "start": 106.72, "duration": 6.56}, {"text": "now observe for m0 there are no links", "start": 109.04, "duration": 7.119}, {"text": "with either carry or sum", "start": 113.28, "duration": 6.479}, {"text": "therefore we can think of m0 as two", "start": 116.159, "duration": 7.041}, {"text": "memory cells having zeros in them", "start": 119.759, "duration": 6.64}, {"text": "coming to m1 we have no link with this", "start": 123.2, "duration": 5.44}, {"text": "connection of carry", "start": 126.399, "duration": 4.48}, {"text": "but we have a link with this vertical", "start": 128.64, "duration": 3.92}, {"text": "connection of sum", "start": 130.879, "duration": 4.08}, {"text": "so we can think of it as two memory", "start": 132.56, "duration": 5.36}, {"text": "cells having zero in the first one and", "start": 134.959, "duration": 5.36}, {"text": "one in the second cell", "start": 137.92, "duration": 6.64}, {"text": "now m2 has similar situation as m1", "start": 140.319, "duration": 7.28}, {"text": "so we can think of it as two cells", "start": 144.56, "duration": 7.039}, {"text": "having 0 and 1 respectively", "start": 147.599, "duration": 8.64}, {"text": "finally m3 will represent 1 0 as it has", "start": 151.599, "duration": 7.201}, {"text": "a link with the first connection", "start": 156.239, "duration": 4.801}, {"text": "but not with the vertical connection of", "start": 158.8, "duration": 3.36}, {"text": "sum", "start": 161.04, "duration": 3.36}, {"text": "so instead of these horizontal and", "start": 162.16, "duration": 4.159}, {"text": "vertical connections", "start": 164.4, "duration": 4.8}, {"text": "we can think of the circuit as a storage", "start": 166.319, "duration": 7.2}, {"text": "unit that stores 0 0 in m0", "start": 169.2, "duration": 7.679}, {"text": "and similarly stores 0 1", "start": 173.519, "duration": 10.241}, {"text": "0 1 and 1 0 in m1 m2 and m3 respectively", "start": 176.879, "duration": 8.881}, {"text": "now if you remember during the", "start": 183.76, "duration": 4.32}, {"text": "discussion of direct memory mapping we", "start": 185.76, "duration": 5.28}, {"text": "learned that the smallest addressable", "start": 188.08, "duration": 6.159}, {"text": "unit of memory is called word", "start": 191.04, "duration": 6.64}, {"text": "now according to our new perspective m0", "start": 194.239, "duration": 6.801}, {"text": "is storing two bits that is zero zero", "start": 197.68, "duration": 6.16}, {"text": "m one is storing two bits that is zero", "start": 201.04, "duration": 3.759}, {"text": "one", "start": 203.84, "duration": 4.399}, {"text": "similarly m two is also storing two more", "start": 204.799, "duration": 8.0}, {"text": "bits zero one and finally m3 also has", "start": 208.239, "duration": 7.28}, {"text": "two bits that is one zero", "start": 212.799, "duration": 7.921}, {"text": "so we can say for this circuit m0 to m3", "start": 215.519, "duration": 7.761}, {"text": "these all are addresses", "start": 220.72, "duration": 4.799}, {"text": "and it can also be proved", "start": 223.28, "duration": 3.599}, {"text": "notice this", "start": 225.519, "duration": 5.121}, {"text": "if we feed 1 1 through a and b", "start": 226.879, "duration": 7.44}, {"text": "due to the input 1 1 the output line o3", "start": 230.64, "duration": 6.48}, {"text": "of this decoder will be activated and we", "start": 234.319, "duration": 4.801}, {"text": "will be able to access the stored", "start": 237.12, "duration": 4.72}, {"text": "information that is 1 0 from that", "start": 239.12, "duration": 4.16}, {"text": "address", "start": 241.84, "duration": 4.24}, {"text": "so in this circuit", "start": 243.28, "duration": 5.76}, {"text": "okay let's do one thing since we just", "start": 246.08, "duration": 5.12}, {"text": "have seen that we can actually store", "start": 249.04, "duration": 5.279}, {"text": "things in here from now onwards we will", "start": 251.2, "duration": 4.64}, {"text": "call it memory", "start": 254.319, "duration": 5.76}, {"text": "so in this memory unit every address", "start": 255.84, "duration": 6.079}, {"text": "stores two bits", "start": 260.079, "duration": 5.041}, {"text": "hence we deduce for this memory unit", "start": 261.919, "duration": 5.681}, {"text": "one word is of two bits", "start": 265.12, "duration": 4.72}, {"text": "because two bits is the smallest", "start": 267.6, "duration": 5.599}, {"text": "addressable memory in this memory unit", "start": 269.84, "duration": 5.84}, {"text": "and four such words are there", "start": 273.199, "duration": 3.44}, {"text": "hence", "start": 275.68, "duration": 3.84}, {"text": "four multiplied by two bits gives us", "start": 276.639, "duration": 4.161}, {"text": "eight bits", "start": 279.52, "duration": 6.399}, {"text": "so 8 bits can be stored in this rom chip", "start": 280.8, "duration": 5.119}, {"text": "now let's consider a 2 to 4 decoder with", "start": 286.32, "duration": 6.879}, {"text": "8 vertical connections", "start": 290.24, "duration": 6.399}, {"text": "and we all know initially all the links", "start": 293.199, "duration": 4.961}, {"text": "will be connected", "start": 296.639, "duration": 4.241}, {"text": "now from our newly gained perspective we", "start": 298.16, "duration": 4.16}, {"text": "can say", "start": 300.88, "duration": 4.56}, {"text": "this is a memory unit which looks kinda", "start": 302.32, "duration": 4.8}, {"text": "like this", "start": 305.44, "duration": 2.72}, {"text": "also", "start": 307.12, "duration": 4.079}, {"text": "since initially all the links remain", "start": 308.16, "duration": 6.8}, {"text": "connected hence all these cells will", "start": 311.199, "duration": 6.401}, {"text": "have once in them", "start": 314.96, "duration": 4.0}, {"text": "now notice", "start": 317.6, "duration": 5.28}, {"text": "each of these are of 8 bits", "start": 318.96, "duration": 7.04}, {"text": "output line o0 represents the first", "start": 322.88, "duration": 4.48}, {"text": "eight bits", "start": 326.0, "duration": 6.96}, {"text": "similarly o1 o2 and o3 represent the", "start": 327.36, "duration": 6.559}, {"text": "second", "start": 332.96, "duration": 4.0}, {"text": "third and the fourth group of eight bits", "start": 333.919, "duration": 4.56}, {"text": "respectively", "start": 336.96, "duration": 5.44}, {"text": "so basically there are 4 addresses", "start": 338.479, "duration": 7.681}, {"text": "now there are 4 addresses and each one", "start": 342.4, "duration": 5.76}, {"text": "stores one word", "start": 346.16, "duration": 4.319}, {"text": "now in this particular memory", "start": 348.16, "duration": 5.68}, {"text": "the smallest addressable unit is of 8", "start": 350.479, "duration": 4.321}, {"text": "bits", "start": 353.84, "duration": 5.44}, {"text": "therefore it can store 4 multiplied by 8", "start": 354.8, "duration": 7.119}, {"text": "that is 32 bits", "start": 359.28, "duration": 5.68}, {"text": "now let me show you all the procedure of", "start": 361.919, "duration": 6.161}, {"text": "address expansion of rom chips", "start": 364.96, "duration": 4.48}, {"text": "what we will do", "start": 368.08, "duration": 4.239}, {"text": "we will take two of these memory chips", "start": 369.44, "duration": 5.44}, {"text": "and thereafter we will apply the logic", "start": 372.319, "duration": 4.481}, {"text": "of decoder expansion", "start": 374.88, "duration": 4.72}, {"text": "so our objective is to create a memory", "start": 376.8, "duration": 4.64}, {"text": "unit with these", "start": 379.6, "duration": 4.4}, {"text": "where the first address will hold these", "start": 381.44, "duration": 5.759}, {"text": "eight bits and using the last address we", "start": 384.0, "duration": 6.8}, {"text": "will be able to access these eight bits", "start": 387.199, "duration": 5.28}, {"text": "so what we will do", "start": 390.8, "duration": 4.72}, {"text": "we will first create common connections", "start": 392.479, "duration": 7.28}, {"text": "for the input lines i1 and i0", "start": 395.52, "duration": 6.799}, {"text": "now the tricky part is handling the", "start": 399.759, "duration": 4.481}, {"text": "enable input lines", "start": 402.319, "duration": 3.921}, {"text": "to the viewers it is my strong", "start": 404.24, "duration": 4.16}, {"text": "recommendation that please watch the", "start": 406.24, "duration": 4.959}, {"text": "videos of architecture of rom part 2 and", "start": 408.4, "duration": 5.519}, {"text": "3 in order to understand this circuit", "start": 411.199, "duration": 3.761}, {"text": "clearly", "start": 413.919, "duration": 3.761}, {"text": "now in the first decoder we will feed", "start": 414.96, "duration": 5.679}, {"text": "the input to the enable line through a", "start": 417.68, "duration": 4.239}, {"text": "not gate", "start": 420.639, "duration": 4.161}, {"text": "whereas for the second decoder the input", "start": 421.919, "duration": 5.041}, {"text": "will be given as it is", "start": 424.8, "duration": 4.959}, {"text": "so this white input line will represent", "start": 426.96, "duration": 5.6}, {"text": "the most significant bit of the input", "start": 429.759, "duration": 5.201}, {"text": "and this yellow input line will", "start": 432.56, "duration": 4.72}, {"text": "represent the least significant bit of", "start": 434.96, "duration": 4.239}, {"text": "the input sequence", "start": 437.28, "duration": 5.039}, {"text": "now if we feed one through this most", "start": 439.199, "duration": 5.201}, {"text": "significant input bit", "start": 442.319, "duration": 5.28}, {"text": "this inverter will turn it to zero which", "start": 444.4, "duration": 6.239}, {"text": "will disable this decoder whereas since", "start": 447.599, "duration": 6.0}, {"text": "the original input was 1 the second", "start": 450.639, "duration": 5.921}, {"text": "decoder will be enabled so that we will", "start": 453.599, "duration": 7.921}, {"text": "be able to access any of these addresses", "start": 456.56, "duration": 6.88}, {"text": "now on the contrary", "start": 461.52, "duration": 3.92}, {"text": "if we feed 0", "start": 463.44, "duration": 5.039}, {"text": "the not get will turn that into 1", "start": 465.44, "duration": 6.0}, {"text": "enabling this decoder in that process", "start": 468.479, "duration": 5.681}, {"text": "which will allow us to access any of", "start": 471.44, "duration": 5.599}, {"text": "these addresses", "start": 474.16, "duration": 5.68}, {"text": "nevertheless since the original input is", "start": 477.039, "duration": 3.761}, {"text": "0", "start": 479.84, "duration": 3.84}, {"text": "this decoder will remain disabled", "start": 480.8, "duration": 5.519}, {"text": "now the address range for this decoder", "start": 483.68, "duration": 4.72}, {"text": "is 0 to 3", "start": 486.319, "duration": 5.761}, {"text": "and for this decoder it's 4 to seven", "start": 488.4, "duration": 5.199}, {"text": "and why so", "start": 492.08, "duration": 3.28}, {"text": "it's pretty basic", "start": 493.599, "duration": 4.0}, {"text": "with three input lines there are eight", "start": 495.36, "duration": 5.6}, {"text": "addresses possible right starting from", "start": 497.599, "duration": 6.72}, {"text": "zero zero zero zero zero one", "start": 500.96, "duration": 4.32}, {"text": "till", "start": 504.319, "duration": 2.801}, {"text": "one one one", "start": 505.28, "duration": 4.96}, {"text": "now we have just seen this decoder gets", "start": 507.12, "duration": 6.0}, {"text": "enabled when we feed zero through the", "start": 510.24, "duration": 4.56}, {"text": "most significant bit of the input", "start": 513.12, "duration": 3.919}, {"text": "sequence which is true for", "start": 514.8, "duration": 4.799}, {"text": "zero zero zero that is zero", "start": 517.039, "duration": 4.961}, {"text": "0 0 1 that is 1", "start": 519.599, "duration": 8.001}, {"text": "0 1 0 that is 2 and 0 1 1 that is 3.", "start": 522.0, "duration": 8.16}, {"text": "on the other hand this decoder gets", "start": 527.6, "duration": 5.679}, {"text": "enabled if we feed 1 through the most", "start": 530.16, "duration": 5.679}, {"text": "significant bit of the input sequence", "start": 533.279, "duration": 5.441}, {"text": "thus the addresses for this decoder will", "start": 535.839, "duration": 6.0}, {"text": "be one zero zero that is four one zero", "start": 538.72, "duration": 4.72}, {"text": "one that is five", "start": 541.839, "duration": 5.841}, {"text": "one one zero or six and one one one or", "start": 543.44, "duration": 5.519}, {"text": "seven", "start": 547.68, "duration": 4.56}, {"text": "so all together in this memory we have", "start": 548.959, "duration": 6.56}, {"text": "eight addresses and clearly the word", "start": 552.24, "duration": 5.12}, {"text": "size is eight bits", "start": 555.519, "duration": 6.481}, {"text": "so this entire memory can store 64 bits", "start": 557.36, "duration": 7.76}, {"text": "now notice that using two rom chips of", "start": 562.0, "duration": 5.92}, {"text": "four addresses applying the logic that", "start": 565.12, "duration": 5.12}, {"text": "we acquired from decoders expansion", "start": 567.92, "duration": 3.599}, {"text": "procedure", "start": 570.24, "duration": 4.0}, {"text": "we created a bigger memory unit with", "start": 571.519, "duration": 4.161}, {"text": "more addresses", "start": 574.24, "duration": 5.68}, {"text": "this is called address expansion of rom", "start": 575.68, "duration": 6.64}, {"text": "now similar to this one there is another", "start": 579.92, "duration": 6.56}, {"text": "phenomenon called word expansion of roms", "start": 582.32, "duration": 6.72}, {"text": "so now what we will do we will take the", "start": 586.48, "duration": 5.919}, {"text": "same two roms but this time we won't", "start": 589.04, "duration": 5.84}, {"text": "increase the number of addresses", "start": 592.399, "duration": 5.44}, {"text": "rather we will try and increase the word", "start": 594.88, "duration": 4.32}, {"text": "size", "start": 597.839, "duration": 4.401}, {"text": "individually these roms have the word", "start": 599.2, "duration": 5.44}, {"text": "size of 8 bits right", "start": 602.24, "duration": 4.96}, {"text": "also they have 4 addresses", "start": 604.64, "duration": 5.04}, {"text": "so now the number of addresses will", "start": 607.2, "duration": 4.879}, {"text": "remain the same that is 4", "start": 609.68, "duration": 3.68}, {"text": "and for this", "start": 612.079, "duration": 3.921}, {"text": "we will feed common inputs to both the", "start": 613.36, "duration": 5.28}, {"text": "input lines of both the decoders", "start": 616.0, "duration": 5.36}, {"text": "now if we also give common input to both", "start": 618.64, "duration": 6.0}, {"text": "the decoders enable lines and feed one", "start": 621.36, "duration": 5.76}, {"text": "through it in that case both the", "start": 624.64, "duration": 5.68}, {"text": "decoders will be enabled together", "start": 627.12, "duration": 6.64}, {"text": "now observe if we feed 0 0 through the", "start": 630.32, "duration": 5.04}, {"text": "input lines", "start": 633.76, "duration": 4.48}, {"text": "both the decoders o 0 output lines will", "start": 635.36, "duration": 5.76}, {"text": "be activated and using a single address", "start": 638.24, "duration": 6.64}, {"text": "0 0 we will be able to access these two", "start": 641.12, "duration": 7.839}, {"text": "8 bits that is 16 bits altogether", "start": 644.88, "duration": 5.28}, {"text": "similarly", "start": 648.959, "duration": 5.921}, {"text": "if we feed 0 1 or 1 of both the decoders", "start": 650.16, "duration": 6.32}, {"text": "will be activated", "start": 654.88, "duration": 4.88}, {"text": "and again we will be able to access 16", "start": 656.48, "duration": 6.0}, {"text": "bits 8 plus 8", "start": 659.76, "duration": 5.68}, {"text": "then again for the input 1 0", "start": 662.48, "duration": 6.16}, {"text": "both the decoders o2 outputs will be", "start": 665.44, "duration": 6.24}, {"text": "activated giving us the access to 16", "start": 668.64, "duration": 4.48}, {"text": "more bits", "start": 671.68, "duration": 4.24}, {"text": "finally for one one", "start": 673.12, "duration": 6.48}, {"text": "the output lines o3 will be activated", "start": 675.92, "duration": 7.039}, {"text": "and we will access 16 more bits", "start": 679.6, "duration": 6.72}, {"text": "so basically we will have four addresses", "start": 682.959, "duration": 6.241}, {"text": "and one word in this particular circuit", "start": 686.32, "duration": 4.88}, {"text": "is 16 bits", "start": 689.2, "duration": 5.36}, {"text": "so in total 64 bits can be stored in", "start": 691.2, "duration": 5.199}, {"text": "this particular circuit", "start": 694.56, "duration": 5.12}, {"text": "however for this one the word size has", "start": 696.399, "duration": 6.0}, {"text": "been increased to 16 bits so for", "start": 699.68, "duration": 6.24}, {"text": "expansion of word all we have to do is", "start": 702.399, "duration": 6.641}, {"text": "connect all the enable lines and feed", "start": 705.92, "duration": 5.84}, {"text": "one through that", "start": 709.04, "duration": 4.96}, {"text": "all right people that will be all for", "start": 711.76, "duration": 5.28}, {"text": "this session i hope the concepts of", "start": 714.0, "duration": 5.519}, {"text": "address and word expansion of rom are", "start": 717.04, "duration": 5.12}, {"text": "now clear to you the next session will", "start": 719.519, "duration": 5.281}, {"text": "be dedicated for some numerical problems", "start": 722.16, "duration": 4.56}, {"text": "so i hope to see you in the next one", "start": 724.8, "duration": 4.38}, {"text": "thank you all for watching", "start": 726.72, "duration": 2.64}, {"text": "[Music]", "start": 729.18, "duration": 2.35}, {"text": "[Applause]", "start": 729.36, "duration": 12.369}, {"text": "[Music]", "start": 731.53, "duration": 10.199}]