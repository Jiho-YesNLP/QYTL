[{"text": "Hi, I\u2019m Carrie Anne, and welcome to CrashCourse\nComputer Science!", "start": 2.9, "duration": 3.06}, {"text": "This 1960 PDP-1 is a great example of early\ncomputing with graphics.", "start": 5.96, "duration": 4.27}, {"text": "You can see a cabinet-sized computer on the\nleft, an electromechanical teletype machine", "start": 10.23, "duration": 4.151}, {"text": "in the middle, and a round screen on the right.", "start": 14.381, "duration": 2.639}, {"text": "Note how they\u2019re separated.", "start": 17.02, "duration": 1.35}, {"text": "That\u2019s because text-based tasks and graphical\ntasks were often distinct back then.", "start": 18.37, "duration": 3.89}, {"text": "In fact, these early computer screens had\na very hard time rendering crisp text, whereas", "start": 22.26, "duration": 4.84}, {"text": "typed paper offered much higher contrast and\nresolution.", "start": 27.1, "duration": 3.24}, {"text": "The most typical use for early computer screens\nwas to keep track of a program's operation,", "start": 30.34, "duration": 4.399}, {"text": "like values in registers.", "start": 34.739, "duration": 1.62}, {"text": "It didn\u2019t make sense to have a teletype\nmachine print this on paper over and over", "start": 36.359, "duration": 3.421}, {"text": "and over again -- that\u2019d waste a lot of\npaper, and it was slow.", "start": 39.78, "duration": 3.72}, {"text": "On the other hand, screens were dynamic and\nquick to update -- perfect for temporary values.", "start": 43.5, "duration": 4.929}, {"text": "Computer screens were rarely considered for\nprogram output, though.", "start": 48.429, "duration": 2.741}, {"text": "Instead, any results from a computation were\ntypically written to paper or some other more", "start": 51.17, "duration": 3.899}, {"text": "permanent medium.", "start": 55.069, "duration": 1.091}, {"text": "But, screens were so darn useful that by the\nearly 1960s, people started to use them for", "start": 56.16, "duration": 4.76}, {"text": "awesome things.", "start": 60.92, "duration": 1.1}, {"text": "INTRO", "start": 62.02, "duration": 8.82}, {"text": "A lot of different display technologies have\nbeen created over the decades, but the most", "start": 70.84, "duration": 3.96}, {"text": "influential, and also the earliest, were Cathode\nRay Tubes, or CRTs.", "start": 74.8, "duration": 4.5}, {"text": "These work by shooting electrons out of an\nemitter at a phosphor-coated screen.", "start": 79.3, "duration": 4.26}, {"text": "When electrons hit the coating, it glows for\na fraction of a second.", "start": 83.56, "duration": 3.36}, {"text": "Because electrons are charged particles, their\npaths can be manipulated with electromagnetic", "start": 86.92, "duration": 4.76}, {"text": "fields.", "start": 91.68, "duration": 1.0}, {"text": "Plates or coils are used inside to steer electrons\nto a desired position, both left-right and", "start": 92.68, "duration": 4.95}, {"text": "up-down.", "start": 97.63, "duration": 0.79}, {"text": "With this control, there are two ways you\ncan draw graphics.", "start": 98.42, "duration": 2.38}, {"text": "The first option is to direct the electron\nbeam to trace out shapes.", "start": 100.81, "duration": 3.41}, {"text": "This is called Vector Scanning.", "start": 104.23, "duration": 1.71}, {"text": "Because the glow persists for a little bit,\nif you repeat the path quickly enough, you", "start": 105.94, "duration": 3.4}, {"text": "create a solid image.", "start": 109.34, "duration": 1.27}, {"text": "The other option is to repeatedly follow a\nfixed path, scanning line by line, from top", "start": 110.61, "duration": 4.7}, {"text": "left to bottom right, and looping over and\nover again.", "start": 115.31, "duration": 3.02}, {"text": "You only turn on the electron beam at certain\npoints to create graphics.", "start": 118.33, "duration": 3.53}, {"text": "This is called Raster Scanning.", "start": 121.86, "duration": 1.65}, {"text": "With this approach, you can display shapes...\nand even text... all made of little line segments.", "start": 123.51, "duration": 4.7}, {"text": "Eventually, as display technologies improved,\nit was possible to render crisp dots onto", "start": 128.21, "duration": 3.83}, {"text": "the screen, aka pixels.", "start": 132.04, "duration": 2.55}, {"text": "The Liquid Crystal Displays, or LCDs, that\nwe use today are quite a different technology.", "start": 134.59, "duration": 4.67}, {"text": "But, they use raster scanning too, updating\nthe brightness of little tiny red, green and", "start": 139.26, "duration": 4.35}, {"text": "blue pixels many times a second.", "start": 143.61, "duration": 2.18}, {"text": "Interestingly, most early computers didn\u2019t\nuse pixels -- not because they couldn\u2019t", "start": 145.79, "duration": 4.149}, {"text": "physically, but because it consumed way too\nmuch memory for computers of the time.", "start": 149.94, "duration": 4.15}, {"text": "A 200 by 200 pixel image contains 40,000 pixels.", "start": 154.09, "duration": 4.17}, {"text": "Even if you use just one bit of data for each\npixel, that\u2019s black OR white -- not grayscale!", "start": 158.26, "duration": 5.239}, {"text": "-- the image would consume 40,000 bits of\nmemory.", "start": 163.499, "duration": 2.281}, {"text": "That would have gobbled up more than half\nof a PDP-1\u2019s entire RAM.", "start": 165.78, "duration": 4.22}, {"text": "So, computer scientists and engineers had\nto come up with clever tricks to render graphics", "start": 170.0, "duration": 4.359}, {"text": "until memory sizes caught up to our pixelicious\nambitions.", "start": 174.359, "duration": 3.291}, {"text": "Instead of storing tens of thousands of pixels,\nearly computers stored a much smaller grid", "start": 177.65, "duration": 3.789}, {"text": "of letters, most typically 80 by 25 characters.", "start": 181.439, "duration": 3.88}, {"text": "That\u2019s 2000 characters in total.", "start": 185.319, "duration": 2.301}, {"text": "And if each is encoded in 8 bits, using something\nlike ASCII, it would consume 16,000 bits of", "start": 187.62, "duration": 4.61}, {"text": "memory for an entire screen full of text,\nwhich is way more reasonable.", "start": 192.23, "duration": 3.71}, {"text": "To pull this off, computers needed an extra\npiece of hardware that could read characters", "start": 195.94, "duration": 3.639}, {"text": "out of RAM, and convert them into raster graphics\nto be drawn onto the screen.", "start": 199.579, "duration": 4.14}, {"text": "This was called a character generator, and\nthey were basically the first graphics cards.", "start": 203.719, "duration": 4.02}, {"text": "Inside, they had a little piece of Read Only\nMemory, a ROM, that stored graphics for each", "start": 207.739, "duration": 4.89}, {"text": "character, called a dot matrix pattern.", "start": 212.629, "duration": 2.19}, {"text": "If the graphics card saw the 8-bit code for\nthe letter \u201cK\u201d, then it would raster scan", "start": 214.819, "duration": 3.711}, {"text": "the 2D pattern for the letter K onto the screen,\nin the appropriate position.", "start": 218.53, "duration": 3.209}, {"text": "To do this, the character generator had special\naccess to a portion of a computer's memory", "start": 221.739, "duration": 3.75}, {"text": "reserved for graphics, a region called the\nscreen buffer.", "start": 225.489, "duration": 3.351}, {"text": "Computer programs wishing to render text to\nthe screen simply manipulated the values stored", "start": 228.84, "duration": 4.3}, {"text": "in this region, just as they could with any\nother data in RAM.", "start": 233.14, "duration": 3.249}, {"text": "This scheme required much less memory, but\nit also meant the only thing you could draw", "start": 236.389, "duration": 3.451}, {"text": "was text.", "start": 239.84, "duration": 1.259}, {"text": "Even still, people got pretty inventive with\nASCII art!", "start": 241.099, "duration": 3.01}, {"text": "People also tried to make rudimentary, pseudo-graphical\ninterfaces out of this basic set of characters,", "start": 244.109, "duration": 5.481}, {"text": "using things like underscores and plus signs\nto create boxes, lines and other primitive", "start": 249.59, "duration": 4.31}, {"text": "shapes.", "start": 253.9, "duration": 0.54}, {"text": "But, the character set was really too small\nto do anything terribly sophisticated.", "start": 254.44, "duration": 3.92}, {"text": "So, various extensions to ASCII were made\nthat added new semigraphical characters, like", "start": 258.36, "duration": 4.39}, {"text": "IBM\u2019s CP437 character set, seen here, which\nwas used in DOS.", "start": 262.75, "duration": 4.49}, {"text": "On some systems, the text color and background\ncolor could be defined with a few extra bits.", "start": 267.24, "duration": 4.17}, {"text": "That allowed glorious interfaces like this\nDOS example, which is built entirely out the", "start": 271.41, "duration": 4.189}, {"text": "character set you just saw.", "start": 275.599, "duration": 1.891}, {"text": "Character generators were a clever way to\nsave memory.", "start": 277.49, "duration": 2.29}, {"text": "But, they didn\u2019t provide any way to draw\narbitrary shapes.", "start": 279.78, "duration": 2.4}, {"text": "And that\u2019s important if you want to draw\ncontent like electrical circuits, architectural", "start": 282.18, "duration": 4.25}, {"text": "plans, maps, and... well\u2026 pretty much everything\nthat isn\u2019t text!", "start": 286.43, "duration": 2.68}, {"text": "To do this, without resorting to memory-gobbling\npixels, computer scientists used the vector", "start": 289.11, "duration": 4.01}, {"text": "mode available on CRTs.", "start": 293.12, "duration": 2.049}, {"text": "The idea is pretty straightforward: all content\nto be drawn on screen is defined by a series", "start": 295.169, "duration": 4.681}, {"text": "of lines.", "start": 299.85, "duration": 1.0}, {"text": "There\u2019s no text.", "start": 300.85, "duration": 1.0}, {"text": "If you need to draw text, you have to draw\nit out of lines.", "start": 301.85, "duration": 2.84}, {"text": "Don\u2019t read between the lines here.", "start": 304.69, "duration": 1.27}, {"text": "There is only lines!", "start": 305.96, "duration": 1.41}, {"text": "Got it?", "start": 307.37, "duration": 1.0}, {"text": "Alright, no more word play.", "start": 308.37, "duration": 1.1}, {"text": "I\u2019m drawing the line here.", "start": 309.47, "duration": 1.05}, {"text": "Let\u2019s pretend this video is a cartesian\nplane, 200 units wide and 100 tall, with the", "start": 310.52, "duration": 4.989}, {"text": "origin \u2013 that\u2019s the zero-zero point \u2013 in\nthe upper left corner.", "start": 315.509, "duration": 3.581}, {"text": "We can draw a shape with the following vector\ncommands, which we\u2019ve borrowed from the", "start": 319.09, "duration": 3.97}, {"text": "Vectrex, an early vector display system.", "start": 323.06, "duration": 2.03}, {"text": "First, we reset, which clears the screen,\nmoves the drawing point of the electron gun", "start": 325.09, "duration": 4.06}, {"text": "to zero-zero, and sets the brightness of lines\nto zero.", "start": 329.15, "duration": 3.35}, {"text": "Then we move the drawing point down to 50\n50, and set the line intensity to 100%.", "start": 332.5, "duration": 5.13}, {"text": "With the intensity up, now we move to 100,\n50, then 60, 75 and then back to 50,50.", "start": 337.63, "duration": 5.59}, {"text": "The last thing to do is set our line intensity\nback to 0%.", "start": 343.22, "duration": 4.04}, {"text": "Cool!", "start": 347.26, "duration": 0.5}, {"text": "We\u2019ve got a triangle!", "start": 347.77, "duration": 1.26}, {"text": "This sequence of commands would consume on\nthe order of 160 bits, which is way more efficient", "start": 349.03, "duration": 4.16}, {"text": "than keeping a huge matrix of pixel values!", "start": 353.19, "duration": 2.409}, {"text": "Just like how characters were stored in memory\nand turned into graphics by a character generator,", "start": 355.599, "duration": 4.22}, {"text": "these vector instructions were also stored\nin memory, and rendered to a screen using", "start": 359.819, "duration": 3.691}, {"text": "a vector graphics card.", "start": 363.51, "duration": 1.719}, {"text": "Hundreds of commands could be packed together,\nsequentially, in the screen buffer, and used", "start": 365.229, "duration": 4.19}, {"text": "to build up complex graphics.", "start": 369.419, "duration": 1.81}, {"text": "All made of lines!", "start": 371.229, "duration": 1.47}, {"text": "Because all these vectors are stored in memory,\ncomputer programs can update the values freely,", "start": 372.699, "duration": 4.621}, {"text": "allowing for graphics that change over time\n-- Animation!", "start": 377.32, "duration": 3.059}, {"text": "One of the very earliest video games, Spacewar!,\nwas built on a PDP-1 in 1962 using vector", "start": 380.379, "duration": 5.69}, {"text": "graphics.", "start": 386.069, "duration": 1.0}, {"text": "It\u2019s credited with inspiring many later\ngames, like Asteroids, and even the first", "start": 387.069, "duration": 3.94}, {"text": "commercial arcade video game: Computer Space.", "start": 391.009, "duration": 3.121}, {"text": "1962 was also a huge milestone because of\nSketchpad, an interactive graphical interface", "start": 394.13, "duration": 4.819}, {"text": "that offered Computer-Aided Design -- called\nCAD Software today.", "start": 398.949, "duration": 3.231}, {"text": "It\u2019s widely considered the earliest example\nof a complete graphical application.", "start": 402.18, "duration": 4.16}, {"text": "And its inventor, Ivan Sutherland, later won\nthe Turing Award for this breakthrough.", "start": 406.34, "duration": 4.199}, {"text": "To interact with graphics, Sketchpad used\na recently invented input device called a", "start": 410.539, "duration": 3.521}, {"text": "light pen, which was a stylus tethered to\na computer with a wire.", "start": 414.06, "duration": 3.829}, {"text": "By using a light sensor in the tip, the pen\ndetected the refresh of the computer monitor.", "start": 417.889, "duration": 4.631}, {"text": "Using the timing of the refresh, the computer\ncould actually figure out the pen\u2019s position", "start": 422.52, "duration": 3.96}, {"text": "on the screen!", "start": 426.48, "duration": 0.999}, {"text": "With this light pen, and various buttons on\na gigantic computer, users could draw lines", "start": 427.479, "duration": 3.991}, {"text": "and other simple shapes.", "start": 431.47, "duration": 1.749}, {"text": "Sketchpad could do things like make lines\nperfectly parallel, the same length, straighten", "start": 433.219, "duration": 4.44}, {"text": "corners into perfect 90 degree intersections,\nand even scale shapes up and down dynamically.", "start": 437.659, "duration": 5.54}, {"text": "These things that were laborious on paper,\na computer now did with a press of a button!", "start": 443.199, "duration": 3.831}, {"text": "Users were also able to save complex designs\nthey created, and then paste them into later", "start": 447.03, "duration": 5.09}, {"text": "designs, and even share with other people.", "start": 452.12, "duration": 2.34}, {"text": "You could have whole libraries of shapes,\nlike electronic components and pieces of furniture", "start": 454.46, "duration": 3.949}, {"text": "that you could just plop in and manipulate\nin your creations.", "start": 458.409, "duration": 3.01}, {"text": "This might all sound pretty routine from today\u2019s\nperspective.", "start": 461.419, "duration": 2.65}, {"text": "But in 1962, when computers were still cabinet-sized\nbehemoths chugging through punch cards, Sketchpad", "start": 464.069, "duration": 5.72}, {"text": "and light pens were equal parts eye opening\nand brain melting.", "start": 469.789, "duration": 3.41}, {"text": "They represented a key turning point in how\ncomputers could be used.", "start": 473.199, "duration": 3.641}, {"text": "They were no longer just number crunching\nmath machines that hummed along behind closed", "start": 476.84, "duration": 3.74}, {"text": "doors.", "start": 480.58, "duration": 1.0}, {"text": "Now, they were potential assistants, interactively\naugmenting human tasks.", "start": 481.58, "duration": 3.739}, {"text": "The earliest computers and displays with true\npixel graphics emerged in the late 1960s.", "start": 485.32, "duration": 4.96}, {"text": "Bits in memory directly \u201cmapped\u201d to pixels\non the screen, what are called bitmapped displays.", "start": 490.28, "duration": 4.94}, {"text": "With full pixel control, totally arbitrary\ngraphics were possible.", "start": 495.22, "duration": 2.78}, {"text": "You can think of a screen\u2019s graphics as\na huge matrix of pixel values . As before,", "start": 498.009, "duration": 4.851}, {"text": "computers reserve a special region of memory\nfor pixel data, called the frame buffer.", "start": 502.86, "duration": 4.25}, {"text": "In the early days, the computer\u2019s RAM was\nused, but later systems used special high", "start": 507.11, "duration": 3.5}, {"text": "speed Video RAM, or VRAM, which was located\non the graphics card itself for high speed", "start": 510.61, "duration": 4.969}, {"text": "access.", "start": 515.579, "duration": 1.0}, {"text": "This is how it\u2019s done today.", "start": 516.579, "duration": 1.231}, {"text": "On an 8-bit grayscale screen, we can set values\nfrom 0 intensity, which is black, to 255 intensity,", "start": 517.81, "duration": 6.18}, {"text": "which is white.", "start": 523.99, "duration": 1.0}, {"text": "Well actually, it might be green... or orange,\nas many early displays couldn\u2019t do white.", "start": 524.99, "duration": 3.75}, {"text": "Let\u2019s pretend this video is a really low\nresolution bitmapped screen, with a resolution", "start": 528.74, "duration": 4.099}, {"text": "of 60 by 35 pixels.", "start": 532.839, "duration": 1.901}, {"text": "If we wanted to set the pixel at 10 10 to\nbe white, we could do it with a piece of code", "start": 534.74, "duration": 4.159}, {"text": "like this.", "start": 538.899, "duration": 1.0}, {"text": "If we wanted to draw a line, let\u2019s say from\n30, 0 to 30, 35, we can use a loop, like so\u2026.", "start": 539.899, "duration": 5.251}, {"text": "\u2026.And this changes a whole line of pixels\nto white.", "start": 545.15, "duration": 2.53}, {"text": "If we want to draw something more complicated,\nlet\u2019s say a rectangle, we need to know four", "start": 547.68, "duration": 4.64}, {"text": "values.", "start": 552.32, "duration": 1.0}, {"text": "The X and Y coordinate of its starting corner,\nand its width and height.", "start": 553.32, "duration": 3.24}, {"text": "So far, we\u2019ve drawn everything in white,\nso let\u2019s specify this rectangle to be grey.", "start": 556.56, "duration": 4.62}, {"text": "Grey is halfway between 0 and 255, so that\u2019s\na color value of 127.", "start": 561.18, "duration": 4.97}, {"text": "Then, with two loops \u2013 one nested in the\nother, so that the inner loop runs once for", "start": 566.15, "duration": 4.36}, {"text": "every iteration of the outer loop \u2013 we can\ndraw a rectangle.", "start": 570.51, "duration": 3.88}, {"text": "When the computer executes our code as part\nof its draw routine, it colors in all the", "start": 574.39, "duration": 3.35}, {"text": "pixels we specified.", "start": 577.74, "duration": 1.21}, {"text": "Let\u2019s wrap this up into a \u201cdraw rectangle\nfunction\u201d, like this:", "start": 578.95, "duration": 3.129}, {"text": "Now, to draw a second rectangle on the other\nside of the screen, maybe in black this time,", "start": 582.079, "duration": 4.441}, {"text": "we can just call our rectangle drawing function.", "start": 586.52, "duration": 2.259}, {"text": "Voila!!", "start": 588.779, "duration": 1.0}, {"text": "Just like the other graphics schemes we\u2019ve\ndiscussed, programs can manipulate pixel data", "start": 589.779, "duration": 3.601}, {"text": "in the framebuffer, creating interactive graphics.", "start": 593.38, "duration": 3.23}, {"text": "Pong time!", "start": 596.61, "duration": 1.0}, {"text": "Of course, programmers aren\u2019t wasting time\nwriting drawing functions from scratch.", "start": 597.61, "duration": 4.2}, {"text": "They use graphics libraries with ready-to-go\nfunctions for drawing lines, curves, shapes,", "start": 601.81, "duration": 4.42}, {"text": "text, and other cool stuff.", "start": 606.23, "duration": 1.72}, {"text": "Just a new level of abstraction!", "start": 607.95, "duration": 7.56}, {"text": "The flexibility of bitmapped graphics opened\nup a whole new world of possibilities for", "start": 615.51, "duration": 3.78}, {"text": "interactive computing, but it remained expensive\nfor decades.", "start": 619.29, "duration": 3.82}, {"text": "As I mentioned last episode, by as late as\n1971, it was estimated there were around 70,000", "start": 623.11, "duration": 5.58}, {"text": "electro-mechanical teletype machines and 70,000\nterminals in use, in the United States.", "start": 628.69, "duration": 5.149}, {"text": "Amazingly, there were only around 1,000 computers\nin the US that had interactive graphical screens.", "start": 633.839, "duration": 5.87}, {"text": "That\u2019s not a lot!", "start": 639.709, "duration": 1.181}, {"text": "But the stage was set \u2013 helped along by\npioneering efforts like Sketchpad and Spacewars", "start": 640.89, "duration": 4.78}, {"text": "\u2013 for computer displays to become ubiquitous,\nand with them, the dawn of graphical user", "start": 645.67, "duration": 4.88}, {"text": "interfaces, which we\u2019ll cover in a few episodes!", "start": 650.55, "duration": 2.31}, {"text": "I\u2019ll see you next week.", "start": 652.88, "duration": 1.04}]