[{"text": "hello everyone welcome back to the next", "start": 0.0, "duration": 4.23}, {"text": "lecture in the computer Network series", "start": 2.429, "duration": 5.131}, {"text": "and we are now in the last error", "start": 4.23, "duration": 5.43}, {"text": "detection technique the cyclic", "start": 7.56, "duration": 5.94}, {"text": "redundancy check CRC in part 1 we will", "start": 9.66, "duration": 6.269}, {"text": "be focusing on the sender side that is", "start": 13.5, "duration": 5.22}, {"text": "the CRC generation let's start the", "start": 15.929, "duration": 5.19}, {"text": "session with the outcomes what we are", "start": 18.72, "duration": 4.319}, {"text": "going to learn in today's session in", "start": 21.119, "duration": 4.201}, {"text": "today's session we are going to know the", "start": 23.039, "duration": 4.681}, {"text": "types of error detection I am we are", "start": 25.32, "duration": 4.619}, {"text": "going to understand how to generate the", "start": 27.72, "duration": 5.7}, {"text": "CRC the generation of CRC is mainly the", "start": 29.939, "duration": 6.091}, {"text": "responsibility of the sender let's start", "start": 33.42, "duration": 4.68}, {"text": "the session by knowing the types of", "start": 36.03, "duration": 4.89}, {"text": "error detection we have basically for", "start": 38.1, "duration": 5.13}, {"text": "error detection methods in the previous", "start": 40.92, "duration": 4.92}, {"text": "lectures we have discussed VRC LRC and", "start": 43.23, "duration": 5.009}, {"text": "checksum the final error detection", "start": 45.84, "duration": 5.16}, {"text": "method is the CRC that is the cyclic", "start": 48.239, "duration": 5.431}, {"text": "redundancy check and we know that any", "start": 51.0, "duration": 4.68}, {"text": "error detection technique we are going", "start": 53.67, "duration": 4.11}, {"text": "to append the redundant bits with the", "start": 55.68, "duration": 4.649}, {"text": "message because this redundant bit only", "start": 57.78, "duration": 4.709}, {"text": "will enable the receiver to detect", "start": 60.329, "duration": 4.86}, {"text": "whether there is an error or not so", "start": 62.489, "duration": 5.13}, {"text": "likewise CRC is also going to generate", "start": 65.189, "duration": 4.951}, {"text": "some bits and these bits are called as", "start": 67.619, "duration": 4.951}, {"text": "the redundant bits and in this technique", "start": 70.14, "duration": 4.229}, {"text": "these redundant bits are specifically", "start": 72.57, "duration": 5.81}, {"text": "called as CRC let's solve a problem now", "start": 74.369, "duration": 7.491}, {"text": "find the CRC for the data block one", "start": 78.38, "duration": 5.73}, {"text": "double zero one double zero with the", "start": 81.86, "duration": 5.43}, {"text": "divisor one one zero one the protocols", "start": 84.11, "duration": 4.95}, {"text": "that the sender and the receiver", "start": 87.29, "duration": 4.17}, {"text": "mutually agree upon will decide the", "start": 89.06, "duration": 4.8}, {"text": "divisor so the divisor will be known to", "start": 91.46, "duration": 4.799}, {"text": "the sender the receiver so based on the", "start": 93.86, "duration": 4.799}, {"text": "divisor the crc is going to be", "start": 96.259, "duration": 4.921}, {"text": "calculated or the crc is going to be", "start": 98.659, "duration": 4.401}, {"text": "generated in the sender side and", "start": 101.18, "duration": 4.799}, {"text": "verified in the receiver side now for", "start": 103.06, "duration": 4.96}, {"text": "time being let's assume the divisor is 1", "start": 105.979, "duration": 5.071}, {"text": "1 0 1 and we are given with the data", "start": 108.02, "duration": 7.019}, {"text": "block that is 1 0 0 1 0 0 let's look at", "start": 111.05, "duration": 6.0}, {"text": "the generation of crc in the sender side", "start": 115.039, "duration": 4.561}, {"text": "formerly the crc generation of the", "start": 117.05, "duration": 4.679}, {"text": "sender side involves 4 steps basically", "start": 119.6, "duration": 5.549}, {"text": "step number 1 find the length of the", "start": 121.729, "duration": 4.021}, {"text": "divisor", "start": 125.149, "duration": 3.571}, {"text": "and we are naming it as l and after", "start": 125.75, "duration": 5.1}, {"text": "finding the length of the divisor in", "start": 128.72, "duration": 5.489}, {"text": "step number 2 we are going to append L", "start": 130.85, "duration": 5.96}, {"text": "minus 1 bits to the original message", "start": 134.209, "duration": 5.131}, {"text": "suppose if the length of the divisor is", "start": 136.81, "duration": 5.53}, {"text": "5 then we are going to append 4 bits to", "start": 139.34, "duration": 5.369}, {"text": "the original message don't get confused", "start": 142.34, "duration": 4.679}, {"text": "this appending 4 bits to the original", "start": 144.709, "duration": 4.681}, {"text": "message is not the crc for doing the", "start": 147.019, "duration": 4.741}, {"text": "operation we are going to append L minus", "start": 149.39, "duration": 5.0}, {"text": "1 bits to the original message and then", "start": 151.76, "duration": 5.699}, {"text": "perform binary division operation so we", "start": 154.39, "duration": 5.319}, {"text": "have a divisor and we have a message", "start": 157.459, "duration": 5.101}, {"text": "that is appended with L minus 1 bits now", "start": 159.709, "duration": 4.681}, {"text": "let's start performing the binary", "start": 162.56, "duration": 4.23}, {"text": "division after performing the binary", "start": 164.39, "duration": 5.159}, {"text": "division we will get two results one is", "start": 166.79, "duration": 4.56}, {"text": "the quotient another one is the", "start": 169.549, "duration": 4.321}, {"text": "remainder then whatever we get as the", "start": 171.35, "duration": 6.33}, {"text": "remainder that's the crc and please note", "start": 173.87, "duration": 7.32}, {"text": "we are appending L minus 1 bits so the L", "start": 177.68, "duration": 6.21}, {"text": "minus 1 bits must be the CRC code", "start": 181.19, "duration": 5.37}, {"text": "suppose if we are appending four zeros", "start": 183.89, "duration": 5.79}, {"text": "then four bits must be the CRC bits and", "start": 186.56, "duration": 5.58}, {"text": "when we want to perform the binary", "start": 189.68, "duration": 4.77}, {"text": "division operation we must be knowing", "start": 192.14, "duration": 5.159}, {"text": "about the exclusive or operation so we", "start": 194.45, "duration": 5.069}, {"text": "will just have a recapture on exclusive", "start": 197.299, "duration": 3.841}, {"text": "or operation", "start": 199.519, "duration": 4.081}, {"text": "and B are the two variables so the", "start": 201.14, "duration": 4.8}, {"text": "possibilities for a and B in binaries", "start": 203.6, "duration": 7.41}, {"text": "are 0 0 0 1 1 0 and 1 1 we are gonna", "start": 205.94, "duration": 8.01}, {"text": "perform a XOR B that is a exclusive", "start": 211.01, "duration": 6.39}, {"text": "orbit B so for same inputs it won't", "start": 213.95, "duration": 6.39}, {"text": "produce any output so for 0 0 and 1 1", "start": 217.4, "duration": 6.9}, {"text": "there will be 0 output for different", "start": 220.34, "duration": 6.99}, {"text": "inputs we will get 1 as the output so", "start": 224.3, "duration": 5.189}, {"text": "this is the logic behind exclusive odd", "start": 227.33, "duration": 4.77}, {"text": "you may be wondering we are actually", "start": 229.489, "duration": 4.381}, {"text": "going to perform binary division", "start": 232.1, "duration": 3.6}, {"text": "operation only what is the need for", "start": 233.87, "duration": 4.35}, {"text": "knowing about exclusive odd you will", "start": 235.7, "duration": 4.47}, {"text": "understand the significance of exclusive", "start": 238.22, "duration": 4.59}, {"text": "or when we see an example let's see an", "start": 240.17, "duration": 3.21}, {"text": "example", "start": 242.81, "duration": 3.959}, {"text": "in the question message is given and the", "start": 243.38, "duration": 5.49}, {"text": "divisor is given just in the binary", "start": 246.769, "duration": 4.201}, {"text": "division operation just place the", "start": 248.87, "duration": 4.86}, {"text": "divisor here and the message here what", "start": 250.97, "duration": 5.1}, {"text": "is this part this is the divisor and", "start": 253.73, "duration": 4.95}, {"text": "what is this part this is the message on", "start": 256.07, "duration": 4.949}, {"text": "top of this we will be getting the", "start": 258.68, "duration": 4.44}, {"text": "quotient at the bottom will be getting", "start": 261.019, "duration": 5.011}, {"text": "the remainder now step number 1 just", "start": 263.12, "duration": 5.609}, {"text": "recall step number 1 how many number of", "start": 266.03, "duration": 5.49}, {"text": "bits are there in the divisor we have", "start": 268.729, "duration": 6.361}, {"text": "four bits so L is equal to 4 here so L", "start": 271.52, "duration": 5.76}, {"text": "is equal to 4 means how many zeros we", "start": 275.09, "duration": 5.07}, {"text": "are going to append L minus 1 that is 3", "start": 277.28, "duration": 5.13}, {"text": "zeros are appended to the message so", "start": 280.16, "duration": 5.13}, {"text": "this is our message and three zeros we", "start": 282.41, "duration": 4.62}, {"text": "are appending with the message after", "start": 285.29, "duration": 3.84}, {"text": "appending the zeros let's start the", "start": 287.03, "duration": 4.32}, {"text": "binary division how many times it is", "start": 289.13, "duration": 6.45}, {"text": "going to divide one time 1 1 0 1 1 times", "start": 291.35, "duration": 7.83}, {"text": "is 1 1 0 1 now let's start the division", "start": 295.58, "duration": 6.33}, {"text": "actually polynomial division this binary", "start": 299.18, "duration": 5.37}, {"text": "division involves exclusive or operation", "start": 301.91, "duration": 5.129}, {"text": "and that's why in the previous slide I", "start": 304.55, "duration": 4.47}, {"text": "just recaptured the exclusive or", "start": 307.039, "duration": 4.921}, {"text": "operation for same input 1 1 will be", "start": 309.02, "duration": 5.64}, {"text": "getting 0 for same input 0 0 will be", "start": 311.96, "duration": 4.98}, {"text": "getting 0 for different input will be", "start": 314.66, "duration": 4.56}, {"text": "getting 1 and will be ignoring this", "start": 316.94, "duration": 4.65}, {"text": "anyway it has no role to play in the", "start": 319.22, "duration": 5.759}, {"text": "operation so the answer for this is same", "start": 321.59, "duration": 6.66}, {"text": "input 0 0 different input 1 we will", "start": 324.979, "duration": 5.701}, {"text": "ignore this then the division involves", "start": 328.25, "duration": 5.099}, {"text": "bringing the next bit so the next bit is", "start": 330.68, "duration": 4.56}, {"text": "brought here now how many", "start": 333.349, "duration": 5.761}, {"text": "1:01 will be dividing this one time 1 1", "start": 335.24, "duration": 7.35}, {"text": "0 1 1 x is 1 1 0 1 let's perform the", "start": 339.11, "duration": 5.91}, {"text": "exclusive or operation this is going to", "start": 342.59, "duration": 6.99}, {"text": "be 1 0 1 0 and we'll be ignoring this", "start": 345.02, "duration": 7.44}, {"text": "and we'll be getting 1 0 1 let's bring", "start": 349.58, "duration": 5.55}, {"text": "this bit here now when we bring this bit", "start": 352.46, "duration": 5.97}, {"text": "here how many times 1 1 0 1 takes it", "start": 355.13, "duration": 5.55}, {"text": "takes one time when we do the exclusive", "start": 358.43, "duration": 5.73}, {"text": "or operation and we get 1 1 1 because", "start": 360.68, "duration": 5.489}, {"text": "for different inputs will be getting 1", "start": 364.16, "duration": 4.979}, {"text": "now let's bring the next bit how many", "start": 366.169, "duration": 7.951}, {"text": "times 1 time 1 1 0 1 now the answer is 0", "start": 369.139, "duration": 9.331}, {"text": "1 1 yes as usual let's bring the next", "start": 374.12, "duration": 6.75}, {"text": "bit now we are required to use the", "start": 378.47, "duration": 4.68}, {"text": "number of times it is dividing but when", "start": 380.87, "duration": 4.59}, {"text": "we observe here this is starting with 0", "start": 383.15, "duration": 5.94}, {"text": "anyway this has no role but this is 0", "start": 385.46, "duration": 5.76}, {"text": "this is starting with 0 so we'll be", "start": 389.09, "duration": 4.62}, {"text": "putting a 0 now when we divide it is", "start": 391.22, "duration": 6.479}, {"text": "going to be 1 1 0 and bring the next bit", "start": 393.71, "duration": 6.959}, {"text": "divide it 1 times and we'll be getting 1", "start": 397.699, "duration": 5.671}, {"text": "1 0 1 and finally we are getting the", "start": 400.669, "duration": 7.171}, {"text": "remainder as 0 0 1 and what is start 0 0", "start": 403.37, "duration": 7.919}, {"text": "1 it is actually the remainder in fact", "start": 407.84, "duration": 6.27}, {"text": "in CRC this is the CRC code", "start": 411.289, "duration": 5.341}, {"text": "so this CRC code only is going to be", "start": 414.11, "duration": 5.07}, {"text": "appended with the original message now", "start": 416.63, "duration": 5.61}, {"text": "let's see what's the CRC 0 0 1 is the", "start": 419.18, "duration": 7.769}, {"text": "CRC let's check it out yes 0 0 1 is the", "start": 422.24, "duration": 7.38}, {"text": "CRC and what is the actual message it's", "start": 426.949, "duration": 6.96}, {"text": "1 0 0 and 1 0 0 and this CRC is going to", "start": 429.62, "duration": 6.99}, {"text": "be appended with the message just C 1 0", "start": 433.909, "duration": 5.281}, {"text": "0 1 0 0 this is what the actual message", "start": 436.61, "duration": 5.79}, {"text": "and we are appending 0 0 1 this is the", "start": 439.19, "duration": 4.949}, {"text": "data part that is the original message", "start": 442.4, "duration": 4.56}, {"text": "what is the other part this is the CRC", "start": 444.139, "duration": 4.77}, {"text": "part so the actual data that is", "start": 446.96, "duration": 5.1}, {"text": "transmitted is 1 double 0 1 double 0 0 0", "start": 448.909, "duration": 6.271}, {"text": "1 and that's it guys there is a homework", "start": 452.06, "duration": 6.81}, {"text": "problem for you just try this find the", "start": 455.18, "duration": 8.19}, {"text": "CRC for one one one double 0 1 0 1 0 1", "start": 458.87, "duration": 7.859}, {"text": "with the divisor X cubed plus x squared", "start": 463.37, "duration": 5.67}, {"text": "plus 1 is anything", "start": 466.729, "duration": 5.251}, {"text": "your Takeo yes we are finding something", "start": 469.04, "duration": 5.88}, {"text": "new here instead of having binary digits", "start": 471.98, "duration": 4.62}, {"text": "as the divisor we are having a", "start": 474.92, "duration": 3.09}, {"text": "polynomial expression", "start": 476.6, "duration": 3.87}, {"text": "no worries guys I will be providing you", "start": 478.01, "duration": 5.76}, {"text": "a hint to solve this the hint is just", "start": 480.47, "duration": 6.27}, {"text": "take this if we are given a polynomial", "start": 483.77, "duration": 6.18}, {"text": "like X power 7 plus X power 5 plus x", "start": 486.74, "duration": 6.96}, {"text": "squared plus X plus 1 just see one", "start": 489.95, "duration": 6.51}, {"text": "because we have X 7 here do we have X", "start": 493.7, "duration": 3.48}, {"text": "power 6", "start": 496.46, "duration": 3.69}, {"text": "no so place a 0 here so X power 6 is", "start": 497.18, "duration": 6.48}, {"text": "taking 0 do we have X power 5 yes put a", "start": 500.15, "duration": 4.14}, {"text": "1 here", "start": 503.66, "duration": 4.11}, {"text": "do we have X power 4 here No so put a 0", "start": 504.29, "duration": 7.5}, {"text": "do we have X cube here no so put a 0 do", "start": 507.77, "duration": 5.97}, {"text": "we have x squared yes", "start": 511.79, "duration": 4.77}, {"text": "we have X square so put a 1 do we have X", "start": 513.74, "duration": 5.94}, {"text": "power 1 yes so we put a 1 here", "start": 516.56, "duration": 6.03}, {"text": "do we have X power 0 anything power 0 is", "start": 519.68, "duration": 5.85}, {"text": "1 do we have any constant here yes if we", "start": 522.59, "duration": 5.79}, {"text": "have a constant put a 1 so try this and", "start": 525.53, "duration": 4.26}, {"text": "solve this problem", "start": 528.38, "duration": 3.63}, {"text": "post your answers in the comment section", "start": 529.79, "duration": 4.44}, {"text": "I hope you guys enjoyed the session and", "start": 532.01, "duration": 4.49}, {"text": "thank you for watching", "start": 534.23, "duration": 4.42}, {"text": "[Applause]", "start": 536.5, "duration": 6.26}, {"text": "[Music]", "start": 538.65, "duration": 6.17}, {"text": "you", "start": 542.76, "duration": 2.06}, {"text": "[Music]", "start": 546.67, "duration": 2.2}]