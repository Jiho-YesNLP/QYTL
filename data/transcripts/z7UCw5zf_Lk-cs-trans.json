[{"text": "hello", "start": 6.16, "duration": 3.84}, {"text": "everyone and welcome back so today we", "start": 6.879, "duration": 3.521}, {"text": "are at", "start": 10.0, "duration": 2.96}, {"text": "our last and final installment of", "start": 10.4, "duration": 3.199}, {"text": "solving", "start": 12.96, "duration": 2.879}, {"text": "interesting previous year questions on", "start": 13.599, "duration": 3.921}, {"text": "direct memory mapping", "start": 15.839, "duration": 4.321}, {"text": "so without any further ado let's get to", "start": 17.52, "duration": 3.679}, {"text": "learning", "start": 20.16, "duration": 2.72}, {"text": "so today we are going to solve this", "start": 21.199, "duration": 3.681}, {"text": "question this question came in", "start": 22.88, "duration": 4.88}, {"text": "gate computer science 2007 paper and as", "start": 24.88, "duration": 4.239}, {"text": "i said earlier", "start": 27.76, "duration": 3.2}, {"text": "looking at this question this question", "start": 29.119, "duration": 3.521}, {"text": "is indeed a very big one", "start": 30.96, "duration": 4.4}, {"text": "but that's not a thing to worry because", "start": 32.64, "duration": 3.28}, {"text": "in no", "start": 35.36, "duration": 2.719}, {"text": "time i will prove it to you that it is a", "start": 35.92, "duration": 4.0}, {"text": "very easy question to solve", "start": 38.079, "duration": 4.48}, {"text": "so let's get to it consider a machine", "start": 39.92, "duration": 5.2}, {"text": "with a bite addressable main memory of 2", "start": 42.559, "duration": 4.721}, {"text": "to the power 16 bytes", "start": 45.12, "duration": 4.959}, {"text": "now see it's already proving my words", "start": 47.28, "duration": 4.16}, {"text": "like i said earlier", "start": 50.079, "duration": 3.601}, {"text": "with a bigger question the more", "start": 51.44, "duration": 4.0}, {"text": "informations are going to be provided", "start": 53.68, "duration": 2.559}, {"text": "right", "start": 55.44, "duration": 2.959}, {"text": "now it's already said it's a byte", "start": 56.239, "duration": 3.761}, {"text": "addressable memory", "start": 58.399, "duration": 3.921}, {"text": "and the size of the memory is mentioned", "start": 60.0, "duration": 4.159}, {"text": "in 2 to the power 16.", "start": 62.32, "duration": 4.96}, {"text": "so here itself we can easily say the pa", "start": 64.159, "duration": 4.881}, {"text": "bits is going to be 16", "start": 67.28, "duration": 5.12}, {"text": "right so moving ahead assume that", "start": 69.04, "duration": 6.64}, {"text": "a direct mapped data cache consisting of", "start": 72.4, "duration": 6.399}, {"text": "32 lines of 64 bytes each", "start": 75.68, "duration": 6.24}, {"text": "is used in this system now see they're", "start": 78.799, "duration": 5.68}, {"text": "also mentioning about the cache aligns", "start": 81.92, "duration": 4.32}, {"text": "they're not giving us the entire cache", "start": 84.479, "duration": 3.601}, {"text": "size we don't really need to find out", "start": 86.24, "duration": 2.559}, {"text": "the number of", "start": 88.08, "duration": 3.679}, {"text": "lines in it it's already provided and", "start": 88.799, "duration": 5.28}, {"text": "the size of each line or block", "start": 91.759, "duration": 5.68}, {"text": "is 64 bytes a 50 by 50", "start": 94.079, "duration": 6.641}, {"text": "two dimensional array of bytes is stored", "start": 97.439, "duration": 4.481}, {"text": "in the main memory", "start": 100.72, "duration": 5.28}, {"text": "starting from the memory location 1100h", "start": 101.92, "duration": 6.239}, {"text": "so it's an hexadecimal address you can", "start": 106.0, "duration": 3.119}, {"text": "see", "start": 108.159, "duration": 3.761}, {"text": "assume that the data cache is initially", "start": 109.119, "duration": 3.841}, {"text": "empty", "start": 111.92, "duration": 4.479}, {"text": "the complete array that is this array", "start": 112.96, "duration": 6.24}, {"text": "is accessed twice so we are going to", "start": 116.399, "duration": 3.441}, {"text": "access", "start": 119.2, "duration": 3.199}, {"text": "this two dimensional array of 50 cross", "start": 119.84, "duration": 3.68}, {"text": "50 size", "start": 122.399, "duration": 4.32}, {"text": "twice assume that the contents of the", "start": 123.52, "duration": 4.56}, {"text": "data cache do not", "start": 126.719, "duration": 3.921}, {"text": "change in between the two accesses", "start": 128.08, "duration": 3.36}, {"text": "therefore", "start": 130.64, "duration": 4.239}, {"text": "we are going to access this array twice", "start": 131.44, "duration": 6.159}, {"text": "and in between there will be no changes", "start": 134.879, "duration": 4.0}, {"text": "in the array", "start": 137.599, "duration": 3.681}, {"text": "now the first question is how many data", "start": 138.879, "duration": 3.36}, {"text": "cache misses", "start": 141.28, "duration": 4.16}, {"text": "will occur in total and the second one", "start": 142.239, "duration": 3.601}, {"text": "is", "start": 145.44, "duration": 2.56}, {"text": "which of the following lines of the data", "start": 145.84, "duration": 4.96}, {"text": "cache will be replaced by the new blocks", "start": 148.0, "duration": 4.959}, {"text": "in accessing the array for the second", "start": 150.8, "duration": 3.04}, {"text": "time", "start": 152.959, "duration": 3.121}, {"text": "so basically they are asking us about", "start": 153.84, "duration": 4.8}, {"text": "the number of cache misses first", "start": 156.08, "duration": 5.28}, {"text": "then they are asking us about the lines", "start": 158.64, "duration": 4.16}, {"text": "of the data cache", "start": 161.36, "duration": 4.0}, {"text": "which will be replaced during the second", "start": 162.8, "duration": 3.76}, {"text": "axis", "start": 165.36, "duration": 4.32}, {"text": "so let's try to solve it now the size of", "start": 166.56, "duration": 4.24}, {"text": "the main memory", "start": 169.68, "duration": 3.6}, {"text": "is given as 2 to the power 16 bytes", "start": 170.8, "duration": 3.36}, {"text": "therefore", "start": 173.28, "duration": 3.76}, {"text": "the number of pa bits is going to be 16.", "start": 174.16, "duration": 5.28}, {"text": "now it's a direct map data cache", "start": 177.04, "duration": 5.119}, {"text": "having 32 lines and size of each line is", "start": 179.44, "duration": 3.84}, {"text": "64 bytes", "start": 182.159, "duration": 2.8}, {"text": "now we can easily figure out the number", "start": 183.28, "duration": 3.76}, {"text": "of line number bits therefore the number", "start": 184.959, "duration": 4.481}, {"text": "of cache lines is first of all 32", "start": 187.04, "duration": 4.96}, {"text": "therefore line number bits is going to", "start": 189.44, "duration": 3.519}, {"text": "be 5", "start": 192.0, "duration": 4.0}, {"text": "because 32 is 2 to the power 5 and", "start": 192.959, "duration": 6.321}, {"text": "log base 2 32 is nothing but 5. now the", "start": 196.0, "duration": 5.599}, {"text": "block or the line size is mentioned as", "start": 199.28, "duration": 5.36}, {"text": "64 bytes which is 2 to the power 6 bytes", "start": 201.599, "duration": 6.481}, {"text": "therefore the opposite is 6 bits so as", "start": 204.64, "duration": 6.879}, {"text": "of now this is the ps plate from 16 bits", "start": 208.08, "duration": 4.56}, {"text": "physical address", "start": 211.519, "duration": 3.041}, {"text": "the least significant six bits are going", "start": 212.64, "duration": 4.08}, {"text": "to be used for block or line offset", "start": 214.56, "duration": 4.319}, {"text": "five bits are there for the line number", "start": 216.72, "duration": 4.32}, {"text": "and for the remaining that is the tag", "start": 218.879, "duration": 4.881}, {"text": "we are going to have 16 minus five plus", "start": 221.04, "duration": 3.199}, {"text": "six", "start": 223.76, "duration": 3.6}, {"text": "which is 16 minus 11 that is", "start": 224.239, "duration": 5.841}, {"text": "5 bits so 5 bits are going to be used", "start": 227.36, "duration": 3.84}, {"text": "for tags", "start": 230.08, "duration": 3.519}, {"text": "now we are dealing with a 50 by 52", "start": 231.2, "duration": 3.92}, {"text": "dimensional array", "start": 233.599, "duration": 2.801}, {"text": "and this is the conceptual", "start": 235.12, "duration": 3.36}, {"text": "representation of the array itself", "start": 236.4, "duration": 4.96}, {"text": "starting from that element arr00 up", "start": 238.48, "duration": 6.16}, {"text": "until that element arr 4949", "start": 241.36, "duration": 5.92}, {"text": "therefore total number of error elements", "start": 244.64, "duration": 4.799}, {"text": "inside that entire array is going to be", "start": 247.28, "duration": 4.4}, {"text": "50 multiplied by 50 which is 2", "start": 249.439, "duration": 4.8}, {"text": "500. now it's also mentioned in the", "start": 251.68, "duration": 5.04}, {"text": "question itself that it's a 50 by 52", "start": 254.239, "duration": 4.801}, {"text": "dimensional array of bytes", "start": 256.72, "duration": 5.359}, {"text": "that means size of each element is", "start": 259.04, "duration": 6.0}, {"text": "one byte in that case let's find out the", "start": 262.079, "duration": 4.56}, {"text": "array size there are 2", "start": 265.04, "duration": 3.76}, {"text": "500 elements in the array and each of", "start": 266.639, "duration": 4.321}, {"text": "them are of one byte size therefore the", "start": 268.8, "duration": 3.52}, {"text": "entire array size is", "start": 270.96, "duration": 4.56}, {"text": "2 500 bytes now the block size is", "start": 272.32, "duration": 5.12}, {"text": "mentioned as 64 bytes", "start": 275.52, "duration": 3.679}, {"text": "so let's find out the number of main", "start": 277.44, "duration": 3.36}, {"text": "memory blocks needed to store this", "start": 279.199, "duration": 2.801}, {"text": "entire array", "start": 280.8, "duration": 4.16}, {"text": "which is 2500 bytes because that is the", "start": 282.0, "duration": 5.199}, {"text": "size of the entire array itself", "start": 284.96, "duration": 5.44}, {"text": "divided by the block size 64 bytes which", "start": 287.199, "duration": 5.921}, {"text": "results in", "start": 290.4, "duration": 2.72}, {"text": "39.0625", "start": 293.16, "duration": 3.56}, {"text": "now we need not really worry about this", "start": 294.8, "duration": 3.28}, {"text": "critical calculation", "start": 296.72, "duration": 3.6}, {"text": "because during examination we will be", "start": 298.08, "duration": 4.88}, {"text": "provided with the virtual calculator", "start": 300.32, "duration": 5.12}, {"text": "so this sort of divisions can easily be", "start": 302.96, "duration": 3.2}, {"text": "performed", "start": 305.44, "duration": 3.199}, {"text": "now we already know the main memory is", "start": 306.16, "duration": 5.039}, {"text": "subdivided into equal sized blocks and", "start": 308.639, "duration": 4.241}, {"text": "whenever we are storing something in the", "start": 311.199, "duration": 3.601}, {"text": "main memory we can't really use a", "start": 312.88, "duration": 3.12}, {"text": "fraction of it", "start": 314.8, "duration": 3.679}, {"text": "if we are using a block we must use it", "start": 316.0, "duration": 3.36}, {"text": "entirely", "start": 318.479, "duration": 2.72}, {"text": "so in order to store this fraction", "start": 319.36, "duration": 4.72}, {"text": "portion we will be needing another block", "start": 321.199, "duration": 6.801}, {"text": "so in total we actually need 40 blocks", "start": 324.08, "duration": 6.48}, {"text": "so this is the array and number of", "start": 328.0, "duration": 4.4}, {"text": "blocks needed to store the array", "start": 330.56, "duration": 4.72}, {"text": "is 40 blocks and this is the ps split as", "start": 332.4, "duration": 3.92}, {"text": "of now", "start": 335.28, "duration": 2.88}, {"text": "now the array is stored in the main", "start": 336.32, "duration": 4.08}, {"text": "memory starting from the location one", "start": 338.16, "duration": 3.84}, {"text": "one zero zero h", "start": 340.4, "duration": 4.16}, {"text": "so that's an hexadecimal number so one", "start": 342.0, "duration": 3.84}, {"text": "one zero zero h", "start": 344.56, "duration": 3.919}, {"text": "in binary is triple zero one for the", "start": 345.84, "duration": 4.48}, {"text": "first one triple zero one for the second", "start": 348.479, "duration": 2.241}, {"text": "one", "start": 350.32, "duration": 2.56}, {"text": "and four zeros each for the remaining", "start": 350.72, "duration": 3.199}, {"text": "zeros", "start": 352.88, "duration": 4.0}, {"text": "now from these 16 bits the five most", "start": 353.919, "duration": 4.0}, {"text": "significant bits", "start": 356.88, "duration": 3.84}, {"text": "are for tags the next five bits are for", "start": 357.919, "duration": 3.84}, {"text": "the line number", "start": 360.72, "duration": 3.199}, {"text": "and the remaining six least significant", "start": 361.759, "duration": 4.801}, {"text": "bits are for the block or line offset", "start": 363.919, "duration": 4.56}, {"text": "now converting the line number from", "start": 366.56, "duration": 4.639}, {"text": "binary to decimal we get the value 4", "start": 368.479, "duration": 5.201}, {"text": "which means during execution when this", "start": 371.199, "duration": 3.84}, {"text": "array is accessed", "start": 373.68, "duration": 3.519}, {"text": "the main memory blocks are to be placed", "start": 375.039, "duration": 4.241}, {"text": "inside the cache from the line number 4", "start": 377.199, "duration": 4.961}, {"text": "onwards now we already know 40 blocks", "start": 379.28, "duration": 5.6}, {"text": "are required to store the entire array", "start": 382.16, "duration": 6.8}, {"text": "let's name them b0 b1 b2 up until b39", "start": 384.88, "duration": 4.96}, {"text": "that means", "start": 388.96, "duration": 4.0}, {"text": "40 blocks now as you can see this is the", "start": 389.84, "duration": 3.76}, {"text": "cache", "start": 392.96, "duration": 2.64}, {"text": "and as mentioned in the question itself", "start": 393.6, "duration": 3.2}, {"text": "the cache has got", "start": 395.6, "duration": 4.24}, {"text": "32 lines so starting from the line", "start": 396.8, "duration": 4.08}, {"text": "number 0", "start": 399.84, "duration": 4.16}, {"text": "up until the line number 31 now we know", "start": 400.88, "duration": 5.439}, {"text": "the array is stored in the main memory", "start": 404.0, "duration": 4.4}, {"text": "starting from the memory location 1 1", "start": 406.319, "duration": 5.681}, {"text": "0 0 h that means the block 0 is stored", "start": 408.4, "duration": 6.639}, {"text": "in the 1 1 0 0 h memory location", "start": 412.0, "duration": 5.199}, {"text": "and we also know that during execution", "start": 415.039, "duration": 4.0}, {"text": "when the blocks are accessed", "start": 417.199, "duration": 4.081}, {"text": "they will be brought to the cache and", "start": 419.039, "duration": 4.0}, {"text": "will be placed starting from the line", "start": 421.28, "duration": 3.44}, {"text": "number 4 onwards", "start": 423.039, "duration": 3.681}, {"text": "so block number 0 will be placed in the", "start": 424.72, "duration": 3.199}, {"text": "line number 4", "start": 426.72, "duration": 3.759}, {"text": "and up until the block number 27 will be", "start": 427.919, "duration": 3.12}, {"text": "placed", "start": 430.479, "duration": 3.12}, {"text": "in the line number 31. now why block", "start": 431.039, "duration": 3.841}, {"text": "number 27", "start": 433.599, "duration": 4.801}, {"text": "because 31 minus 4 is nothing but 27", "start": 434.88, "duration": 5.68}, {"text": "now from the remaining blocks the block", "start": 438.4, "duration": 3.359}, {"text": "number 28", "start": 440.56, "duration": 4.079}, {"text": "29 30 and 31 will be placed in the line", "start": 441.759, "duration": 3.761}, {"text": "number 0", "start": 444.639, "duration": 4.081}, {"text": "1 2 and 3 respectively however from the", "start": 445.52, "duration": 5.119}, {"text": "block number 32 up until the block", "start": 448.72, "duration": 3.12}, {"text": "number 39", "start": 450.639, "duration": 3.441}, {"text": "we don't really have any other space", "start": 451.84, "duration": 4.0}, {"text": "left in the cache itself", "start": 454.08, "duration": 4.32}, {"text": "so in order to place them in the cache", "start": 455.84, "duration": 3.919}, {"text": "we need to replace", "start": 458.4, "duration": 3.919}, {"text": "the remaining blocks and the replacement", "start": 459.759, "duration": 3.44}, {"text": "will continue", "start": 462.319, "duration": 3.681}, {"text": "up until the block number 39 has been", "start": 463.199, "duration": 3.921}, {"text": "placed", "start": 466.0, "duration": 3.44}, {"text": "now in case of the first iteration the", "start": 467.12, "duration": 4.799}, {"text": "number of cache miss is 40", "start": 469.44, "duration": 4.159}, {"text": "because none of the blocks were present", "start": 471.919, "duration": 4.0}, {"text": "in the cache beforehand", "start": 473.599, "duration": 4.32}, {"text": "now the array is supposed to be accessed", "start": 475.919, "duration": 3.041}, {"text": "twice", "start": 477.919, "duration": 2.881}, {"text": "that means during second iteration", "start": 478.96, "duration": 3.519}, {"text": "starting from the block number 0", "start": 480.8, "duration": 4.079}, {"text": "up until the block number 39 will again", "start": 482.479, "duration": 3.601}, {"text": "be accessed", "start": 484.879, "duration": 3.44}, {"text": "and due to the availability of the cache", "start": 486.08, "duration": 4.32}, {"text": "we will look for the blocks inside the", "start": 488.319, "duration": 3.361}, {"text": "cache first", "start": 490.4, "duration": 3.44}, {"text": "now we already know block number 0 is", "start": 491.68, "duration": 3.6}, {"text": "supposed to be placed into the line", "start": 493.84, "duration": 2.32}, {"text": "number 4", "start": 495.28, "duration": 3.12}, {"text": "but if you observe closely it's already", "start": 496.16, "duration": 4.879}, {"text": "been occupied by the block number 32", "start": 498.4, "duration": 4.799}, {"text": "so the block number 32 will be replaced", "start": 501.039, "duration": 3.681}, {"text": "by the block number 0 and this", "start": 503.199, "duration": 3.28}, {"text": "replacement process will continue up", "start": 504.72, "duration": 3.199}, {"text": "until block number 7", "start": 506.479, "duration": 3.84}, {"text": "because afterwards block number 7", "start": 507.919, "duration": 4.0}, {"text": "starting from block number 8", "start": 510.319, "duration": 4.321}, {"text": "up until block number 27 and block", "start": 511.919, "duration": 3.68}, {"text": "number 28", "start": 514.64, "duration": 3.199}, {"text": "up until block number 31 these are", "start": 515.599, "duration": 3.68}, {"text": "actually considered as", "start": 517.839, "duration": 4.241}, {"text": "cache hits because it's guaranteed in", "start": 519.279, "duration": 3.921}, {"text": "the question itself", "start": 522.08, "duration": 3.52}, {"text": "that the contents of the data cache are", "start": 523.2, "duration": 3.6}, {"text": "not going to change", "start": 525.6, "duration": 3.679}, {"text": "between the two accesses however after", "start": 526.8, "duration": 4.64}, {"text": "block number 31 we will need to access", "start": 529.279, "duration": 4.961}, {"text": "block number 32 up until block number 39", "start": 531.44, "duration": 5.2}, {"text": "but those are not present in the cache", "start": 534.24, "duration": 3.68}, {"text": "itself", "start": 536.64, "duration": 4.24}, {"text": "therefore due to direct mapping concept", "start": 537.92, "duration": 4.0}, {"text": "the block numbers", "start": 540.88, "duration": 4.079}, {"text": "starting from 32 up until 39 will be", "start": 541.92, "duration": 5.28}, {"text": "placed in the consecutive lines", "start": 544.959, "duration": 4.641}, {"text": "replacing block number zero to block", "start": 547.2, "duration": 3.68}, {"text": "number seven", "start": 549.6, "duration": 4.08}, {"text": "so during second iteration the number of", "start": 550.88, "duration": 5.04}, {"text": "caches is going to be 16", "start": 553.68, "duration": 4.08}, {"text": "because eight blocks starting from the", "start": 555.92, "duration": 4.16}, {"text": "block number zero to block number seven", "start": 557.76, "duration": 4.16}, {"text": "and another eight blocks starting from", "start": 560.08, "duration": 3.28}, {"text": "the block number 32", "start": 561.92, "duration": 3.599}, {"text": "up until the block number 39 will", "start": 563.36, "duration": 3.84}, {"text": "replace one another", "start": 565.519, "duration": 4.641}, {"text": "during the second iteration therefore in", "start": 567.2, "duration": 5.12}, {"text": "total the number of cache mays is 40", "start": 570.16, "duration": 4.56}, {"text": "plus 16 that is 56", "start": 572.32, "duration": 4.24}, {"text": "and during second iteration the", "start": 574.72, "duration": 3.36}, {"text": "replacement took place", "start": 576.56, "duration": 4.16}, {"text": "starting from the line number 4 up until", "start": 578.08, "duration": 4.48}, {"text": "the line number 11.", "start": 580.72, "duration": 3.84}, {"text": "therefore the answer to our first", "start": 582.56, "duration": 4.08}, {"text": "question is option c", "start": 584.56, "duration": 5.279}, {"text": "that is in total 56 cashier misses", "start": 586.64, "duration": 5.44}, {"text": "will occur now coming to the question", "start": 589.839, "duration": 3.12}, {"text": "number two", "start": 592.08, "duration": 4.16}, {"text": "the answer is option a that means from", "start": 592.959, "duration": 6.0}, {"text": "line number four to line number 11 the", "start": 596.24, "duration": 5.039}, {"text": "data cache will be replaced by the new", "start": 598.959, "duration": 2.961}, {"text": "blocks", "start": 601.279, "duration": 2.881}, {"text": "while accessing the array the second", "start": 601.92, "duration": 3.2}, {"text": "time", "start": 604.16, "duration": 3.28}, {"text": "so now do you trust me that these are", "start": 605.12, "duration": 4.399}, {"text": "very easy questions to answer", "start": 607.44, "duration": 5.2}, {"text": "all we need is the clear conception", "start": 609.519, "duration": 5.361}, {"text": "all right folks that was all for this", "start": 612.64, "duration": 4.48}, {"text": "session so far we have solved", "start": 614.88, "duration": 4.959}, {"text": "quite a few important as well as various", "start": 617.12, "duration": 5.04}, {"text": "kind of numerical problems on direct", "start": 619.839, "duration": 3.521}, {"text": "memory mapping", "start": 622.16, "duration": 3.52}, {"text": "and i think the concept is quite clear", "start": 623.36, "duration": 3.2}, {"text": "to you now", "start": 625.68, "duration": 3.44}, {"text": "so in the next session we will see the", "start": 626.56, "duration": 4.08}, {"text": "hardware implementation", "start": 629.12, "duration": 3.839}, {"text": "of direct memory mapping hope to see you", "start": 630.64, "duration": 3.36}, {"text": "in the next one", "start": 632.959, "duration": 13.711}, {"text": "thank you all for watching", "start": 634.0, "duration": 12.8}, {"text": "[Music]", "start": 646.67, "duration": 2.21}, {"text": "you", "start": 646.8, "duration": 2.08}]