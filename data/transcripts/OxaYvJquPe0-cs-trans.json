[{"text": "hello everyone and welcome back", "start": 6.319, "duration": 4.721}, {"text": "today we will be solving numerical", "start": 8.96, "duration": 3.12}, {"text": "problems on", "start": 11.04, "duration": 3.44}, {"text": "direct memory mapping like i said", "start": 12.08, "duration": 3.04}, {"text": "earlier", "start": 14.48, "duration": 2.639}, {"text": "problem solving is the only approach", "start": 15.12, "duration": 3.84}, {"text": "using which we can concrete our", "start": 17.119, "duration": 2.961}, {"text": "knowledge base", "start": 18.96, "duration": 3.28}, {"text": "so with that saying let's get to", "start": 20.08, "duration": 3.359}, {"text": "learning", "start": 22.24, "duration": 3.68}, {"text": "now consider this example number one", "start": 23.439, "duration": 4.721}, {"text": "here main memory size is given as four", "start": 25.92, "duration": 3.279}, {"text": "gigabytes", "start": 28.16, "duration": 3.76}, {"text": "cache size is 1 megabytes block size is", "start": 29.199, "duration": 3.761}, {"text": "4 kilobytes", "start": 31.92, "duration": 3.52}, {"text": "and word size is one byte suppose they", "start": 32.96, "duration": 4.0}, {"text": "are asking us about", "start": 35.44, "duration": 3.68}, {"text": "the pa bit split they are actually", "start": 36.96, "duration": 4.4}, {"text": "trying to ask us how many bits are going", "start": 39.12, "duration": 4.24}, {"text": "to be there for the physical address", "start": 41.36, "duration": 4.24}, {"text": "and from those physical address how many", "start": 43.36, "duration": 4.08}, {"text": "will be used for the tagged bits", "start": 45.6, "duration": 4.08}, {"text": "how many are for the line number and the", "start": 47.44, "duration": 3.439}, {"text": "block offset", "start": 49.68, "duration": 3.44}, {"text": "also they are asking us about the tag", "start": 50.879, "duration": 3.601}, {"text": "directory size", "start": 53.12, "duration": 4.079}, {"text": "we will solve them one after the another", "start": 54.48, "duration": 3.52}, {"text": "now i hope you", "start": 57.199, "duration": 3.441}, {"text": "remember when the word size is one byte", "start": 58.0, "duration": 4.64}, {"text": "we call the memory a byte addressable", "start": 60.64, "duration": 3.04}, {"text": "memory", "start": 62.64, "duration": 3.68}, {"text": "so let's try to solve this now the main", "start": 63.68, "duration": 5.52}, {"text": "memory size is given as four gigabytes", "start": 66.32, "duration": 5.28}, {"text": "now we also have seen the is bite", "start": 69.2, "duration": 3.2}, {"text": "addressable", "start": 71.6, "duration": 3.04}, {"text": "so we need to convert this 4 gigabytes", "start": 72.4, "duration": 3.68}, {"text": "in terms of bytes", "start": 74.64, "duration": 3.839}, {"text": "now with the assistance of this chart we", "start": 76.08, "duration": 4.64}, {"text": "can see one byte is 8 bits", "start": 78.479, "duration": 5.201}, {"text": "1 kilobyte is 1 0 to 4 bytes that is 2", "start": 80.72, "duration": 4.48}, {"text": "to the power 10 bytes", "start": 83.68, "duration": 4.56}, {"text": "1 megabyte is 1024 kilobyte that is 2 to", "start": 85.2, "duration": 4.32}, {"text": "the power 20 bytes", "start": 88.24, "duration": 3.519}, {"text": "and 1 gigabytes is similarly 2 to the", "start": 89.52, "duration": 3.68}, {"text": "power 30 bytes", "start": 91.759, "duration": 4.081}, {"text": "memorizing this chart will help us solve", "start": 93.2, "duration": 4.879}, {"text": "numerical problems very quickly", "start": 95.84, "duration": 5.279}, {"text": "so this 4 gigabytes will turn to two", "start": 98.079, "duration": 4.72}, {"text": "square that is four", "start": 101.119, "duration": 4.32}, {"text": "and gigabytes is going to be 2 to the", "start": 102.799, "duration": 4.241}, {"text": "power 30 bytes", "start": 105.439, "duration": 4.241}, {"text": "which results in 2 to the power 2 plus", "start": 107.04, "duration": 4.96}, {"text": "30 that is 2 to the power 32 bytes", "start": 109.68, "duration": 4.32}, {"text": "so this is the size of the main memory", "start": 112.0, "duration": 3.6}, {"text": "in terms of bytes", "start": 114.0, "duration": 3.119}, {"text": "now let's figure out the physical", "start": 115.6, "duration": 3.04}, {"text": "address bits", "start": 117.119, "duration": 4.0}, {"text": "so the number of physical address bits", "start": 118.64, "duration": 3.519}, {"text": "is going to be", "start": 121.119, "duration": 3.04}, {"text": "2 to the power 32 that is the main", "start": 122.159, "duration": 4.401}, {"text": "memory size in terms of bytes and if we", "start": 124.159, "duration": 4.96}, {"text": "apply log base 2 in front of that", "start": 126.56, "duration": 5.36}, {"text": "we will be getting the answer as 32 so", "start": 129.119, "duration": 5.281}, {"text": "these 32 bits are going to be used as", "start": 131.92, "duration": 4.88}, {"text": "physical address now coming to the block", "start": 134.4, "duration": 4.96}, {"text": "size it is given as 4 kilobytes", "start": 136.8, "duration": 4.88}, {"text": "and we already know 4 is 2 to the power", "start": 139.36, "duration": 3.44}, {"text": "2 that is 2 square", "start": 141.68, "duration": 3.279}, {"text": "multiplied by kb that is 2 to the power", "start": 142.8, "duration": 4.079}, {"text": "10 bytes which results in 2 to the power", "start": 144.959, "duration": 3.041}, {"text": "12 bytes", "start": 146.879, "duration": 3.521}, {"text": "therefore the block offset is going to", "start": 148.0, "duration": 3.28}, {"text": "be", "start": 150.4, "duration": 3.6}, {"text": "log base 2 in front of 2 to the power 12", "start": 151.28, "duration": 3.92}, {"text": "which is nothing but", "start": 154.0, "duration": 4.16}, {"text": "12 bits which means there are 2 to the", "start": 155.2, "duration": 5.36}, {"text": "power 12 addressable memory locations", "start": 158.16, "duration": 3.76}, {"text": "within each block", "start": 160.56, "duration": 3.759}, {"text": "and in order to address them we will be", "start": 161.92, "duration": 4.399}, {"text": "needing 12 bits", "start": 164.319, "duration": 3.681}, {"text": "now let's try to figure out the number", "start": 166.319, "duration": 3.361}, {"text": "of blocks in main memory", "start": 168.0, "duration": 3.84}, {"text": "in order to do so we need to divide 2 to", "start": 169.68, "duration": 3.919}, {"text": "the power 32 that is the size of the", "start": 171.84, "duration": 4.08}, {"text": "main memory in terms of bytes", "start": 173.599, "duration": 5.041}, {"text": "by the size of the block that is 2 to", "start": 175.92, "duration": 3.76}, {"text": "the power 12", "start": 178.64, "duration": 3.519}, {"text": "that is 2 in bytes so that will result", "start": 179.68, "duration": 4.08}, {"text": "in 2 to the power 20", "start": 182.159, "duration": 4.881}, {"text": "because 32 minus 12 is nothing but 20.", "start": 183.76, "duration": 5.36}, {"text": "therefore the number of blocked number", "start": 187.04, "duration": 3.36}, {"text": "bits is going to be", "start": 189.12, "duration": 4.479}, {"text": "log base 2 2 to the power 20 which will", "start": 190.4, "duration": 4.4}, {"text": "give the result as", "start": 193.599, "duration": 4.481}, {"text": "20 bits so this is the ps split for now", "start": 194.8, "duration": 6.32}, {"text": "that means from 32 bits physical address", "start": 198.08, "duration": 5.12}, {"text": "12 least significant bits are going to", "start": 201.12, "duration": 3.92}, {"text": "be used as the block offset", "start": 203.2, "duration": 4.24}, {"text": "and 20 bits are going to be used as the", "start": 205.04, "duration": 3.199}, {"text": "block number", "start": 207.44, "duration": 3.4}, {"text": "now the cache size is given as 1", "start": 208.239, "duration": 3.92}, {"text": "megabytes", "start": 210.84, "duration": 4.36}, {"text": "that is one multiplied by megabyte now", "start": 212.159, "duration": 5.121}, {"text": "megabyte is or we already have seen as 2", "start": 215.2, "duration": 3.52}, {"text": "to the power 20 bytes", "start": 217.28, "duration": 3.84}, {"text": "that means 2 to the power 20 is the size", "start": 218.72, "duration": 3.28}, {"text": "of the cache", "start": 221.12, "duration": 2.96}, {"text": "in terms of bytes now let's try to", "start": 222.0, "duration": 3.76}, {"text": "figure out the number of lines inside", "start": 224.08, "duration": 3.68}, {"text": "the cache and in order to do so we will", "start": 225.76, "duration": 4.0}, {"text": "be dividing the size of the cache which", "start": 227.76, "duration": 4.32}, {"text": "is 2 to the power 20 in terms of byte by", "start": 229.76, "duration": 4.96}, {"text": "the block size of the line size", "start": 232.08, "duration": 5.2}, {"text": "which is 2 to the power 20 divided by 2", "start": 234.72, "duration": 4.719}, {"text": "to the power 12 which results in", "start": 237.28, "duration": 5.36}, {"text": "2 to the power 8 because 20 minus 12", "start": 239.439, "duration": 5.681}, {"text": "is nothing but 8. so the number of bits", "start": 242.64, "duration": 4.0}, {"text": "required for the line number", "start": 245.12, "duration": 4.08}, {"text": "is log 2 to the power 8 base 2 which is", "start": 246.64, "duration": 3.2}, {"text": "nothing but", "start": 249.2, "duration": 4.239}, {"text": "8. so the 8 bits are going to specify", "start": 249.84, "duration": 5.28}, {"text": "the cache line number where that", "start": 253.439, "duration": 3.841}, {"text": "particular block will be mapped onto", "start": 255.12, "duration": 4.72}, {"text": "now we are almost there we only need to", "start": 257.28, "duration": 4.799}, {"text": "figure out the tag number bits to find", "start": 259.84, "duration": 4.4}, {"text": "out the entire pa bit split", "start": 262.079, "duration": 4.001}, {"text": "so let's try to find out the tag number", "start": 264.24, "duration": 3.84}, {"text": "bits as well now the number of tag bits", "start": 266.08, "duration": 3.04}, {"text": "can easily be found", "start": 268.08, "duration": 3.679}, {"text": "out subtracting line number bits and the", "start": 269.12, "duration": 4.4}, {"text": "opposite bits from the pa bits", "start": 271.759, "duration": 4.401}, {"text": "which is nothing but 32 minus 8 plus 12", "start": 273.52, "duration": 3.84}, {"text": "which is 12.", "start": 276.16, "duration": 3.36}, {"text": "so 12 bits are going to be used for the", "start": 277.36, "duration": 3.04}, {"text": "tag number", "start": 279.52, "duration": 3.92}, {"text": "and this is the ps plate that we were", "start": 280.4, "duration": 3.76}, {"text": "looking for", "start": 283.44, "duration": 2.319}, {"text": "now coming to the second portion of the", "start": 284.16, "duration": 3.28}, {"text": "question that is we need to figure out", "start": 285.759, "duration": 3.681}, {"text": "the size of the tag directory", "start": 287.44, "duration": 3.68}, {"text": "now i hope you remember this diagram", "start": 289.44, "duration": 3.52}, {"text": "from our previous discussions", "start": 291.12, "duration": 3.44}, {"text": "now the tag directory happens to be a", "start": 292.96, "duration": 3.04}, {"text": "data structure which is used by", "start": 294.56, "duration": 2.96}, {"text": "the processor when the processor needs", "start": 296.0, "duration": 3.44}, {"text": "to find out something from the cache so", "start": 297.52, "duration": 4.0}, {"text": "the tag directory keeps primarily the", "start": 299.44, "duration": 4.319}, {"text": "record of tag bits cache line wise", "start": 301.52, "duration": 4.16}, {"text": "this means the number of entries in the", "start": 303.759, "duration": 3.921}, {"text": "tag directory is going to be as same as", "start": 305.68, "duration": 3.359}, {"text": "the number of cache aligns", "start": 307.68, "duration": 3.2}, {"text": "now this is the p-bit split that we", "start": 309.039, "duration": 4.081}, {"text": "acquired just now and from this", "start": 310.88, "duration": 3.92}, {"text": "we will be needing the tag bits", "start": 313.12, "duration": 3.12}, {"text": "information and the line number", "start": 314.8, "duration": 3.2}, {"text": "information in order to find out the tag", "start": 316.24, "duration": 2.88}, {"text": "directory size", "start": 318.0, "duration": 3.039}, {"text": "therefore the number of lines in the", "start": 319.12, "duration": 3.68}, {"text": "cache a we already know it's 2 to the", "start": 321.039, "duration": 2.961}, {"text": "power 8 and number of", "start": 322.8, "duration": 3.28}, {"text": "tag bits is nothing but 12 bits", "start": 324.0, "duration": 4.16}, {"text": "therefore the tag directory size is", "start": 326.08, "duration": 2.8}, {"text": "going to be", "start": 328.16, "duration": 3.759}, {"text": "2 to the power 8 multiplied by 12 bits", "start": 328.88, "duration": 5.2}, {"text": "because there are 2 to the power 8 cache", "start": 331.919, "duration": 3.84}, {"text": "lines out there and therefore", "start": 334.08, "duration": 3.52}, {"text": "number of entries in the tag directory", "start": 335.759, "duration": 3.921}, {"text": "is also going to be 2 to the power 8", "start": 337.6, "duration": 5.2}, {"text": "and each entry is going to include 12", "start": 339.68, "duration": 4.88}, {"text": "bits of tag information", "start": 342.8, "duration": 5.04}, {"text": "so that results in 3 0 7 2 bits which", "start": 344.56, "duration": 5.919}, {"text": "is the answer to our second question now", "start": 347.84, "duration": 4.48}, {"text": "consider this example number two", "start": 350.479, "duration": 3.681}, {"text": "here the main memory size is given as", "start": 352.32, "duration": 3.2}, {"text": "256 megabytes", "start": 354.16, "duration": 4.159}, {"text": "cache size is 512 kilobytes block size", "start": 355.52, "duration": 4.08}, {"text": "is 256 bytes", "start": 358.319, "duration": 3.681}, {"text": "and word size is one byte and suppose we", "start": 359.6, "duration": 4.159}, {"text": "are being asked about the number of", "start": 362.0, "duration": 3.759}, {"text": "tag bits now let me tell you a very", "start": 363.759, "duration": 3.841}, {"text": "interesting fact regarding direct memory", "start": 365.759, "duration": 3.681}, {"text": "mapping in direct memory mapping when we", "start": 367.6, "duration": 3.28}, {"text": "are trying to figure out the number of", "start": 369.44, "duration": 2.16}, {"text": "tag bits", "start": 370.88, "duration": 2.24}, {"text": "we don't really require these", "start": 371.6, "duration": 3.36}, {"text": "informations rather", "start": 373.12, "duration": 4.0}, {"text": "only having the main memory size and the", "start": 374.96, "duration": 3.519}, {"text": "cache size information will be", "start": 377.12, "duration": 3.28}, {"text": "sufficient so before solving this", "start": 378.479, "duration": 3.681}, {"text": "question right away let's understand the", "start": 380.4, "duration": 3.2}, {"text": "significance of tag bits", "start": 382.16, "duration": 3.599}, {"text": "now we have already seen direct mapping", "start": 383.6, "duration": 3.039}, {"text": "uses", "start": 385.759, "duration": 3.841}, {"text": "many to unrelation and tag bits help us", "start": 386.639, "duration": 3.84}, {"text": "identify", "start": 389.6, "duration": 2.64}, {"text": "the main memory block residing in the", "start": 390.479, "duration": 3.601}, {"text": "cache line at that particular instance", "start": 392.24, "duration": 4.239}, {"text": "of time now let's try to understand how", "start": 394.08, "duration": 4.559}, {"text": "the tag bits are specified suppose there", "start": 396.479, "duration": 3.761}, {"text": "are two different main memory blocks", "start": 398.639, "duration": 3.361}, {"text": "mapped onto a single cache a line", "start": 400.24, "duration": 3.28}, {"text": "now in order to distinguish between", "start": 402.0, "duration": 3.759}, {"text": "these two we will be needing one bit", "start": 403.52, "duration": 2.88}, {"text": "place", "start": 405.759, "duration": 2.56}, {"text": "then again with four different main", "start": 406.4, "duration": 4.0}, {"text": "memory blocks mapped onto a single cache", "start": 408.319, "duration": 3.761}, {"text": "line we will be needing two different", "start": 410.4, "duration": 2.639}, {"text": "bit places", "start": 412.08, "duration": 2.72}, {"text": "and these two are nothing but the tag", "start": 413.039, "duration": 3.041}, {"text": "bits", "start": 414.8, "duration": 2.959}, {"text": "now we already know the main memory", "start": 416.08, "duration": 3.519}, {"text": "blocks and the cache lines are equal in", "start": 417.759, "duration": 2.481}, {"text": "size", "start": 419.599, "duration": 2.88}, {"text": "therefore from the ratio of main memory", "start": 420.24, "duration": 4.16}, {"text": "size and the cache size we will come to", "start": 422.479, "duration": 3.921}, {"text": "know about how many main memory blocks", "start": 424.4, "duration": 4.16}, {"text": "are mapped onto each cache a line", "start": 426.4, "duration": 4.0}, {"text": "let's try to understand this concept", "start": 428.56, "duration": 3.68}, {"text": "with the help of this illustration now", "start": 430.4, "duration": 4.0}, {"text": "as you can see there are 16 main memory", "start": 432.24, "duration": 2.64}, {"text": "blocks", "start": 434.4, "duration": 2.639}, {"text": "and four different cache lines and the", "start": 434.88, "duration": 3.68}, {"text": "ratio in between these two", "start": 437.039, "duration": 3.841}, {"text": "is nothing but four that means four", "start": 438.56, "duration": 4.079}, {"text": "different main memory blocks will be", "start": 440.88, "duration": 2.48}, {"text": "mapped onto", "start": 442.639, "duration": 3.361}, {"text": "each cache a line therefore applying a", "start": 443.36, "duration": 3.679}, {"text": "log base two", "start": 446.0, "duration": 2.96}, {"text": "with this value we will be getting to", "start": 447.039, "duration": 4.16}, {"text": "know about the number of required tag", "start": 448.96, "duration": 2.72}, {"text": "bits", "start": 451.199, "duration": 2.481}, {"text": "now coming back to our problem the main", "start": 451.68, "duration": 5.12}, {"text": "memory size was given as 256 megabytes", "start": 453.68, "duration": 5.68}, {"text": "therefore 256 is nothing but 2 to the", "start": 456.8, "duration": 4.72}, {"text": "power 8 and megabyte is nothing but 2 to", "start": 459.36, "duration": 3.04}, {"text": "the power 20", "start": 461.52, "duration": 3.04}, {"text": "in terms of byte which results in 2 to", "start": 462.4, "duration": 3.76}, {"text": "the power 28 bytes", "start": 464.56, "duration": 4.16}, {"text": "now the cache size was given as 512", "start": 466.16, "duration": 3.439}, {"text": "kilobytes", "start": 468.72, "duration": 2.96}, {"text": "where the 512 is nothing but 2 to the", "start": 469.599, "duration": 4.401}, {"text": "power 9 and kilobyte is 2 to the power", "start": 471.68, "duration": 2.639}, {"text": "10", "start": 474.0, "duration": 2.56}, {"text": "in terms of byte which results in 2 to", "start": 474.319, "duration": 3.761}, {"text": "the power 19 bytes", "start": 476.56, "duration": 4.319}, {"text": "therefore cache size in terms of bytes", "start": 478.08, "duration": 4.72}, {"text": "is 2 to the power 19.", "start": 480.879, "duration": 3.921}, {"text": "therefore the number of tag bits is", "start": 482.8, "duration": 4.0}, {"text": "going to be the ratio in between 2 to", "start": 484.8, "duration": 4.48}, {"text": "the power 28 and 2 to the power 19 and", "start": 486.8, "duration": 4.48}, {"text": "we have to apply the log base 2 in front", "start": 489.28, "duration": 2.639}, {"text": "of it", "start": 491.28, "duration": 3.759}, {"text": "which will eventually result in 9", "start": 491.919, "duration": 5.361}, {"text": "bits and that is the number of tag bits", "start": 495.039, "duration": 3.201}, {"text": "we were looking for", "start": 497.28, "duration": 3.28}, {"text": "now coming to this example number 3 a", "start": 498.24, "duration": 4.72}, {"text": "byte addressable main memory of size 16", "start": 500.56, "duration": 4.479}, {"text": "gigabytes is given and the block size is", "start": 502.96, "duration": 4.4}, {"text": "16 kilobytes and surprisingly the number", "start": 505.039, "duration": 4.241}, {"text": "of tag bits has also been mentioned as", "start": 507.36, "duration": 2.8}, {"text": "10 bits", "start": 509.28, "duration": 2.8}, {"text": "and suppose we are being asked about the", "start": 510.16, "duration": 5.2}, {"text": "cache size now let's see how to solve it", "start": 512.08, "duration": 5.199}, {"text": "so the main memory size has been given", "start": 515.36, "duration": 4.159}, {"text": "as 16 gigabytes which is nothing but", "start": 517.279, "duration": 4.801}, {"text": "2 to the power 34 bytes now how we get", "start": 519.519, "duration": 3.281}, {"text": "that", "start": 522.08, "duration": 3.12}, {"text": "because 16 is 2 to the power 4 and", "start": 522.8, "duration": 4.64}, {"text": "gigabyte is 2 to the power 30 in terms", "start": 525.2, "duration": 3.04}, {"text": "of byte", "start": 527.44, "duration": 3.36}, {"text": "which ends up being 2 to the power 34 in", "start": 528.24, "duration": 3.52}, {"text": "terms of y", "start": 530.8, "duration": 2.64}, {"text": "now we can easily figure out the number", "start": 531.76, "duration": 3.04}, {"text": "of physical address bits", "start": 533.44, "duration": 4.48}, {"text": "which is nothing but 34. now the block", "start": 534.8, "duration": 5.68}, {"text": "size is given as 16 kilobytes", "start": 537.92, "duration": 4.88}, {"text": "which in terms of byte is again 2 to the", "start": 540.48, "duration": 3.52}, {"text": "power 14.", "start": 542.8, "duration": 3.44}, {"text": "now why is so because 16 is 2 to the", "start": 544.0, "duration": 5.04}, {"text": "power 4 and kilobyte we also know", "start": 546.24, "duration": 5.36}, {"text": "as 2 to the power 10 in terms of bytes", "start": 549.04, "duration": 5.2}, {"text": "so that is 2 to the power 14 bytes", "start": 551.6, "duration": 6.0}, {"text": "hence the block offset is 14 bits", "start": 554.24, "duration": 6.24}, {"text": "that means from the 34 bits physical", "start": 557.6, "duration": 5.04}, {"text": "address the least significant 14 bits", "start": 560.48, "duration": 3.44}, {"text": "will be used as", "start": 562.64, "duration": 4.4}, {"text": "block or line offset now in the question", "start": 563.92, "duration": 5.039}, {"text": "itself the number of tag bits has been", "start": 567.04, "duration": 2.64}, {"text": "mentioned", "start": 568.959, "duration": 3.521}, {"text": "therefore we already know from this 34", "start": 569.68, "duration": 4.48}, {"text": "bits the tag bits will be", "start": 572.48, "duration": 4.08}, {"text": "10 bits now it will be easier for us to", "start": 574.16, "duration": 3.6}, {"text": "find out the remaining", "start": 576.56, "duration": 3.36}, {"text": "so in order to find out the line number", "start": 577.76, "duration": 4.32}, {"text": "bits we have to subtract the tag bits", "start": 579.92, "duration": 3.84}, {"text": "and the opposite bits from the entire", "start": 582.08, "duration": 2.56}, {"text": "pair bits", "start": 583.76, "duration": 3.759}, {"text": "which is nothing but 10 so 10 bits are", "start": 584.64, "duration": 4.48}, {"text": "being used for line number", "start": 587.519, "duration": 3.601}, {"text": "now from this line number bits we can", "start": 589.12, "duration": 4.0}, {"text": "easily figure out how many clients are", "start": 591.12, "duration": 3.52}, {"text": "there in the cache that is 2 to the", "start": 593.12, "duration": 2.64}, {"text": "power 10.", "start": 594.64, "duration": 3.04}, {"text": "now you already know the block size is", "start": 595.76, "duration": 3.68}, {"text": "equal to the line size hence the line", "start": 597.68, "duration": 2.64}, {"text": "size is also", "start": 599.44, "duration": 3.519}, {"text": "2 to the power 14 bytes therefore the", "start": 600.32, "duration": 4.959}, {"text": "cache size will be 2 to the power 10", "start": 602.959, "duration": 5.12}, {"text": "into 2 to the power 14 bytes because 2", "start": 605.279, "duration": 3.68}, {"text": "to the power 10", "start": 608.079, "duration": 3.041}, {"text": "lines are there in the cache and each", "start": 608.959, "duration": 4.56}, {"text": "line has the size of 2 to the power 14", "start": 611.12, "duration": 2.959}, {"text": "bytes", "start": 613.519, "duration": 3.521}, {"text": "which results in 2 to the power 24 bytes", "start": 614.079, "duration": 4.241}, {"text": "which is nothing but", "start": 617.04, "duration": 3.68}, {"text": "16 megabytes and that is the answer that", "start": 618.32, "duration": 3.519}, {"text": "we are looking for", "start": 620.72, "duration": 3.76}, {"text": "because it is the cache size so that was", "start": 621.839, "duration": 3.841}, {"text": "all for this session", "start": 624.48, "duration": 3.44}, {"text": "i hope it was useful to you in the", "start": 625.68, "duration": 4.0}, {"text": "upcoming sessions we will solve", "start": 627.92, "duration": 4.0}, {"text": "some more important numerical problems", "start": 629.68, "duration": 3.92}, {"text": "on direct memory mapping", "start": 631.92, "duration": 3.68}, {"text": "hope to see you in the next one thank", "start": 633.6, "duration": 13.43}, {"text": "you all for watching", "start": 635.6, "duration": 12.16}, {"text": "[Music]", "start": 647.03, "duration": 2.809}, {"text": "you", "start": 647.76, "duration": 2.079}]