[{"text": "Hi, I\u2019m Carrie Anne, and welcome to CrashCourse\nComputer Science!", "start": 3.02, "duration": 2.7}, {"text": "So we\u2019ve talked a lot about sorting in this\nseries and often code to sort a list of numbers", "start": 5.72, "duration": 4.26}, {"text": "might only be ten lines long, which is easy\nenough for a single programmer to write.", "start": 9.98, "duration": 3.88}, {"text": "Plus, it\u2019s short enough that you don\u2019t\nneed any special tools \u2013 you could do it", "start": 13.86, "duration": 3.05}, {"text": "in Notepad.", "start": 16.91, "duration": 1.0}, {"text": "Really!", "start": 17.91, "duration": 1.0}, {"text": "But, a sorting algorithm isn\u2019t a program;\nit\u2019s likely only a small part of a much", "start": 18.91, "duration": 3.81}, {"text": "larger program.", "start": 22.72, "duration": 1.17}, {"text": "For example, Microsoft Office has roughly\n40 millions lines of code.", "start": 23.89, "duration": 3.549}, {"text": "40 MILLION!", "start": 27.439, "duration": 1.281}, {"text": "That\u2019s way too big for any one person to\nfigure out and write!", "start": 28.72, "duration": 3.33}, {"text": "To build huge programs like this, programmers\nuse a set of tools and practices.", "start": 32.05, "duration": 4.2}, {"text": "Taken together, these form the discipline\nof Software Engineering \u2013 a term coined", "start": 36.25, "duration": 4.05}, {"text": "by engineer Margaret Hamilton, who helped\nNASA prevent serious problems during the Apollo", "start": 40.3, "duration": 4.21}, {"text": "missions to the moon.", "start": 44.51, "duration": 1.1}, {"text": "She once explained it this way: \u201cIt\u2019s\nkind of like a root canal: you waited till", "start": 45.61, "duration": 3.539}, {"text": "the end, [but] there are things you could\nhave done beforehand.", "start": 49.149, "duration": 2.671}, {"text": "It\u2019s like preventative healthcare, but it\u2019s\npreventative software.\u201d", "start": 51.82, "duration": 3.4}, {"text": "INTRO", "start": 55.22, "duration": 9.12}, {"text": "As I mentioned in episode 12, breaking big\nprograms into smaller functions allows many", "start": 64.4, "duration": 4.02}, {"text": "people to work simultaneously.", "start": 68.42, "duration": 1.86}, {"text": "They don\u2019t have to worry about the whole\nthing, just the function they\u2019re working on.", "start": 70.28, "duration": 3.76}, {"text": "So, if you\u2019re tasked with writing a sort\nalgorithm, you only need to make sure it sorts", "start": 74.1, "duration": 3.94}, {"text": "properly and efficiently.", "start": 78.06, "duration": 1.32}, {"text": "However, even packing code up into functions\nisn\u2019t enough.", "start": 79.389, "duration": 3.04}, {"text": "Microsoft Office probably contains hundreds\nof thousands of them.", "start": 82.429, "duration": 2.951}, {"text": "That\u2019s better than dealing with 40 million\nlines of code, but it\u2019s still way too many", "start": 85.38, "duration": 3.769}, {"text": "\u201cthings\u201d for one person or team to manage.", "start": 89.149, "duration": 2.08}, {"text": "The solution is to package functions into\nhierarchies, pulling related code together", "start": 91.229, "duration": 4.341}, {"text": "into \u201cobjects\u201d.", "start": 95.57, "duration": 1.17}, {"text": "For example, car\u2019s software might have several\nfunctions related to cruise control, like", "start": 96.74, "duration": 3.979}, {"text": "setting speed, nudging speed up or down, and\nstopping cruise control altogether.", "start": 100.719, "duration": 3.811}, {"text": "Since they\u2019re all related, we can wrap them\nup into a unified cruise control object.", "start": 104.53, "duration": 3.929}, {"text": "But, we don\u2019t have to stop there, cruise\ncontrol is just one part of the engine\u2019s", "start": 108.459, "duration": 3.66}, {"text": "software.", "start": 112.119, "duration": 1.0}, {"text": "There might also be sets of functions that\ncontrol spark plug ignition, fuel pumps, and", "start": 113.119, "duration": 3.86}, {"text": "the radiator.", "start": 116.979, "duration": 1.111}, {"text": "So we can create a \u201cparent\u201d Engine Object\nthat contains all of these \u201cchildren\u201d", "start": 118.09, "duration": 3.72}, {"text": "objects.", "start": 121.81, "duration": 0.61}, {"text": "In addition to children *objects*, the engine\nitself might have its *own* functions.", "start": 122.42, "duration": 3.44}, {"text": "You want to be able to stop and start it,\nfor example.", "start": 125.9, "duration": 2.52}, {"text": "It\u2019ll also have its own variables, like\nhow many miles the car has traveled.", "start": 128.42, "duration": 3.73}, {"text": "In general, objects can contain other objects,\nfunctions and variables.", "start": 132.15, "duration": 3.71}, {"text": "And of course, the engine is just one part\nof a Car Object.", "start": 135.86, "duration": 2.91}, {"text": "There\u2019s also the transmission, wheels, doors,\nwindows, and so on.", "start": 138.77, "duration": 3.01}, {"text": "Now, as a programmer, if I want to set the\ncruise control, I navigate down the object", "start": 141.78, "duration": 4.069}, {"text": "hierarchy, from the outermost objects to more\nand more deeply nested ones.", "start": 145.849, "duration": 3.97}, {"text": "Eventually, I reach the function I want to\ntrigger: \u201cCar, then engine, then cruise", "start": 149.819, "duration": 4.121}, {"text": "control, then set cruise speed to 55\u201d.", "start": 153.94, "duration": 2.4}, {"text": "Programming languages often use something\nequivalent to the syntax shown here.", "start": 156.34, "duration": 3.6}, {"text": "The idea of packing up functional units into\nnested objects is called Object Oriented Programming.", "start": 159.94, "duration": 4.62}, {"text": "This is very similar to what we\u2019ve done\nall series long: hide complexity by encapsulating", "start": 164.569, "duration": 4.551}, {"text": "low-level details in higher-order components.", "start": 169.12, "duration": 2.9}, {"text": "Before we packed up things like transistor\ncircuits into higher-level boolean gates.", "start": 172.02, "duration": 4.02}, {"text": "Now we\u2019re doing the same thing with software.", "start": 176.08, "duration": 1.89}, {"text": "Yet again, it\u2019s a way to move up a new level\nof abstraction!", "start": 177.97, "duration": 9.85}, {"text": "Breaking up a big program, like a car\u2019s\nsoftware, into functional units is perfect", "start": 187.82, "duration": 3.98}, {"text": "for teams.", "start": 191.829, "duration": 1.031}, {"text": "One team might be responsible for the cruise\ncontrol system, and a single programmer on", "start": 192.87, "duration": 4.0}, {"text": "that team tackles a handful of functions.", "start": 196.87, "duration": 2.4}, {"text": "This is similar to how big, physical things\nare built, like skyscrapers.", "start": 199.27, "duration": 2.919}, {"text": "You\u2019ll have electricians running wires,\nplumbers fitting pipes, welders welding, painters", "start": 202.189, "duration": 4.621}, {"text": "painting, and hundreds of other people teeming\nall over the hull.", "start": 206.81, "duration": 3.069}, {"text": "They work together on different parts simultaneously,\nleveraging their different skills.", "start": 209.879, "duration": 4.181}, {"text": "Until one day, you\u2019ve got a whole working\nbuilding!", "start": 214.06, "duration": 2.56}, {"text": "But, returning to our cruise control example\u2026\nits code is going to have to make use of functions", "start": 216.62, "duration": 4.44}, {"text": "in other parts of the engine\u2019s software,\nto, you know, keep the car at a constant speed.", "start": 221.06, "duration": 4.209}, {"text": "That code isn\u2019t part of the cruise control\nteam\u2019s responsibility.", "start": 225.269, "duration": 2.791}, {"text": "It\u2019s another team\u2019s code.", "start": 228.06, "duration": 1.75}, {"text": "Because the cruise control team didn\u2019t write\nthat, they\u2019re going to need good documentation", "start": 229.81, "duration": 3.59}, {"text": "about what each function in the code does,\nand a well-defined Application Programming", "start": 233.4, "duration": 4.149}, {"text": "Interface -- or API for short.", "start": 237.549, "duration": 2.28}, {"text": "You can think of an API as the way that collaborating\nprogrammers interact across various parts", "start": 239.829, "duration": 4.53}, {"text": "of the code.", "start": 244.36, "duration": 0.62}, {"text": "For example, in the IgnitionControl object,\nthere might be functions to set the RPM of", "start": 244.98, "duration": 3.98}, {"text": "the engine, check the spark plug voltage,\nas well as fire the individual spark plugs.", "start": 248.969, "duration": 3.871}, {"text": "Being able to set the motor\u2019s RPM is really\nuseful, the cruise control team is going to", "start": 252.84, "duration": 4.25}, {"text": "need to call that function.", "start": 257.09, "duration": 1.34}, {"text": "But, they don\u2019t know much about how the\nignition system works.", "start": 258.43, "duration": 3.059}, {"text": "It\u2019s not a good idea to let them call functions\nthat fire the individual spark plugs.", "start": 261.489, "duration": 4.08}, {"text": "Or the engine might explode!", "start": 265.569, "duration": 1.211}, {"text": "Maybe.", "start": 266.78, "duration": 1.0}, {"text": "The API allows the right people access to\nthe right functions and data.", "start": 267.78, "duration": 3.56}, {"text": "Object Oriented Programming languages do this\nby letting you specify whether functions are", "start": 271.34, "duration": 3.6}, {"text": "public or private.", "start": 274.949, "duration": 1.471}, {"text": "If a function is marked as \u201cprivate\u201d,\nit means only functions inside that object", "start": 276.43, "duration": 3.69}, {"text": "can call it.", "start": 280.12, "duration": 1.0}, {"text": "So, in this example, only other functions\ninside of IgnitionControl, like the setRPM", "start": 281.12, "duration": 4.63}, {"text": "function, can fire the sparkplugs.", "start": 285.75, "duration": 2.13}, {"text": "On the other hand, because the setRPM function\nis marked as public, other objects can call", "start": 287.88, "duration": 4.99}, {"text": "it, like cruise control.", "start": 292.87, "duration": 1.41}, {"text": "This ability to hide complexity, and selectively\nreveal it, is the essence of Object Oriented", "start": 294.28, "duration": 4.35}, {"text": "Programming, and it\u2019s a powerful and popular\nway to tackle building large and complex programs.", "start": 298.63, "duration": 4.65}, {"text": "Pretty much every piece of software on your\ncomputer, or game running on your console,", "start": 303.28, "duration": 3.94}, {"text": "was built using an Object Oriented Programming\nLanguage, like C++, C# or Objective-C. Other", "start": 307.229, "duration": 5.53}, {"text": "popular \u201cOO\u201d languages you may have heard\nof are Python and Java.", "start": 312.759, "duration": 2.81}, {"text": "It\u2019s important to remember that code, before\nbeing compiled, is just text.", "start": 315.569, "duration": 3.581}, {"text": "As I mentioned earlier, you could write code\nin Notepad or any old word processor.", "start": 319.15, "duration": 4.15}, {"text": "Some people do.", "start": 323.3, "duration": 1.0}, {"text": "But generally, today\u2019s software developers\nuse special-purpose applications for writing", "start": 324.3, "duration": 3.929}, {"text": "programs, ones that integrate many useful\ntools for writing, organizing, compiling and", "start": 328.229, "duration": 4.851}, {"text": "testing code.", "start": 333.08, "duration": 1.2}, {"text": "Because they put everything you need in one\nplace, they\u2019re called Integrated Development", "start": 334.28, "duration": 3.76}, {"text": "Environments, or IDEs for short.", "start": 338.04, "duration": 1.78}, {"text": "All IDEs provide a text editor for writing\ncode, often with useful features like automatic", "start": 339.9, "duration": 4.52}, {"text": "color-coding to improve readability.", "start": 344.42, "duration": 2.2}, {"text": "Many even check for syntax errors as you type,\nlike spell check for code.", "start": 346.629, "duration": 3.69}, {"text": "Big programs contain lots of individual source\nfiles, so IDEs allow programmers to organize", "start": 350.319, "duration": 4.551}, {"text": "and efficiently navigate everything.", "start": 354.87, "duration": 1.77}, {"text": "Also built right into the IDE is the ability\nto compile and run code.", "start": 356.64, "duration": 4.06}, {"text": "And if your program crashes, because it\u2019s\nstill a work in progress, the IDE can take", "start": 360.7, "duration": 3.61}, {"text": "you back to the line of code where it happened,\nand often provide additional information to", "start": 364.31, "duration": 3.919}, {"text": "help you track down and fix the bug, which\nis a process called debugging.", "start": 368.229, "duration": 3.571}, {"text": "This is important because most programmers\nspend 70 to 80% of their time testing and", "start": 371.8, "duration": 4.359}, {"text": "debugging, not writing new code.", "start": 376.159, "duration": 1.931}, {"text": "Good tools, contained in IDEs, can go a long\nway when it comes to helping programmers prevent", "start": 378.09, "duration": 4.03}, {"text": "and find errors.", "start": 382.12, "duration": 1.3}, {"text": "Many computer programmers can be pretty loyal\nto their IDEs though - but let\u2019s be honest.", "start": 383.42, "duration": 4.18}, {"text": "VIM is where it\u2019s at.", "start": 387.64, "duration": 1.44}, {"text": "Providing you know how to quit.", "start": 389.08, "duration": 1.0}, {"text": "In addition to coding and debugging, another\nimportant part of a programmer's job is documenting", "start": 390.08, "duration": 4.209}, {"text": "their code.", "start": 394.289, "duration": 1.0}, {"text": "This can be done in standalone files called\n\u201cread-me\u2019s\u201d which tell other programmers", "start": 395.289, "duration": 3.411}, {"text": "to read that help file before diving in.", "start": 398.7, "duration": 2.05}, {"text": "It can also happen right in the code itself\nwith comments.", "start": 400.75, "duration": 3.06}, {"text": "These are specially-marked statements that\nthe program knows to ignore when the code", "start": 403.81, "duration": 3.109}, {"text": "is compiled.", "start": 406.919, "duration": 1.0}, {"text": "They exist only to help programmers figure\nout what\u2019s what in the source code.", "start": 407.919, "duration": 3.081}, {"text": "Good documentation helps programmers when\nthey revisit code they haven\u2019t seen for", "start": 411.0, "duration": 3.56}, {"text": "awhile, but it\u2019s also crucial for programmers\nwho are totally new to it.", "start": 414.56, "duration": 3.289}, {"text": "I just want to take a second here and reiterate\nthat it\u2019s THE WORST when someone parachutes", "start": 417.849, "duration": 4.301}, {"text": "a load of uncommented and undocumented code\ninto your lap, and you literally have to go", "start": 422.15, "duration": 4.25}, {"text": "line by line to understand what the code is\ndoing.", "start": 426.4, "duration": 2.4}, {"text": "Seriously.", "start": 428.8, "duration": 0.78}, {"text": "Don\u2019t be that person.", "start": 429.58, "duration": 1.28}, {"text": "Documentation also promotes code reuse.", "start": 430.86, "duration": 2.5}, {"text": "So, instead of having programmers constantly\nwrite the same things over and over, they", "start": 433.38, "duration": 3.38}, {"text": "can track down someone else\u2019s code that\ndoes what they need.", "start": 436.761, "duration": 3.019}, {"text": "Then, thanks to documentation, they can put\nit to work in their program, without ever", "start": 439.78, "duration": 3.87}, {"text": "having to read through the code.", "start": 443.65, "duration": 1.4}, {"text": "\u201cRead the docs\u201d as they say.", "start": 445.05, "duration": 1.619}, {"text": "In addition to IDEs, another important piece\nof software that helps big teams work collaboratively", "start": 446.669, "duration": 4.071}, {"text": "on big coding projects is called Source Control, also known as version control or revision control.", "start": 450.74, "duration": 5.74}, {"text": "Most often, at a big software company like\nApple or Microsoft, code for projects is stored", "start": 456.48, "duration": 4.08}, {"text": "on centralized servers, called a code repository.", "start": 460.56, "duration": 2.75}, {"text": "When a programmer wants to work on a piece\nof code, they can check it out, sort of like", "start": 463.31, "duration": 3.731}, {"text": "checking out a book out from a library.", "start": 467.041, "duration": 1.628}, {"text": "Often, this can be done right in an IDE.", "start": 468.669, "duration": 2.34}, {"text": "Then, they can edit this code all they want\non their personal computer, adding new features", "start": 471.009, "duration": 4.13}, {"text": "and testing if they work.", "start": 475.139, "duration": 1.5}, {"text": "When the programmer is confident their changes\nare working and there are no loose ends, they", "start": 476.639, "duration": 3.651}, {"text": "can check the code back into the repository,\nknown as committing code, for everyone else", "start": 480.29, "duration": 4.21}, {"text": "to use.", "start": 484.5, "duration": 1.0}, {"text": "While a piece of code is checked out, and\npresumably getting updated or modified, other", "start": 485.5, "duration": 3.879}, {"text": "programmers leave it alone.", "start": 489.379, "duration": 1.1}, {"text": "This prevents weird conflicts and duplicated\nwork.", "start": 490.479, "duration": 2.311}, {"text": "In this way, hundreds of programmers can be\nsimultaneously checking in and out pieces", "start": 492.79, "duration": 4.369}, {"text": "of code, iteratively building up huge systems.", "start": 497.159, "duration": 2.79}, {"text": "Critically, you don\u2019t want someone committing\nbuggy code, because other people and teams", "start": 499.949, "duration": 3.851}, {"text": "may rely on it.", "start": 503.8, "duration": 1.369}, {"text": "Their code could crash, creating confusion\nand lost time.", "start": 505.169, "duration": 2.78}, {"text": "The master version of the code, stored on\nthe server, should always compile without", "start": 507.949, "duration": 3.49}, {"text": "errors and run with minimal bugs.", "start": 511.44, "duration": 1.57}, {"text": "But sometimes bugs creep in.", "start": 513.01, "duration": 1.71}, {"text": "Fortunately, source control software keeps\ntrack of all changes, and if a bug is found,", "start": 514.72, "duration": 3.74}, {"text": "the whole code, or just a piece, can be rolled\nback to an earlier, stable version.", "start": 518.47, "duration": 3.94}, {"text": "It also keeps track of who made each change,\nso coworkers can send nasty, I mean, helpful", "start": 522.41, "duration": 5.29}, {"text": "and encouraging emails to the offending person.", "start": 527.7, "duration": 2.52}, {"text": "Debugging goes hand in hand with writing code,\nand it\u2019s most often done by an individual", "start": 530.22, "duration": 3.9}, {"text": "or small team.", "start": 534.12, "duration": 1.17}, {"text": "The big picture version of debugging is Quality\nAssurance testing, or QA.", "start": 535.29, "duration": 3.74}, {"text": "This is where a team rigorously tests out\na piece of software, attempting to create", "start": 539.03, "duration": 3.45}, {"text": "unforeseen conditions that might trip it up.", "start": 542.48, "duration": 2.1}, {"text": "Basically, they elicit bugs.", "start": 544.58, "duration": 1.86}, {"text": "Getting all the wrinkles out is a huge effort,\nbut vital in making sure the software works", "start": 546.45, "duration": 4.29}, {"text": "as intended for as many users in as many situations\nas imaginable before it ships.", "start": 550.74, "duration": 5.02}, {"text": "You\u2019ve probably heard of beta software This\nis a version of software that\u2019s mostly complete,", "start": 555.76, "duration": 4.21}, {"text": "but not 100% fully tested.", "start": 559.97, "duration": 1.75}, {"text": "Companies will sometimes release beta versions\nto the public to help them identify issues,", "start": 561.72, "duration": 3.94}, {"text": "it\u2019s essentially like getting a free QA\nteam.", "start": 565.66, "duration": 2.78}, {"text": "What you don\u2019t hear about as much is the version that comes before the beta: the alpha version.", "start": 568.44, "duration": 4.78}, {"text": "This is usually so rough and buggy, it\u2019s\nonly tested internally.", "start": 573.32, "duration": 2.82}, {"text": "So, that\u2019s the tip of the iceberg in terms\nof the tools, tricks and techniques that allow", "start": 576.14, "duration": 3.72}, {"text": "software engineers to construct the huge pieces\nof software that we know and love today, like", "start": 579.86, "duration": 4.89}, {"text": "YouTube, Grand Theft Auto 5, and Powerpoint.", "start": 584.75, "duration": 2.85}, {"text": "As you might expect, all those millions of\nlines of code needs some serious processing", "start": 587.6, "duration": 3.34}, {"text": "power to run at useful speeds, so next episode we\u2019ll be talking about how computers got so incredibly fast.", "start": 590.94, "duration": 5.94}, {"text": "See you then.", "start": 596.92, "duration": 1.08}]