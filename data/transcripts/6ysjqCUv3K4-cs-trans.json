[{"text": "hey everyone in this video i'm gonna", "start": 0.08, "duration": 3.2}, {"text": "give you a quick", "start": 2.56, "duration": 3.199}, {"text": "introduction to binary search and i'm", "start": 3.28, "duration": 4.24}, {"text": "gonna explain how it works with some", "start": 5.759, "duration": 3.041}, {"text": "samba code", "start": 7.52, "duration": 3.28}, {"text": "and at the end of the video i'm also", "start": 8.8, "duration": 3.6}, {"text": "gonna show you what i would say is a", "start": 10.8, "duration": 3.52}, {"text": "medium difficulty problem", "start": 12.4, "duration": 4.48}, {"text": "which you can solve with binary search", "start": 14.32, "duration": 4.879}, {"text": "so suppose you're given a sorted array", "start": 16.88, "duration": 3.04}, {"text": "of integers", "start": 19.199, "duration": 3.681}, {"text": "for example this one you're also given a", "start": 19.92, "duration": 3.92}, {"text": "target integer", "start": 22.88, "duration": 3.76}, {"text": "for example this one and your task here", "start": 23.84, "duration": 3.519}, {"text": "is to", "start": 26.64, "duration": 3.84}, {"text": "find the target in the array and that's", "start": 27.359, "duration": 3.76}, {"text": "a problem", "start": 30.48, "duration": 2.88}, {"text": "you can solve with binary search and", "start": 31.119, "duration": 4.241}, {"text": "let's say here that you need to", "start": 33.36, "duration": 3.92}, {"text": "write a function called search that", "start": 35.36, "duration": 4.24}, {"text": "takes these two arguments the array and", "start": 37.28, "duration": 3.119}, {"text": "the target", "start": 39.6, "duration": 4.32}, {"text": "and returns the index of the target", "start": 40.399, "duration": 6.401}, {"text": "if the target exists in the array and if", "start": 43.92, "duration": 3.84}, {"text": "it doesn't", "start": 46.8, "duration": 4.0}, {"text": "this function should return -1 instead", "start": 47.76, "duration": 5.439}, {"text": "so in this particular example your", "start": 50.8, "duration": 3.759}, {"text": "function should return", "start": 53.199, "duration": 4.561}, {"text": "6 because the index of", "start": 54.559, "duration": 6.561}, {"text": "the target integer 11 right here is", "start": 57.76, "duration": 6.96}, {"text": "6. and one approach you can use to solve", "start": 61.12, "duration": 5.52}, {"text": "this problem as a comparison to binary", "start": 64.72, "duration": 2.719}, {"text": "search", "start": 66.64, "duration": 3.92}, {"text": "is called linear search the idea of this", "start": 67.439, "duration": 6.641}, {"text": "approach is you start at the beginning", "start": 70.56, "duration": 6.4}, {"text": "of the array this one right here and", "start": 74.08, "duration": 3.6}, {"text": "then check", "start": 76.96, "duration": 3.76}, {"text": "if it's our target or not and if it's", "start": 77.68, "duration": 4.32}, {"text": "not our target", "start": 80.72, "duration": 3.84}, {"text": "then we go to the next element and the", "start": 82.0, "duration": 3.759}, {"text": "next element", "start": 84.56, "duration": 6.08}, {"text": "zone until we find our target", "start": 85.759, "duration": 7.921}, {"text": "or we don't find our target", "start": 90.64, "duration": 5.92}, {"text": "but find a number that's larger than the", "start": 93.68, "duration": 3.6}, {"text": "target", "start": 96.56, "duration": 3.199}, {"text": "then we can stop the search then and", "start": 97.28, "duration": 3.36}, {"text": "this approach", "start": 99.759, "duration": 4.561}, {"text": "has the time complexity of of and", "start": 100.64, "duration": 6.0}, {"text": "where n is the number of elements in the", "start": 104.32, "duration": 3.36}, {"text": "array", "start": 106.64, "duration": 3.28}, {"text": "and that's because assuming that we", "start": 107.68, "duration": 4.719}, {"text": "don't know where the target is", "start": 109.92, "duration": 4.72}, {"text": "we're going to check you know a certain", "start": 112.399, "duration": 4.161}, {"text": "number of elements in the array", "start": 114.64, "duration": 4.24}, {"text": "and on average we'll need to check about", "start": 116.56, "duration": 3.599}, {"text": "half the elements", "start": 118.88, "duration": 3.04}, {"text": "because on average you know we can", "start": 120.159, "duration": 4.801}, {"text": "assume that the target is going to be", "start": 121.92, "duration": 6.0}, {"text": "in the middle of the array and so we'll", "start": 124.96, "duration": 4.48}, {"text": "need to check", "start": 127.92, "duration": 4.88}, {"text": "n over two elements", "start": 129.44, "duration": 6.879}, {"text": "on average and that's why we have of n", "start": 132.8, "duration": 4.56}, {"text": "over two in time", "start": 136.319, "duration": 4.321}, {"text": "which is equivalent to o of n", "start": 137.36, "duration": 6.08}, {"text": "okay so as a better faster alternative", "start": 140.64, "duration": 4.16}, {"text": "to linear search", "start": 143.44, "duration": 4.159}, {"text": "let's take a look at a binary search and", "start": 144.8, "duration": 4.0}, {"text": "to see how it works", "start": 147.599, "duration": 4.321}, {"text": "we're going to use this example", "start": 148.8, "duration": 6.56}, {"text": "of a sorted array of integers", "start": 151.92, "duration": 7.28}, {"text": "ranging from minus 50 to 50.", "start": 155.36, "duration": 6.72}, {"text": "and as you can see we have 40 integers", "start": 159.2, "duration": 4.399}, {"text": "here", "start": 162.08, "duration": 4.879}, {"text": "we're also given the integer target of", "start": 163.599, "duration": 6.72}, {"text": "20. now the first step in binary search", "start": 166.959, "duration": 6.241}, {"text": "is to say if the target exists in this", "start": 170.319, "duration": 3.681}, {"text": "array", "start": 173.2, "duration": 4.0}, {"text": "it must be between the first element", "start": 174.0, "duration": 5.28}, {"text": "this element right here and the last", "start": 177.2, "duration": 4.72}, {"text": "element this element right here", "start": 179.28, "duration": 5.52}, {"text": "another way to say the same thing would", "start": 181.92, "duration": 4.08}, {"text": "be to say", "start": 184.8, "duration": 3.92}, {"text": "our initial search region is going to be", "start": 186.0, "duration": 4.64}, {"text": "this entire array which is between the", "start": 188.72, "duration": 2.96}, {"text": "first element", "start": 190.64, "duration": 4.0}, {"text": "and the last element we can express the", "start": 191.68, "duration": 4.4}, {"text": "idea", "start": 194.64, "duration": 4.959}, {"text": "by defining two integer variables or", "start": 196.08, "duration": 6.72}, {"text": "two uh pointers which", "start": 199.599, "duration": 6.72}, {"text": "we're going to call left and right or l", "start": 202.8, "duration": 7.12}, {"text": "and r so l would be zero pointing at", "start": 206.319, "duration": 4.961}, {"text": "this element right here", "start": 209.92, "duration": 4.319}, {"text": "and r would be pointing this last", "start": 211.28, "duration": 4.16}, {"text": "element right here", "start": 214.239, "duration": 3.36}, {"text": "and in this particular example the", "start": 215.44, "duration": 3.439}, {"text": "initial value of", "start": 217.599, "duration": 4.0}, {"text": "r would be 39 because the length of the", "start": 218.879, "duration": 3.201}, {"text": "array", "start": 221.599, "duration": 3.36}, {"text": "is 40 right here okay and the next step", "start": 222.08, "duration": 4.079}, {"text": "in binary search", "start": 224.959, "duration": 4.401}, {"text": "would be to check the number that's in", "start": 226.159, "duration": 3.921}, {"text": "the middle", "start": 229.36, "duration": 3.68}, {"text": "of l and r in this particular case", "start": 230.08, "duration": 3.359}, {"text": "that's", "start": 233.04, "duration": 3.04}, {"text": "this number right here and let's say as", "start": 233.439, "duration": 5.041}, {"text": "an example that it happens to be 10.", "start": 236.08, "duration": 5.92}, {"text": "then at that point since our target is", "start": 238.48, "duration": 6.88}, {"text": "larger than 10 we'll know that the", "start": 242.0, "duration": 4.0}, {"text": "target", "start": 245.36, "duration": 4.0}, {"text": "if it exists in this array must be", "start": 246.0, "duration": 7.12}, {"text": "in this region right here so that means", "start": 249.36, "duration": 5.84}, {"text": "we can move", "start": 253.12, "duration": 5.6}, {"text": "our left pointer or l", "start": 255.2, "duration": 6.879}, {"text": "over here and then we can keep repeating", "start": 258.72, "duration": 4.64}, {"text": "the same procedure", "start": 262.079, "duration": 5.041}, {"text": "to narrow our region more and more", "start": 263.36, "duration": 6.32}, {"text": "so we can check the number in the middle", "start": 267.12, "duration": 4.24}, {"text": "of the new value of l", "start": 269.68, "duration": 4.56}, {"text": "and the current value of r that's this", "start": 271.36, "duration": 5.119}, {"text": "number right here", "start": 274.24, "duration": 4.64}, {"text": "and if that happens to be larger than", "start": 276.479, "duration": 3.761}, {"text": "target", "start": 278.88, "duration": 5.759}, {"text": "that's 30 right here then we'll know", "start": 280.24, "duration": 7.519}, {"text": "our target must be between this current", "start": 284.639, "duration": 4.56}, {"text": "value of l", "start": 287.759, "duration": 4.241}, {"text": "and this element right here so we can", "start": 289.199, "duration": 4.481}, {"text": "move r", "start": 292.0, "duration": 5.36}, {"text": "over here so just like that we can keep", "start": 293.68, "duration": 7.2}, {"text": "repeating the same procedure until", "start": 297.36, "duration": 6.88}, {"text": "the number between l and r uh the number", "start": 300.88, "duration": 4.48}, {"text": "in the middle", "start": 304.24, "duration": 4.0}, {"text": "of l and r happens to be the target at", "start": 305.36, "duration": 5.279}, {"text": "that point we can uh finish running our", "start": 308.24, "duration": 3.76}, {"text": "function because we've already found", "start": 310.639, "duration": 2.241}, {"text": "that number", "start": 312.0, "duration": 3.919}, {"text": "or uh when", "start": 312.88, "duration": 6.48}, {"text": "r comes to the left", "start": 315.919, "duration": 6.401}, {"text": "of l kind of like that and that's", "start": 319.36, "duration": 4.399}, {"text": "because at that point", "start": 322.32, "duration": 4.4}, {"text": "our search region is empty so that means", "start": 323.759, "duration": 3.601}, {"text": "that", "start": 326.72, "duration": 2.64}, {"text": "this target number doesn't exist in this", "start": 327.36, "duration": 3.04}, {"text": "array", "start": 329.36, "duration": 3.04}, {"text": "okay so we're going to put this idea", "start": 330.4, "duration": 3.28}, {"text": "into code", "start": 332.4, "duration": 3.92}, {"text": "but first before that let's think about", "start": 333.68, "duration": 5.359}, {"text": "the time complexity of this approach", "start": 336.32, "duration": 5.52}, {"text": "well with this particular example that", "start": 339.039, "duration": 4.321}, {"text": "we just saw", "start": 341.84, "duration": 3.919}, {"text": "our search region started with 40", "start": 343.36, "duration": 3.119}, {"text": "elements", "start": 345.759, "duration": 2.481}, {"text": "and then it became about 20 and then", "start": 346.479, "duration": 3.921}, {"text": "about 10 and so on", "start": 348.24, "duration": 5.6}, {"text": "until we got down to one so the pattern", "start": 350.4, "duration": 4.0}, {"text": "we see", "start": 353.84, "duration": 3.919}, {"text": "here is we start uh with", "start": 354.4, "duration": 6.16}, {"text": "a search region of n elements which is", "start": 357.759, "duration": 4.481}, {"text": "the number of elements in the given", "start": 360.56, "duration": 2.56}, {"text": "array", "start": 362.24, "duration": 4.239}, {"text": "and then we have it and then we get the", "start": 363.12, "duration": 5.12}, {"text": "we get half of that and half of that and", "start": 366.479, "duration": 4.241}, {"text": "so on until we get one", "start": 368.24, "duration": 5.44}, {"text": "and i can write it uh slightly", "start": 370.72, "duration": 4.08}, {"text": "differently", "start": 373.68, "duration": 3.84}, {"text": "just like that so we have n and then n", "start": 374.8, "duration": 4.16}, {"text": "over two and over", "start": 377.52, "duration": 6.16}, {"text": "2 to the power of 2 and so on until", "start": 378.96, "duration": 8.0}, {"text": "n over 2 to the power of x", "start": 383.68, "duration": 6.32}, {"text": "is roughly equal to 1 whatever this", "start": 386.96, "duration": 6.64}, {"text": "x is and now for a second", "start": 390.0, "duration": 6.96}, {"text": "let's say that n", "start": 393.6, "duration": 6.56}, {"text": "happens to be 8 that's", "start": 396.96, "duration": 6.239}, {"text": "2 to the power 3 so this", "start": 400.16, "duration": 4.64}, {"text": "expression right here n over 2 to the", "start": 403.199, "duration": 3.521}, {"text": "power 3", "start": 404.8, "duration": 5.36}, {"text": "becomes one so that means", "start": 406.72, "duration": 6.24}, {"text": "if n happens to be eight we'll need to", "start": 410.16, "duration": 3.2}, {"text": "check", "start": 412.96, "duration": 4.0}, {"text": "about uh three elements", "start": 413.36, "duration": 6.72}, {"text": "about three elements until", "start": 416.96, "duration": 6.32}, {"text": "our search region becomes one you might", "start": 420.08, "duration": 5.519}, {"text": "say well that's more like four elements", "start": 423.28, "duration": 4.319}, {"text": "but i'm saying the number of elements", "start": 425.599, "duration": 3.201}, {"text": "that we need to check", "start": 427.599, "duration": 4.401}, {"text": "is roughly equal to three", "start": 428.8, "duration": 5.519}, {"text": "so what i just showed you here is that", "start": 432.0, "duration": 3.12}, {"text": "when n", "start": 434.319, "duration": 4.081}, {"text": "is equal to 2 to the power 3 we'll need", "start": 435.12, "duration": 4.079}, {"text": "to check about", "start": 438.4, "duration": 3.6}, {"text": "three elements and for this algorithm to", "start": 439.199, "duration": 4.0}, {"text": "be complete", "start": 442.0, "duration": 4.4}, {"text": "so if n is uh", "start": 443.199, "duration": 6.161}, {"text": "roughly equal to 2 to the power of x", "start": 446.4, "duration": 5.04}, {"text": "then we'll need to check about", "start": 449.36, "duration": 4.72}, {"text": "x elements so basically to find the", "start": 451.44, "duration": 3.599}, {"text": "number of elements", "start": 454.08, "duration": 4.16}, {"text": "that we need to check we only need to", "start": 455.039, "duration": 3.921}, {"text": "find", "start": 458.24, "duration": 3.84}, {"text": "x such that 2 to the power of x", "start": 458.96, "duration": 6.239}, {"text": "is roughly equal to n", "start": 462.08, "duration": 6.239}, {"text": "and if you solve this for x of course", "start": 465.199, "duration": 4.241}, {"text": "you get", "start": 468.319, "duration": 4.801}, {"text": "x being roughly equal to log 2 of n", "start": 469.44, "duration": 5.52}, {"text": "and so the time complexity of this", "start": 473.12, "duration": 4.16}, {"text": "algorithm will be", "start": 474.96, "duration": 4.799}, {"text": "o of the number of elements that we need", "start": 477.28, "duration": 3.199}, {"text": "to check", "start": 479.759, "duration": 4.321}, {"text": "which is of log 2 of n", "start": 480.479, "duration": 7.201}, {"text": "and you can rewrite it as of", "start": 484.08, "duration": 6.48}, {"text": "log n for short okay so what i showed", "start": 487.68, "duration": 3.84}, {"text": "you here", "start": 490.56, "duration": 4.16}, {"text": "is not an exact mathematical proof but i", "start": 491.52, "duration": 5.119}, {"text": "hope that at least this logic is clear", "start": 494.72, "duration": 3.28}, {"text": "enough to you", "start": 496.639, "duration": 3.761}, {"text": "anyway as an example if you had 10", "start": 498.0, "duration": 3.52}, {"text": "million elements", "start": 500.4, "duration": 3.199}, {"text": "in the given array then the number of", "start": 501.52, "duration": 3.519}, {"text": "elements that we need to check", "start": 503.599, "duration": 4.081}, {"text": "will be roughly equal to log 2 of 10", "start": 505.039, "duration": 3.521}, {"text": "million", "start": 507.68, "duration": 4.16}, {"text": "which is 23.253 and so on", "start": 508.56, "duration": 6.0}, {"text": "which is about 24. so if you had 10", "start": 511.84, "duration": 3.6}, {"text": "million elements", "start": 514.56, "duration": 4.159}, {"text": "in the given sortie array you need to", "start": 515.44, "duration": 4.64}, {"text": "check almost", "start": 518.719, "duration": 4.641}, {"text": "about 24 elements to find the target uh", "start": 520.08, "duration": 5.36}, {"text": "number that you're given now we're going", "start": 523.36, "duration": 3.84}, {"text": "to put our approach into", "start": 525.44, "duration": 4.32}, {"text": "actual code and to do that we're going", "start": 527.2, "duration": 4.88}, {"text": "back to our smaller example that we saw", "start": 529.76, "duration": 4.079}, {"text": "at the beginning of this video", "start": 532.08, "duration": 3.36}, {"text": "we just have eight elements in this", "start": 533.839, "duration": 4.56}, {"text": "array and we're also given", "start": 535.44, "duration": 5.519}, {"text": "the target of let's say 11 and we're", "start": 538.399, "duration": 3.521}, {"text": "trying to", "start": 540.959, "duration": 3.361}, {"text": "write our function search that takes", "start": 541.92, "duration": 4.16}, {"text": "these two arguments", "start": 544.32, "duration": 3.68}, {"text": "and by the way i'm going to show you", "start": 546.08, "duration": 3.28}, {"text": "some suit code", "start": 548.0, "duration": 3.2}, {"text": "that looks like python here but you'll", "start": 549.36, "duration": 4.08}, {"text": "be able to find the actual python and", "start": 551.2, "duration": 3.36}, {"text": "java code", "start": 553.44, "duration": 4.16}, {"text": "that i wrote for this at this url", "start": 554.56, "duration": 5.839}, {"text": "anyway the first step in this code is", "start": 557.6, "duration": 3.919}, {"text": "defining", "start": 560.399, "duration": 5.041}, {"text": "our left and right pointer", "start": 561.519, "duration": 7.361}, {"text": "left or l will be zero right here", "start": 565.44, "duration": 6.959}, {"text": "and right or r will be the array's", "start": 568.88, "duration": 6.48}, {"text": "length minus one so the array's length", "start": 572.399, "duration": 4.321}, {"text": "is 8 here", "start": 575.36, "duration": 4.8}, {"text": "and so r will be 7 and then", "start": 576.72, "duration": 6.88}, {"text": "after that we'll run a while loop", "start": 580.16, "duration": 7.04}, {"text": "saying while left is less than or equal", "start": 583.6, "duration": 4.4}, {"text": "to right", "start": 587.2, "duration": 4.48}, {"text": "or in other words while right", "start": 588.0, "duration": 7.279}, {"text": "is not to the left of", "start": 591.68, "duration": 7.599}, {"text": "l and we'll say while that condition", "start": 595.279, "duration": 5.201}, {"text": "holds", "start": 599.279, "duration": 4.881}, {"text": "we'll first need to find the mid index", "start": 600.48, "duration": 5.599}, {"text": "and that's going to be between left and", "start": 604.16, "duration": 4.239}, {"text": "right and that's going to be the average", "start": 606.079, "duration": 5.041}, {"text": "of left and right so left plus right", "start": 608.399, "duration": 4.321}, {"text": "divided by 2", "start": 611.12, "duration": 4.64}, {"text": "and if this is not an integer you can", "start": 612.72, "duration": 3.92}, {"text": "round it down", "start": 615.76, "duration": 3.92}, {"text": "to get an integer value here", "start": 616.64, "duration": 5.04}, {"text": "and so in this particular example we'll", "start": 619.68, "duration": 3.12}, {"text": "get zero", "start": 621.68, "duration": 3.92}, {"text": "plus seven divided by two which is three", "start": 622.8, "duration": 3.84}, {"text": "point five", "start": 625.6, "duration": 4.799}, {"text": "round it down and we get three so", "start": 626.64, "duration": 6.96}, {"text": "mid will be 3 right here", "start": 630.399, "duration": 5.761}, {"text": "and the next step after that will be to", "start": 633.6, "duration": 3.84}, {"text": "say", "start": 636.16, "duration": 5.28}, {"text": "if that element r of mid happens to be", "start": 637.44, "duration": 6.72}, {"text": "the target then we've found the target", "start": 641.44, "duration": 4.079}, {"text": "so we're going to return", "start": 644.16, "duration": 5.84}, {"text": "that index mid and", "start": 645.519, "duration": 9.121}, {"text": "else if target happens to be less than", "start": 650.0, "duration": 7.519}, {"text": "that element right there so if the", "start": 654.64, "duration": 4.0}, {"text": "target", "start": 657.519, "duration": 4.0}, {"text": "happens to be for example six in this", "start": 658.64, "duration": 4.16}, {"text": "example", "start": 661.519, "duration": 4.481}, {"text": "then the right pointer will be mid minus", "start": 662.8, "duration": 4.4}, {"text": "one", "start": 666.0, "duration": 3.76}, {"text": "so the right pointer will move right", "start": 667.2, "duration": 4.4}, {"text": "there", "start": 669.76, "duration": 5.92}, {"text": "and otherwise target is greater", "start": 671.6, "duration": 7.04}, {"text": "than that element right here so that's", "start": 675.68, "duration": 3.36}, {"text": "the", "start": 678.64, "duration": 2.16}, {"text": "example we have right here target", "start": 679.04, "duration": 3.2}, {"text": "happens to be greater", "start": 680.8, "duration": 5.039}, {"text": "than seven so then left or l", "start": 682.24, "duration": 7.44}, {"text": "uh will be mid plus 1 that's right here", "start": 685.839, "duration": 6.0}, {"text": "and then we can keep repeating this", "start": 689.68, "duration": 3.04}, {"text": "while loop", "start": 691.839, "duration": 3.921}, {"text": "until we either find", "start": 692.72, "duration": 6.4}, {"text": "r of mid to be target", "start": 695.76, "duration": 7.519}, {"text": "and at that point we can return mid or", "start": 699.12, "duration": 7.12}, {"text": "left will be greater than right so for", "start": 703.279, "duration": 4.401}, {"text": "example if the target", "start": 706.24, "duration": 4.719}, {"text": "happens to be let's say 12 which doesn't", "start": 707.68, "duration": 3.839}, {"text": "exist", "start": 710.959, "duration": 5.12}, {"text": "in this array then eventually l", "start": 711.519, "duration": 8.0}, {"text": "will come to the right", "start": 716.079, "duration": 6.721}, {"text": "of r or in other words left will be", "start": 719.519, "duration": 4.0}, {"text": "greater than", "start": 722.8, "duration": 3.44}, {"text": "right so at that point we'll get out of", "start": 723.519, "duration": 4.161}, {"text": "the while loop", "start": 726.24, "duration": 4.719}, {"text": "and then we can return -1 to show that", "start": 727.68, "duration": 6.48}, {"text": "the target doesn't exist in this array", "start": 730.959, "duration": 6.241}, {"text": "okay so that's how binary search works", "start": 734.16, "duration": 5.44}, {"text": "but if you're looking for extra practice", "start": 737.2, "duration": 3.68}, {"text": "i would recommend", "start": 739.6, "duration": 3.28}, {"text": "using my business affiliates product", "start": 740.88, "duration": 3.6}, {"text": "i'll algoexpert.io", "start": 742.88, "duration": 4.399}, {"text": "which you can find at this referral link", "start": 744.48, "duration": 4.0}, {"text": "of mine", "start": 747.279, "duration": 4.881}, {"text": "and get a discount from with my discount", "start": 748.48, "duration": 5.44}, {"text": "code csdojo", "start": 752.16, "duration": 4.56}, {"text": "they have two related problems one is", "start": 753.92, "duration": 3.599}, {"text": "simply", "start": 756.72, "duration": 2.799}, {"text": "implementing binary search and the", "start": 757.519, "duration": 3.921}, {"text": "second one is called shifty binary", "start": 759.519, "duration": 2.481}, {"text": "search", "start": 761.44, "duration": 3.36}, {"text": "which i think is much more interesting", "start": 762.0, "duration": 3.12}, {"text": "so", "start": 764.8, "duration": 3.2}, {"text": "in this problem uh you're given a sorted", "start": 765.12, "duration": 3.839}, {"text": "array", "start": 768.0, "duration": 3.279}, {"text": "as well as a target and you need to find", "start": 768.959, "duration": 3.041}, {"text": "the position", "start": 771.279, "duration": 4.0}, {"text": "of the target with a little bit of twist", "start": 772.0, "duration": 5.6}, {"text": "you could be given a sorted array just", "start": 775.279, "duration": 3.281}, {"text": "like that", "start": 777.6, "duration": 4.16}, {"text": "but you could also be given an array", "start": 778.56, "duration": 5.92}, {"text": "that's sorted but also shifted so if", "start": 781.76, "duration": 3.519}, {"text": "you're given", "start": 784.48, "duration": 3.84}, {"text": "for example this array and the target uh", "start": 785.279, "duration": 6.24}, {"text": "you can see that it's sorted", "start": 788.32, "duration": 7.92}, {"text": "but shifted by one just like that", "start": 791.519, "duration": 8.961}, {"text": "or you could be given this array", "start": 796.24, "duration": 6.48}, {"text": "uh which is the same array but shifted", "start": 800.48, "duration": 5.52}, {"text": "by a larger amount", "start": 802.72, "duration": 6.96}, {"text": "just like that and you don't know", "start": 806.0, "duration": 6.72}, {"text": "how much your array has been", "start": 809.68, "duration": 5.52}, {"text": "shifted by when you're given this", "start": 812.72, "duration": 3.679}, {"text": "problem", "start": 815.2, "duration": 2.96}, {"text": "so you know the problem is writing a", "start": 816.399, "duration": 4.24}, {"text": "function that takes these two arguments", "start": 818.16, "duration": 5.039}, {"text": "one of these arrays as well as the", "start": 820.639, "duration": 3.361}, {"text": "target", "start": 823.199, "duration": 3.041}, {"text": "and returns the index of the target if", "start": 824.0, "duration": 5.279}, {"text": "it exists and minus one if it doesn't", "start": 826.24, "duration": 5.2}, {"text": "you should be able to solve it and of", "start": 829.279, "duration": 3.041}, {"text": "log n", "start": 831.44, "duration": 2.639}, {"text": "anyway i personally think this is a", "start": 832.32, "duration": 3.44}, {"text": "pretty interesting problem", "start": 834.079, "duration": 3.76}, {"text": "i had a lot of fun when i was solving it", "start": 835.76, "duration": 3.28}, {"text": "so i would say try", "start": 837.839, "duration": 3.601}, {"text": "solving it yourself and if you want to", "start": 839.04, "duration": 3.039}, {"text": "practice", "start": 841.44, "duration": 2.639}, {"text": "implementing it on an interactive", "start": 842.079, "duration": 4.081}, {"text": "environment uh you can check out aqua", "start": 844.079, "duration": 4.161}, {"text": "experts website", "start": 846.16, "duration": 3.6}, {"text": "and they have a lot of other problems", "start": 848.24, "duration": 3.76}, {"text": "too like 98 other problems", "start": 849.76, "duration": 4.8}, {"text": "on a variety of different topics in data", "start": 852.0, "duration": 4.639}, {"text": "structures and algorithms", "start": 854.56, "duration": 4.719}, {"text": "anyway thank you as always for watching", "start": 856.639, "duration": 3.361}, {"text": "my videos", "start": 859.279, "duration": 4.641}, {"text": "and i'll see you guys in the next one", "start": 860.0, "duration": 3.92}]