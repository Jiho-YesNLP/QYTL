[{"text": "The following content is\nprovided under a Creative", "start": 0.79, "duration": 2.4}, {"text": "Commons license.", "start": 3.19, "duration": 1.54}, {"text": "Your support will help\nMIT OpenCourseWare", "start": 4.73, "duration": 2.3}, {"text": "continue to offer high quality\neducational resources for free.", "start": 7.03, "duration": 4.36}, {"text": "To make a donation or\nview additional materials", "start": 11.39, "duration": 2.6}, {"text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare", "start": 13.99, "duration": 3.88}, {"text": "at ocw.mit.edu.", "start": 17.87, "duration": 0.97}, {"text": "PROFESSOR: So, for\nthe last two lectures", "start": 30.55, "duration": 3.65}, {"text": "we've been talking about\nanalyzing algorithms,", "start": 34.2, "duration": 2.79}, {"text": "complexity, orders of growth.", "start": 36.99, "duration": 1.44}, {"text": "How do we estimate the\ncost of an algorithm", "start": 38.43, "duration": 2.79}, {"text": "as the size of the input grows?", "start": 41.22, "duration": 2.1}, {"text": "And as I've said\nseveral times, I'll", "start": 43.32, "duration": 1.5}, {"text": "say at least once\nmore, how do we also", "start": 44.82, "duration": 1.89}, {"text": "turn it the other direction?", "start": 46.71, "duration": 1.2}, {"text": "How do we use thoughts about\nchoices of pieces of algorithm", "start": 47.91, "duration": 4.32}, {"text": "in terms of\nimplications on the cost", "start": 52.23, "duration": 1.77}, {"text": "it's going to take\nus to compute?", "start": 54.0, "duration": 2.7}, {"text": "We saw last time a set of\nexamples-- constant algorithms,", "start": 56.7, "duration": 4.53}, {"text": "linear algorithms, logarithmic\nalgorithms, linear algorithms,", "start": 61.23, "duration": 5.16}, {"text": "quadratic algorithms,\nexponential algorithms.", "start": 66.39, "duration": 3.48}, {"text": "Today, what I'm\ngoing to do is fill", "start": 69.87, "duration": 1.47}, {"text": "in one more piece, a log linear\nalgorithm-- something that's", "start": 71.34, "duration": 3.06}, {"text": "really a nice kind of algorithm\nto have-- and use it to talk", "start": 74.4, "duration": 3.66}, {"text": "about one last class\nof algorithms that", "start": 78.06, "duration": 2.49}, {"text": "are really valuable, and those\nare searching and sorting", "start": 80.55, "duration": 2.97}, {"text": "algorithms.", "start": 83.52, "duration": 2.11}, {"text": "So a search algorithm.", "start": 85.63, "duration": 2.25}, {"text": "Kind of an obvious statement.", "start": 87.88, "duration": 1.53}, {"text": "You use them all the time\nwhen you go to Google or Bing", "start": 89.41, "duration": 2.39}, {"text": "or whatever your favorite\nsearch mechanism on the web is.", "start": 91.8, "duration": 3.87}, {"text": "It's just a way to find an\nitem or a group of items", "start": 95.67, "duration": 3.61}, {"text": "from a collection.", "start": 99.28, "duration": 2.07}, {"text": "If you think about\nit, that collection", "start": 101.35, "duration": 2.03}, {"text": "could be either\nimplicit or explicit.", "start": 103.38, "duration": 3.622}, {"text": "So way back at the\nbeginning of the term,", "start": 107.002, "duration": 1.708}, {"text": "we saw an example of\na search algorithm", "start": 108.71, "duration": 1.95}, {"text": "when you were looking\nfor square roots.", "start": 110.66, "duration": 2.94}, {"text": "And we saw simple things\nlike exhaustive enumeration.", "start": 113.6, "duration": 2.99}, {"text": "We'd go through all\nthe possibilities.", "start": 116.59, "duration": 1.96}, {"text": "We saw our first version\nof bisection search", "start": 118.55, "duration": 2.22}, {"text": "there, where you would\ndo approximations.", "start": 120.77, "duration": 1.9}, {"text": "Newton-Raphson-- these are all\nexamples of a search algorithm", "start": 122.67, "duration": 3.29}, {"text": "where the collection\nis implicit.", "start": 125.96, "duration": 2.06}, {"text": "So all the numbers between some\npoint that some other point.", "start": 128.02, "duration": 3.88}, {"text": "More common is a\nsearch algorithm", "start": 131.9, "duration": 1.71}, {"text": "where the collection\nis explicit.", "start": 133.61, "duration": 2.799}, {"text": "I don't know.", "start": 136.409, "duration": 0.541}, {"text": "For example, I've got all\nthe data records of students", "start": 136.95, "duration": 2.841}, {"text": "and I want to know how do I\nfind a particular student,", "start": 139.791, "duration": 2.249}, {"text": "so I can record that A plus\nthat everybody in this room", "start": 142.04, "duration": 2.92}, {"text": "is going to get next\nTuesday on that exam?", "start": 144.96, "duration": 2.895}, {"text": "That's not a promise.", "start": 147.855, "duration": 0.875}, {"text": "Sorry.", "start": 148.73, "duration": 0.5}, {"text": "But we'll work on it.", "start": 149.23, "duration": 1.58}, {"text": "So could do it implicit,\ncould do it explicit.", "start": 150.81, "duration": 2.42}, {"text": "Today I want to focus on\ndoing search explicitly.", "start": 153.23, "duration": 3.72}, {"text": "And it could be on different\nkinds of collections,", "start": 156.95, "duration": 2.37}, {"text": "but I'm going to focus-- just\nas an example-- on search", "start": 159.32, "duration": 2.49}, {"text": "over lists.", "start": 161.81, "duration": 1.134}, {"text": "And to make it a little\neasier, let's just do search", "start": 162.944, "duration": 2.166}, {"text": "over lists of numbers.", "start": 165.11, "duration": 0.916}, {"text": "But it could obviously be\nother kinds of elements.", "start": 166.026, "duration": 3.461}, {"text": "Now you've already seen\nsome of this, right?", "start": 169.487, "duration": 1.833}, {"text": "We did search where we said,\nwe can do linear search.", "start": 171.32, "duration": 3.57}, {"text": "Brute force.", "start": 174.89, "duration": 0.78}, {"text": "Just walk down the list\nlooking at everything", "start": 175.67, "duration": 2.28}, {"text": "till we either find the\nthing we're looking for", "start": 177.95, "duration": 2.22}, {"text": "or we get to the\nend of the list.", "start": 180.17, "duration": 1.95}, {"text": "Sometimes also called\nBritish Museum algorithm", "start": 182.12, "duration": 2.22}, {"text": "or exhaustive enumeration.", "start": 184.34, "duration": 1.2}, {"text": "I go through\neverything in the list.", "start": 185.54, "duration": 2.32}, {"text": "Nice news is, the list\ndoesn't have to be sorted.", "start": 187.86, "duration": 2.28}, {"text": "It could be just\nin arbitrary order.", "start": 190.14, "duration": 2.28}, {"text": "What we saw is that the\nexpected-- sorry, not expected.", "start": 192.42, "duration": 3.96}, {"text": "The worst case\nbehavior is linear.", "start": 196.38, "duration": 2.219}, {"text": "In the worst case, the\nelement's not in the list.", "start": 198.599, "duration": 2.041}, {"text": "I got to look at everything.", "start": 200.64, "duration": 1.166}, {"text": "So it's going to be linear\nin terms of complexity.", "start": 201.806, "duration": 3.154}, {"text": "And then we looked\nat bisection search,", "start": 204.96, "duration": 1.83}, {"text": "where we said the list\nneeds to be sorted.", "start": 206.79, "duration": 2.95}, {"text": "But if it is, we can actually\nbe much more efficient", "start": 209.74, "duration": 3.14}, {"text": "because we can take advantage\nof the sorting to cut down", "start": 212.88, "duration": 3.39}, {"text": "the size of the problem.", "start": 216.27, "duration": 1.784}, {"text": "And I'll remind you\nabout both of those.", "start": 218.054, "duration": 1.666}, {"text": "There was our simple\nlittle linear search.", "start": 219.72, "duration": 2.65}, {"text": "Right?", "start": 222.37, "duration": 0.5}, {"text": "Set a flag that says,\nI haven't yet found it.", "start": 222.87, "duration": 2.15}, {"text": "And then just loop over\nthe indices into the list.", "start": 225.02, "duration": 3.1}, {"text": "I could have also just\nlooped directly over the list", "start": 228.12, "duration": 2.19}, {"text": "itself, checking to see if\nthe ith member of the list", "start": 230.31, "duration": 3.25}, {"text": "is the thing I'm looking for.", "start": 233.56, "duration": 1.88}, {"text": "If it is, change\nthe flag to true", "start": 235.44, "duration": 1.71}, {"text": "so that when I come\nout of all of this", "start": 237.15, "duration": 2.13}, {"text": "I'll return the flag--\neither false because it", "start": 239.28, "duration": 2.19}, {"text": "was set that way initially\nor true because I found it.", "start": 241.47, "duration": 2.432}, {"text": "And of course what we knew is\nwe have to look at everything", "start": 243.902, "duration": 2.458}, {"text": "to see if it's there or not.", "start": 246.36, "duration": 2.15}, {"text": "I could speed this up by just\nreturning true at this point.", "start": 248.51, "duration": 4.24}, {"text": "While that would improve\nthe average case,", "start": 252.75, "duration": 2.88}, {"text": "doesn't improve the worst case.", "start": 255.63, "duration": 1.389}, {"text": "And that's the thing we\nusually are concerned about,", "start": 257.019, "duration": 1.611}, {"text": "because in the worst case I've\ngot to go through everything.", "start": 258.63, "duration": 2.55}, {"text": "And just to remind\nyou, we said this", "start": 261.18, "duration": 1.65}, {"text": "is order length of the list.", "start": 262.83, "duration": 2.13}, {"text": "To go around this\npart-- the loop right", "start": 264.96, "duration": 1.83}, {"text": "here-- and inside the\nloop, it's constant work.", "start": 266.79, "duration": 3.3}, {"text": "I'm doing the same number\nof things each time.", "start": 270.09, "duration": 2.37}, {"text": "That's order n times order 1.", "start": 272.46, "duration": 2.58}, {"text": "And by our rules,\nthat's just order n.", "start": 275.04, "duration": 1.75}, {"text": "So it's linear in the\nsize of the problem.", "start": 276.79, "duration": 4.23}, {"text": "OK.", "start": 281.02, "duration": 1.96}, {"text": "We said we could do\nit on sorted lists.", "start": 282.98, "duration": 2.93}, {"text": "But just again, we'll\nwalk down the list.", "start": 285.91, "duration": 2.04}, {"text": "Again, here I could loop\nover everything in the list,", "start": 287.95, "duration": 2.4}, {"text": "checking to see if\nit's the thing I want.", "start": 290.35, "duration": 1.96}, {"text": "Return true.", "start": 292.31, "duration": 1.38}, {"text": "And if I ever get to a point\nwhere the element of the list", "start": 293.69, "duration": 2.84}, {"text": "is bigger than the\nthing I'm looking for,", "start": 296.53, "duration": 2.841}, {"text": "I know it can't be in\nthe rest of the list", "start": 299.371, "duration": 1.749}, {"text": "because all the things to\nthe right are bigger yet.", "start": 301.12, "duration": 2.13}, {"text": "I could just Return\nfalse and drop out.", "start": 303.25, "duration": 3.51}, {"text": "In terms of average\nbehavior, this", "start": 306.76, "duration": 1.74}, {"text": "is better because\nit's going to stop", "start": 308.5, "duration": 1.807}, {"text": "as soon as it gets\nto a point where it", "start": 310.307, "duration": 1.583}, {"text": "can rule everything else out.", "start": 311.89, "duration": 2.17}, {"text": "But in terms of complexity,\nit's still order n.", "start": 314.06, "duration": 4.43}, {"text": "Because I still on average\nhave-- not average.", "start": 318.49, "duration": 2.184}, {"text": "In the worst case,\nI'm still going", "start": 320.674, "duration": 1.416}, {"text": "to be looking n times\nthrough the loop", "start": 322.09, "duration": 2.55}, {"text": "before I get to a point where\nI can decide to bail out of it.", "start": 324.64, "duration": 2.85}, {"text": "So order n.", "start": 327.49, "duration": 2.59}, {"text": "And then finally-- last piece\nof recap-- bisection search.", "start": 330.08, "duration": 5.18}, {"text": "Repeat again.", "start": 335.26, "duration": 0.63}, {"text": "The idea here is, take\nthe midpoint of the list.", "start": 335.89, "duration": 3.27}, {"text": "Look at that element.", "start": 339.16, "duration": 1.162}, {"text": "If it's the thing I'm\nlooking for, great.", "start": 340.322, "duration": 1.708}, {"text": "I just won the lottery.", "start": 342.03, "duration": 1.54}, {"text": "If it isn't, decide\nis the thing I'm", "start": 343.57, "duration": 2.37}, {"text": "looking for bigger or less\nthan that middle point.", "start": 345.94, "duration": 3.63}, {"text": "If it's bigger than that, I only\nuse the upper half of the list.", "start": 349.57, "duration": 4.17}, {"text": "If it's less than that, I only\nuse the lower half of the list.", "start": 353.74, "duration": 3.52}, {"text": "And the characteristic\nhere was, at each step,", "start": 357.26, "duration": 3.61}, {"text": "I'm reducing the size\nof the problem in half.", "start": 360.87, "duration": 2.2}, {"text": "I'm throwing away half of the\nremaining list at each step.", "start": 363.07, "duration": 3.39}, {"text": "And I'll just remind\nyou of that code.", "start": 366.46, "duration": 1.59}, {"text": "I know it's a lot here,\nbut just to remind you.", "start": 368.05, "duration": 2.44}, {"text": "It said, down here if\nI've got an empty list,", "start": 370.49, "duration": 2.57}, {"text": "it can't be there.", "start": 373.06, "duration": 0.75}, {"text": "I'm going to Return false.", "start": 373.81, "duration": 1.53}, {"text": "Otherwise call this\nlittle helper function", "start": 375.34, "duration": 2.46}, {"text": "with the list, the thing\nfor which I'm searching,", "start": 377.8, "duration": 3.3}, {"text": "and the beginning and end\npoint indices into the list.", "start": 381.1, "duration": 3.63}, {"text": "Initially the start\nand the very end.", "start": 384.73, "duration": 3.18}, {"text": "And this code up\nhere basically says,", "start": 387.91, "duration": 3.18}, {"text": "if those two numbers are the\nsame I'm down to a list of one.", "start": 391.09, "duration": 3.83}, {"text": "Just check to see if it's\nthe thing I'm looking for.", "start": 394.92, "duration": 2.73}, {"text": "Otherwise, pick something\nhalfway in between.", "start": 397.65, "duration": 3.06}, {"text": "And ignore this\ncase for the moment.", "start": 400.71, "duration": 1.5}, {"text": "Basically then check\nto see, is the thing", "start": 402.21, "duration": 2.22}, {"text": "at that point bigger than e?", "start": 404.43, "duration": 2.1}, {"text": "In which case, I'm\nin general going", "start": 406.53, "duration": 2.01}, {"text": "to call this only with from\nthe low point to the midpoint.", "start": 408.54, "duration": 3.38}, {"text": "Otherwise I'm going to call\nthis with the midpoint to high.", "start": 411.92, "duration": 3.31}, {"text": "And that was just this\nidea of, keep cutting down", "start": 415.23, "duration": 2.25}, {"text": "in half the size of the list.", "start": 417.48, "duration": 3.12}, {"text": "Last piece of the\nrecap-- the thing", "start": 420.6, "duration": 1.5}, {"text": "we wanted you to see here--\nis there are the two recursive", "start": 422.1, "duration": 2.55}, {"text": "calls.", "start": 424.65, "duration": 0.66}, {"text": "I'm only going to do one\nbecause I'm making a decision.", "start": 425.31, "duration": 3.33}, {"text": "At each step, I'm cutting\ndown the problem by half.", "start": 428.64, "duration": 3.93}, {"text": "And that says the number of\nsteps, the number of times", "start": 432.57, "duration": 2.79}, {"text": "I'm going to iterate\nthrough here,", "start": 435.36, "duration": 1.68}, {"text": "will be log in the\nlength of the list.", "start": 437.04, "duration": 2.782}, {"text": "And if that still doesn't\nmake sense to you, it says,", "start": 439.822, "duration": 2.208}, {"text": "I need to know when 1\nover 2 to the k-- where", "start": 442.03, "duration": 2.43}, {"text": "k is the number of\nsteps-- is equal to 1.", "start": 444.46, "duration": 2.91}, {"text": "Because in each step,\nI'm reducing by half.", "start": 447.37, "duration": 2.31}, {"text": "And that's when k\nis log base 2 of n.", "start": 449.68, "duration": 2.17}, {"text": "So that's why it's log linear.", "start": 451.85, "duration": 3.12}, {"text": "And so this just reminds you.", "start": 454.97, "duration": 1.24}, {"text": "Again, that recap.", "start": 456.21, "duration": 1.89}, {"text": "Number of calls\nreduced-- or, sorry.", "start": 458.1, "duration": 1.61}, {"text": "The call gets reduced by\na factor or two each time.", "start": 459.71, "duration": 2.29}, {"text": "I'm going to have a log\nn work going around it.", "start": 462.0, "duration": 2.4}, {"text": "And inside it's a\nconstant amount of work", "start": 464.4, "duration": 2.34}, {"text": "because I'm just\npassing the pointers,", "start": 466.74, "duration": 1.92}, {"text": "I'm not actually\ncopying the list.", "start": 468.66, "duration": 2.13}, {"text": "And that's a nice state to be.", "start": 470.79, "duration": 2.75}, {"text": "OK, so-- sounds good.", "start": 473.54, "duration": 3.88}, {"text": "Could just use linear search.", "start": 477.42, "duration": 1.34}, {"text": "It's going to be linear.", "start": 478.76, "duration": 1.0}, {"text": "When you use binary search\nor bisection search,", "start": 479.76, "duration": 3.24}, {"text": "we can do it in log time.", "start": 483.0, "duration": 1.26}, {"text": "That's great.", "start": 484.26, "duration": 1.26}, {"text": "We assumed the list was\nsorted, but all right.", "start": 485.52, "duration": 2.88}, {"text": "So that lens basically says, OK.", "start": 488.4, "duration": 3.46}, {"text": "So when does it make\nsense to sort the list", "start": 491.86, "duration": 4.02}, {"text": "and then do the search?", "start": 495.88, "duration": 1.66}, {"text": "Right?", "start": 497.54, "duration": 0.83}, {"text": "Because if I can sort\nthe list cheaply,", "start": 498.37, "duration": 1.899}, {"text": "then the search is\ngoing to be logarithmic.", "start": 500.269, "duration": 1.791}, {"text": "That's really what I would like.", "start": 502.06, "duration": 2.62}, {"text": "This little expression\nbasically says,", "start": 504.68, "duration": 2.53}, {"text": "let's let sort be the\ncost of sorting the list.", "start": 507.21, "duration": 2.81}, {"text": "I want to know when that cost\nplus something that's order", "start": 510.02, "duration": 3.149}, {"text": "log n-- which is what it's going\nto cost me to do this search.", "start": 513.169, "duration": 3.031}, {"text": "When is that less than\nsomething that's order n?", "start": 516.2, "duration": 3.956}, {"text": "Because then it's going to be\nbetter to do the sort first", "start": 520.156, "duration": 2.374}, {"text": "than do the search.", "start": 522.53, "duration": 1.229}, {"text": "And so I can just rearrange it.", "start": 523.759, "duration": 1.291}, {"text": "It needs to be, when does the\ncost of sorting-- when is it", "start": 525.05, "duration": 2.51}, {"text": "last than this expression?", "start": 527.56, "duration": 1.87}, {"text": "Which basically\nsays, when is sorting", "start": 529.43, "duration": 3.125}, {"text": "going to be less expensive\nthan the linear cost?", "start": 532.555, "duration": 2.0}, {"text": "Crud.", "start": 537.682, "duration": 1.51}, {"text": "Actually, good news\nfor you, right?", "start": 539.192, "duration": 1.458}, {"text": "This is a really short lecture.", "start": 540.65, "duration": 2.19}, {"text": "Because it says it's never true.", "start": 542.84, "duration": 2.34}, {"text": "Ouch.", "start": 545.18, "duration": 1.061}, {"text": "Don't worry.", "start": 546.241, "duration": 0.499}, {"text": "We've got more to\ngo on the lecture.", "start": 546.74, "duration": 2.316}, {"text": "The reason it can't be\ntrue-- if you think about it", "start": 549.056, "duration": 2.124}, {"text": "just informally-- is, if I've\ngot a collection of n elements", "start": 551.18, "duration": 3.15}, {"text": "and I want to sort\nit, I've got to look", "start": 554.33, "duration": 3.01}, {"text": "at each one of those\nelements at least once.", "start": 557.34, "duration": 2.82}, {"text": "Right?", "start": 560.16, "duration": 1.15}, {"text": "I have to look at them\nto decide where they go.", "start": 561.31, "duration": 2.45}, {"text": "Oh, that's n elements.", "start": 563.76, "duration": 1.35}, {"text": "So sorting must be\nat least order n,", "start": 565.11, "duration": 2.91}, {"text": "because I got to\nlook at everything.", "start": 568.02, "duration": 1.92}, {"text": "And in fact as it\nsays there, I'm", "start": 569.94, "duration": 1.89}, {"text": "going to have to use at least\nlinear time to do the sort.", "start": 571.83, "duration": 4.98}, {"text": "Sounds like we're\nstuck, but we're not.", "start": 576.81, "duration": 3.85}, {"text": "And the reason is,\noften when I want", "start": 580.66, "duration": 2.07}, {"text": "to search something I'm going\nto do multiple searches,", "start": 582.73, "duration": 3.6}, {"text": "but I may only want\nto sort the list once.", "start": 586.33, "duration": 1.83}, {"text": "In fact, I probably only\nwant to sort the list once.", "start": 588.16, "duration": 3.21}, {"text": "So in that case, I'm\nspreading out the cost.", "start": 591.37, "duration": 2.49}, {"text": "I'm amortizing the\nexpense of the sort.", "start": 593.86, "duration": 3.53}, {"text": "And now what I want to know is,\nif I'm going to do k searches,", "start": 597.39, "duration": 3.87}, {"text": "the cost of those\nk searches I know", "start": 601.26, "duration": 1.86}, {"text": "is going to be k log n-- because\nit's log to do the search.", "start": 603.12, "duration": 3.96}, {"text": "And I simply need\nto know, is the cost", "start": 607.08, "duration": 2.28}, {"text": "of sorting plus\nthis-- can I have", "start": 609.36, "duration": 2.55}, {"text": "something where it's less\nthan k searches just using", "start": 611.91, "duration": 3.3}, {"text": "linear search?", "start": 615.21, "duration": 1.72}, {"text": "And the answer is, yes.", "start": 616.93, "duration": 2.26}, {"text": "There are going to be,\nfor large k's, ways", "start": 619.19, "duration": 2.43}, {"text": "in which we can do the sort\nwhere the sort time becomes", "start": 621.62, "duration": 2.94}, {"text": "irrelevant, that\nthe cost is really", "start": 624.56, "duration": 1.8}, {"text": "dominated by this search.", "start": 626.36, "duration": 2.304}, {"text": "And so what I want to do\nnow is look at-- all right.", "start": 628.664, "duration": 2.166}, {"text": "How could we do the sort\nreasonably efficiently?", "start": 630.83, "duration": 3.362}, {"text": "It's going to have to\nbe at least linear.", "start": 634.192, "duration": 1.708}, {"text": "We're going to see it's going\nto be a little more than linear.", "start": 635.9, "duration": 1.86}, {"text": "But if I could do it reasonably,\nI'm going to be in good shape", "start": 637.76, "duration": 2.97}, {"text": "here.", "start": 640.73, "duration": 1.26}, {"text": "So what I want to do is show\nyou a number of ways in which we", "start": 641.99, "duration": 2.58}, {"text": "can do sorting-- take\na list of elements", "start": 644.57, "duration": 2.58}, {"text": "and sort them from, in this\ncase, smaller to higher", "start": 647.15, "duration": 2.68}, {"text": "or increasing order.", "start": 649.83, "duration": 3.09}, {"text": "So here's my goal.", "start": 652.92, "duration": 1.43}, {"text": "I want to efficiently\nsort a list.", "start": 654.35, "duration": 2.08}, {"text": "I want to see if we can do this\nas efficiently as possible.", "start": 656.43, "duration": 4.5}, {"text": "I'm going to start,\nyou might say,", "start": 660.93, "duration": 2.37}, {"text": "with a humorous version of sort.", "start": 663.3, "duration": 1.77}, {"text": "You're all convinced that\nmy humor is non-existent.", "start": 665.07, "duration": 2.4}, {"text": "You're right.", "start": 667.47, "duration": 0.96}, {"text": "But it sets the stage for it.", "start": 668.43, "duration": 1.32}, {"text": "This is a sort.", "start": 669.75, "duration": 0.48}, {"text": "You can look it up.", "start": 670.23, "duration": 0.791}, {"text": "It's called monkey sort, BOGO\nsort, stupid sort, slow sort,", "start": 671.021, "duration": 3.159}, {"text": "permutation sort, shotgun sort.", "start": 674.18, "duration": 1.81}, {"text": "And here's how it works.", "start": 675.99, "duration": 1.53}, {"text": "Anna has nicely given me a\nset of numbers on cards here.", "start": 677.52, "duration": 3.18}, {"text": "Here's how you do BOGO sort.", "start": 680.7, "duration": 3.43}, {"text": "I got to do that better.", "start": 684.13, "duration": 1.25}, {"text": "I got to spread them\nout randomly, like this.", "start": 685.38, "duration": 3.98}, {"text": "Oh good.", "start": 689.36, "duration": 0.5}, {"text": "I'm going to have\nto-- sorry, Tom.", "start": 689.86, "duration": 1.02}, {"text": "I'm not walking.", "start": 690.88, "duration": 0.666}, {"text": "And now I pick them up,\nsaying, is that less than this?", "start": 691.546, "duration": 3.334}, {"text": "Which is less than-- oh, crud.", "start": 694.88, "duration": 2.21}, {"text": "They're not sorted.", "start": 697.09, "duration": 1.38}, {"text": "All right.", "start": 698.47, "duration": 1.78}, {"text": "I pick them all up\nand I do it again.", "start": 700.25, "duration": 4.85}, {"text": "A little brain damage, right?", "start": 705.1, "duration": 2.31}, {"text": "Now it's intended to\nget your attention.", "start": 707.41, "duration": 1.81}, {"text": "I did.", "start": 709.22, "duration": 0.5}, {"text": "I heard a couple of chuckles.", "start": 709.72, "duration": 1.11}, {"text": "Those are A\nstudents, by the way.", "start": 710.83, "duration": 1.374}, {"text": "I heard a couple\nof chuckles here.", "start": 712.204, "duration": 2.616}, {"text": "We could actually do\nthis exhaustively.", "start": 714.82, "duration": 3.54}, {"text": "Basically it's called\npermutation sort", "start": 718.36, "duration": 1.83}, {"text": "because you could search through\nall possible permutations", "start": 720.19, "duration": 3.42}, {"text": "to see if you find\nsomething that's sorted.", "start": 723.61, "duration": 2.82}, {"text": "That, by the way--\nthe complexity of that", "start": 726.43, "duration": 2.4}, {"text": "is something like n\nfactorial, which for large n", "start": 728.83, "duration": 4.08}, {"text": "is n to the nth power.", "start": 732.91, "duration": 3.57}, {"text": "And if n's anything bigger\nthan about 2, don't do it.", "start": 736.48, "duration": 2.56}, {"text": "Right?", "start": 739.04, "duration": 0.661}, {"text": "But it would be a way to\nthink about doing this.", "start": 739.701, "duration": 1.999}, {"text": "All right.", "start": 741.7, "duration": 0.499}, {"text": "Now, having caught the humorous\nversion of this, how could", "start": 742.199, "duration": 2.501}, {"text": "we do this a little bit better?", "start": 744.7, "duration": 3.016}, {"text": "Oh sorry.", "start": 747.716, "duration": 0.634}, {"text": "I should say, what's\nthe complexity?", "start": 748.35, "duration": 1.5}, {"text": "There's a nice crisp\ndefinition of BOGO sort.", "start": 749.85, "duration": 3.82}, {"text": "Its best case is order\nn, because I just", "start": 753.67, "duration": 2.22}, {"text": "need to check it's sorted.", "start": 755.89, "duration": 1.98}, {"text": "Its average case is n\nfactorial and its worst case,", "start": 757.87, "duration": 3.36}, {"text": "if I'm just doing it\nrandomly, is God knows.", "start": 761.23, "duration": 2.472}, {"text": "Because I could be\ndoing it here forever.", "start": 763.702, "duration": 1.708}, {"text": "So we're going to move on.", "start": 765.41, "duration": 2.64}, {"text": "Here's a second way to\ndo it called bubble sort.", "start": 768.05, "duration": 2.807}, {"text": "I'm going to do this with\na small version of this.", "start": 770.857, "duration": 2.083}, {"text": "I'm going to put out a set.", "start": 772.94, "duration": 1.124}, {"text": "I'll turn these up so you\ncan see them in a second.", "start": 774.064, "duration": 3.695}, {"text": "The idea of bubble\nsort is, I'm going", "start": 777.759, "duration": 1.541}, {"text": "to start at-- I'm going to call\nthis the front end of the list.", "start": 779.3, "duration": 3.0}, {"text": "And I'm going to walk down,\ncomparing elements pairwise.", "start": 782.3, "duration": 3.33}, {"text": "And I'm always going to\nmove the larger one over.", "start": 785.63, "duration": 2.64}, {"text": "So I start here and I\nsay, 1 is less than 11.", "start": 788.27, "duration": 3.45}, {"text": "I'm OK.", "start": 791.72, "duration": 1.21}, {"text": "11's bigger than five.", "start": 792.93, "duration": 1.73}, {"text": "I'm going to bubble that up.", "start": 794.66, "duration": 1.78}, {"text": "11's bigger than 6.", "start": 796.44, "duration": 1.094}, {"text": "I'm going to bubble that up.", "start": 797.534, "duration": 1.166}, {"text": "11's bigger than 2.", "start": 798.7, "duration": 2.05}, {"text": "I've basically\nbubbled 11 to the end.", "start": 800.75, "duration": 1.86}, {"text": "Now I go back here.", "start": 802.61, "duration": 0.84}, {"text": "I say, 1 is less than 5.", "start": 803.45, "duration": 1.44}, {"text": "That's good.", "start": 804.89, "duration": 0.93}, {"text": "5 is less than 6.", "start": 805.82, "duration": 1.2}, {"text": "That's good.", "start": 807.02, "duration": 0.83}, {"text": "Ah, 6 is bigger than 2.", "start": 807.85, "duration": 2.3}, {"text": "Bubble that.", "start": 810.15, "duration": 1.04}, {"text": "6 is less than 11.", "start": 811.19, "duration": 2.28}, {"text": "You get the idea-- comparison,\ncomparison, and swap.", "start": 813.47, "duration": 3.9}, {"text": "Comparison, comparison.", "start": 817.37, "duration": 2.67}, {"text": "And now if I go back\nto this part and do it,", "start": 820.04, "duration": 1.95}, {"text": "you'll notice that's\nin the right order.", "start": 821.99, "duration": 2.59}, {"text": "That's in the right order.", "start": 824.58, "duration": 1.71}, {"text": "That's in the right order.", "start": 826.29, "duration": 1.8}, {"text": "That's in the right order.", "start": 828.09, "duration": 1.28}, {"text": "I'm done.", "start": 829.37, "duration": 2.0}, {"text": "Small round of applause, please.", "start": 831.37, "duration": 1.39}, {"text": "I was able to sort\nfive elements.", "start": 832.76, "duration": 1.49}, {"text": "Thank you.", "start": 834.25, "duration": 3.0}, {"text": "The little video is\nshowing the same thing.", "start": 837.25, "duration": 1.96}, {"text": "You can see the idea here.", "start": 839.21, "duration": 1.44}, {"text": "It's called bubble\nsort because you're", "start": 840.65, "duration": 1.583}, {"text": "literally bubbling things\nup to the end of the list.", "start": 842.233, "duration": 2.787}, {"text": "It's pretty simple to do.", "start": 845.02, "duration": 1.26}, {"text": "You're just swapping pairs.", "start": 846.28, "duration": 1.379}, {"text": "And as you saw, when I\nget to the end of the list", "start": 847.659, "duration": 2.041}, {"text": "I go back and do it\nuntil I have a pass where", "start": 849.7, "duration": 2.16}, {"text": "I go all the way through the\nlist and I don't do any swaps.", "start": 851.86, "duration": 2.836}, {"text": "And in that case I know I'm done\nbecause everything's in order,", "start": 854.696, "duration": 2.624}, {"text": "and I can stop.", "start": 857.32, "duration": 1.54}, {"text": "One of the properties of it\nis that the largest unsorted", "start": 858.86, "duration": 2.9}, {"text": "element is always at\nthe end after the pass.", "start": 861.76, "duration": 3.72}, {"text": "In other words,\nafter the first one", "start": 865.48, "duration": 1.486}, {"text": "I know that the largest\nelement's at the end.", "start": 866.966, "duration": 1.874}, {"text": "After the second one,\nthe largest thing left", "start": 868.84, "duration": 1.833}, {"text": "is going to be in\nthe next place.", "start": 870.673, "duration": 1.467}, {"text": "And that tells me,\namong other things,", "start": 872.14, "duration": 2.4}, {"text": "that this is going to\ntake no more than n times", "start": 874.54, "duration": 3.0}, {"text": "through the list to succeed.", "start": 877.54, "duration": 2.47}, {"text": "It might actually\ntake fewer than that.", "start": 880.01, "duration": 2.42}, {"text": "OK.", "start": 882.43, "duration": 1.809}, {"text": "Again let's look at\nsome code for it.", "start": 884.239, "duration": 1.541}, {"text": "Let's look at its complexity\nand let's actually run this.", "start": 885.78, "duration": 2.375}, {"text": "So here is a little simple\nversion of bubble sort.", "start": 888.155, "duration": 3.695}, {"text": "I'm going to set a flag up here.", "start": 891.85, "duration": 2.0}, {"text": "I'm going to call its\nswap initially to false.", "start": 893.85, "duration": 2.61}, {"text": "That's going to let\nme tell when I'm", "start": 896.46, "duration": 1.65}, {"text": "done, when I've gone through\neverything in the list", "start": 898.11, "duration": 2.125}, {"text": "without doing a swap.", "start": 900.235, "duration": 1.581}, {"text": "And then I'm going to loop.", "start": 901.816, "duration": 1.124}, {"text": "As long as swap is false-- so\nthe first time through it's", "start": 902.94, "duration": 2.76}, {"text": "going to do that loop.", "start": 905.7, "duration": 1.52}, {"text": "I set swap initially to true,\nand notice what I then do.", "start": 907.22, "duration": 3.94}, {"text": "I let j range from 1 up\nto the length of the list,", "start": 911.16, "duration": 4.53}, {"text": "and I look at the jth element\nand the previous element.", "start": 915.69, "duration": 3.63}, {"text": "If the previous element is\nbigger, I'm going to flip them.", "start": 919.32, "duration": 4.11}, {"text": "Right there.", "start": 923.43, "duration": 0.72}, {"text": "And that's just doing that\nswap, what I just did down here.", "start": 924.15, "duration": 3.15}, {"text": "And if that's the case, I'm\ngoing to set the flag to false.", "start": 927.3, "duration": 3.54}, {"text": "Which says, I've done at least\none bubble as part of this.", "start": 930.84, "duration": 3.042}, {"text": "Which means when\nI come out of here", "start": 933.882, "duration": 1.458}, {"text": "and go back around to the loop,\nit's going to do it again.", "start": 935.34, "duration": 2.64}, {"text": "And it will do it\nuntil all of this", "start": 937.98, "duration": 3.12}, {"text": "succeeds without this ever\nbeing true, in which case", "start": 941.1, "duration": 2.34}, {"text": "that's true, which\nmakes that false.", "start": 943.44, "duration": 1.71}, {"text": "And it will drop out.", "start": 945.15, "duration": 2.722}, {"text": "OK?", "start": 947.872, "duration": 2.498}, {"text": "Let's look at an\nexample of this running.", "start": 950.37, "duration": 1.86}, {"text": "It's just to give\nyou a sense of that,", "start": 952.23, "duration": 2.85}, {"text": "assuming I can find\nthe right place here.", "start": 955.08, "duration": 2.58}, {"text": "So there is, again, a version\nof bubble sort on the side.", "start": 957.66, "duration": 3.54}, {"text": "And I'm going to bring this\ndown to the bottom I've", "start": 961.2, "duration": 2.43}, {"text": "got a little test list there.", "start": 963.63, "duration": 1.53}, {"text": "And I've put a print\nstatement in it.", "start": 965.16, "duration": 2.11}, {"text": "So you can see each\ntime through the loop,", "start": 967.27, "duration": 2.36}, {"text": "what's the form of\nthe list as it starts.", "start": 969.63, "duration": 2.51}, {"text": "And assuming I've done\nthis right-- here you go.", "start": 972.14, "duration": 5.86}, {"text": "There's the list the\nfirst time through.", "start": 978.0, "duration": 2.27}, {"text": "Notice after one pass, 25's\nat the end of the list--", "start": 980.27, "duration": 3.687}, {"text": "the biggest element.", "start": 983.957, "duration": 0.833}, {"text": "Exactly what I like.", "start": 984.79, "duration": 0.89}, {"text": "But you can also see a few\nother things have flipped.", "start": 985.68, "duration": 2.24}, {"text": "Right?", "start": 987.92, "duration": 0.5}, {"text": "Right in there, there\nhave been some other swaps", "start": 988.42, "duration": 2.14}, {"text": "as it bubbled through.", "start": 990.56, "duration": 1.62}, {"text": "And in fact, you can see it's--\nwell, you can see that idea.", "start": 992.18, "duration": 3.61}, {"text": "You can see 25 moving through.", "start": 995.79, "duration": 2.21}, {"text": "Notice on the next step,\na whole bunch of the list", "start": 998.0, "duration": 4.23}, {"text": "is actually in the right order.", "start": 1002.23, "duration": 1.811}, {"text": "It's just because I got lucky.", "start": 1004.041, "duration": 1.249}, {"text": "All I can guarantee is\nthat the second largest", "start": 1005.29, "duration": 2.16}, {"text": "element is the second\nfrom the end of the list.", "start": 1007.45, "duration": 3.69}, {"text": "But you can see here.", "start": 1011.14, "duration": 0.9}, {"text": "Even though the\nlist is, I think,", "start": 1012.04, "duration": 1.375}, {"text": "nine long, it only took\nus four passes through.", "start": 1013.415, "duration": 3.635}, {"text": "So this is nice.", "start": 1017.05, "duration": 0.81}, {"text": "It says, at most, n\ntimes through the list.", "start": 1017.86, "duration": 3.612}, {"text": "And at the end, we\nactually get out", "start": 1021.472, "duration": 1.458}, {"text": "something that's\nin the right form.", "start": 1022.93, "duration": 3.11}, {"text": "OK.", "start": 1026.04, "duration": 1.279}, {"text": "So let's go back to\nthis and basically say,", "start": 1027.319, "duration": 2.641}, {"text": "what's the complexity?", "start": 1029.96, "duration": 3.69}, {"text": "Well that's length n, right?", "start": 1033.65, "duration": 2.33}, {"text": "Has to be.", "start": 1035.98, "duration": 0.5}, {"text": "I'm going through\nthe entire list.", "start": 1036.48, "duration": 2.28}, {"text": "And inside of there\nis just constant work.", "start": 1038.76, "duration": 5.39}, {"text": "Four operations.", "start": 1044.15, "duration": 0.929}, {"text": "I'm doing a test.", "start": 1045.079, "duration": 1.04}, {"text": "Sorry, five.", "start": 1046.119, "duration": 0.661}, {"text": "I'm doing a test.", "start": 1046.78, "duration": 0.994}, {"text": "And then depending whether\nthat test is true or not,", "start": 1047.774, "duration": 2.166}, {"text": "I'm setting a flag and doing\nsome movement of things around.", "start": 1049.94, "duration": 2.11}, {"text": "But it's just constant.", "start": 1052.05, "duration": 0.958}, {"text": "I don't care about the five.", "start": 1053.008, "duration": 2.202}, {"text": "And there, how many times\ndo I go around the loop?", "start": 1055.21, "duration": 3.98}, {"text": "In the worst case, n.", "start": 1059.19, "duration": 2.93}, {"text": "All I can guarantee is,\nafter the first pass", "start": 1062.12, "duration": 2.055}, {"text": "the biggest thing is here.", "start": 1064.175, "duration": 1.361}, {"text": "After the second pass, the\nsecond biggest thing is there.", "start": 1065.536, "duration": 2.374}, {"text": "After the third pass--\nyou get the idea.", "start": 1067.91, "duration": 2.22}, {"text": "So I've got order and\nthings inside the loop,", "start": 1070.13, "duration": 4.32}, {"text": "and I'm doing that loop n times.", "start": 1074.45, "duration": 2.95}, {"text": "And I hope that looks familiar.", "start": 1077.4, "duration": 1.48}, {"text": "We've talked about this.", "start": 1078.88, "duration": 1.19}, {"text": "Right?", "start": 1080.07, "duration": 0.5}, {"text": "This is nested loops.", "start": 1080.57, "duration": 1.18}, {"text": "What's this?", "start": 1081.75, "duration": 1.17}, {"text": "Quadratic.", "start": 1082.92, "duration": 2.1}, {"text": "So it's order n squared, where\nn is the length of the list.", "start": 1085.02, "duration": 3.9}, {"text": "Now as you also saw, on average,\nit could be less than that.", "start": 1088.92, "duration": 2.5}, {"text": "But it's going to\nbe order n squared.", "start": 1091.42, "duration": 3.03}, {"text": "OK.", "start": 1094.45, "duration": 2.24}, {"text": "That's one possibility.", "start": 1096.69, "duration": 2.12}, {"text": "Here's a second nice,\nsimple, sort algorithm.", "start": 1098.81, "duration": 3.53}, {"text": "It's called selection sort.", "start": 1102.34, "duration": 2.532}, {"text": "You can kind of think of\nthis as going the other way.", "start": 1104.872, "duration": 2.208}, {"text": "Not completely, but\ngoing the other way.", "start": 1107.08, "duration": 1.45}, {"text": "And when I say\ngoing the other way,", "start": 1108.53, "duration": 0.98}, {"text": "the idea here is that I'm\ngoing to find the smallest", "start": 1109.51, "duration": 2.61}, {"text": "element in the list.", "start": 1112.12, "duration": 1.217}, {"text": "And I'm going to stick it\nat the front of the list", "start": 1113.337, "duration": 2.083}, {"text": "when I'm done, and simply\nswap that place with whatever", "start": 1115.42, "duration": 3.42}, {"text": "was there.", "start": 1118.84, "duration": 0.705}, {"text": "Flip them.", "start": 1119.545, "duration": 1.194}, {"text": "I might do a few other\nflips along the way,", "start": 1120.739, "duration": 1.791}, {"text": "depending how I implement this.", "start": 1122.53, "duration": 2.47}, {"text": "Next, pass.", "start": 1125.0, "duration": 1.47}, {"text": "I'm just going to\nlook at everything", "start": 1126.47, "duration": 1.5}, {"text": "but the first element, because\nI know that one's done.", "start": 1127.97, "duration": 1.92}, {"text": "I'm going to do the same thing.", "start": 1129.89, "duration": 1.291}, {"text": "Find the smallest element\nremaining in the list,", "start": 1131.181, "duration": 2.309}, {"text": "put it in the second\nspot, and keep doing that.", "start": 1133.49, "duration": 3.89}, {"text": "What I know is, if I\nimplement this correctly,", "start": 1137.38, "duration": 2.61}, {"text": "after i steps the first\ni elements of the list", "start": 1139.99, "duration": 4.23}, {"text": "will be sorted.", "start": 1144.22, "duration": 1.32}, {"text": "And everything in\nthe rest of the list", "start": 1145.54, "duration": 1.59}, {"text": "has to be bigger than\nthe largest thing", "start": 1147.13, "duration": 2.01}, {"text": "in the first part of the list.", "start": 1149.14, "duration": 2.46}, {"text": "OK.", "start": 1151.6, "duration": 1.06}, {"text": "So we could build that.", "start": 1152.66, "duration": 1.002}, {"text": "Before we do it, I'm going\nto show you a little video", "start": 1153.662, "duration": 2.208}, {"text": "starring Professor Guttag.", "start": 1155.87, "duration": 1.92}, {"text": "This is his cameo\nperformance here.", "start": 1157.79, "duration": 2.13}, {"text": "But I want to just show\nyou an example of this", "start": 1159.92, "duration": 2.28}, {"text": "using not numbers, but people.", "start": 1162.2, "duration": 2.34}, {"text": "[VIDEO PLAYBACK]", "start": 1164.54, "duration": 0.7}, {"text": "- All right.", "start": 1165.24, "duration": 0.5}, {"text": "So now we're going\nto do selection sort.", "start": 1165.74, "duration": 3.33}, {"text": "The idea here is\nthat each step we're", "start": 1169.07, "duration": 2.46}, {"text": "going to select\nthe shortest person", "start": 1171.53, "duration": 2.49}, {"text": "and put them next in\nline of the sorted group.", "start": 1174.02, "duration": 4.2}, {"text": "So we'll bring the\nleftmost person forward,", "start": 1178.22, "duration": 3.39}, {"text": "and we will compare\nher to everybody else.", "start": 1181.61, "duration": 2.68}, {"text": "So one at a time, step forward.", "start": 1184.29, "duration": 3.011}, {"text": "You're still the winner.", "start": 1187.301, "duration": 0.999}, {"text": "You go back.", "start": 1188.3, "duration": 1.83}, {"text": "Please step forward.", "start": 1190.13, "duration": 1.944}, {"text": "PROFESSOR: And watch the number\nof comparisons that go on,", "start": 1192.074, "duration": 2.416}, {"text": "by the way.", "start": 1194.49, "duration": 0.55}, {"text": "We're going to\ncome back to that.", "start": 1195.04, "duration": 0.51}, {"text": "- Next.", "start": 1195.55, "duration": 0.5}, {"text": "Still the winner.", "start": 1199.75, "duration": 2.18}, {"text": "Next.", "start": 1201.93, "duration": 1.814}, {"text": "Ah.", "start": 1203.744, "duration": 0.916}, {"text": "A new winner.", "start": 1204.66, "duration": 1.53}, {"text": "All right.", "start": 1206.19, "duration": 0.85}, {"text": "So you can take her place.", "start": 1207.04, "duration": 3.062}, {"text": "PROFESSOR: So here, we're\nchoosing to actually insert", "start": 1210.102, "duration": 2.208}, {"text": "into the spot in\nthe Line We could", "start": 1212.31, "duration": 1.38}, {"text": "have put her back at the front,\nbut either one will work.", "start": 1213.69, "duration": 2.375}, {"text": "- Now we'll compare.", "start": 1216.065, "duration": 1.315}, {"text": "Same old winner.", "start": 1217.38, "duration": 1.295}, {"text": "Same winner.", "start": 1222.78, "duration": 0.75}, {"text": "No change.", "start": 1228.09, "duration": 1.93}, {"text": "It's getting kind of boring.", "start": 1230.02, "duration": 3.65}, {"text": "Don't fall, that-- same winner.", "start": 1233.67, "duration": 3.38}, {"text": "Please.", "start": 1237.05, "duration": 2.25}, {"text": "PROFESSOR: This is a tough one.", "start": 1239.3, "duration": 3.15}, {"text": "- Oh.", "start": 1242.45, "duration": 0.69}, {"text": "Close, but I think\nyou're still shorter.", "start": 1243.14, "duration": 2.4}, {"text": "All right.", "start": 1245.54, "duration": 0.7}, {"text": "Next.", "start": 1246.24, "duration": 0.5}, {"text": "No change, which means\nyou are the first in line.", "start": 1249.81, "duration": 3.42}, {"text": "Congratulations.", "start": 1253.23, "duration": 1.066}, {"text": "PROFESSOR: So, smallest element\nnow going to be the first slot.", "start": 1254.296, "duration": 2.624}, {"text": "- Now you step forward,\nand we'll compare you.", "start": 1256.92, "duration": 2.19}, {"text": "PROFESSOR: I would\ninvite you to watch", "start": 1271.757, "duration": 1.583}, {"text": "the left hand of the list.", "start": 1273.34, "duration": 1.39}, {"text": "Notice how it is slowly\nbuilding up at each stage", "start": 1274.73, "duration": 2.97}, {"text": "to have that portion sorted.", "start": 1277.7, "duration": 2.34}, {"text": "And we deliberately\nadmit students", "start": 1283.364, "duration": 1.416}, {"text": "to be of different heights,\nso John can do this demo.", "start": 1284.78, "duration": 4.17}, {"text": "- You are the winner.", "start": 1288.95, "duration": 1.14}, {"text": "Take your place in line.", "start": 1290.09, "duration": 2.082}, {"text": "Next.", "start": 1292.172, "duration": 2.33}, {"text": "It's you.", "start": 1294.502, "duration": 0.728}, {"text": "And once again, we\nhave a lovely group", "start": 1301.64, "duration": 2.46}, {"text": "of students sorted\nin height order.", "start": 1304.1, "duration": 2.16}, {"text": "[END PLAYBACK]", "start": 1306.26, "duration": 0.934}, {"text": "[APPLAUSE]", "start": 1307.194, "duration": 0.936}, {"text": "PROFESSOR: And\ncheck out-- I want", "start": 1308.13, "duration": 1.374}, {"text": "you to remember number\nof comparisons-- 55.", "start": 1309.504, "duration": 2.506}, {"text": "Not that the [INAUDIBLE], but\nI want you to see a comparison", "start": 1312.01, "duration": 2.5}, {"text": "as we go on in a second.", "start": 1314.51, "duration": 2.29}, {"text": "So again, selection sort.", "start": 1316.8, "duration": 1.53}, {"text": "This is this idea of,\nfind the smallest element.", "start": 1318.33, "duration": 2.37}, {"text": "Put it at the front.", "start": 1320.7, "duration": 1.45}, {"text": "I might do a little\nnumber of flips,", "start": 1322.15, "duration": 1.532}, {"text": "as you can see,\nhere along the way.", "start": 1323.682, "duration": 1.458}, {"text": "But this is the same\nanimation of that.", "start": 1325.14, "duration": 1.92}, {"text": "So let's first of all\nconvince ourselves", "start": 1327.06, "duration": 3.18}, {"text": "it will do the right thing,\nand then look at some code,", "start": 1330.24, "duration": 3.15}, {"text": "and then run the code.", "start": 1333.39, "duration": 2.424}, {"text": "So to convince\nourselves that this", "start": 1335.814, "duration": 1.416}, {"text": "is going to do the\nright thing, we", "start": 1337.23, "duration": 1.416}, {"text": "could talk about something that\nwe often refer to as a loop", "start": 1338.646, "duration": 3.094}, {"text": "invariant.", "start": 1341.74, "duration": 0.5}, {"text": "We're going to write\na loop, but we're", "start": 1342.24, "duration": 1.08}, {"text": "going to walk through this.", "start": 1343.32, "duration": 1.49}, {"text": "And the invariant\nhere-- and we want", "start": 1344.81, "duration": 1.78}, {"text": "to just demonstrate if\nit's true at the beginning", "start": 1346.59, "duration": 2.13}, {"text": "and it's true at each step.", "start": 1348.72, "duration": 1.125}, {"text": "Therefore, by induction\nas we did earlier,", "start": 1349.845, "duration": 2.175}, {"text": "I can conclude it's true always.", "start": 1352.02, "duration": 1.89}, {"text": "Is that if I'm given the\nprefix or the first part", "start": 1353.91, "duration": 3.39}, {"text": "of a list from 0 up to i,\nand a suffix or a second part", "start": 1357.3, "duration": 4.11}, {"text": "of the list from i plus 1 up to\nthe end of the overall list--", "start": 1361.41, "duration": 3.57}, {"text": "given that, then I want to\nassert that the invariant is", "start": 1364.98, "duration": 3.24}, {"text": "that the prefix is sorted\nand no element of the prefix", "start": 1368.22, "duration": 4.02}, {"text": "is larger than the smallest\nelement of the suffix.", "start": 1372.24, "duration": 2.559}, {"text": "Just what I said earlier.", "start": 1374.799, "duration": 1.041}, {"text": "It says, at any stage here--\nif this is the amount of sort", "start": 1375.84, "duration": 3.27}, {"text": "I've done so far-- I can\nguarantee, I'm going to claim,", "start": 1379.11, "duration": 2.79}, {"text": "this will be sorted.", "start": 1381.9, "duration": 1.0}, {"text": "And everything here is\nbigger than that thing there.", "start": 1382.9, "duration": 4.54}, {"text": "How do I prove it?", "start": 1387.44, "duration": 1.67}, {"text": "Well the base case\nis really easy.", "start": 1389.11, "duration": 3.2}, {"text": "In the base case,\nthe prefix is empty.", "start": 1392.31, "duration": 1.93}, {"text": "I don't have anything,\nso it's obviously sorted.", "start": 1394.24, "duration": 2.02}, {"text": "And everything in\nthe suffix is bigger", "start": 1396.26, "duration": 1.583}, {"text": "than anything in the prefix.", "start": 1397.843, "duration": 1.237}, {"text": "So I'm fine.", "start": 1399.08, "duration": 1.63}, {"text": "And then I just want to say,\nas long as I write my code so", "start": 1400.71, "duration": 2.75}, {"text": "that this step is true, then\nI'm going to move the smallest", "start": 1403.46, "duration": 3.27}, {"text": "element from the suffix--\nthe second part of the list--", "start": 1406.73, "duration": 3.69}, {"text": "to the end of the prefix.", "start": 1410.42, "duration": 2.04}, {"text": "Since the prefix was\nsorted, this is now sorted.", "start": 1412.46, "duration": 3.36}, {"text": "And everything in\nthe suffix is still", "start": 1415.82, "duration": 3.03}, {"text": "going to be bigger than\neverything in the prefix.", "start": 1418.85, "duration": 3.09}, {"text": "And as a consequence,\nby induction,", "start": 1421.94, "duration": 1.59}, {"text": "this is going to give me\nsomething that says it's always", "start": 1423.53, "duration": 2.37}, {"text": "going to be correct.", "start": 1425.9, "duration": 3.08}, {"text": "So here's code\nthat would do that.", "start": 1428.98, "duration": 3.62}, {"text": "Here.", "start": 1432.6, "duration": 0.5}, {"text": "I'm just going to set a\nlittle thing called the start", "start": 1433.1, "duration": 2.208}, {"text": "of suffix, or soft start.", "start": 1435.308, "duration": 1.532}, {"text": "Initially it's going to point\nto the beginning of the list.", "start": 1436.84, "duration": 3.846}, {"text": "And then I'm going\nto run a loop.", "start": 1440.686, "duration": 1.374}, {"text": "And as long as I\nstill have things", "start": 1442.06, "duration": 1.86}, {"text": "to search in the list,\nthat that pointer doesn't", "start": 1443.92, "duration": 2.19}, {"text": "point to the end of the\nlist, what am I going to do?", "start": 1446.11, "duration": 3.936}, {"text": "I'm going to loop\nover everything", "start": 1450.046, "duration": 1.374}, {"text": "from that point to\nthe end of the list,", "start": 1451.42, "duration": 2.82}, {"text": "comparing it to the\nthing at that point.", "start": 1454.24, "duration": 4.78}, {"text": "If it's less than,\nI'm going to do a swap", "start": 1459.02, "duration": 3.73}, {"text": "because I wanted to move it up.", "start": 1462.75, "duration": 1.86}, {"text": "And you can see,\nby the time I get", "start": 1464.61, "duration": 1.5}, {"text": "through this loop I will have\nfound the smallest element", "start": 1466.11, "duration": 3.18}, {"text": "in the remainder of the list.", "start": 1469.29, "duration": 1.75}, {"text": "And I would have put it\nat that spot, whatever", "start": 1471.04, "duration": 2.6}, {"text": "suffix start points to.", "start": 1473.64, "duration": 3.1}, {"text": "And when I've done all of that,\nI just change this by one.", "start": 1476.74, "duration": 4.344}, {"text": "Having found the\nsmallest element,", "start": 1481.084, "duration": 1.416}, {"text": "I've stuck it at spot zero.", "start": 1482.5, "duration": 1.2}, {"text": "I'll do the same thing.", "start": 1483.7, "duration": 0.75}, {"text": "Having found the next\nsmallest element,", "start": 1484.45, "duration": 1.625}, {"text": "I know it's at point one.", "start": 1486.075, "duration": 1.405}, {"text": "And I'll just continue around.", "start": 1487.48, "duration": 3.604}, {"text": "One of the things\nyou can see here", "start": 1491.084, "duration": 1.416}, {"text": "is, as opposed to\nbubble sort, this one", "start": 1492.5, "duration": 4.12}, {"text": "is going to take n\ntimes around the loop", "start": 1496.62, "duration": 4.01}, {"text": "because I'm only moving\nthis pointer by one", "start": 1500.63, "duration": 2.965}, {"text": "So it starts at 0, and then\n1, and then 2, all the way up", "start": 1503.595, "duration": 2.375}, {"text": "to n minus 1.", "start": 1505.97, "duration": 2.68}, {"text": "You can also see in this\nparticular implementation,", "start": 1508.65, "duration": 3.42}, {"text": "while I'm certainly ensuring\nthat the smallest element goes", "start": 1512.07, "duration": 2.94}, {"text": "into that spot, I may do a\nfew other flips along the way.", "start": 1515.01, "duration": 4.58}, {"text": "I'm going to find something I\nthink is the smallest element,", "start": 1519.59, "duration": 2.5}, {"text": "put it there and put\nthat element here.", "start": 1522.09, "duration": 1.86}, {"text": "And then when I find\nanother smaller element,", "start": 1523.95, "duration": 1.874}, {"text": "I may do that flip.", "start": 1525.824, "duration": 1.358}, {"text": "I could have implemented\nthis where I literally", "start": 1527.182, "duration": 1.958}, {"text": "search for the smallest\nelement and only move that.", "start": 1529.14, "duration": 3.15}, {"text": "Doesn't make any difference\nin terms of the complexity.", "start": 1532.29, "duration": 3.9}, {"text": "All right.", "start": 1536.19, "duration": 0.5}, {"text": "What's the complexity here?", "start": 1536.69, "duration": 2.54}, {"text": "Already said this part.", "start": 1539.23, "duration": 1.36}, {"text": "I will loop n times, because\nI start at 0 and then 1.", "start": 1540.59, "duration": 4.58}, {"text": "You get the idea.", "start": 1545.17, "duration": 1.56}, {"text": "Inside of the loop\nI'm going to walk down", "start": 1546.73, "duration": 4.53}, {"text": "the remainder of the list,\nwhich is initially n.", "start": 1551.26, "duration": 3.0}, {"text": "And then n minus 1, and\nthen n minus 2 times.", "start": 1554.26, "duration": 3.672}, {"text": "But we've seen that\nbefore as well.", "start": 1557.932, "duration": 1.458}, {"text": "While they get shorter, that\ncomplexity is still quadratic.", "start": 1559.39, "duration": 6.18}, {"text": "Order n times going\nthrough this process.", "start": 1565.57, "duration": 2.79}, {"text": "Within the process, order n\nthings that I have to compare.", "start": 1568.36, "duration": 4.49}, {"text": "And yes, n gets smaller.", "start": 1572.85, "duration": 1.24}, {"text": "But we know that that n term,\nif you like to dominate.", "start": 1574.09, "duration": 2.91}, {"text": "So again, this is quadratic.", "start": 1577.0, "duration": 3.98}, {"text": "OK.", "start": 1580.98, "duration": 0.5}, {"text": "Before you believe that\nall sorting algorithms are", "start": 1581.48, "duration": 2.083}, {"text": "quadratic, I want to\nshow you the last one,", "start": 1583.563, "duration": 2.777}, {"text": "the one that actually is\none of the-- I think--", "start": 1586.34, "duration": 2.88}, {"text": "the prettiest algorithms\naround, and a great example", "start": 1589.22, "duration": 2.34}, {"text": "of a more efficient algorithm.", "start": 1591.56, "duration": 1.62}, {"text": "It's called merge sort.", "start": 1593.18, "duration": 3.0}, {"text": "Merge sort takes an\napproach we've seen before.", "start": 1596.18, "duration": 2.9}, {"text": "We talked about\ndivide and conquer.", "start": 1599.08, "duration": 1.75}, {"text": "Break the problem down\ninto smaller versions", "start": 1600.83, "duration": 3.18}, {"text": "of the same problem.", "start": 1604.01, "duration": 1.53}, {"text": "And once you've got\nthose solutions,", "start": 1605.54, "duration": 1.77}, {"text": "bring the answer back together.", "start": 1607.31, "duration": 2.36}, {"text": "For merge sort,\nthat's pretty easy.", "start": 1609.67, "duration": 1.79}, {"text": "It says, if I've got a list of\n0 or 1 elements, it's sorted.", "start": 1611.46, "duration": 3.49}, {"text": "Duh.", "start": 1614.95, "duration": 0.99}, {"text": "OK.", "start": 1615.94, "duration": 0.95}, {"text": "If I got a list of more than\n1 element, here's my trick.", "start": 1616.89, "duration": 3.605}, {"text": "I'm going to split\nit into two lists.", "start": 1620.495, "duration": 2.665}, {"text": "I'm going to sort them.", "start": 1623.16, "duration": 1.58}, {"text": "And when I'm done, I'm just\ngoing to merge those two lists", "start": 1624.74, "duration": 3.27}, {"text": "into one list.", "start": 1628.01, "duration": 1.5}, {"text": "And the merge is easy.", "start": 1629.51, "duration": 1.654}, {"text": "Because if I've got two\nlists that are sorted,", "start": 1631.164, "duration": 1.916}, {"text": "I just need to look at\nthe first element of each,", "start": 1633.08, "duration": 2.824}, {"text": "take the one that's smaller.", "start": 1635.904, "duration": 1.166}, {"text": "Add it to my result. And\nkeep doing that until one", "start": 1637.07, "duration": 2.804}, {"text": "of the lists is empty.", "start": 1639.874, "duration": 0.916}, {"text": "And then just copy the\nremainder of the other list.", "start": 1640.79, "duration": 4.47}, {"text": "You can probably\nalready get a sense", "start": 1645.26, "duration": 1.877}, {"text": "of what the cost is going\nto be here, because this", "start": 1647.137, "duration": 2.083}, {"text": "is cutting the problem in half.", "start": 1649.22, "duration": 2.29}, {"text": "Now I've got two pieces.", "start": 1651.51, "duration": 1.32}, {"text": "So I need to think\nabout both of them.", "start": 1652.83, "duration": 2.27}, {"text": "I want to give you a couple\nof visualizations of this.", "start": 1655.1, "duration": 2.25}, {"text": "Here's the first one.", "start": 1657.35, "duration": 0.874}, {"text": "It says, basically, I've\ngot a big unsorted list.", "start": 1658.224, "duration": 2.836}, {"text": "I'm going to split it.", "start": 1661.06, "duration": 1.6}, {"text": "And I'm going to split it.", "start": 1662.66, "duration": 1.23}, {"text": "And I'm going to split it.", "start": 1663.89, "duration": 1.53}, {"text": "Until I get down to just lists\nthat are either 0 or 1, which", "start": 1665.42, "duration": 4.2}, {"text": "by definition are sorted.", "start": 1669.62, "duration": 3.21}, {"text": "And once I'm at that\nlevel, then I just", "start": 1672.83, "duration": 2.49}, {"text": "have to merge them\ninto a sorted list", "start": 1675.32, "duration": 3.36}, {"text": "and then merge them\npairwise into a sorted list.", "start": 1678.68, "duration": 3.09}, {"text": "And you get the idea.", "start": 1681.77, "duration": 2.72}, {"text": "So it's divide and conquer.", "start": 1684.49, "duration": 1.29}, {"text": "The divide is dividing it\nup into smaller pieces.", "start": 1685.78, "duration": 2.58}, {"text": "The conquer is merging\nthem back together.", "start": 1688.36, "duration": 3.64}, {"text": "And we have Professor\nGuttag back for an encore,", "start": 1692.0, "duration": 3.22}, {"text": "together with his students.", "start": 1695.22, "duration": 1.26}, {"text": "So let's show you an\nexample of merge sort.", "start": 1696.48, "duration": 2.653}, {"text": "[VIDEO PLAYBACK]", "start": 1699.133, "duration": 0.807}, {"text": "- So we're about to\ndemonstrate merge sort.", "start": 1699.94, "duration": 3.18}, {"text": "And we're going to sort this\nrather motley collection of MIT", "start": 1703.12, "duration": 3.2}, {"text": "students by height.", "start": 1706.32, "duration": 3.09}, {"text": "So the first thing\nwe need to do is,", "start": 1709.41, "duration": 2.97}, {"text": "we're going to ask everyone\nto split into a group of two.", "start": 1712.38, "duration": 3.91}, {"text": "So you split a little bit.", "start": 1716.29, "duration": 2.3}, {"text": "You two are together.", "start": 1718.59, "duration": 1.72}, {"text": "You two are together.", "start": 1720.31, "duration": 1.67}, {"text": "You two are together.", "start": 1721.98, "duration": 1.89}, {"text": "You two are together.", "start": 1723.87, "duration": 0.96}, {"text": "And you are all by yourself.", "start": 1724.83, "duration": 2.08}, {"text": "I'm sorry.", "start": 1726.91, "duration": 1.305}, {"text": "PROFESSOR: Poor Anna.", "start": 1728.215, "duration": 0.875}, {"text": "- All right.", "start": 1729.09, "duration": 1.38}, {"text": "So now let's take\nthe first group.", "start": 1730.47, "duration": 3.36}, {"text": "Take a step down.", "start": 1733.83, "duration": 1.84}, {"text": "And what we do is, we\nsort this group by height,", "start": 1735.67, "duration": 2.9}, {"text": "with the shortest on the left.", "start": 1738.57, "duration": 2.73}, {"text": "And look at this.", "start": 1741.3, "duration": 0.72}, {"text": "We don't have to do anything.", "start": 1742.02, "duration": 1.65}, {"text": "Thank you.", "start": 1743.67, "duration": 0.67}, {"text": "Feel free to go back up.", "start": 1744.34, "duration": 2.82}, {"text": "We then sort the next pair.", "start": 1747.16, "duration": 2.3}, {"text": "Please.", "start": 1749.46, "duration": 1.26}, {"text": "And it looks to me\nlike we need to switch.", "start": 1750.72, "duration": 3.18}, {"text": "All right.", "start": 1753.9, "duration": 0.75}, {"text": "Take a step back.", "start": 1754.65, "duration": 0.875}, {"text": "Ladies-- OK.", "start": 1758.26, "duration": 8.38}, {"text": "Ladies, gentlemen-- also OK.", "start": 1766.64, "duration": 4.286}, {"text": "And again, OK.", "start": 1774.64, "duration": 2.774}, {"text": "PROFESSOR: Notice each\nsubgroup is now sorted.", "start": 1777.414, "duration": 1.916}, {"text": "Which is great.", "start": 1779.33, "duration": 0.625}, {"text": "- And I think you're\nin the correct order.", "start": 1779.955, "duration": 2.155}, {"text": "Now what we do is, we take these\ngroups and merge the groups.", "start": 1782.11, "duration": 5.58}, {"text": "So let's have these two--\ngoing to sort these groups,", "start": 1787.69, "duration": 3.6}, {"text": "have them step forward.", "start": 1791.29, "duration": 3.37}, {"text": "And now what we're\ndoing is, we're", "start": 1794.66, "duration": 1.88}, {"text": "doing a merge of the\ntwo sorted groups.", "start": 1796.54, "duration": 3.79}, {"text": "So we start by merging them.", "start": 1800.33, "duration": 3.29}, {"text": "We'll take the leftmost\nperson in this group", "start": 1803.62, "duration": 2.97}, {"text": "and compare her to the\nfirst person in this group,", "start": 1806.59, "duration": 2.7}, {"text": "and decide.", "start": 1809.29, "duration": 0.57}, {"text": "She's still the shortest.", "start": 1809.86, "duration": 1.89}, {"text": "Take a step back.", "start": 1811.75, "duration": 0.953}, {"text": "Now we're going to\nlook at you and say,", "start": 1816.39, "duration": 4.06}, {"text": "you're actually taller\nthan this fellow.", "start": 1820.45, "duration": 3.0}, {"text": "So you now step up there.", "start": 1823.45, "duration": 2.16}, {"text": "And we're good here.", "start": 1829.07, "duration": 2.25}, {"text": "Both of you take a step back.", "start": 1831.32, "duration": 1.39}, {"text": "Now we'll take these two groups\nand follow the same procedure.", "start": 1836.01, "duration": 4.32}, {"text": "We'll merge them.", "start": 1840.33, "duration": 1.426}, {"text": "Let's see.", "start": 1841.756, "duration": 0.644}, {"text": "We'll compare you--\nthe first person", "start": 1842.4, "duration": 2.97}, {"text": "in this group to the first\nperson in this group.", "start": 1845.37, "duration": 2.85}, {"text": "Now it's a little tricky.", "start": 1848.22, "duration": 1.3}, {"text": "So let's see, the\ntwo of you compare.", "start": 1849.52, "duration": 2.39}, {"text": "Let's see, back to back.", "start": 1851.91, "duration": 3.04}, {"text": "We have a winner.", "start": 1854.95, "duration": 1.85}, {"text": "Step back.", "start": 1856.8, "duration": 1.32}, {"text": "And now we need to compare the\nshortest person in this group", "start": 1858.12, "duration": 3.67}, {"text": "to the shortest\nperson in this group.", "start": 1861.79, "duration": 2.42}, {"text": "We have a winner.", "start": 1864.21, "duration": 0.72}, {"text": "It's you.", "start": 1864.93, "duration": 2.77}, {"text": "I'm sorry.", "start": 1867.7, "duration": 1.71}, {"text": "And now we just-- we're OK.", "start": 1869.41, "duration": 3.47}, {"text": "Please step back.", "start": 1872.88, "duration": 0.815}, {"text": "Now we'll have these\ntwo groups come forward.", "start": 1877.0, "duration": 4.17}, {"text": "We'll compare the shortest\nperson in this group", "start": 1881.17, "duration": 2.04}, {"text": "to the shortest\nperson in that group.", "start": 1883.21, "duration": 2.2}, {"text": "I actually need you guys\nto get back to back here.", "start": 1885.41, "duration": 2.2}, {"text": "You are the winner.", "start": 1890.45, "duration": 2.48}, {"text": "And it's pretty clear that the\nshortest person in this group", "start": 1892.93, "duration": 2.61}, {"text": "is shorter than the shortest\nperson in that group.", "start": 1895.54, "duration": 3.01}, {"text": "So you go there\nand you step back.", "start": 1898.55, "duration": 2.33}, {"text": "PROFESSOR: Notice the groups.", "start": 1900.88, "duration": 1.23}, {"text": "Now all sorted.", "start": 1902.11, "duration": 0.78}, {"text": "- And now we repeat\nthe same process.", "start": 1902.89, "duration": 1.541}, {"text": "PROFESSOR: And notice how\nthe whole subgroup now", "start": 1911.84, "duration": 2.0}, {"text": "goes up once we know\nthat one group is empty.", "start": 1913.84, "duration": 2.14}, {"text": "- And you can see that we\nhave a group of students", "start": 1924.14, "duration": 2.64}, {"text": "sorted in order by height.", "start": 1926.78, "duration": 2.682}, {"text": "[END PLAYBACK]", "start": 1929.462, "duration": 0.924}, {"text": "[APPLAUSE]", "start": 1930.386, "duration": 2.191}, {"text": "PROFESSOR: Remember the\nfirst number, right?", "start": 1932.577, "duration": 1.833}, {"text": "55, 28.", "start": 1934.41, "duration": 1.66}, {"text": "Now it's just\nnumbers but you can", "start": 1936.07, "duration": 1.49}, {"text": "see the expectation is, this\nis going to take less time.", "start": 1937.56, "duration": 3.18}, {"text": "And it certainly did there.", "start": 1940.74, "duration": 1.81}, {"text": "So again just to demo\nanother way visually.", "start": 1942.55, "duration": 3.91}, {"text": "I'm sorting-- sorry.", "start": 1946.46, "duration": 1.24}, {"text": "I am splitting down\nuntil I get small things,", "start": 1947.7, "duration": 2.12}, {"text": "and then just merging them up.", "start": 1949.82, "duration": 1.305}, {"text": "I may have to do multiple\npasses through here,", "start": 1951.125, "duration": 2.655}, {"text": "but it's going to\nbe hopefully faster", "start": 1953.78, "duration": 1.68}, {"text": "than the other\nmethods we looked at.", "start": 1955.46, "duration": 2.37}, {"text": "I'm going to show\nyou code in a second,", "start": 1957.83, "duration": 1.684}, {"text": "and then we're going to\nrun it just to see it.", "start": 1959.514, "duration": 1.916}, {"text": "But let me stress one more\ntime just the idea of merging.", "start": 1961.43, "duration": 4.085}, {"text": "You can see the idea.", "start": 1965.515, "duration": 0.875}, {"text": "I keep splitting down till I\ngot something small enough.", "start": 1966.39, "duration": 1.97}, {"text": "And I want to merge them back.", "start": 1968.36, "duration": 1.06}, {"text": "The idea of merging-- you've\nseen it from Professor Guttag.", "start": 1969.42, "duration": 2.63}, {"text": "But I just want to highlight why\nthis is going to be efficient.", "start": 1972.05, "duration": 3.64}, {"text": "If I've got two lists:\nlist 1 and list 2,", "start": 1975.69, "duration": 4.3}, {"text": "the things left there.", "start": 1979.99, "duration": 1.35}, {"text": "Process is very simple.", "start": 1981.34, "duration": 1.98}, {"text": "I pull out the smallest\nelement of each.", "start": 1983.32, "duration": 2.64}, {"text": "I compare them.", "start": 1985.96, "duration": 1.5}, {"text": "And I simply put the\nsmallest one into the result,", "start": 1987.46, "duration": 3.6}, {"text": "move on in that first list.", "start": 1991.06, "duration": 2.07}, {"text": "So the 1 disappears\nfrom that left list.", "start": 1993.13, "duration": 2.04}, {"text": "And now again I pull up just the\nsmallest element of each one,", "start": 1995.17, "duration": 3.09}, {"text": "do the comparison.", "start": 1998.26, "duration": 1.41}, {"text": "Smallest one goes to\nthe end of my result.", "start": 1999.67, "duration": 2.52}, {"text": "And I drop that\nelement from its list.", "start": 2002.19, "duration": 2.24}, {"text": "So I've now taken 1 from\nlist 1 and one from list 2.", "start": 2004.43, "duration": 4.32}, {"text": "You get the idea.", "start": 2008.75, "duration": 1.72}, {"text": "The reason I want to give you\nthis visualization-- sorry.", "start": 2010.47, "duration": 2.99}, {"text": "Let me do the last step.", "start": 2013.46, "duration": 1.0}, {"text": "Once I get to a place where\none of the lists is empty,", "start": 2014.46, "duration": 3.15}, {"text": "just copy the rest of\nthe list onto the end.", "start": 2017.61, "duration": 4.59}, {"text": "You can see already\na hint of the code.", "start": 2022.2, "duration": 4.05}, {"text": "And that is, that I'm\nonly going to ever look", "start": 2026.25, "duration": 2.79}, {"text": "at each element of each\nsublist once as I do the merge.", "start": 2029.04, "duration": 5.07}, {"text": "And that's a nice property.", "start": 2034.11, "duration": 1.17}, {"text": "Having had them\nsorted, I don't need", "start": 2035.28, "duration": 1.53}, {"text": "to do lots of\ninterior comparisons.", "start": 2036.81, "duration": 1.65}, {"text": "I'm only comparing\nthe ends of the list.", "start": 2038.46, "duration": 2.34}, {"text": "I only, therefore,\nlook at each element--", "start": 2040.8, "duration": 2.8}, {"text": "the number of comparisons,\nrather, I should say.", "start": 2043.6, "duration": 2.12}, {"text": "I may look at each\nelement more than once.", "start": 2045.72, "duration": 1.75}, {"text": "The number of\ncomparisons is going", "start": 2047.47, "duration": 1.7}, {"text": "to be, at most, the number\nof elements in both lists.", "start": 2049.17, "duration": 3.649}, {"text": "And that's going to\nbe a nice Q as we", "start": 2052.819, "duration": 1.541}, {"text": "think about how to solve it.", "start": 2054.36, "duration": 2.669}, {"text": "So here's the code to merge,\nand then we'll write Merge Sort.", "start": 2057.029, "duration": 2.541}, {"text": "And I know there's\na lot of code here,", "start": 2059.57, "duration": 1.583}, {"text": "but we can walk through it\nand get a good sense of it.", "start": 2061.153, "duration": 2.677}, {"text": "I'm going to set up a\nvariable called Result that's", "start": 2063.83, "duration": 2.94}, {"text": "going to hold my answer.", "start": 2066.77, "duration": 2.49}, {"text": "And I'm going to set up\ntwo indices, i and j, that", "start": 2069.26, "duration": 2.22}, {"text": "are initially 0.", "start": 2071.48, "duration": 0.78}, {"text": "They're pointing\nto the beginning.", "start": 2072.26, "duration": 1.416}, {"text": "And remember, the\ninput here is two lists", "start": 2073.676, "duration": 2.094}, {"text": "that we know are sorted--\nor should be sorted,", "start": 2075.77, "duration": 1.949}, {"text": "or we screwed up in some way.", "start": 2077.719, "duration": 1.951}, {"text": "So initially, i and j are\nboth pointing to the beginning", "start": 2079.67, "duration": 2.46}, {"text": "of the left and right list.", "start": 2082.13, "duration": 2.042}, {"text": "And look at what we do.", "start": 2084.172, "duration": 0.958}, {"text": "We say, as long as there's\nstill something in the left list", "start": 2085.13, "duration": 3.361}, {"text": "and still something\nin the right list-- i", "start": 2088.491, "duration": 1.708}, {"text": "is less than the\nlength of left, j", "start": 2090.199, "duration": 1.471}, {"text": "is less than the\nlength of right.", "start": 2091.67, "duration": 2.719}, {"text": "Do the comparison.", "start": 2094.389, "duration": 2.031}, {"text": "If the left wants smaller,\nadd it to the end of result.", "start": 2096.42, "duration": 4.45}, {"text": "To the end of result, right?", "start": 2100.87, "duration": 1.32}, {"text": "I'm appending it because I want\nit to be in that sorted order.", "start": 2102.19, "duration": 3.18}, {"text": "And increase i.", "start": 2105.37, "duration": 1.85}, {"text": "If it's not, add the right\none to the end of result", "start": 2107.22, "duration": 4.29}, {"text": "and increase j.", "start": 2111.51, "duration": 1.89}, {"text": "And I'll just keep\ndoing that until I", "start": 2113.4, "duration": 1.91}, {"text": "exhaust one of the lists.", "start": 2115.31, "duration": 1.35}, {"text": "And when I do I\ncan basically say,", "start": 2116.66, "duration": 2.82}, {"text": "if the right list is empty,\nI know if I get out of here", "start": 2119.48, "duration": 3.63}, {"text": "they can't both be true.", "start": 2123.11, "duration": 1.06}, {"text": "In other words, if there's still\nsomething in the left list,", "start": 2124.17, "duration": 2.499}, {"text": "just put it on the end.", "start": 2126.669, "duration": 2.668}, {"text": "Otherwise if the only things\nleft are in the right list,", "start": 2129.337, "duration": 2.333}, {"text": "just put them on the end.", "start": 2131.67, "duration": 2.69}, {"text": "So I'm just walking down the\nlist, doing the comparison,", "start": 2134.36, "duration": 2.37}, {"text": "adding the smallest element to\nmy result. And when I'm done,", "start": 2136.73, "duration": 2.5}, {"text": "I just return result.", "start": 2139.23, "duration": 3.58}, {"text": "Complexity we can already\nbegin to see here, right?", "start": 2142.81, "duration": 2.327}, {"text": "This says the left and\nright sublists are ordered,", "start": 2145.137, "duration": 2.083}, {"text": "so I'm just moving the\nindices depending on which", "start": 2147.22, "duration": 2.49}, {"text": "one holds the smaller element.", "start": 2149.71, "duration": 2.08}, {"text": "And when I get done, I'm just\nreturning the rest of the list.", "start": 2151.79, "duration": 4.95}, {"text": "So what's the complexity here?", "start": 2156.74, "duration": 2.484}, {"text": "I'm going to do this a\nlittle more informally.", "start": 2159.224, "duration": 1.916}, {"text": "You could actually do\nthat kind of relationship", "start": 2161.14, "duration": 1.958}, {"text": "I did last time.", "start": 2163.098, "duration": 0.839}, {"text": "But what am I doing?", "start": 2163.937, "duration": 0.833}, {"text": "I'm going through the two\nlists, but only one time", "start": 2164.77, "duration": 2.55}, {"text": "through each of those two lists.", "start": 2167.32, "duration": 2.22}, {"text": "I'm only comparing\nthe smallest elements.", "start": 2169.54, "duration": 2.24}, {"text": "So as I already said, this says\nthat the number of elements", "start": 2171.78, "duration": 3.18}, {"text": "I copy will be everything in\nthe left list and everything", "start": 2174.96, "duration": 3.34}, {"text": "in the right list.", "start": 2178.3, "duration": 0.75}, {"text": "So that order is just\nthe length of left", "start": 2179.05, "duration": 2.37}, {"text": "plus the length of right.", "start": 2181.42, "duration": 1.92}, {"text": "And how many\ncomparisons do I do?", "start": 2183.34, "duration": 3.1}, {"text": "The most I have to do is however\nmany are in the longer list.", "start": 2186.44, "duration": 3.31}, {"text": "Right?", "start": 2189.75, "duration": 0.5}, {"text": "That's the maximum\nnumber I need to have.", "start": 2190.25, "duration": 3.0}, {"text": "Oh, that's nice.", "start": 2193.25, "duration": 0.72}, {"text": "That says, if the lists are\nof order n-- I'm doing order n", "start": 2193.97, "duration": 3.75}, {"text": "copies, because\norder n plus order", "start": 2197.72, "duration": 1.86}, {"text": "n is just 2n, which\nis order n-- then", "start": 2199.58, "duration": 2.28}, {"text": "I'm doing order n comparisons.", "start": 2201.86, "duration": 2.73}, {"text": "So it's linear in the\nlength of the lists.", "start": 2204.59, "duration": 3.18}, {"text": "OK.", "start": 2207.77, "duration": 0.56}, {"text": "Sounds good.", "start": 2208.33, "duration": 2.25}, {"text": "That just does the merge.", "start": 2210.58, "duration": 1.74}, {"text": "How do I do merge sort?", "start": 2212.32, "duration": 1.93}, {"text": "Well we said it.", "start": 2214.25, "duration": 1.49}, {"text": "Break the problem in half.", "start": 2215.74, "duration": 1.17}, {"text": "Keep doing it until\nI get sorted lists.", "start": 2216.91, "duration": 2.07}, {"text": "And then grow them back up.", "start": 2218.98, "duration": 1.69}, {"text": "So there's merge sort.", "start": 2220.67, "duration": 1.04}, {"text": "It says, if the list is\neither empty or of length 1,", "start": 2221.71, "duration": 3.06}, {"text": "just return a copy of the list.", "start": 2224.77, "duration": 2.71}, {"text": "It's sorted.", "start": 2227.48, "duration": 1.5}, {"text": "Otherwise find\nthe middle point--", "start": 2228.98, "duration": 1.77}, {"text": "there's that integer\ndivision-- and split.", "start": 2230.75, "duration": 2.96}, {"text": "Split the list everything\nup to the middle point", "start": 2233.71, "duration": 2.92}, {"text": "and do merge sort on that.", "start": 2236.63, "duration": 1.17}, {"text": "Split everything in the list\nfrom the middle point on.", "start": 2237.8, "duration": 2.72}, {"text": "Do merge sort on that.", "start": 2240.52, "duration": 1.48}, {"text": "And when I get back those two\nsorted lists, just merge them.", "start": 2242.0, "duration": 6.16}, {"text": "Again, I hope you can see\nwhat the order of growth", "start": 2248.16, "duration": 2.1}, {"text": "should be here.", "start": 2250.26, "duration": 1.47}, {"text": "Cutting the problem down\nin half at each step.", "start": 2251.73, "duration": 3.54}, {"text": "So the number of times I\nshould have to go through this", "start": 2255.27, "duration": 2.64}, {"text": "should be to log n the\nsize of the original list.", "start": 2257.91, "duration": 4.137}, {"text": "And you can see why we\ncall it divide and conquer.", "start": 2262.047, "duration": 2.083}, {"text": "I'm dividing it down\ninto small pieces", "start": 2264.13, "duration": 1.736}, {"text": "until I have a simple\nsolution and then", "start": 2265.866, "duration": 1.624}, {"text": "I'm growing that\nsolution back up.", "start": 2267.49, "duration": 3.42}, {"text": "So there is the base\ncase, there's the divide,", "start": 2270.91, "duration": 3.81}, {"text": "and there's the nice conquer\n[INAUDIBLE] piece of this.", "start": 2274.72, "duration": 3.62}, {"text": "OK.", "start": 2278.34, "duration": 1.072}, {"text": "I'm going to show you\nan example of that.", "start": 2279.412, "duration": 1.708}, {"text": "But let's actually look at\nsome code-- sorry about that.", "start": 2281.12, "duration": 2.4}, {"text": "Let's look at some\ncode to do this.", "start": 2283.52, "duration": 2.03}, {"text": "And in fact I meant to do\nthis earlier and didn't.", "start": 2285.55, "duration": 3.44}, {"text": "I also have a version\nof bubble sort here.", "start": 2288.99, "duration": 4.13}, {"text": "Sorry-- selection sort.", "start": 2293.12, "duration": 1.02}, {"text": "I've already done bubble sort.", "start": 2294.14, "duration": 1.249}, {"text": "There is selection sort.", "start": 2295.389, "duration": 1.201}, {"text": "Let's uncomment this.", "start": 2296.59, "duration": 4.58}, {"text": "And let's run both\nof those and just see", "start": 2301.17, "duration": 1.8}, {"text": "the comparison between them.", "start": 2302.97, "duration": 2.5}, {"text": "Yeah, sorry-- just make that\na little easier to read.", "start": 2305.47, "duration": 2.9}, {"text": "There we go.", "start": 2308.37, "duration": 2.54}, {"text": "So we saw a bubble sort.", "start": 2310.91, "duration": 1.08}, {"text": "It only went through four\ntimes, so less than n times.", "start": 2311.99, "duration": 2.73}, {"text": "There's selection sort.", "start": 2314.72, "duration": 2.21}, {"text": "And as I said to\nyou, it has to do", "start": 2316.93, "duration": 1.99}, {"text": "n passes it because it can only\never guarantee that it gets", "start": 2318.92, "duration": 2.97}, {"text": "one element at the beginning.", "start": 2321.89, "duration": 1.95}, {"text": "So you can in fact see, in\nthis case, from the first", "start": 2323.84, "duration": 3.09}, {"text": "or after the initial input\nuntil the end of the first step,", "start": 2326.93, "duration": 3.3}, {"text": "it looks like it\ndidn't do anything", "start": 2330.23, "duration": 1.95}, {"text": "because it determined eventually\nthat one was in the right spot.", "start": 2332.18, "duration": 4.08}, {"text": "And similarly I think\nthere's another one", "start": 2336.26, "duration": 1.98}, {"text": "right there where\nit doesn't do any--", "start": 2338.24, "duration": 1.76}, {"text": "or appears not to do anything.", "start": 2340.0, "duration": 1.34}, {"text": "All it's guaranteeing is\nthat the next smallest", "start": 2341.34, "duration": 1.958}, {"text": "element is in the right spot.", "start": 2343.298, "duration": 1.944}, {"text": "As we get through\nto the end of it,", "start": 2345.242, "duration": 1.458}, {"text": "it in fact ends up\nin the right place.", "start": 2346.7, "duration": 2.52}, {"text": "And then let's\nlook at merge sort", "start": 2349.22, "duration": 1.44}, {"text": "and do one more\nvisualization of this.", "start": 2350.66, "duration": 3.67}, {"text": "Again let me remove that.", "start": 2354.33, "duration": 3.42}, {"text": "If we run it-- again, I've\njust put some print statements", "start": 2357.75, "duration": 5.36}, {"text": "in there.", "start": 2363.11, "duration": 1.64}, {"text": "Here you can see\na nice behavior.", "start": 2364.75, "duration": 3.35}, {"text": "I start off calling\nMerge Sort with that,", "start": 2368.1, "duration": 2.75}, {"text": "which splits down into doing\nMerge Sort of this portion.", "start": 2370.85, "duration": 2.334}, {"text": "Eventually it's going to\ncome back down there and do", "start": 2373.184, "duration": 2.166}, {"text": "the second one.", "start": 2375.35, "duration": 0.63}, {"text": "It keeps doing it until it\ngets down to simple lists", "start": 2375.98, "duration": 3.48}, {"text": "that it knows are sorted.", "start": 2379.46, "duration": 1.92}, {"text": "And then it merges it.", "start": 2381.38, "duration": 1.71}, {"text": "Does the smaller pieces\nand then merges it.", "start": 2383.09, "duration": 2.37}, {"text": "And having now 2\nmerged things, it", "start": 2385.46, "duration": 2.07}, {"text": "can do the next level of merge.", "start": 2387.53, "duration": 2.65}, {"text": "So you can see that it gets\nthis nice reduction of problems", "start": 2390.18, "duration": 2.82}, {"text": "until it gets down\nto the smallest size.", "start": 2393.0, "duration": 4.25}, {"text": "So let's just look at one\nmore visualization of that", "start": 2397.25, "duration": 2.37}, {"text": "and then get the complexity.", "start": 2399.62, "duration": 2.05}, {"text": "So if I start out with this\nlist-- sorry about that.", "start": 2401.67, "duration": 4.203}, {"text": "What I need to do is split it.", "start": 2405.873, "duration": 3.177}, {"text": "Take the first one, split it.", "start": 2409.05, "duration": 1.47}, {"text": "Keep doing that until I\nget down to a base case", "start": 2410.52, "duration": 3.15}, {"text": "where I know what those are\nand I simply merge them.", "start": 2413.67, "duration": 3.75}, {"text": "Pass it back up.", "start": 2417.42, "duration": 1.53}, {"text": "Take the second piece.", "start": 2418.95, "duration": 1.05}, {"text": "Split it until I get\ndown to base cases.", "start": 2420.0, "duration": 2.04}, {"text": "Do the merge, which\nis nice and linear.", "start": 2422.04, "duration": 2.58}, {"text": "Pass that back up.", "start": 2424.62, "duration": 0.99}, {"text": "Having done those two\npieces, I do one more merge.", "start": 2425.61, "duration": 3.86}, {"text": "And I do the same thing.", "start": 2429.47, "duration": 1.368}, {"text": "I want you to see\nthis, because again you", "start": 2433.53, "duration": 1.8}, {"text": "can notice how many\nlevels in this tree log.", "start": 2435.33, "duration": 5.31}, {"text": "Log in the size.", "start": 2440.64, "duration": 0.9}, {"text": "Because at each stage\nhere, I went from a problem", "start": 2441.54, "duration": 2.46}, {"text": "of 8 to two problems of 4.", "start": 2444.0, "duration": 2.1}, {"text": "Each of those went\nto two problems of 2,", "start": 2446.1, "duration": 1.75}, {"text": "and each of those went to\ntwo problems of size 1.", "start": 2447.85, "duration": 4.24}, {"text": "All right.", "start": 2452.09, "duration": 0.5}, {"text": "So the last piece is,\nwhat's the complexity?", "start": 2452.59, "duration": 5.44}, {"text": "Here's a simple way\nto think about it.", "start": 2458.03, "duration": 2.94}, {"text": "At the top level, I start\noff with n elements.", "start": 2460.97, "duration": 3.36}, {"text": "I've got two sorted\nlists of size n over 2.", "start": 2464.33, "duration": 4.11}, {"text": "And to merge them together,\nI need to do order n work.", "start": 2468.44, "duration": 5.08}, {"text": "Because as I said I got to do\nat least n comparisons where", "start": 2473.52, "duration": 3.59}, {"text": "n is the length of the list.", "start": 2477.11, "duration": 1.93}, {"text": "And then I've got to do n plus\nn copies, which is just order n.", "start": 2479.04, "duration": 3.005}, {"text": "So I'm doing order n work.", "start": 2482.045, "duration": 2.565}, {"text": "At the second level, it gets\na little more complicated.", "start": 2484.61, "duration": 3.24}, {"text": "Now I've got problems\nof size n over 4.", "start": 2487.85, "duration": 3.86}, {"text": "But how many of them do I have?", "start": 2491.71, "duration": 2.232}, {"text": "4.", "start": 2493.942, "duration": 1.828}, {"text": "Oh, that's nice.", "start": 2495.77, "duration": 1.314}, {"text": "Because what do I\nknow about this?", "start": 2497.084, "duration": 1.416}, {"text": "I know that I have to copy\neach element at least once.", "start": 2498.5, "duration": 3.476}, {"text": "So not at least once.", "start": 2501.976, "duration": 0.874}, {"text": "I will copy each\nelement exactly once.", "start": 2502.85, "duration": 2.37}, {"text": "And I'll do comparisons\nthat are equal to the length", "start": 2505.22, "duration": 2.91}, {"text": "of the longer list.", "start": 2508.13, "duration": 1.78}, {"text": "So I've got four sublists\nof length n over 4", "start": 2509.91, "duration": 2.39}, {"text": "that says n elements.", "start": 2512.3, "duration": 2.01}, {"text": "That's nice.", "start": 2514.31, "duration": 1.32}, {"text": "Order n.", "start": 2515.63, "duration": 1.35}, {"text": "At each step, the\nsubproblems get smaller", "start": 2516.98, "duration": 3.11}, {"text": "but I have more of them.", "start": 2520.09, "duration": 1.0}, {"text": "But the total size\nof the problem is n.", "start": 2521.09, "duration": 2.13}, {"text": "So the cost at each\nstep is order n.", "start": 2523.22, "duration": 4.33}, {"text": "How many times do I do it?", "start": 2527.55, "duration": 1.98}, {"text": "Log n.", "start": 2529.53, "duration": 1.58}, {"text": "So this is log n iterations\nwith order n work at each step.", "start": 2531.11, "duration": 5.73}, {"text": "And this is a wonderful example\nof a log linear algorithm.", "start": 2536.84, "duration": 3.48}, {"text": "It's n log n, where n is\nthe length of the list.", "start": 2540.32, "duration": 5.55}, {"text": "So what you end up with, then,\nis-- all right, a joke version,", "start": 2545.87, "duration": 4.59}, {"text": "some reasonable\nways of doing sort", "start": 2550.46, "duration": 2.04}, {"text": "that are quick and easy to\nimplement but are quadratic,", "start": 2552.5, "duration": 3.06}, {"text": "and then an elegant way of\ndoing the search that's n log n.", "start": 2555.56, "duration": 4.21}, {"text": "And I'll remind you I started\nby saying, as long as I", "start": 2559.77, "duration": 2.48}, {"text": "can make the cost of\nsorting small enough", "start": 2562.25, "duration": 2.82}, {"text": "I can amortize that cost.", "start": 2565.07, "duration": 1.53}, {"text": "And if you go back and look\nat last lecture's notes,", "start": 2566.6, "duration": 2.22}, {"text": "you'll see n log n\ngrows pretty slowly.", "start": 2568.82, "duration": 3.979}, {"text": "And it's actually\na nice thing to do.", "start": 2572.799, "duration": 1.541}, {"text": "It makes it reasonable\nto do the sort.", "start": 2574.34, "duration": 2.13}, {"text": "And then I can do the\nsearch in order n time.", "start": 2576.47, "duration": 3.56}, {"text": "And here's the last punchline.", "start": 2580.03, "duration": 2.4}, {"text": "It's the fastest we can do.", "start": 2582.43, "duration": 1.85}, {"text": "I'm going to look at John again.", "start": 2584.28, "duration": 1.62}, {"text": "I don't think anybody has\nfound a faster sort algorithm.", "start": 2585.9, "duration": 2.43}, {"text": "Right?", "start": 2588.33, "duration": 0.5}, {"text": "This is the best one can do.", "start": 2588.83, "duration": 1.77}, {"text": "Unless you do-- sorry,\nthe best worst case.", "start": 2590.6, "duration": 3.231}, {"text": "I'm sorry.", "start": 2593.831, "duration": 0.499}, {"text": "John is absolute right.", "start": 2594.33, "duration": 1.05}, {"text": "There are better average cases.", "start": 2595.38, "duration": 1.291}, {"text": "Again, our concern\nis worst case.", "start": 2596.671, "duration": 1.629}, {"text": "So this is as good\nas we're going", "start": 2598.3, "duration": 1.374}, {"text": "to do in terms of a\nworst case algorithm.", "start": 2599.674, "duration": 2.436}, {"text": "So there you now have sorting\nalgorithms and searching", "start": 2602.11, "duration": 2.52}, {"text": "algorithms, and\nyou've now seen--", "start": 2604.63, "duration": 2.33}, {"text": "excuse me, sorry--\nconstant, log, linear,", "start": 2606.96, "duration": 3.82}, {"text": "log linear, quadratic, and\nexponential algorithms.", "start": 2610.78, "duration": 3.95}, {"text": "I'll remind you, we\nwant things as high up", "start": 2614.73, "duration": 2.2}, {"text": "in that hierarchy as possible.", "start": 2616.93, "duration": 3.494}, {"text": "All right.", "start": 2620.424, "duration": 1.786}, {"text": "I have six minutes left.", "start": 2622.21, "duration": 2.1}, {"text": "Some of you are\ngoing to leave us.", "start": 2624.31, "duration": 1.47}, {"text": "We're going to miss\nyou, but that's OK.", "start": 2625.78, "duration": 1.24}, {"text": "I'm sure we'll see later on.", "start": 2627.02, "duration": 1.166}, {"text": "For those of you hanging around,\nthis isn't a bad time just", "start": 2628.186, "duration": 2.764}, {"text": "to step back and say,\nso what have we seen?", "start": 2630.95, "duration": 1.94}, {"text": "And I want to do this\njust very quickly.", "start": 2632.89, "duration": 2.77}, {"text": "I'm sorry.", "start": 2635.66, "duration": 0.5}, {"text": "And I'll remind you, we started\nby in some sense giving you", "start": 2636.16, "duration": 3.18}, {"text": "a little bit of a\ncontract of things", "start": 2639.34, "duration": 1.617}, {"text": "we were going to show you.", "start": 2640.957, "duration": 1.083}, {"text": "And I would simply suggest\nto you, what have we done?", "start": 2642.04, "duration": 3.54}, {"text": "We've given you a sense of\nhow to represent knowledge", "start": 2645.58, "duration": 2.54}, {"text": "with data structures, tuples,\nlists, dictionaries, more", "start": 2648.12, "duration": 3.6}, {"text": "complicated structures.", "start": 2651.72, "duration": 1.92}, {"text": "We've shown you some good\ncomputational metaphors,", "start": 2653.64, "duration": 3.63}, {"text": "iteration, and loops.", "start": 2657.27, "duration": 1.26}, {"text": "Recursion has a great way\nof breaking problems down", "start": 2658.53, "duration": 2.64}, {"text": "into simpler versions\nof the same problem.", "start": 2661.17, "duration": 2.639}, {"text": "And there really are metaphors.", "start": 2663.809, "duration": 1.291}, {"text": "There are ways of\nthinking about problems.", "start": 2665.1, "duration": 2.89}, {"text": "We've given you abstraction, the\nidea of capture a computation,", "start": 2667.99, "duration": 3.96}, {"text": "bury it in a procedure.", "start": 2671.95, "duration": 1.5}, {"text": "You now have a contract.", "start": 2673.45, "duration": 1.17}, {"text": "You don't need to know what\nhappens inside the procedure", "start": 2674.62, "duration": 2.333}, {"text": "as long as it delivers the\nanswer it says it would.", "start": 2676.953, "duration": 2.567}, {"text": "Or another way of saying\nit, you can delegate it", "start": 2679.52, "duration": 2.0}, {"text": "to somebody and trust\nthat you're going", "start": 2681.52, "duration": 1.625}, {"text": "to get what you like out of it.", "start": 2683.145, "duration": 1.735}, {"text": "We've seen classes and\nmethods as a wonderful way", "start": 2684.88, "duration": 2.58}, {"text": "to modularize systems,\nto capture combinations", "start": 2687.46, "duration": 3.69}, {"text": "of data and things that operate\non them in a nice, elegant way.", "start": 2691.15, "duration": 3.75}, {"text": "And we just spent\na week and a half", "start": 2694.9, "duration": 1.83}, {"text": "talking about\nclasses of algorithms", "start": 2696.73, "duration": 2.52}, {"text": "and their complexity.", "start": 2699.25, "duration": 1.792}, {"text": "If you step up a level, what we\nhope you've gotten out of this", "start": 2701.042, "duration": 4.943}, {"text": "are a couple of things.", "start": 2705.985, "duration": 1.885}, {"text": "You've begun to learn\ncomputational modes", "start": 2707.87, "duration": 2.2}, {"text": "of thinking.", "start": 2710.07, "duration": 1.14}, {"text": "How do I tackle a problem\nand divide and conquer?", "start": 2711.21, "duration": 2.05}, {"text": "How do I think about\nrecursion as a tool", "start": 2713.26, "duration": 2.18}, {"text": "in dealing with something?", "start": 2715.44, "duration": 2.04}, {"text": "You've begun to-- begun, I will\nuse that word deliberately--", "start": 2717.48, "duration": 2.85}, {"text": "to master the art of\ncomputational problem solving.", "start": 2720.33, "duration": 2.46}, {"text": "How can you take a problem\nand turn it into an algorithm?", "start": 2722.79, "duration": 3.52}, {"text": "And especially, you've\nbegun to have the ability", "start": 2726.31, "duration": 2.42}, {"text": "to make the computer\ndo what you want it to.", "start": 2728.73, "duration": 2.07}, {"text": "To say, if I've got a problem\nfrom biology or chemistry", "start": 2730.8, "duration": 2.94}, {"text": "or math or physics or\nchemical engineering", "start": 2733.74, "duration": 2.46}, {"text": "or mechanical engineering, how\ndo I take that problem and say,", "start": 2736.2, "duration": 3.307}, {"text": "here's how I would\ndesign an algorithm", "start": 2739.507, "duration": 1.583}, {"text": "to give me a simulation and a\nway of evaluating what it does.", "start": 2741.09, "duration": 4.564}, {"text": "And so what we\nhope we've done is,", "start": 2745.654, "duration": 1.416}, {"text": "we've started you down the path\nto being able to think and act", "start": 2747.07, "duration": 3.24}, {"text": "like a computer scientist.", "start": 2750.31, "duration": 1.86}, {"text": "All right.", "start": 2752.17, "duration": 0.5}, {"text": "Don't panic.", "start": 2752.67, "duration": 0.736}, {"text": "That doesn't mean you\nstare at people's shoes", "start": 2753.406, "duration": 1.874}, {"text": "when you talk to them.", "start": 2755.28, "duration": 0.71}, {"text": "Not all computer scientists\ndo that, just faculty.", "start": 2755.99, "duration": 2.23}, {"text": "Sorry, John.", "start": 2760.78, "duration": 1.38}, {"text": "So what do computer\nscientists do?", "start": 2762.16, "duration": 1.862}, {"text": "And this is actually\nmeant to be serious.", "start": 2764.022, "duration": 1.708}, {"text": "And I put up two of my\nfamous historical figures", "start": 2765.73, "duration": 2.37}, {"text": "of computer scientists.", "start": 2768.1, "duration": 1.95}, {"text": "They do think computationally.", "start": 2770.05, "duration": 1.77}, {"text": "They think about abstractions,\nabout algorithms,", "start": 2771.82, "duration": 3.6}, {"text": "about automated execution.", "start": 2775.42, "duration": 1.3}, {"text": "So the three A's of\ncomputational thinking.", "start": 2776.72, "duration": 2.0}, {"text": "And in the same way\nthat traditionally you", "start": 2778.72, "duration": 2.28}, {"text": "had the three R's of reading,\nwriting, and arithmetic,", "start": 2781.0, "duration": 2.91}, {"text": "computational thinking we\nhope is becoming a fundamental", "start": 2783.91, "duration": 3.15}, {"text": "that every well-educated\nperson is going to need.", "start": 2787.06, "duration": 3.78}, {"text": "And that says, you think\nabout the right abstraction.", "start": 2790.84, "duration": 4.29}, {"text": "When you have a problem\nin your [INAUDIBLE]", "start": 2795.13, "duration": 1.882}, {"text": "what's the right abstraction?", "start": 2797.012, "duration": 1.268}, {"text": "How do I pull apart the pieces?", "start": 2798.28, "duration": 2.46}, {"text": "How do I think about that in\nterms of decomposing things", "start": 2800.74, "duration": 3.15}, {"text": "into a relationship that I\ncan use to solve problems?", "start": 2803.89, "duration": 4.19}, {"text": "How do I automate?", "start": 2808.08, "duration": 1.83}, {"text": "How do I mechanize\nthat abstraction?", "start": 2809.91, "duration": 1.68}, {"text": "How do I use what I know\nhappens inside of the machine", "start": 2811.59, "duration": 2.91}, {"text": "to write a sequence of\nsteps in a language I'm", "start": 2814.5, "duration": 2.28}, {"text": "using to capture that process?", "start": 2816.78, "duration": 2.68}, {"text": "And then finally, how do I\nturn that into an algorithm?", "start": 2819.46, "duration": 3.11}, {"text": "And that not only means I\nneed a language for describing", "start": 2822.57, "duration": 3.45}, {"text": "those automated\nprocesses, and if you", "start": 2826.02, "duration": 3.12}, {"text": "like allowing the\nabstraction of details,", "start": 2829.14, "duration": 2.67}, {"text": "but frankly also a\nway to communicate.", "start": 2831.81, "duration": 2.61}, {"text": "If you have to think\ncrisply about how do I", "start": 2834.42, "duration": 2.13}, {"text": "describe an algorithm,\nit's actually", "start": 2836.55, "duration": 2.46}, {"text": "giving you a way to\ncrystallize or clarify", "start": 2839.01, "duration": 2.43}, {"text": "your thinking about a problem.", "start": 2841.44, "duration": 2.07}, {"text": "This is not to say you should\ntalk to your friends in Python.", "start": 2843.51, "duration": 2.58}, {"text": "I don't recommend it.", "start": 2846.09, "duration": 1.41}, {"text": "But it does say you\nshould use that thinking", "start": 2847.5, "duration": 2.28}, {"text": "as a way of capturing your ideas\nof what you're going to do.", "start": 2849.78, "duration": 4.0}, {"text": "And that leads, then,\nto this idea of,", "start": 2853.78, "duration": 2.82}, {"text": "how difficult is a problem?", "start": 2856.6, "duration": 1.87}, {"text": "How best can I solve it?", "start": 2858.47, "duration": 1.76}, {"text": "We've shown you these\ncomplexity classes", "start": 2860.23, "duration": 1.86}, {"text": "and we've hinted at the idea\nthat in fact some problems", "start": 2862.09, "duration": 2.73}, {"text": "are inherently more\ndifficult than others.", "start": 2864.82, "duration": 2.53}, {"text": "That's something I hope you\ncome back to as you go along.", "start": 2867.35, "duration": 2.66}, {"text": "And especially we want you to\nstart thinking recursively.", "start": 2870.01, "duration": 3.67}, {"text": "We want you to think about\nhow do I take a hard problem,", "start": 2873.68, "duration": 3.3}, {"text": "break it up into simpler\nversions of the same problem,", "start": 2876.98, "duration": 2.54}, {"text": "and then construct the solution.", "start": 2879.52, "duration": 2.86}, {"text": "And that shows up\nlots of places.", "start": 2882.38, "duration": 3.21}, {"text": "Right?", "start": 2885.59, "duration": 0.5}, {"text": "Recursion is in all sorts\nof wonderful places.", "start": 2886.09, "duration": 2.01}, {"text": "So just to give you an example,\nI could say to you recursively,", "start": 2888.1, "duration": 3.93}, {"text": "\"This lecture will\nend when I'm done", "start": 2892.03, "duration": 1.92}, {"text": "talking about this\nlecture, which", "start": 2893.95, "duration": 1.89}, {"text": "will end when I'm done talking\nabout this lecture, which", "start": 2895.84, "duration": 2.76}, {"text": "will end when I'm done--\"", "start": 2898.6, "duration": 1.07}, {"text": "All right.", "start": 2899.67, "duration": 0.5}, {"text": "You don't like\ninfinite recursion.", "start": 2900.17, "duration": 1.46}, {"text": "Good luck on the exam.", "start": 2901.63, "duration": 2.12}]