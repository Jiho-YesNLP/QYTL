[{"vid": "FlGjISF3l78", "cid": "UgyR1wIVye6UkQJCxip4AaABAg", "comment": "MIT should fire the guys who made these videos.  What is the point to keep screen focusing on the instructor face when she is presenting based on the slide content???  Is her face showing the ppt contents?", "votes": "0", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzJLr6NFIteYcllerl4AaABAg", "comment": "30:14 \"I want to make a note that I actually didn't write a method to remove friends, so once you get a friend, they're friends for life... but that's ok.\" Anna that's a life lesson there...", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgynAAyugqDhm7QHVlp4AaABAg", "comment": "She is so anxious that she swallows every 30 seconds and is about to go into a panic attack. Give her a bag to breathe, please. It is very difficult to follow a teacher who, in addition to the above, also corrects herself almost every sentence, because the first time she says slightly incorrect things.  Do people actually pay money for this \"education\"? It's not even funny. If you need frame of reference, watch the teacher at Stanford's CS193p teaching ObjC / Swift for absolute beginners. It's right here on YT.", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxY9TfJeurnsy4jnuR4AaABAg", "comment": "So clear! It would help to show her screen with the code more of the time", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyhzK1BilFw58vfU3V4AaABAg", "comment": "Running a code analysis in Spyder told me classes automatically inherit from object in Python3, so in Python3 at 9:52 you can write class Animal():        def __init__(self, age):              self.age = age              self.name = None", "votes": "1", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxjjdCCFURUy5lSltF4AaABAg", "comment": "Thank you!", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugwq8IN_oftDoTpncSd4AaABAg", "comment": "Thank you, MIT. For those complaining about not being able to see the slides. Click the link in the description and download the slides. Quit complaining about receiving a free, world-class education. Take two seconds, read the freaking description and go view the complete course!", "votes": "2", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugyl7OZcyythJkD2C1B4AaABAg", "comment": "This class would be much better if given by any of the leading male programming youtubers.", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugw5JPgs4yzMpbMKa5d4AaABAg", "comment": "almost done with this cousre", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugz2CnCXdRGQbvEWi854AaABAg", "comment": "I have watched the nine lectures so far, and realized this is exactly the information missing in all those coding schools online, which try to dumb everything down, let you fill in the blanks in a code (as an exercise), but fail to teach how Python actually works underneath the surface. The logic of Python or coding in general should be taught more, because that makes you understand what the heck you are doing.", "votes": "3", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugw9pWcnaPP_hYSeTph4AaABAg", "comment": "It's really helpful!", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugwdnm8NkPI8wzo85x54AaABAg", "comment": "Good lecture , thank you but I don't agree with you that persons are animals", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwHuhBskgXSyt__iSR4AaABAg", "comment": "I know nothing bout dis shit only clicked for the kittens in the thumbnail", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugzxk16xsBz62gD-fol4AaABAg", "comment": "Although i am CS major, i still learned a lot from this course. thank you !", "votes": "4", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwOtuU0_SsMDb_hk-J4AaABAg", "comment": "Time: 34.34 I keep getting an error en the definition of class Student. So, here is what I found:      print(\"\\n ---- student test ----\")\r s1 = Student('Alice', 20)                                       #instead of:  ---------------> s1 = Student('Alice', 20, \"CS\")\r s1.major = 'CS'                                                      #add this line s2 = Student('Beth', 18)\r s2.major = None                                                    #add this line\r print(\"s1: \", s1)\r print(\"s2: \", s2)\r print(\"El nombre del objeto s1, clase Student-is-a-Persona-is-a-Animal: \", s1.get_name(),\" y dice: \", end = \" \")\r s1.speak()\r print(\"El nombre del objeto s2, clase Student-is-a-Persona-is-a-Animal: \", s2.get_name(),\" y dice: \", end = \" \")\r s2.speak()", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgznH2HP5qXuBSkHPCF4AaABAg", "comment": "Finally I understood class", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugxv3xtrvap-Qfy33hx4AaABAg", "comment": "I thought people at MIT are really smart, but look at them filming the professor pointing at the code/slides instead of filming the code, which is what we, students, really care about.", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwMRVbDeknnynu7Z_N4AaABAg", "comment": "Lets find out what happens when you add two rabbits together - in this class, not the real world XD I love Dr Ana she is a legend", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxopkmC65Sr6ZR32sN4AaABAg", "comment": "Did she give all lectures on the same day? She is wearing the same clothes across all lectures..", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxYx7-5uocIf9CgSn54AaABAg", "comment": "Best intuitive lecture about classes and objects ever came across in the internet", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyR1wIVye6UkQJCxip4AaABAg.9ymI_RGhAAK9ymIxe0reOm", "comment": "The only point to focus on the instructor is when she is interacting with audience or doing some demo with pops.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgyhzK1BilFw58vfU3V4AaABAg.9lMpbJncv3O9mgZmhUZ0Ap", "comment": "thanks mate", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugz2CnCXdRGQbvEWi854AaABAg.9gJM6QKkXsx9kkKklwM6b7", "comment": "Yeah, exactly. These other courses are always like \"this is how you have to do it and it is what it is\" but actually if you want to get better and not just copy code from a tutorial, you need to understand why it is that way and how it works beneath the surface.", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgyAkPZjsT6NtF-7-GZ4AaABAg", "comment": "22:03 Maybe a cat has a data attribute for the number of lives they have left  LoL that was funny... but no one laughed :(", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyxezVfclq1xSxO6V94AaABAg", "comment": "People pay for this?", "votes": "1", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxVUrCjQtVQs9NTnup4AaABAg", "comment": "why to write Animal__init__(self, age ) at all? in 28:54", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxgJVuQmbvd4ehBla94AaABAg", "comment": "it's me who shared this video with you shanu akka,thisa,didula,", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzWsKXx-b4eY9V42L94AaABAg", "comment": "this video is awesome", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwFNUZMFzLrdqa61Nd4AaABAg", "comment": "The class is really good but it would be easier to follow if it was constantly focused on the slide.", "votes": "15", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzGknB1SIER21ewhsF4AaABAg", "comment": "\"Image of kittens source unknown\" :)", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyNsGqAy-zaAMk1ZSd4AaABAg", "comment": "A lot of the class init she shows is specific to python 2.x. In 3.x you don\u2019t need to explicitly inherit from object, for instance", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxS4DsU3kmcXYvaSBB4AaABAg", "comment": "Don\u2019t use getters and setters in Python, just Google it and you\u2019ll lots of explanations why: it\u2019s useless in Python and poor form\u2014sure mark of a noob.", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwgeaIxe0XhjztiPON4AaABAg", "comment": "What is the point of naming the class variable self.rid? She never used it, I don't understand that. If she directly used Rabbit.tag on the last line what was the point of creating that instance variable? Can someone please answer this? Thanks", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugx_kUlIKllkjyQpiut4AaABAg", "comment": "Note that in this lesson we decide that any two rabbits with the same parents are \"equal\".  This could be weird, and probably is, however, that is outside the scope of Python or programming.  Many people and some rabbits would object to be thought to be equal to their brother or sister.", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugx2peQSsLBQ500zW_N4AaABAg", "comment": "Absolutely well done and definitely keep it up!!! \ud83d\udc4d\ud83d\udc4d\ud83d\udc4d\ud83d\udc4d\ud83d\udc4d", "votes": "2", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugxd42-YecCAKgxpltl4AaABAg", "comment": "ok", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxWHaBwAf6yuueOqPZ4AaABAg", "comment": "What's that end variable in Student class code when she was running exercise on it.", "votes": "0", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzwenhXnhtOnG96a094AaABAg", "comment": "0:02:05\u200b  Implementing vs using  class 0:04:00   0:06:56  Why use OOP and classes of objects   0:08:58  How to define a class (recap)  0:10:59 \u200b0:12:00  \u200b0:13:12\u200b  0:14:38   0:16:36  Python not great at information hiding 0:18:16  0:20:00  \u200b0:22:00   0:23:02  Hierarchies   0:24:46  \u200bInheritance : parent class  0:26:30   0:28:14\u200b  Class person  0:30:00 0:31:04  \u200bClass person(Coding)   0:32:00  Class student  0:34:39  \u200b 0:36:35  Class variable and the Rabbit subclass  \u200b0:38:51\u200b  0:40:00 0:42:18  Rabbit getter methods  \u200b0:43:48  \u200b0:46:31", "votes": "40", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxxGuN-gNR7Xhm-6NN4AaABAg", "comment": "The lecture is great but the editing is horrible. More than 80% of the on screen time is on the lecturer when it should be on the slides.   Could've at least have a minified window for the lecturer if you wanted to split screen it.", "votes": "1", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugzeu1fNNcL2fSGjEVx4AaABAg", "comment": "hey One thing it was previously set 'years' instead of 'age' but then she put \"diff = self.age - other.age\" instead of \"diff = self.years - other.years\"", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugzb9_1JPa1S0ZDnM854AaABAg", "comment": "what is abs(diff)?", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugz5CAyxI0xg-YLOF9R4AaABAg", "comment": "the videography kinda sucks...the ppt should have been given more screen time instead of showing the instructor. It would be easier to follow what she is saying if the code is visible.", "votes": "0", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxC68KnxkOPCgxKec94AaABAg", "comment": "It would be much better to have focus on lectures slides in the video than on the lecturer. WE can't open another window side by side showing the associated pdf slides as some suggest. Some of us watch these lectures on average sized iPads and laptops with small screens. MIT really need to shrink time instances showing lecturers and put more focus on the actual \" content\" being taught. These video are mostly showing the lecturer even when her gestures do not aid any extra learning. I genuinely appreciate putting these lectures and am really thankful as well as appreciate the fact that Ana is very knowledgeable and She explains things very well. But lack of slide time really makes it frustrating to absorb the information. Instead of expecting/telling us to open separate lecture slides it would be much better if videos themselves spend more time on the said slides, preferably most of it. I assume cameraman and video editing team never really learned any scientific material themselves and do no know the importance of slides as a learning aid.", "votes": "4", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyxezVfclq1xSxO6V94AaABAg.9VTH2U0GCJp9W5iXPalEy6", "comment": "Is that a problem?", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgyxezVfclq1xSxO6V94AaABAg.9VTH2U0GCJp9W6HAL_3bQc", "comment": "\u00a0@SatyamSingh-nq2il\u00a0 I can learn this for free.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgxWHaBwAf6yuueOqPZ4AaABAg.9IVK81ZhKKj9U160OJIuPd", "comment": "the print() function automatically has a '\\n', or new_line after it is called. However, you can manually change it such that you don't have a new_line or want to instead want to have a '\\t',or tab, after each print by modifying 'end'.", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgxWHaBwAf6yuueOqPZ4AaABAg.9IVK81ZhKKj9U1QZFn36B6", "comment": "\u00a0@maxyang5143\u00a0 thanks Max. I have come a long way. I surprised myself.  I didn't know this 9 months back and now I am working as python developer. Phew..", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgzwenhXnhtOnG96a094AaABAg.9Hnc-Il_mwt9i41nWjpv0i", "comment": "\u597d\u5b66\u751f", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgxxGuN-gNR7Xhm-6NN4AaABAg.9FzgrG8quHx9RTqYTtE1HJ", "comment": "This is done on purpose, why would you want the camera on the slides if you can download the slides.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgxxGuN-gNR7Xhm-6NN4AaABAg.9FzgrG8quHx9RVgBh6eYv-", "comment": "\u00a0@franciscogutierrezramirez5497\u00a0 She point at the screen while explaining the concepts for the students to follow along... which we don't get to see. By your logic she should be pointing the lazer at herself.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugz5CAyxI0xg-YLOF9R4AaABAg.9EAs5Hwlq7i9EC65M9_GmQ", "comment": "Code snippets are available at: http://ocw.mit.edu/6-0001F16. Best wishes on your studies!", "votes": "3", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgzE9qmIFvlIpuiBRph4AaABAg", "comment": "Thank you,,,, helped me ....", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzUaAorg24oQo0tcat4AaABAg", "comment": "Why is  the camera most of the time  focused on her, while she is refering to something on the  slide?", "votes": "4", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyyS9XFt1t2b3fTfot4AaABAg", "comment": "Awesome lecture much love from Sri Lanka  <3<3 :-)", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugw_pfV50kMAF6exge14AaABAg", "comment": "This is when Java lecturer does part time job for Python... getters and setters are not pythonic! No one should recommend them as remedy for data hiding, which as an idea, was rejected by Python designers. This class teaches you how to pretend you still use Java when programming in Python ;-)", "votes": "2", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugy83LFbgH0eoYbJnkt4AaABAg", "comment": "thank you so so so much !!!!!", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugz8tZiO3mnU0z9MvVB4AaABAg", "comment": "I love this woman. I'm studyng programming and Python more than a year now and I started with this course. She was, untill now, the best teacher I've ever seen. There is David Malan, from Harvard, also very good, but she always seemed the most clear for me. Perfect.", "votes": "8", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxyT9urXdKFnOJs3jB4AaABAg", "comment": "Probably the least useful video on Python I've ever watched, but thanks anyway", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxnsynXYur5lfnKuKh4AaABAg", "comment": "Regarding getters and setters, I highly recommend that you check out how they can be implemented using property decorators rather than using methods as demonstrated by Ana. The following video gives a nice concise explanation and example: https://www.youtube.com/watch?v=jCzT9XFZ5bw&list=PL-osiE80TeTsqhIuOqKhwlXsIBIdSeYtc&index=6", "votes": "11", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyPa46p0g2d4N8_rEp4AaABAg", "comment": "My takeaways: 1. Getter and setter 11:05 2. Why it is better to use getter and setter: information hiding 13:25 3. Python is not great at information hiding 16:25 4. Default argument 17:58 5. Hierarchies 23:01 6. Override behaviour 24:05 7. An example 28:14 8. Class variables 35:45", "votes": "22", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxwmArLBIMzluQn5fd4AaABAg", "comment": "Interesting lecture but I have never seen a real world example as to the benefits of Classes and OOP versus Functions, there is so much associated jargon. Can someone show me an example", "votes": "1", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugw7DZzdJly0eT4FfkR4AaABAg", "comment": "This video is an academic monstruosity. It communicates nothing. It is a bizarre antropo-zoology class. For instance, it simply states that getters and setters ARE used etc. But why should one use them ? \"To prevent BUGS ???\" Pursuant this logics, everybody, except this lady, is striving, when writing code, to obtain a number of bugs as great as possible.   This Video never tells WHY one should use OOP. It never points to profit of using OOP and it never warns on what the damage is when not using OOP.  Use OOP to create \"layer of abstraction\" ??? I have a processor-ache. Horror !", "votes": "2", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugwq58V1ZoNMPAl-c3h4AaABAg", "comment": "@ u teacher cb", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzCosBcMvb6iY90qsJ4AaABAg", "comment": "I like the rabbit search comment \ud83d\ude02 laughout \ud83d\ude02 right!", "votes": "4", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwwUkvudtrFGpl4X7V4AaABAg", "comment": "Surely she is a great teacher, but in this lecture I feel she is not at her best.", "votes": "2", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzyKI6HPOywRtfnfuR4AaABAg", "comment": "garbage", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyhyKq-LAvE50Fo0YJ4AaABAg", "comment": "Very clear, thanks to the lecturer (Dr. Ana Bell) and the anon cameraman!", "votes": "10", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugz0PYIASYCuhBHpbxx4AaABAg", "comment": "\u018fla. \u00c7ox d\u0259rinl\u0259r\u0259 enm\u0259yib ama faydal\u0131 m\u0259lumatlar var. Thank you very much.", "votes": "2", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzV4hXDiZoXjCZtK7h4AaABAg", "comment": "MIT open courses never disappoint = ]", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugx7rcCAaiSPpdWbi0J4AaABAg", "comment": "why do we have a self.name=None? what does it do?", "votes": "0", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwMuSkrw-WDzaAryY54AaABAg", "comment": "How to delete \"#\" on different line at once?", "votes": "0", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzUaAorg24oQo0tcat4AaABAg.9Ce6yECXygK9CgOT_AjfqT", "comment": "use the slides from the link along with the video.", "votes": "2", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugz8tZiO3mnU0z9MvVB4AaABAg.9Ay_M5AzJBq9chIn-7KuKl", "comment": "David is much better imo", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgxnsynXYur5lfnKuKh4AaABAg.98I55CPSbV399HcFc4sgWV", "comment": "Good recommendation!", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgxwmArLBIMzluQn5fd4AaABAg.95AeS6FSW7K95VX5s01yu1", "comment": "Try to write a snake game using some graphic API.", "votes": "2", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugw7DZzdJly0eT4FfkR4AaABAg.94eI9wWzYMe95Xm8CaHgie", "comment": "\u200b\u00a0Ken MacDonald\u00a0 Your brain is advanced (and immense). You have probably graduated from MIT, too. Being fed with their greasy, insalubrious didactic junk, no wonder that You have understood nothing. Now, just to tackle your stupidissime comparision: if supposing that i would love to change my oil, this \"lesson\" does not at all present any of the concrete steps involved in changing oil, instead it will take me on a hallucinating journey in which changing oil is an intricate, frightening, scholastic systemic complication that M.I.T. will kindly \"explain\" by resorting to fluffy cats, obese barking bunnies etc. And yes, i should ask why a car should be purchased, simply because in engineering (all the more in comput. eng.) one must ask him(her)self a huge arborescence of 'why's. In addition, the 'complain' segment of your example is greatly noxious: with individuals like you, university super-gods remain unaccounted for (regardless of their incompetence, lack of pedagogical talent, lack of imagination, mental chaos etc), something that it is very unlikely for the ordinary employee. But, hey, do not worry: instead of delivering, these fellas skin you alive of the off tuition dough.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugw7DZzdJly0eT4FfkR4AaABAg.94eI9wWzYMe99n4NXcetQg", "comment": "lolol, good humor", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugx7rcCAaiSPpdWbi0J4AaABAg.8uXZwKxXd_z91iOgPlicd5", "comment": "It creates a variable on all class instances with Default value None.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgwMuSkrw-WDzaAryY54AaABAg.8u7qxMldgQV8xgsDADLhZ6", "comment": "first, mark the lines from where you want to delete '#'. then use ctrl + 1. thank you", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgwMuSkrw-WDzaAryY54AaABAg.8u7qxMldgQV91q4Twickqq", "comment": "if you\u2019re using python idle, highlight the lines that you want (shift + arrow key), them use \u2018alt + 3\u2019 to add # and \u2018alt + 4\u2019 to remove #.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgxVwFN4gTNrt-BvDM94AaABAg", "comment": "Listening at 1.75 X", "votes": "2", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgyM9QqWRblIMihTKY54AaABAg", "comment": "Another extraordinary lecture, very informative and well explained <3", "votes": "15", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzAwUjhi1ukZwvCD2B4AaABAg", "comment": "too much focus on teacher than the slides she is referring to. why ? please show slides when its refereed and not person speaking.", "votes": "7", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwdcV0wbDe6MCLErmd4AaABAg", "comment": "very smart Canuck \ud83d\udc4f\ud83d\udc4f\ud83d\udc4f", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzZlurpc4STXOwfm9h4AaABAg", "comment": "When 2 rabit objects at 43:23 are added together they bond and produce a new child rabit..  Wow thats the power of OOP", "votes": "11", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzzsMNPYe1I2gSaEgx4AaABAg", "comment": "In C++,we have access modifiers to protect data member from being modify outside of the class.But in python,there is no such mechanism.", "votes": "2", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwCM794KE_aeNVbdOZ4AaABAg", "comment": "Excuse me but I don't quite understand why the _eq_ method will be called over and over again when comparing objects directly. Thanks in advance~~^^", "votes": "6", "replies": "4", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugy0_u5BE2y-IpRMeDJ4AaABAg", "comment": "akeh", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugwx3xlaA1EzPLYl8qF4AaABAg", "comment": "Would be good if camera man/woman stays focus on the screen instead of the lecturer!", "votes": "16", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwgDqZMdYDZVKJSEwF4AaABAg", "comment": "Everyone does a horrible job teaching get and set ... It's read write capability... That's pretty much it .", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugzl5PNvnHWvMLGltbd4AaABAg", "comment": "Really good, tyvm!", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgwcjelTbS79ETWLwJZ4AaABAg", "comment": "Thank you so much for these great lectures.", "votes": "0", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgxpJZYlspj7n4fGkwx4AaABAg", "comment": "Very Nice explanation...I have tried to simplify the logic in - https://www.youtube.com/watch?v=sd0iOlEhz8A&t=761s . Also if any friends needs the understanding of Python in Hindi language, do visit - https://www.youtube.com/watch?v=uJvJElmCs18&list=PLrqwCI95Biv1JVyvUqSs8Mou4-owRjC4O&index=2", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzeXA-EolbxsXwIKft4AaABAg", "comment": "If it's not a good approach to use direct dot referencing than getter and setter, why Python allow it? Is there any philosophical reason for this?", "votes": "4", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugwq_oB68mNKkdml3J14AaABAg", "comment": "Can I call a class' method w/o making an instance of it? For example, Anna is  using a method of 'random' class which she imported w/o instancing.", "votes": "1", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugh6AJ5DnEXhNXgCoAEC", "comment": "Hi,  Why with the class cat(Animal) example do you leave out the _init_ statement, but with the person (animal) example do you include the _init_ statement of animal.__init__ etc....?  If the cat example inherits name, age etc.. of animal class then why do you have to write Animal.__init__(self, age)? Won't the person class inherit this without the statement and if not what makes it different to the cat class?   Thank you", "votes": "1", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgjJOgXbq22McHgCoAEC", "comment": "Found this clear and concise. Fantastic lecturer, certainly knows her stuff. Thanks :)", "votes": "10", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "Ugi0b_p_9nY7P3gCoAEC", "comment": "I must say....this class is the most informative class I have taken on programming. Most classes are just ramblings and ego validation/marketing gimmicks by \"instructors\". I am actually learning stuff that I can implement, ain't that something.", "votes": "74", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgiaX1X5VmfG6ngCoAEC", "comment": "She recommends using getters and setters in python (13:47). But they are not needed and should not be used. If some transformation or checking of the data is needed, then properties should be used.", "votes": "4", "replies": "1", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgjOlbvyF1EljHgCoAEC", "comment": "You can privatize  attributes in python classes by prefixing them with '__'.    So self.friends becomes self.__friends, self.age is self.__age, and etc.", "votes": "4", "replies": "2", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgzAwUjhi1ukZwvCD2B4AaABAg.8srZYL9WaUA8xv2SqrYJqp", "comment": "I have the exact same qualm.", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgzAwUjhi1ukZwvCD2B4AaABAg.8srZYL9WaUA8zfLuDwDCWi", "comment": "You can go to the course page and download the slides for yourself", "votes": "2", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgwCM794KE_aeNVbdOZ4AaABAg.8hMf5rtysoN97OObdWuxNy", "comment": "Me to", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgwCM794KE_aeNVbdOZ4AaABAg.8hMf5rtysoN97oRNF2O4OG", "comment": "say you got r3 = r1 + r2. for r3, self.parent1 is r1, self.parent2 is r2, now, you are comparing r1 == r2, but hold on, '==' is '__equal__' in this class, so it creates a new scope, for r1 self.parent1 = None, self.parent2 = None, look again, for None, self.parent1 is ERROR.", "votes": "3", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgwCM794KE_aeNVbdOZ4AaABAg.8hMf5rtysoN97oS04eCO3p", "comment": "why 1 == 2 won't get you the ERROR msg? They are integers, not from the rabbit class.", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgwCM794KE_aeNVbdOZ4AaABAg.8hMf5rtysoN9KgIC1zmPRl", "comment": "\u00a0@MrSimonsmoke\u00a0 The way operator overloading works in Python using the Python data model is that various functionalities needed to use the built-in operators with your types are provided by various functions with conventional (by agreement) names with __ at the beginning and end of the name.  __init__() was the first one taught about in this course.  So whenever Python sees == between two operands that are Rabbit type, it will be calling __eq__(   ,    ) ... so I think that was the missing point you weren't seeing.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugwx3xlaA1EzPLYl8qF4AaABAg.8eTgm8JycVk8hqeN5iuo-o", "comment": "thankfully the lecture slides are provided at the course link in the description", "votes": "4", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugwx3xlaA1EzPLYl8qF4AaABAg.8eTgm8JycVk8nMN-d2UX7L", "comment": "Don't need to see the lecturer period! Keep the camera focused on the screen!", "votes": "4", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgzeXA-EolbxsXwIKft4AaABAg.8_Nr8CgfgJE9EVdThIv5Rj", "comment": "It goes against the principle data abstraction of OOP.", "votes": "1", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugwq_oB68mNKkdml3J14AaABAg.8_Nqq781BmM98JYKtWUu6g", "comment": "It depends on the method you are calling. If the method does not have as argument the class or object (self), it is possible to use it without creating an instance of the class. \rSuch methods are called \"static methods\". You can call the method the following way (assuming it does not need any arguments):  import my_module my_module.MyClass.method_I_want_to_call()  With the random method that Ana used, it's actually a bit different.  When writing \"import random\" what is imported is a module, not a class. The module contains the class named \"Random\".  If you look into the random module, you'll see at the bottom that the variable \"random\" gets assigned the method \"Random().random\". This allows us to then call the random method just by typing \"random.random()\" instead of \"random.Random().random()\".  Here we actually are creating an instance of the class Random, by typing \"Random()\" instead of just \"Random\". This is required because the random method requires an instance of the class (it's not a static method) and thus cannot be used just by typing \"random.Random.random()\".", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugh6AJ5DnEXhNXgCoAEC.8V4keWDK6op8W6Jr_Kju3d", "comment": "Not sure if you still need this,  class Cat has the exact same _init_ function as Animal.  Since the class Person has a different _init_ function everything needs to be redefined, Python will not look further up the 'ancestry' for another _init_ function if class Person has one.  Animal._init_ just saves you some lines of code. If Animal._init_ had a bunch of attributes and you wanted to inherit that into class Person, but Person's _init_ had to be somewhat different you can just type Animal._init_ instead of retyping the whole Animal _init_ function  If there's a part you still don't understand a part feel free to ask more questions", "votes": "5", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugh6AJ5DnEXhNXgCoAEC.8V4keWDK6op8ZxeDS8NfW8", "comment": "You only need to write an _init__() for a subclass if something different is done at initialization. If you do write __init_ for the subclass, you're overwriting the superclass __init__, which is why you have to call the superclass __init__.", "votes": "5", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgiaX1X5VmfG6ngCoAEC.8SS8mqGn4sH8_BiWj6T7Ny", "comment": "How come?", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgjOlbvyF1EljHgCoAEC.8SEnJI-9ZJd95BM9IG-gaH", "comment": "I can still call this outside the class though, so its not private in the same sense as in Java for example?", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgjOlbvyF1EljHgCoAEC.8SEnJI-9ZJd9KrD0msS0Ax", "comment": "\u00a0@AS_20231\u00a0 You can call it but you cannot modify it.", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "Ugg7d03iKA9JLHgCoAEC", "comment": "Thank you for sharing this!!", "votes": "2", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgjQ2NOFjt0_XngCoAEC", "comment": "Thank you very much !!! I use the Udacity for building CS project and portfolios, but since I have no CS degree,  MIT online is the best resource for me to reinforce the core concepts for the foundation of CS on each topic, which bonds all of my fractured pieces of CS knowledge into a holistic picture. Very useful!", "votes": "70", "replies": "5", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgheTXW5TWcai3gCoAEC", "comment": "\"Not recommended to access data attributes directly?\" This is Python, not C# or Java. Data attributes are part of the public API. (We're all consenting adults here.) If you need to validate data before setting or getting a data attribute, you can implement a @property without any change to the public API.", "votes": "7", "replies": "4", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgjXB0BEf_PNOngCoAEC", "comment": "thank you ,mit", "votes": "1", "replies": "", "reply": false}, {"vid": "FlGjISF3l78", "cid": "UgjQ2NOFjt0_XngCoAEC.8Q5rqQ3suzE8UgzeTCjJu2", "comment": "Hey James, I'm doing the same curriculum as the MIT 6.3 program in EE & Computer Science using MIT OpenCourseware. I have a slack team if you want to join.", "votes": "3", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgjQ2NOFjt0_XngCoAEC.8Q5rqQ3suzE8gNYrQI_dsP", "comment": "Juan Vicente i would love to, i am a beginner", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgjQ2NOFjt0_XngCoAEC.8Q5rqQ3suzE8pa-9ZQEa1w", "comment": "I want in", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgjQ2NOFjt0_XngCoAEC.8Q5rqQ3suzE8sGPLQldtIA", "comment": "\u200b\u00a0@user-nq5wb1cz5e\u00a0 i want to join and i will be thankful for  acceptance", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgjQ2NOFjt0_XngCoAEC.8Q5rqQ3suzE98zJ37Ez2XC", "comment": "\u00a0@user-nq5wb1cz5e\u00a0 hey, some of the courses are not online, how do you work around that", "votes": "0", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgheTXW5TWcai3gCoAEC.8P3tKWi8VXZ8PNkaxKWyQH", "comment": "While I agree with you it should be pointed out that this is a comp sci course and not a Python course. This introduction has to be general enough that it gives you a feel for everything.", "votes": "18", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgheTXW5TWcai3gCoAEC.8P3tKWi8VXZ8SY-s9rxs2A", "comment": "Yer, I thought so too. Literally trying to do it the java way, e.g the toSring @override. That said, she's great lecturer.", "votes": "3", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgheTXW5TWcai3gCoAEC.8P3tKWi8VXZ8c5Oe62pHcV", "comment": "this is a lecture about basic programming concepts, not a lecture in Python specifically.", "votes": "2", "replies": "", "reply": true}, {"vid": "FlGjISF3l78", "cid": "UgheTXW5TWcai3gCoAEC.8P3tKWi8VXZ8kyMliUt8mf", "comment": "Definitely agree. Although she's doing a great job lecturing about general programming, it doesn't make much sense to use Python as an example without clearly calling out the distinctions, especially in the case of accessing data attributes. It's a lot like teaching someone the general rules of driving but forgetting to mention that not everyone in the world drives on the same side of the road.", "votes": "0", "replies": "", "reply": true}]