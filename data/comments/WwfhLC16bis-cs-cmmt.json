[{"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg", "comment": "Hey everyone! If you are looking for more practice problems for arrays and linked lists, I\u2019d also recommend my Udemy course, \u201c11 Essential Coding Interview Questions\u201d here: https://goo.gl/v35LCa  It\u2019s supposed to be for programming interview questions, but it should be a good resource for improving your problem-solving skills in general.  Anyway, thanks as always for watching! If you don\u2019t want to pay for the course, remember that I have a ton of other free videos right here on this YouTube channel :)", "votes": "181", "replies": "20", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzCfTws5VNUtxTVXsN4AaABAg", "comment": "static int getNodeCount(Node node)\r  {\r      int count = 1;\r \r      while (node.Next != null)\r      {\r          count++;\r          node = node.Next;\r      }\r      return count;\r  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxmNOV4ChVDvaYcVh94AaABAg", "comment": "I honestly love this series, even if I'm not doing Leetcode, it is so interesting and well-presented", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy3IXQl2iQcSBIesUV4AaABAg", "comment": "I maybe too late for this but here's my JS solution 12:00  class LinkedList {\r   list = { num: null, next: null }\r \r   add(num) {\r     const newNode = { num, next: null }; // Create a new node with the given number\r \r     if (this.list.num == null) {\r       this.list = newNode\r       return\r     }\r \r     let node = this.list;\r \r     \r     while (node.next) {\r       // Traverse to the end of the list\r       node = node.next;\r     }\r \r     node.next = newNode; // Append the new node to the end of the list\r   }\r \r   del() {}\r \r   count() {\r     if (!this.list.num) return 0\r   \r     let count = 1;\r     let node  = this.list;\r   \r     while(node) {\r       if (!node.next) break\r       node = node.next\r       count++\r     }\r   \r     return count\r   }\r }\r \r const linkedListInstance = new LinkedList()\r \r linkedListInstance.add(1)\r linkedListInstance.add(2)\r linkedListInstance.add(3)\r linkedListInstance.add(4)\r console.log(linkedListInstance.list)\r console.log(linkedListInstance.count())", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxsI_VvLaPdfhGZJXt4AaABAg", "comment": "my code :(please do tell me if this has any case errors) public class Linked {\r     int data;\r     Linked link;\r     Linked(int data,Linked link) {\r         this.data = data;\r         this.link = link;\r     }\r     static int countnum =0;\r     public static int count(Linked link){\r         if(link!=null)\r         {\r             count(link.link);\r             countnum++;\r             return countnum;\r         }\r         else\r             return countnum;\r \r     }\r \r     public static void main(String[] args) {\r         Linked forth = new Linked(1, null);\r         Linked third = new Linked(2, forth);\r         Linked second = new Linked(3, third);\r         Linked first = new Linked(6, second);\r         count(first);\r         System.out.println(countnum);\r \r     }\r }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwXylbyJr5mcWqZoIB4AaABAg", "comment": "public class Main {\r     public static void main(String[] args) {\r         Node head = new Node(4);\r         Node nodeB = new Node(2);\r         Node nodeC = new Node(3);\r         Node nodeD = new Node(10);\r \r    \r         head.next = nodeB;\r         nodeB.next = nodeC;\r         nodeC.next = nodeD;\r \r         int numberOfNodes = countNodes(head);\r         System.out.println(\"Number of nodes: \" + numberOfNodes);\r     }\r \r     public static class Node {\r         int data;\r         Node next;\r \r         Node(int data) {\r             this.data = data;\r         }\r     }\r \r     public static int countNodes(Node head) {\r         int counter = 0;\r         Node current = head;\r         while (current != null) {\r             counter++;\r             current = current.next;\r         }\r         return counter;\r     }\r }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz6ak0c2rhrJIDmMg14AaABAg", "comment": "God will bless you forever", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy6QZzw32vKesiiZ5Z4AaABAg", "comment": "3:05 Doubly linked list can do that though", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxggsBOOVMQai3xoUV4AaABAg", "comment": "Python:  def count_nodes(head):\r     length = 0\r     while head:\r         length += 1\r         head = head.next\r     return length  This is what worked for me", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxkdGTD8VPgkL2aYUN4AaABAg", "comment": "Using c#:      public int NodeCounter(Node head)\r     { \r         int counter = 0;\r         Node currentNode = head;\r \r         if (currentNode != null)\r         { \r             counter++;\r         }\r \r         while (currentNode.next != null)\r         {\r             counter++;\r             currentNode = currentNode.next;\r         }\r         return counter;\r \r     }\r    \r \r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx6TMfURazGHmmuKUB4AaABAg", "comment": "I used c++ and this is my solution.  \r class Node{\r public:\r     int data;\r     Node *next;\r \r     Node(int data) : data(data), next(nullptr){}\r \r     int CountNodes(){\r         if(next==nullptr){\r             return 0;\r         }\r         return 1 + next->CountNodes();\r     }\r \r };", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxiCWC4I1SWJadWqnR4AaABAg", "comment": "Simpler solution that also avoid errors if the list is empty:  static int countNodes(Node node) {         int count = 0;         while (node != null) {             count++;             node = node.next;         }         return count;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwCy1Eif4v4hsY8nEl4AaABAg", "comment": "here's the solution for CPP (C++)  #include <iostream>\r #include <vector>\r \r using namespace std;\r \r struct Node {\r public:\r     int data;\r     Node* next;\r \r     Node(int data) {\r         this -> data = data;\r         this -> next = NULL;\r     }\r };\r \r class linked_list {\r     Node* head = NULL;\r public:\r     void insert_node(int data) {\r         Node* newNode = new Node(data);\r         if (head == NULL) {\r             head = newNode;\r             return;\r         }\r \r         Node* temp = head;\r         while (temp->next != NULL) {\r             temp = temp->next;\r         }\r \r         temp->next = newNode;\r     }\r     void printList() {\r         Node* temp = head;\r         if (head == NULL) {\r             cout << \"list empty\" << endl;\r             return;\r         }\r \r         while (temp != NULL) {\r             cout << temp->data << endl;\r             temp = temp->next;\r         }\r     }\r \r     int countLength() {\r         if (head == NULL) {\r             cout << \"list empty\" << endl;\r             return 0;\r         }\r \r         int length;\r         Node* temp = head;\r \r         while (temp != NULL) {\r             temp = temp->next;\r             length++;\r         }\r \r         return length;\r     }\r };\r \r int main() {\r         linked_list list;\r \r         list.insert_node(6);\r         list.insert_node(0);\r         list.insert_node(3);\r         list.insert_node(56);\r \r         cout << endl;\r \r         list.printList();\r \r         int length = list.countLength();\r \r         cout << \"length = \" << length << endl;\r         return 0;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyokkTjbkKwDDzf_s14AaABAg", "comment": "Solution in typescript for the practice problem at 9:37 :  class NodeBox {\r   data: number;\r   next: NodeBox\r \r   constructor(data){\r     this.data = data\r   }\r }  const countNodes = (head) => {\r   let currentNode = head\r   let counter = 1\r \r   while(currentNode.next !== undefined){\r       counter++\r       currentNode = currentNode.next\r   }\r \r   return counter \r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzPcww5wQUz4Jb2eDl4AaABAg", "comment": "my solution: class LinkedList:\r     def __init__(self,number=None,next=None):\r         self.number=number\r         self.next=next\r     \r o1=LinkedList()\r o2=LinkedList()\r o3=LinkedList()\r o4=LinkedList()\r \r o1.number=1\r o2.number=2\r o3.number=3\r o4.number=4\r \r o1.next=o2\r o2.next=o3\r o3.next=o4\r \r def number_object(objectt):\r     size=0\r     while True:\r         try:\r             objectt=objectt.next\r             size+=1\r         except:\r             print(size)\r             break\r number_object(o1)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzarXrL57k-I4tZO-p4AaABAg", "comment": "My professor linked this video in the modules instead of teaching it LOL", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxWtyExrPhLwDB_7GV4AaABAg", "comment": "Where's the \"later video\"?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxZd0af0M5uA2z5csF4AaABAg", "comment": "Another good and clear descriptive video from CS Dojo!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxFB992Zf6UPMu2X_94AaABAg", "comment": "I love your mic. Give that keynote queen, I'm here for it", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwFNvu9TN_okUiQg4d4AaABAg", "comment": "public int countNodes (Node head){ Node head = current; int count = 0;  while(current != null){ count++; } return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn8ezmy3jQVbl", "comment": "make a video on hash tables and hashing please", "votes": "9", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn8fBNnMLB5MW", "comment": "Thank you very much for another good quality lesson! Please consider making a complete computer science course! Even on Udemy, very interested to buy it!", "votes": "5", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn8g6ArJdXa4M", "comment": "CS Dojo hey there! I like your videos and would like to ask you something, so here goes:  \"How do you learn something new, so that you don't forget it sometime soon?\"  Because I often find myself forgetting stuff that I have just learned a few days or weeks ago. For example I learn about lists, maps and dictionaries. Then a few days later I want to realize a Programm and start cracking my head what I should use and how it worked. Then I have to Google again and look it up. I have this kind of problem for many things  except the absolute basics.  How did you Crack everything in your head so you don't forget it again?", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn8ghT8CtpHfn", "comment": "i had the exact same solution like you and now i'm happy :)", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn8hzOQqevqUH", "comment": "Thanks bro. You are providing us a very great and simple knowledge about programming. Keep going.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn8qwZx1cKkEt", "comment": "Thanx. Just bought the full course at Udemy - preparing for my interview in a couple of days.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn8vzPsJp9Wfs", "comment": "Udemy course is very helpful thanks", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9-TabTndH3N", "comment": "Really very helpful. Saw a lot of videos on LL but this code made concept very clear and the code was so simple. Thanks.plz complete this whole DS series...", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9-zqynZM4QE", "comment": "Hey yk when's the next video coming on this topic?", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn95q7tbAhOFY", "comment": "CS Dojo thank so much I wish I had someone like you on my side who know how to explain a hard topic in a simplest way", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn96kcEftliMe", "comment": "Pls can I have a computer engineering link", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn99UOCb7MK8l", "comment": "Haven't tried it but I think my solution would go something like this (haven't watched the solution yet):  int countNodes(Node head){         int counter = 0;         Node notEmpty = head;         while (not Empty! = null) {             notEmpty = notEmpty.next;             counter++;             }          return counter; }", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9ChB--atEL_", "comment": "Can u just guide me for a thing..plz\ud83d\udc81", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9H5QEvidc9e", "comment": "How the program know current.next?", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9Hsv2cd-YEj", "comment": "Is next a keyword here", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9Kla76TtMT1", "comment": "yt", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9Loci0beNiV", "comment": "hi where is your more advanced link list video great work!!", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9Q_auEgLApT", "comment": "where are your lectures on JavaScript", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9brUpSI0y-x", "comment": "It\u2019s not that I don\u2019t want but I have, yet , to earn enough to divide past immediate bills .", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxwAi1A2H-Pq-zhcGx4AaABAg.8eyYWcmxUhn9mqTUZgSkZI", "comment": "good job bro", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyOLtUU9dE4zcXoZQN4AaABAg", "comment": "Hi, did you ever create the video with more advanced topics? Am currently preparing for a midterm and I just want to be sure to have everything down very firmly. Thanks!", "votes": "0", "replies": "3", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzVIC9gCWP2R2g5hF94AaABAg", "comment": "def get_length(self):         count = 0         nodes = self.head         while nodes:             count += 1             nodes = nodes.next_node         return print(count)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwQ0Jm8uzc47BQypUZ4AaABAg", "comment": "From where I can find the advance link list concepts", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwqN4eQxrmDGv3ssP54AaABAg", "comment": "Thank you, this explanation helped me a lot!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxnfzq2g6yFG5C8E854AaABAg", "comment": "thankyou\ud83d\ude0a", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwEtSewnD1XO2q3n6Z4AaABAg", "comment": "I only need a hint, but I can make it the code in Kotlin:  class Node(var nodeValue: Int, var next: Node?)  fun main() {     var nodeA = Node(5, null)     nodeA = Node(3, nodeA)     nodeA = Node(2, nodeA)     nodeA = Node(1, nodeA)     nodeA = Node(0, nodeA)      fun countNodes(head: Node?, counter: Int = 0) {         var attemptOne = head         if (attemptOne?.next != null){             attemptOne = attemptOne.next             countNodes(attemptOne, counter + 1)         } else {             println(counter)         }     }      countNodes(nodeA) }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx5_g8i4S3tnifnNUx4AaABAg", "comment": "```ts class Node {     data: number;     next: Node | null;     constructor(data: number) {         this.data = data;          this.next = null;     } }  const head: Node = new Node(4); const nodeA: Node = new Node(5); const nodeB: Node = new Node(6); const nodeC: Node = new Node(8);  head.next = nodeA; nodeA.next = nodeB; nodeB.next = nodeC;  countNodesInLinkedList(head);  function countNodesInLinkedList(head: Node): number {     if (head === null) {         return 0;     }     return 1 + countNodesInLinkedList(head.next); } ```", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx6PyEmYoS4B5TctJt4AaABAg", "comment": "You have a great talent as a teacher. You should consider making that your profession because you rock!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwZhoV4y3BZrie2T2R4AaABAg", "comment": "lynkSAT", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyVemeM01kq0DnWonZ4AaABAg", "comment": "Key Points:\r - A linked list can refer to a class that contains the data and next box (node), you can hop between nodes by writing \"head.next.next.data\" to get the third node's contents for example, however there's no easy way to go back to a previous node - A doubly linked list connects nodes both forwards and backwards", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw3d5AwkUlBQqJXmWV4AaABAg", "comment": "int count;  Node current = head;   while (current.next() != null) { current = current.next();   count++;  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwYL8cume7-Qt0lKGB4AaABAg", "comment": "head = node,.size()  return head", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxd8A7aFesN07o4iSN4AaABAg", "comment": "What a great explanation", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy7qU6S0zzxROIaHH14AaABAg", "comment": "def countNodes(head):     if head.next == NULL:         return 1          # n represents nodes after current node     n = countNodes(head.next)       return n + 1", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgymLubwT4mNqxrZrgl4AaABAg", "comment": "Have you realised, that using `current.next` in the `while()` loop as condition, will always consume the next node? See the footage at 14:46.  I think, the way to do it is questioning if `current` is not `null`, like this:  ``` \tprivate static List createListFromLinkedList(String linkedListName, ListNode current) { \t\tSystem.out.println(\"Linked List \" + linkedListName); \t\tList<String> list = new ArrayList<>(); \t\twhile (current != null) { \t\t\tSystem.out.print(current.val); \t\t\tlist.add(String.valueOf(current.val)); \t\t\tcurrent = current.next; \t\t} \t\tSystem.out.println(\"\\nThere are \" + list.size() + \" elements.\"); \t\treturn list; \t} ```", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzE9WCtJYv-rObNj8x4AaABAg", "comment": "Thankyou so much. That was a crystal clear explanation.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw9h1sfPuD2j55ddIR4AaABAg", "comment": "Very well exaplined! You would make a great teacher/prof.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyIsdO9auGMlrl1czx4AaABAg", "comment": "12:04 my python solution  def countNodes(head, count = 1):      if head != None:           return countNodes(head.next, count + 1)       return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx258h_xc9d17XBac14AaABAg", "comment": "public int countNodes(Node node){\r \t\tint counter=1;\r \t\twhile(node.next!=null){\r \t\t\tnode=node.next;\r \t\t\tcounter++;\r \t\t}\r \t\treturn counter;\r \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxocwlSr94zPKgQOxN4AaABAg", "comment": "I tried so hard.But make it easy", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyOLtUU9dE4zcXoZQN4AaABAg.A1YEnUIJWLxA1YWbClI2ru", "comment": "sadly he didnt, seemed as though he stopped the series early for some reason", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyOLtUU9dE4zcXoZQN4AaABAg.A1YEnUIJWLxA1Zs5WmyUc3", "comment": "\u200b\u00a0@wheresecretslie\u00a0 Didn't see one, but thought I might be missing something. It's surprising that there's not many advanced videos out there, mostly seems like it's just introductions", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyOLtUU9dE4zcXoZQN4AaABAg.A1YEnUIJWLxA1_osFoN2Cj", "comment": "\u00a0@calebfoxschool\u00a0 yeah i see what you\u2019re saying, most videos for things like this just cover the surface of what we\u2019re supposed to know for the DSA\u2019s, but from what ive been doing is if i search for advanced tutorials and don\u2019t find any i just go to chatgpt and self teach, chatgpt is honestly such an amazing tool and it can help with all, it\u2019ll teach you everything", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwyAPr6Al5B1B27YIV4AaABAg", "comment": "This was my solution to count the nodes using java:  static int countNodes(Node head) {         if (head.next != null) {             countNodes(head.next);             count++;         }         return count;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw4oKh-Rkh3xAxM7Hh4AaABAg", "comment": "I actually deeply get it finally, thank you", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxMcdZJ3ARMojtQI_B4AaABAg", "comment": "current = this.head let counter = 0; while(current !== null){ counter +=1 }  return counter", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzYpbLAFNw4bbOwetd4AaABAg", "comment": "My solution   package main  import \"fmt\"  type Node struct {     data int     next *Node }  func countNode(node *Node) int {     count := 0     for node != nil {         count++         node = node.next     }     return count }  func main() {     n1 := &Node{data: 48}     n2 := &Node{data: 68}     n3 := &Node{data: 58}      n1.next = n2     n2.next = n3      fmt.Println(\"Total number of nodes:\", countNode(n1)) }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxANLt5MSGRZcMAlRp4AaABAg", "comment": "def countNode(head):\r     nodeCounter = 0\r     currentNode = Node()\r     currentNode = head\r     while currentNode != null:\r         nodeCounter += 1\r         currentNode = head.next\r     return nodeCounter", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzDZajKRslCXD6u80t4AaABAg", "comment": "my first solution for this was a bit dummy,  as I was checking if node.data was null and note node.next. other than that everything was pretty much the same)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwYcsrQ8hLK5NahzIV4AaABAg", "comment": "My Python solution:  def countNodes(head, c = 1):\r     return countNodes(head.nxt, c + 1) if head.nxt != None else c", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxJ8nr8pZ5fXsCWEdV4AaABAg", "comment": "Python:  class Node:    def __init__(self, data, next = None):       self.data = data       self.next = next  def countNodes(head):    curr = head    count = 0    while curr:       count += 1       curr = curr.next    return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzcraAxE7bcLhP8kdZ4AaABAg", "comment": "package main;\r \r public class tabninetest {\r \r     \r     public tabninetest() {\r       head = new Node(1);\r       nodeB = new Node(2);\r       nodeC = new Node(3);\r       nodeD = new Node(4);\r       nodeE = new Node(5); \r     \t\r      head.next = nodeB;\r \t nodeB.next = nodeC;\r \t nodeC.next = nodeD;\r \t nodeD.next = nodeE;\r \t \r \t \r     }\r     \r \tNode head;\r \tNode nodeB;\r \tNode nodeC;\r     Node nodeD;\r     Node nodeE;\r     \r \tpublic static void main(String[] args) {\r \t\ttabninetest test = new tabninetest();\r \t\tSystem.out.println(tabninetest.countNodes(test.head));\r     }\r \t\r \tclass Node {\r \t\tint data;\r \t\tNode next;\r \t\tNode(int data) {\r \t\t\tthis.data = data;\r \t\t}\r \t}\r \t\r \tstatic int countNodes(Node head) {\r \t\tint count = 0;\r \t\twhile(head!= null) {\r \t\t\tcount++;\r \t\t\thead = head.next;\r \t\t}\r \t\treturn count;\r \t\t\r \t}\r \r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzKAXF9Z_PxQqFPPZJ4AaABAg", "comment": "int countNodes(Node head){     int count = 1;     Node current = head;     while (current.next != null){         count++;         current = current.next;     }     return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwbLFodr4D0YI5p8N94AaABAg", "comment": "There is a leet code question to merge 2 linked lists in order...  Other than  List1.val List2.Val  List.next List1.Val  I don't get how to get all the values and put them in a list...  Normally it's just a for loop... this linked list crap is pissing me off so bad. Conceptually I get it but typing this out in loops never works ...", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgysaW7ckIQNkY2E8_54AaABAg", "comment": "Nice, excellent, brilliant, amazing video. Here's my solution, implemented in Java:  public class Main {\r     public static void main(String[] args) {\r         Node head = new Node(6);\r         Node nodeB = new Node(3);\r         Node nodeC = new Node(4);\r         Node nodeD = new Node(2);\r \r         head.next = nodeB;\r         nodeB.next = nodeC;\r         nodeC.next = nodeD;\r \r         System.out.println(\"The number of nodes are \" + countNodes(head));\r     }\r \r     static int countNodes(Node head){\r         int count = 0;\r         Node auxNode = head;\r         while(auxNode.next != null){\r             count++;\r             auxNode = auxNode.next;\r         }\r         return count;\r     }\r }  The static method receives a Type Node object, saves it into an auxiliar Object, while the next Object referred by the Link List is not null, it keeps adding 1 to the count and jumping into the next Node.  I hope it helps. Cheers!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzTBepBZpHZ-lu8JIZ4AaABAg", "comment": "FOR C++ USERS   #include <bits/stdc++.h>\r using namespace std;\r \r class Node{\r     public:\r     int data;\r     Node* next;\r     Node(int data)\r     {\r         this->data = data;\r         this->next = nullptr;\r     }\r };\r int countNodes(Node* head){\r     int count = 0;\r     Node* current = head;\r     while (current!= nullptr) {\r         count ++;\r         current=current->next;\r     }\r     return count;\r }\r int main(){\r     Node* head = new Node(4);\r     Node* nodeB = new Node(2);\r     Node* nodeC = new Node(3);\r     Node* nodeD = new Node(10);\r     Node* nodeE = new Node(2);\r     head->next = nodeB;\r     nodeB->next = nodeC;\r     nodeC->next = nodeD;\r     nodeD->next = nodeE;\r     cout<<countNodes(head)<<endl;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyvBWUT3s88GQsKeDB4AaABAg", "comment": "def count_nodes(head: Node):\r     nodes_list = [head]\r     while head.next_node != None:\r         nodes_list.append(head.next_node)\r         head = head.next_node\r     print(len(nodes_list))", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw-y8r7-NT1xjpXD_B4AaABAg", "comment": "why build a LinkedList when there is a java.util.LinkedList data type?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyI4_NW_NnI7hl1ohF4AaABAg", "comment": "Heyo, here's my Python 3.11 solution to the count nodes method at 11:47. It uses __future__.annotations to allow the Node class init to type hint itself, and typing.Any to type hint Anything for the data attribute. The program at the bottom generates both a list of nodes, wherein each appended node also becomes the next_node attribute of the most recently appended node. So, you can access the nodes by iterating through the list or by recursively accessing next_node attribute. I felt it was in the spirit of linked-lists to do recursion. I used a list to \"collect\" the nodes on a flat level because, if I hadn't, I don't know how I would add a  node to the next_node element at the end of the list. Like, I'd have to make a function to recursively run through the linked-list from head every time until it found a null next_node and then create the new node there? That sounds super inefficient. I'd much rather have them collected in a flat list like this, but maybe I'm not understanding their use quite yet.  ####################################################\r # Start of program # Python 3.11 code, all base packages ####################################################  from _future_ import annotations\r from typing import Any\r \r class Node:\r     def __init__(self, data : Any, next_node : Node = None ) -> None:\r         self.data = data\r         self.next_node = next_node\r \r     def __str__(self) -> str:\r         return f\"node:: data: {self.data}, next_node: ||{self.next_node}\"\r \r def count_nodes(head : Node) -> int:\r     count = 1\r     iter_node = head\r \r     while iter_node.next_node._class_ == Node:\r         count += 1\r         iter_node = iter_node.next_node\r \r     return count\r \r if _name_ == \"__main__\":\r \r     import random\r \r     head_node : Node = Node(data=\"CS Dojo is the first beer\")\r \r     nodes_list : list[Node] = [head_node]\r \r     for i in nodes_list:\r         print(i)\r \r     for i in range(random.randint(1,6)):\r         new_node = Node(data=f\"{i+2} bottles of beer on the wall\") # +2 because this is the second node in the linked-list\r         nodes_list[-1].next_node = new_node\r         nodes_list.append(new_node)\r \r     print(f\"There are {count_nodes(head_node)} many nodes this time\\n\")\r \r     for n in nodes_list:\r         print(n,\"\\n\")  #################################################### # End of program ####################################################  Here's an example of the output from running this:  There are 4 many nodes this time\r \r node:: data: CS Dojo is the first beer next_node: ||node:: data: 2 bottles of beer on the wall, next_node: ||node:: data: 3 bottles of beer on the wall, next_node: ||node:: data: 4 bottles of beer on the wall, next_node: ||None\r \r node:: data: 2 bottles of beer on the wall, next_node: ||node:: data: 3 bottles of beer on the wall, next_node: ||node:: data: 4 bottles of beer on the wall, next_node: ||None\r \r node:: data: 3 bottles of beer on the wall, next_node: ||node:: data: 4 bottles of beer on the wall, next_node: ||None\r \r node:: data: 4 bottles of beer on the wall, next_node: ||None  ########### EDIT: After seeing your solution I changed a line of my code. It used to check while iter_node.next_node is not None:, but it occurred to me that the next_node attribute - being dangerous Python - could be an int or whatever. So I updated it to check that the next_node attribute was of Node class. This protects against an exception being raised trying to access the next_node attribute of that object if someone foolishly loaded \"next haha\" into a node's next_node attribute.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyGJfeqJrWpyAtlNyF4AaABAg", "comment": "```py class listNode: \tdef __init__(self,val): \t\tself.val = val \t\tself.next = None node = listNode node1 = node(1) node2 = node(2) node3 = node(3) node1.next = node2 node2.next = node3  def countHeads(nod): \tif nod is None: \t\treturn 0 \telse: \t\treturn 1 + countHeads(nod.next) print(countHeads(node1)) ``` not gonna lie i feel like a genius", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwh9Syj5m5OZQ_PIs14AaABAg", "comment": "just to be clear. i don't wanna be a software engineer at google. and fk u algo expert", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy7W33SNiGpVNWxIgF4AaABAg", "comment": "int countNodes() {     int length = 1;     Node nextNode = this.next;     while (nextNode != null) {       length++;       nextNode = nextNode.next;     }     return length;   } //I removed the parameter so you can just call this method from the head node, like this: head.countNodes()", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzZFkN9vY7sYRrjyL54AaABAg", "comment": ".:-_-:. Hello, I think a possible solution could be using recursion to count how many Nodes there are, what do you think?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyvBWUT3s88GQsKeDB4AaABAg.9udxZWinHWB9udyxsmWDC5", "comment": "Update: The counter version is more efficient, pardon my algorithm I'm still learning!  def count_nodes(head: Node):\r     count = 0\r     current = head\r     while current is not None:\r         count += 1\r         current = current.next_node\r     print(count)", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgymeMqZhVB9tpsxr3p4AaABAg", "comment": "Wow, your explanation was so clear especially when u explain how is the flow of the code. Subscribed!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwPxbwW094wk8s7yfR4AaABAg", "comment": "Thank you so much.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyrtot0LWMsN225N9l4AaABAg", "comment": "\ud83d\ude0d\ud83d\ude0d\ud83d\ude0d\ud83d\ude0d\ud83d\ude0d", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxu6K3mSupNmMKjLsl4AaABAg", "comment": "c# code for counting nodes in a linked list:  public class Node //class node and its 2 properties {     public int data;     public Node next; }  public class LinkedList {     private Node head;  public void countNodes() {     Node current = head; // node current points at head     int count = 0;      while (current != null)     {         count++;         current = current.next;     }      Console.WriteLine(\"There are \" + count + \" nodes in the linked list.\"); }  public class Program {     static void Main(string[] args)     {         LinkedList LL = new LinkedList();                 LL.countNodes();     } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxiffF4pDpLLyJIyoN4AaABAg", "comment": "i dont know java, im beginner", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxi_gVhz-pQFSEIF6t4AaABAg", "comment": "public static int countNodes(Node head) {\r \t\tint count=1; \r \t\t\r \t\twhile(head.next!=null) {\r \t\t\tcount++;\r \t\t\thead= head.next;\r \t\t}\r \t\t\r \t\treturn count;\r \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxaATtto3RNFSB-tl94AaABAg", "comment": "Thanks a lot for this video", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwwPUCcWjWP0zFtkNd4AaABAg", "comment": "int count = 0; int countNodes(Node head) {\r         if (head != null) {\r             count++;\r             countNodes(head.next);\r         }\r         return count; }  didn't try it out yet so I don't know if it will work but that's my solution", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwil_eiFESJCT0uDr14AaABAg", "comment": "Node current = head; int count = 0; int countNodes(head){ while (current!= null){ current= current.next; count++; } return count; }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy4PyB-RnmzhpCu8N14AaABAg", "comment": "god bless you, your family, your life, your friends, your country and your job. thank you thank you and thank you so much", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwezDG9MwMJVsq8vbl4AaABAg", "comment": "Thanks buddy . It is perfect explanation \u270c\ufe0f", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxGw_Nh4Dsr1F7jvWF4AaABAg", "comment": "int counter = 1;\r \r         while(head.next != null){\r             counter += 1;\r             head.next = head.next.next;\r         }\r \r         System.out.print(counter);", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwG5Nc_aBT2wHpV63R4AaABAg", "comment": "class SLinkedList:\r     def __init__(self) -> None:\r         self.headval = None\r \r     def __len__(self) -> int:\r         \"\"\"Return number of nodes in the linked list\"\"\"\r         current_node = self.headval\r         count = 0\r         while current_node is not None:\r             current_node = current_node.nextval\r             count += 1\r         return count\r     \r node1 = Node(\"Mon\")\r node2 = Node(\"Tue\")\r node3 = Node(\"Wed\")\r \r list1 = SLinkedList()\r \r list1.headval = node1\r node1.nextval = node2\r node2.nextval = node3\r \r print(len(list1))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwtzXBN6uO2HMO29R54AaABAg", "comment": "Helping people 5 years later. Thank you!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzIEYRUEjKrqq-iXIR4AaABAg", "comment": "best video i ever see about linked list, my teacher explained TWO weeks and THIS MAN EXPLAINS IT IN 18 MINUTES, AND IM STUDYING C++!!!", "votes": "5", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzpXlUc9dof-mC3kjt4AaABAg", "comment": "My solution in java: static int countNodes(Node head) {\r         Node actual = head.next;\r         int count = 1;\r         while (actual != null) {\r             actual = actual.next;\r             count++;\r         }\r         return count;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw2k0Au8twGM8svrth4AaABAg", "comment": "good", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy-hsV4U31k5WKgyjh4AaABAg", "comment": "How does .next and .prev work", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxOk4KQacXszcZNvKR4AaABAg", "comment": "python  def countnode(startpointer):\r     x = startpointer\r     count = 1\r     while x.nextNode is not None:\r         count = count + 1\r         x = x.nextNode\r \r     return count\r \r \r countnode(head)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx--QUWFPagxNvalRd4AaABAg", "comment": "#4-2-3-10  class Node: \tdef __init__(self, data): \t\tself.data = data \t\tself.next = Node \t\t headA = Node(4) nodeB = Node(2) nodeC = Node(3) nodeD = Node(10)  headA.next = nodeB nodeB.next = nodeC nodeC.next = nodeD  def countNodes(head): \tcurr = head \tpointer = 1 \tfor i in range(3): \t\tif curr.next != None: \t\t\tcurr = curr.next \t\t\tpointer += 1 \tprint(curr.data, pointer) \t countNodes(headA)  This is the way I solved mine in python, I'm pretty sure there are other better ways\u2764", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx--QUWFPagxNvalRd4AaABAg.9oVcKFdSmuZ9oVdHNzMcg8", "comment": "I had to do it in a for loop with 3 iterations cause it gave me an error saying head doesnt have an attribute next", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugzc7vDpUgStnRJyRNh4AaABAg", "comment": "Thank you so much, 8th grader here learning, you just taught me the basics of linked lists", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwXEGVYa3hr7luJxrN4AaABAg", "comment": "class Node(): \tdef __init__(self, data=None): \t\tself.data = data \t\tself.next = None  class LinkedList(): \tdef __init__(self): \t\tself.head = None  \tdef append(self, data): #add something to the next node in the list \t\tnew_node = Node(data) \t\tif not self.head: \t\t\tself.head = new_node \t\t\treturn \t\tcurrent_node = self.head  \t\twhile current_node.next: \t\t\tcurrent_node = current_node.next \t\tcurrent_node.next = new_node  \tdef prepend(self, data): #add something to the beginning of the list \t\tnew_node = Node(data) \t\tnew_node.next = self.head \t\tself.head = new_node  \tdef print_list(self): #prints the stupid list \t\tcurrent_node = self.head \t\twhile current_node: \t\t\tprint(current_node.data) \t\t\tcurrent_node = current_node.next  my_list = LinkedList() my_list.append(1) my_list.append(2) my_list.append(3) my_list.prepend(0) my_list.print_list()", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyli0QXOxCRC6zET-h4AaABAg", "comment": "My solution to the countNodes problem:  class Node():\r     def __init__(self, data):\r         self.data = data\r         self.next = None\r n1 = Node(5)\r n2 = Node(6)\r n3 = Node(7)\r n4 = Node(8)\r \r n1.next = n2\r n2.next = n3\r n3.next = n4\r \r def countNodes(head):\r     i = 0\r     while(head != None):\r         i = i+1\r         head = head.next\r     print(i)\r countNodes(n1)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz0xoagZF7lTycOwGd4AaABAg", "comment": "why linked list needs to live on the heap?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw9ErfVJHlaxI2ESjd4AaABAg", "comment": "My solution using Python  def countNodes(head):\r     cnt = 1\r     while head.next is not None:\r         cnt += 1\r         head = head.next\r     return print(cnt)\r countNodes(head)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxuSdXKNhMoubP2Lol4AaABAg", "comment": "class Node{    constructor(data){     this.data = data;     this.next   } }   let head1 = new Node(1) let head2 = new Node(2) let head3 = new Node(3) let head4 = new Node(4) let head5 = new Node(5)  head1.next = head2 head2.next = head3 head3.next = head4 head4.next = head5  let counts = 1;  function nodesCount(headNode){         if(headNode.next != null){         counts++          return nodesCount(headNode.next)    }else{     return counts    }  }   console.log(head2.next) console.log(nodesCount(head1))    in my solution i thought about a recursive function", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzz-YSIOIt9yU_5O454AaABAg", "comment": "Are you Welsch??????????????????n LOLLLL    :face-blue-smiling:", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxD9AFMpd7F-H_nvgN4AaABAg", "comment": "This was my solution, input was 3 values and it returns 3. IN JAVA.  class Node{     int value;     Node next;          Node(int value){         this.value = value;     }  }  class LinkedList{     LinkedList(){      }      static int countList(Node head){         int numLoops = 0;         while(head.next != null){             numLoops++;             head = head.next;                      }                     return numLoops + 1;     } }    class Main{ public static void main(String[] args) {     Node head = new Node(1);     head.next = new Node(2);     head.next.next = new Node(3);     System.out.println(LinkedList.countList(head)); } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyEKpHHNG6FiA0gBql4AaABAg", "comment": "# method i used for the count node problem  def countNode(head):      count = 1     current_node = head          while(True):         if current_node.next_node:             count += 1             current_node = current_node.next_node          else:             break      return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzE5_ixL7SxyJ2wJ6R4AaABAg", "comment": "i have problem ide meet error when .next use object node in this video !", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy7BlkyzuE5YTZ81dx4AaABAg", "comment": "Your presentation is so clear and concise. You earned a sub. Why aren't my professors like this? lol.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy9Zaw6Y3JDSGBO66V4AaABAg", "comment": "I'm confused about something. Isn't Node next supposed to be a pointer?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwbFvIoiJuUK7sts8h4AaABAg", "comment": "great explanation, thank you", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx31Vv0U-hiI0C9uSl4AaABAg", "comment": "public static int countNodes(Node head) {      return head == null ? 0 : 1 + countNodes(head.next); }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyOO1aVqXMH6LAvPod4AaABAg", "comment": "You explained better than my professors", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz7t24UlzIdHLVXBE94AaABAg", "comment": "Would it be possible to run through the Linked list with node.length?  If so, you could also use a for loop right?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwY1Vfksh_RNLTCyMJ4AaABAg", "comment": "Python code (not sure if it works): def Node_Counter(head):     counter = 1     while(true):         if head.next != None:             counter+=1             head = head.next         else:             return counter", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwOpF-Gd8Mipw80wC54AaABAg", "comment": "//c++ or java; int countNodes(Node head){ node=head; if(head!=null) int i=1; while((node.next)!=null){ node=node.next; ++i; } return i; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxQPXd-pMFndPgpji14AaABAg", "comment": "How many ads do you have in this video?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzwBHwubiLmuuHvP-d4AaABAg", "comment": "This was my code for the question, pretty self-explanatory if you trace it:   static int count(Node head){ \t\t \t\tint counter=1; \t\t \t\t \t\twhile(head.next!=null) { \t\t\t //starting every loop the \"head\" within the while parameter will be replaced with \"head.next\", therefore the second iteration would be //head.next.next => head.next.next.next => head.next.next.next.... Stacking and adding more next attributes that until the next iteration value // finally results in a \"null.\" \t\t\thead=head.next;  \t\t\tcounter++; \t\t\t \t\t\t \t\t} \t\t \t\treturn counter; \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz5hh8zCbL-h78CPlJ4AaABAg", "comment": "func (ll *LinkedList)CountNodes()int{\t \tvar count=0\t \tvar x=ll.Head \tfor{\t\t \t\tif x==nil{ \t\t\tbreak \t\t} \t\tcount++\t\t \t \tx=x.nextNode \t}\t \treturn count }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwkbxd7q8uEy566uq54AaABAg", "comment": "My solution is nowhere near optimized (most likely super elementary), but I'm proud it works -  static int countNodes(Node head){     //assuming head != null     int count = 1;     Node temp = head.next;     while(temp != null){         count++;         temp = temp.next;     }     return count; }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxRn5yLdSGxq_3zgTB4AaABAg", "comment": "public static int Counter(node n) {\r         int counter = 0;\r         node head = n;\r         while (head != null) {\r             head = head.next;\r             counter++;\r \r         }\r         return counter;\r \r     }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyzunHTIdP_K1FR0C54AaABAg", "comment": "*Think of arrays as one box with many partitions, whereas a linked list is many boxes tethered together. *Head = first node, *Linked lists can be represented in one direction (singly LL) or both (doubly LL)  Great video, thanks for the clear explanation!", "votes": "6", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwg4UenVJ6KCC-KuSt4AaABAg", "comment": "static int countNode(Node head) {\r \t\tint c = 1; // head is node 1\r \t\tNode nextNode = null;\r \t\twhile(head.next != null)\r \t\t{\r \t\t\tnextNode = head.next ; // i know pffff\r \t\t\thead = nextNode ;\r \t\t\tc = c + 1;\r \t\t}\r \t\treturn c;\r \t}", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw0jpEBmXStUnya3T54AaABAg", "comment": "How does it realy jump .next is just a name not a function can you explain it?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyoYy_kH90UyzLPrAB4AaABAg", "comment": "This is really great, I was looking for a video but did not understand until now", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw5WR5SMyoQ2drQY-p4AaABAg", "comment": "Python:   def read_values():     counter = 1     next_node = head.next     print(head.data)     while next_node:         counter += 1         print(next_node.data)         next_node = next_node.next     return counter  head = node(4) nodeB = node(2) nodeC = node(3) nodeD = node(10) nodeE = node(5)  head.next = nodeB nodeB.next = nodeC nodeC.next = nodeD nodeD.next = nodeE   counter = read_values() print(f'read from {counter} nodes')", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwbHnMmgyPBedwm6Hl4AaABAg", "comment": "thank you very mush ! You teaches very better", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzful8Uf_TAFFLBWZ14AaABAg", "comment": "I'm new to formalized programming but have been programming for over 4 years (Java, C#, C++). I haven't checked other comments yet but here is my solution to that problem  static int countNodes(Node head) {         int nodes = 1;         while(head.next != null)         {                 nodes++;                 head = head.next;         }          return nodes; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx_ZHEp2ijfR6FbxY14AaABAg", "comment": "My solution is in Java:  public int countNodes(Node head){ Int count=0; //counter variable  While(head!=null){ count++; head=head.next;} //assigns next node reference to head return count;", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzHukY95I-gykkEYKN4AaABAg", "comment": "Legends Coming into comments section for solution and not finding one . LOL !", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwSuap0lVAp1Jy3iX14AaABAg", "comment": "Honestly this was a great gateway to linked lists", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwwWV3j7iU-FSOqrx54AaABAg", "comment": "Thankyou for your amazing content  heres my code in c++                    #include <iostream>\r \r class Box\r {\r public:\r \tBox(int data) {\r \t\tData = data;\r \t};\r \tint Data;\r \tBox* next = nullptr;\r \r \tint countNodes(Box head) {\r \t\tint count = 1;\r \t\tBox current = head;\r \t\twhile (current.next != NULL) {\r \t\t\tcurrent = *current.next;\r \t\t\tcount++;\r \t\t}\r \t\tstd::cout << count;\r \t\treturn count;\r \t};\r };\r \r \r \r int main() {\r \tBox nodeA = Box(6);\r \tBox nodeB = Box(4);\r \tBox nodeC = Box(3);\r \tBox nodeD = Box(2);\r \tBox nodeE = Box(1);\r \tnodeA.next = &nodeB;\r \tnodeB.next = &nodeC;\r \tnodeC.next = &nodeD;\r \tnodeD.next = &nodeE;\r \r \tnodeA.countNodes(nodeA);\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy7nJUvII3ceMCwOJF4AaABAg", "comment": "Interestingly to use the Node Class, you have to new it up, which means link-lists in this case is an Instance with a reference to another instance? The class can't be static as static would make it a singleton.  So Node class is an object", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyoaxt7MKLFVPXFiet4AaABAg", "comment": "the best DSA course out there", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy4bgr9wwNIEPsShrl4AaABAg", "comment": "THANK YOU!!!!!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy6YG8vCNpQUXXG8MZ4AaABAg", "comment": "why assume the head is not null, meanwhile we can check it easily by starting counter from zero and checking the head first? like this:  public static int numberofnodes(Node head) {\r \t\tint numberofnodes=0;\r \t\tNode currentnode= head;\r \t\t\r \t\twhile(currentnode!=null) {\r \t\t\tnumberofnodes+=1;\r \t\t\tcurrentnode=currentnode.next;\r \t\t\t\r \t\t}\r \t\t\r \t\treturn numberofnodes;\r \t\t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxPQgPEcoHzUlBymaR4AaABAg", "comment": "I'm goin to be a millionaire cause of you my Guy...!!No words can express what this video series has done in my life..!!!:washhands:", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxd7Up-pH5Ba6Z0M4R4AaABAg", "comment": "Thank you so much. your explanation was very clear and excellent. this was the first video that I learned about a linked list. your video helped me to understand linked Lists very well. Keep up the good work.", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyzunHTIdP_K1FR0C54AaABAg.9jUa664h7Zx9khrTRAjg24", "comment": "only think i consider is your blasphemous image. try to be educated and ethical as a computer science student. Christ the king image has changed and it's so blasphemous.....", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyzunHTIdP_K1FR0C54AaABAg.9jUa664h7Zx9kioURwEwcw", "comment": "\u00a0@finncollins5696\u00a0 Dude, I'm a born-again Baptist Christian. I'm not mocking Jesus, it's just a meme.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgztAPgv9SsQMAFj18B4AaABAg", "comment": "Just wanted to say I love you for using dark mode, not many do that, and I love how u like use the black parts so it's not too much information and everything is in 1 dia unlike school", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwNx-euCV7JHU3IkPx4AaABAg", "comment": "My code for c++:  int sizeof_list(){\r     Node* ptr = head;\r     int count = 0;\r     while( ptr != NULL ){\r         ptr = ptr->next;\r         count++;\r     }\r     \r     return count;\r }  This code has no parameters since its assumed that this function is specific to object and has access to private members of class.", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyZFypGn3u604eFVTh4AaABAg", "comment": "C Implementation ``` int size(Node head) {   int size = 1;   for (Node n = head; n.next != NULL; n = *n.next) {     size += 1;   }   return size; }  ```", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyitL8OO7aTcyp5_-h4AaABAg", "comment": "class Node {\r     int data;\r     Node next;\r \r     public Node(int data){\r         this.data = data;\r     }\r \r }  public class Main {\r     public static void main(String[] args) {\r         Node head = new Node(3);\r         Node nodeA = new Node(6);\r         Node nodeB = new Node(8);\r         Node nodeC = new Node(99);\r \r         head.next = nodeA;\r         nodeA.next = nodeB;\r         nodeB.next = nodeC;\r         nodeC.next =null;\r \r         System.out.println(countNodes(head));\r \r     }\r \r     public static int countNodes(Node node){\r         if(node.next == null){\r             return 1;\r         } else {\r             return 1 + countNodes(node.next);\r         }\r     }\r \r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzi9wJ8jPRiU1jxYdF4AaABAg", "comment": "I love you bro. Best explanation EVER!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzPToMyRCVGbJV7mId4AaABAg", "comment": "so basically block chain     (I don't know how block chains work don't @ me)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwfPn_L6adjvknia_54AaABAg", "comment": "Python def count_node(head:Node):     current_node = head     count = 1     while current_node.next:         count += 1         current_node = current_node.next     return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxzjymL2_7aEUs_kTl4AaABAg", "comment": "subscribed because he said hi", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyxZisPRMfHvltAB4F4AaABAg", "comment": "So the Nodes kind of look like dominoes?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw5LZmiFyN2Lhw6awN4AaABAg", "comment": "Here's a possible solution using recursion with Java:  static int countNodes(Node node) {      if (node.next == null) return 1;      return 1 + countNodes(node.next); }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwfoVoAQPNfUzDD3E14AaABAg", "comment": "//I have Implemented the current code using the java script. //var data; //var link; //var head=0; var count=0;  class Node {          constructor(data){         this.data=data;         this.link=null;         this.head=null;     }      }   function addNode(addData){      var node = new Node(addData);     var current;     if(this.head==null){     this.head=node;    //console.log(this.head)     }     else {         current=this.head;         console.log(current);         while(current.link){             current=current.link;                      }         current.link=node;          console.log(current.link);     }          count++;     //console.log(count);     }  addNode(21); addNode(22); addNode(24);", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzf-rn8pGnW92uB6ex4AaABAg", "comment": "public class Main { \tpublic static void main(String[] args) { \t\tNode head = new Node(1); \t\t \t\tNode secondNode = new Node(2); \t\thead.next = secondNode; \t\t \t\tNode thirdNode = new Node(3); \t\tsecondNode.next = thirdNode; \t\t \t\tSystem.out.println(countNodes(head)); \t} \t \tstatic int countNodes(Node node) { \t    int counter = 1; \t    while(node.next != null) { \t        counter++; \t        node = node.next; \t    } \t    return counter; \t} }  class Node {     int data;     Node next;     Node(int data) {         this.data = data;     } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwHAeQdxf6o2YHO5A94AaABAg", "comment": "int countNode(Node head){     int count=1;     Node myNewNode = head;     while(myNewNode.next != null){         count++;         myNewNode = myNewNode.next;     }     return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxeLPUI1VBHdvaOEDV4AaABAg", "comment": "thanks for the clear instruction! helps a ton", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxeBduVRRKQzVYgf154AaABAg", "comment": "very beautiful relaxing and pacient explanation.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzCbwf2wQvuDhplFld4AaABAg", "comment": "Really man ur explaination was much better than all the site lecture I have gone through", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzdqcw6WiMPKq_2t8d4AaABAg", "comment": "def CountNodes(head, count = 1):      if (head.next!= None);             return CountNodes = + 1;      else:              return 1;", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyC4MGNy2XtVxoK3SB4AaABAg", "comment": "def CountNode(head):       int count_node =0       if head  != null{          count_node +=1         head = node.next     } return  count_node", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyXuZa4hlhZrGjGXQp4AaABAg", "comment": "What a GOAT ILY", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwWTyu-43NXis5moMB4AaABAg", "comment": "thank you", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwH5DDyd_GVm_esYPp4AaABAg", "comment": "you are da best ! love you - from Vietnam", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwbRpuOk01f7q_H4E14AaABAg", "comment": "Hi i just have one question, why would i ever use linked list?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz6v_SzogkxXroFCrV4AaABAg", "comment": "this.head", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxQMbtbXvU5i7Vhqf94AaABAg", "comment": "Hello All  I make countNode method as follow .. please correct me if its correct or not. \r \r public class LinkedList {\r \tint data;\r \tLinkedList next;\r \t\r \tpublic LinkedList(int data) {\r \t\tthis.data = data;\r \t}\r \t\r \tpublic int totalNodes(LinkedList head){\r \t\tif(head == null)\r \t\t\treturn 0;\r \t\tint count = 1;\r \t\twhile(head.next != null) {\r \t\t\tcount++;\r \t\t\thead.next = head.next.next;\r \t\t}\r \t\treturn count;\r \t}\r \r \tpublic static void main(String[] args) {\r \t\tLinkedList head = new LinkedList(10);\r \t\tLinkedList nodeA = new LinkedList(2);\r \t\tLinkedList nodeB = new LinkedList(3);\r \t\tLinkedList nodeC = new LinkedList(4);\r \t\tLinkedList nodeD = new LinkedList(5);\r \t\tLinkedList nodeE = new LinkedList(25);\r \t\t\r \t\thead.next = nodeA;\r \t\tnodeA.next = nodeB;\r \t\tnodeB.next = nodeC;\r \t\tnodeC.next = nodeD;\r \t\tnodeD.next = nodeE;\r \t\t\r //\t\tSystem.out.println(head.data);\r \t\tSystem.out.println(\"Total Nodes: \" + head.totalNodes(head));\r \t}\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy5Th0BWoRqgdu9__F4AaABAg", "comment": "Thank you very much for these videos good sir", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw8zBYISbDGXqs_cPR4AaABAg", "comment": "linked goes in One Direction but not in Back Street boys", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzjhDRhLKh6oP471xZ4AaABAg", "comment": "int ct = 1;  while(head.next != null) {     head = head.next;      ct ++; }  return ct;", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwgKZlES15SoA6-maZ4AaABAg", "comment": "Difficult topic is always for later", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugznds0xjnZ0d8GCm694AaABAg", "comment": "17:00", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxrL77-ajiT4qgaGqZ4AaABAg", "comment": "Thanks a ton for putting this vid up!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwbSfBHfoT82PtE1Q54AaABAg", "comment": "6:49", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzKnzMRmRA9dCYT7YN4AaABAg", "comment": "thank you, very helpful", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxgJMUIu5bPHyQBoU14AaABAg", "comment": "Thank you po", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwOuKu4FHuULxODDF14AaABAg", "comment": "My solution java:  int countNodes(Node head) {\r \tint counter = 1;\r \tboolean nextNodes = true;\r \tNode nextHead = head;\r \twhile (nextNodes) {\r \t\tif (nextHead.next != null) {\r \t\t\t// next nodes inside\r \t\t\tcounter++;\r \t\t\tnextHead = head.next;\r \t\t} else {\r \t\t\tnextNodes = false;\r \t\t}\t \t\r \r \t}\t\r \treturn counter;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwkdpwQFBgE17BnY2R4AaABAg", "comment": "Free vs Paid Education \ud83d\ude1c", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxcwR1pH65ulnp28cZ4AaABAg", "comment": "Your name is CS Dojo which makes me mistakenly think that you use C# :)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwljtGK5f_sa60XhVp4AaABAg", "comment": "assume that tail is the last box. tail = last box from the linkedlist  Solution:  int CountNodes = 1; //since we initially start at head and head also considered as nodes  while(nodes!=tail+1){    if(nodes != null){            countNodes++;    }    return countNodes; }", "votes": "1", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxKlmdDOR0coMbS7oV4AaABAg", "comment": "have you created a more advanced video yet? if so then whats the link? if not then when do you think you will?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyOQjgsBIcKyT5Auch4AaABAg", "comment": "you are a good teacher", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxpeCnEN-smzZsKIKx4AaABAg", "comment": "watched your video twice. This time finally get the \"head\" idea. Thank you !!! You simplify everything yet does not lose the key point!!!! Great Work!!!!", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwljtGK5f_sa60XhVp4AaABAg.9cDhMHKvcG09cDi_qWsp1-", "comment": "btw guys im only a beginner in programming so pls don't judge my code but if there are some corrections or you've suggestion feel free to comment it thanks. :P", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwBjeLN85sBOl_luj14AaABAg", "comment": "class Node{          int data;     Node next;          public Node(int data){         this.data = data;     }      }    class HelloWorld {          public static int countNodes(Node head){                  Node current = head;         int count = 0;                  while(current != null){             count++;             current = current.next;         }     return count; }          public static void main(String[] args) {                      Node head = new Node(10);         Node nodeB = new Node(15);         Node nodeC = new Node(56);         Node nodeD = new Node(99);                  head.next = nodeB;         nodeB.next = nodeC;         nodeC.next = nodeD;         nodeD.next = null;         System.out.print(countNodes(head));              } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzV0gr_gUETT6HyHdt4AaABAg", "comment": "int countNodes(Node head){\r         int count =1;\r         while (head.next != null) {\r             count++;\r             head = head.next;\r         }\r \r         return count;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxsgYIRTQm8Lbjg4UF4AaABAg", "comment": "count=1\r  def head_next(Node):\r      global count\r     if Node.next != None:\r         count+=1\r         return head_next(Node.next)\r     else:\r         return count   Recursive python solution", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx0TzQeekt6rfZnrjl4AaABAg", "comment": "12:08 js `const countNodes = ({next}) => next ? 1 + countNodes(next) : 1`", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw5kFThi3r4ic02i294AaABAg", "comment": "This is the best video on data structure. Thanks a lot for beautiful explanation.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz2szvoXGdXizC6iFh4AaABAg", "comment": "Here is a JavaScript implementation of LinkedList. Taking some inspiration from C# LinkedList class, I also added addLast and addFirst methods to add nodes at the start and end of the list.  class Node {\r \tnext = null;\r \tdata = null;\r \tconstructor(data) {\r \t  this.data = data;\r \t}\r }\r \r class LinkedList {\r \thead = null;\r \r \tget Count() {\r \t\treturn this.count();\r \t}\r \r \taddFirst(data) {\r \t  if(this.head == null) {\r \t\tthis.head = new Node(data);\r \t  }\r \t  else {\r \t\t  let newNode = new Node(data);\r \t\t  newNode.next = this.head;\r \t\t  this.head = newNode;\r \t  }\r \t}\r \r \taddLast(data) {\r \t\tif(this.head == null) {\r \t\t\tthis.head = new Node(data);\r \t\t}\r \t\telse {\r \t\t\tlet newNode = new Node(data);\r \t\t\tlet currentNode = this.head;\r \t\t\twhile(currentNode.next != null) {\r \t\t\t\tcurrentNode = currentNode.next;\r \t\t\t}\r \t\t\tcurrentNode.next = newNode;\r \t\t}\r \t}\r \r \tcount() {\r \t\tif(this.head == null) {\r \t\t\treturn 0;\r \t\t}\r \t\telse {\r \t\t\tlet count = 1;\r \t\t\tlet currentNode = this.head;\r \t\t\twhile(currentNode.next != null) {\r \t\t\t\tcurrentNode = currentNode.next;\r \t\t\t\tcount++;\r \t\t\t}\r \t\t\treturn count;\r \t\t}\r \t}\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwevP8wEBgoWqAm-b94AaABAg", "comment": "why is there a this.data in the code?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyOVVoGeYNys2mgbTF4AaABAg", "comment": "thank youuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzXaA1UaaZX4n7c6RF4AaABAg", "comment": "Tried the task at 12:04 in Python -  def countNodes(head):         count = 0         while head is not None:                 count += 1                 head = head.next        return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzdRciKFZzbyxBuSvZ4AaABAg", "comment": "JS Solution:  class Node {     data;     next;      constructor(data) {         this.data = data     } }  function main() {     let head = new Node(6);     let nodeA = new Node(7);     let nodeB = new Node(80);     let nodeC = new Node(23);     let nodeE = new Node(45);      head.next = nodeA;     nodeA.next = nodeB;     nodeB.next = nodeC;     nodeC.next = nodeE;     console.log(countNodes(head)); }  function countNodes(headNode) {     let count = 1;      while (headNode.next != null) {         count++;         headNode = headNode.next;     }     return count; }  main();", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw8_IBt3LxNl_WrEn14AaABAg", "comment": "int countNodes(Node head){         int count;           If(head == null){                return 0;          }            while(head.next != null){            head = head.next;            int count++; //redefines head          }        return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw-DtsqE9jfqGVjFNt4AaABAg", "comment": "Love his teaching but I don't knw java", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx9ftt9pyi9wZSe3WJ4AaABAg", "comment": "Most simplest video to lear from. Thanks so much!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyLurCMjYC5q93IV-N4AaABAg", "comment": "Thank you man, you are a life saver!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxqpt2rSTKltoqso7p4AaABAg", "comment": "My solution in Java -   int numOfNodes(ListNode head){         int count = 0;         while(head != null){             count++;             head = head.next;         }         return count;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwHvG2cJ488sunOcQR4AaABAg", "comment": "Why do we want to make it static in 11:29", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyM6KECzfow-6deErJ4AaABAg", "comment": "THANK YOU BRO! I LOVE LEARNING FROM PEOPLE WHO ARE SMARTER THAN ME!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxoCPl2_g3ycND07wV4AaABAg", "comment": "def countNode(head):     curNode = head     count = 1      while curNode.next:         curNode = curNode.next         count += 1            return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyCtbJs2D48n7XrNs94AaABAg", "comment": "Thanks.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwPm5_FX-PavaLJq8B4AaABAg", "comment": "Java Solution... public class Node {     int data;     Node next;     Node(int data){         this.data = data;     }      @Override     public String toString() {         return \"Node{\" +                 \"data=\" + data +                 \", next=\" + next +                 '}';     }     static int countNodes(Node head) {         int count = 1;         while (head.next != null){             count++;             head = head.next;         }         return count;     }     static int countData(Node head) {         int count = 0;         while (head.next != null) {             count = count + head.data;             head = head.next;         }         return count;     }     public static void main(String[] args) {         Node head = new Node(10000);         Node nodeA = new Node(6000);         Node nodeB = new Node(3358);         Node nodeC = new Node(24);         System.out.println(head);          head.next = nodeA;         nodeA.next = nodeB;         nodeB.next = nodeC;         System.out.println(head);         System.out.println(countNodes(head));         System.out.println(countData(head));     } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx0TzQeekt6rfZnrjl4AaABAg.9b0OJl1bMCh9b0Qfj6-PZ1", "comment": "const countNodes = ({next}, count = 1) => next ? countNodes(next, count + 1) : count", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugw6imyIwio24PnqECt4AaABAg", "comment": "my solution as a beginner in python:  def countNodes(head):     node_counter = 1     while head.next != None:         node_counter += 1         head = head.next     return node_counter", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwYWb__4SAgkyU7ZVh4AaABAg", "comment": "static int countNodes(Node head) {\r         Node node = head;\r         int counter = 1;\r         while (node.next != null) {\r             counter++;\r             node = node.next;\r         }\r         return counter;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzjs0SE0rrtHGErCAp4AaABAg", "comment": "def countNodes(head):\r     currentNode = head\r     count = 1\r \r     while(currentNode.next != None):\r         count += 1\r         currentNode = currentNode.next\r     print(count)\r \r countNodes(head)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyc09NvOh4GI1iTDQV4AaABAg", "comment": "my solution in typescript  function countNodes(node, counter = 0) {     let counter = 0;    if(node.next=== null) {        return counter;    }        return countNodes(node.next, counter++); }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyYRPqzE7HRWCpSaaF4AaABAg", "comment": "The first node you ever make never points to anything as new nodes get added before it to the front. The diagram is very misleading. The first node A is actually at the end not the beginning..", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzpefhJa--O6tavo0R4AaABAg", "comment": "why is my while loop getting an error", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxd33boHcRf9aWp4bt4AaABAg", "comment": "Please in c++, why would I use a linked list when there is vector? Vectors are dynamic and can change size at runtime. The videos leading to this pit arrays against linked list to establish pros and cons. But what of linked list against vectors?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwAmCeOzzslH8EcKSt4AaABAg", "comment": "You simplified things for me and I was able to follow along knowing mostly JavaScript.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwOMr78dxL3lTpE6414AaABAg", "comment": "let node = head while(node){     console.log(node.val)     node  = node.next }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgySxJVQQG0p5bh7cg54AaABAg", "comment": "\ud83d\ude0athanks", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzQPnx-Q6xMmTsDbrB4AaABAg", "comment": "using recursion in python we can find no of nodes like this: def countNodes(head):\r     if head.Next!=None:\r         return 1+countNodes(head.Next)\r     else:\r         return 1\r \r print(countNodes(Head))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxVa-zOWmD1KHbymkB4AaABAg", "comment": "Fantastic video.  My Java attempt at the practice problem (haven\u2019t seen the solution yet):  public static int countNodes(Node head) {     Node curr = head;     int numNodes = 0;     while (curr.data != null) {         numNodes++;         curr = curr.next;     }      return numNodes; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwoT6oqQITRtePf_Gh4AaABAg", "comment": "static int countNodes(Node head) {\r         Node n = head;\r         int sum = 1;\r         while (n.next != null)\r         {\r             sum++;\r             n = n.next;\r         }\r         return sum;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwFPaiSEeKOlmw3fDZ4AaABAg", "comment": "\ud83d\udc4d", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxKGbEWi54drCNHhiJ4AaABAg", "comment": "@CS DOJO which tool u used for   explaining  example", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxLDhT6fQcYJYkyQUx4AaABAg", "comment": "Here's a swift solution to count the number of nodes:  func countNodes(in list: LinkedListNode) -> Int {     var count: Int = 1     if let next = list.next {         count += countNodes(in: next)     }     return count }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyzq44sbrHcpRLiufZ4AaABAg", "comment": "# Python implementation class Node:     \"\"\"Represents a Node object in a Singly Linked List.\"\"\"     # class constructor with a default value of None for the Node object's data attribute     def __init__(self, data=None):         self.data = data         self.next = None  class SinglyLinkedList:     def __init__(self):         # class constructor assigns a new instance of a Node object to the SinglyLinkedList's head attribute         self.head = Node()              def countNodes(self):     # init a variable to keep track of the current node visited in list, starting at the beginning of the list (head node)     current_node = self.head     # store the count of nodes in list     count = 1     # traverse the list until the last node has been reached     while current_node.next is not None:         # increment the count to indicate a new node has been visited         count += 1         # reassign the current_node to the next node to traverse to the next node in list         current_node = current_node.next     # return the count     return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyRNkACwHTzBSPv2hh4AaABAg", "comment": "My Python Solution: def count_node(head):\r     total_count = 1\r     current = head\r     while current.next is not None:\r         total_count += 1\r         current = current.next\r     return total_count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyN4EBfosANc6WbnUp4AaABAg", "comment": "I did it recursively in python:  def count_nodes(head):     count = 0     if head == None:         return count      count = count_nodes(head.next) + 1     return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgztIxJKLo6N_VVyrJN4AaABAg", "comment": "You're great at breaking things down to an understandable level. The \"friendly\" naming of variables before changing them to best practices is helpful.  What is one real world example of a situation where you would want to use this? Quickly expanding data without a predictable end point?", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwg-LehwqnY1lrsE9x4AaABAg", "comment": "static int countNodes(Node node){\r         int count;\r         Node mynode=node;         for (count=1;mynode.next!=null;count++){\r             mynode=mynode.next;\r             System.out.println(count+\" nodes\");\r         }\r         return count;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzaVQm1lfA2msl9-Ot4AaABAg", "comment": "\u8bf7\u4f5c\u8005\u52a0\u4e0a\u82f1\u6587\u6216\u8005\u4e2d\u6587\u5b57\u5e55~\u62dc\u6258\u4e86", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx2Gf0rNrU-jhbB4G94AaABAg", "comment": "public int CountNode(Node head)\r         {\r             Node start = head;\r             int counter = 1;\r             while (start.next != null) counter++;\r             return counter;\r \r         }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyNP1Vm-TCL46rFaBp4AaABAg", "comment": "My Python solution to counting nodes:  def countNodes(head):     numNodes = 1     current_node = head     while current_node.next is not None:         numNodes += 1         current_node = current_node.next     return numNodes", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwclGGju9qomGpfGsJ4AaABAg", "comment": "def countNodes(self):\r         count = 0\r         printval = self.headval\r         while printval is not None:\r             printval = printval.nextval\r             count +=1\r         return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyP0uI-kFM1M5GwlAN4AaABAg", "comment": "In Python  def countNodes(self):         count = 0         start = self.head         while start:             count += 1             start = start.next         print(\"Number of Nodes : \" +str(count))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyXl6tRg3s9wbFy6S54AaABAg", "comment": "Outstanding explanation! Many thanks, sir!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyEEcZ5ed8ncFAyypZ4AaABAg", "comment": "In Js (feel free to correct me, newbie here): count Nodes(head) {   let count = 0;   let head = this.head;   let current = head;    while (current !== null) {     count++;     current = current.next     }   return count }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx1D4gm0j-7RweFJNR4AaABAg", "comment": "public class Node {     int data;     Node next;      Node(int data){         this.data = data;     }      public static int countNodes(Node head){         int counter = 0;         while(head!= null){             counter++;             head = head.next;         }         return counter;     }      public static void main(String[] args){         Node head = new Node(4);         Node nodeB = new Node(2);         Node nodeC = new Node(3);         Node nodeD = new Node(10);         Node nodeE = new Node(2);         head.next = nodeB;         nodeB.next = nodeC;         nodeC.next = nodeD;         nodeD.next = nodeE;          System.out.println(countNodes(head));      } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzng8HHywJBrZhEU0N4AaABAg", "comment": "Best Linked List video i have seen. Thank you so much mate", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw9e-DoDzLEzb6LhuR4AaABAg", "comment": "God bless you brother", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy66Kk1zea7tg2lXqh4AaABAg", "comment": "is there a follow up video where we implement LinkedList class?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzJtE8YKEasmZZ90T14AaABAg", "comment": "These never made sense in university, only linked lists where was other teacher and kinda explained better. Trees and graphs I don't even know how I passed, I don't remember. Probably I did force learn the syntaxes and just wrote good enough code to pass, but I never understood graphs and trees to solve a problem.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzLdiUzjbOHO_0SBfR4AaABAg", "comment": "I use java 1.8 and recursive method :   code:  public static Integer countNodes(Node head){         Integer size = 1;         if(head.next!=null){             size = countNodes(head.next)+1;         }         return  size;     }  and test :     @Test     void countNodes(){          //Given         Node head = new Node(4);         Node nodeB = new Node(2);         Node nodeC = new Node(3);         Node nodeD = new Node(10);          head.next = nodeB;         nodeB.next = nodeC;         nodeC.next = nodeD;         nodeD.next = null;          //When         Integer actual = undertest.countNodes(head);          //Then         assertEquals(4, actual);      }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwH5kbxsNKg8s6alAJ4AaABAg", "comment": "Why the fak are you so good at teaching that staff bro?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxpH-FLSALhPuUBqYV4AaABAg", "comment": "Love the way you explain things, dude! Thanks for sharing knowledge!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzsGXpagbqL8HtCOFF4AaABAg", "comment": "Fascinating good video as always", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyE_7Hn1j7bfXsPSLB4AaABAg", "comment": "JAVA:  public static int countNodes(Node head)\r     {\r         int counter = 0;\r         var currentNode = head;\r \r         while(currentNode != null)\r         {\r             currentNode = currentNode.next;\r             counter++;\r         }\r \r         return counter;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzdSaH6D-wLRy1WbWV4AaABAg", "comment": "Absolutely fantastic video.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwUBppYqOk9Q0C17L94AaABAg", "comment": "Solved : Python", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz63xBtysHbCthVUSJ4AaABAg", "comment": "Thank you so much CS Dojo! May God bless you!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzXNFxJP6P2NTQDkOJ4AaABAg", "comment": "Hi! your videos are awesome, do you have a paid series link where you go in depth?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzI_rJ3mUGc4bnUP8B4AaABAg", "comment": "Here is my solution in javaScript    class ListNode {   constructor(data) {     this.data = data;     this.next = null;   } }  class LinkList {   constructor(head = null) {     this.head = head;   } }  // putting all together let node1 = new ListNode(2); let node2 = new ListNode(5); let node3 = new ListNode(3); // console.log(node1); node1.next = node2; node2.next = node3;  // let's create a linklist with node1 let list = new LinkList(node1);  const linkedListData = list.head;  console.log(linkedListData);", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyVFl2yjUvW1uUYtwJ4AaABAg", "comment": "public class LinkedLists {     public static void main(String[] args) {         Node n = new Node(2);         n.add(3);         n.add(5);         n.add(6);         n.add(7);         System.out.println(n.size());      }     public static class Node {       public  int data;       public  Node next;          Node(int data) {             this.data = data;             this.next = null;         }          void add(int entry) {             Node node = new Node(entry);             Node n = this;             for (; n.next != null; n = n.next) {             }             n.next = node;         }         int size(){             int count = 0;             Node n = this;             while (n != null) {                 n = n.next;                 count = count+1;             }             return count;         }     } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxnWG_ZXhFp-2EwLSV4AaABAg", "comment": "public static int contadorNode(node head)         {             int contador = 0;             while(head != null)             {                 contador++;                              head = head.next;                                  contadorNode(head);              }             return contador;           }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzdmD9V2qeDHDbgL2F4AaABAg", "comment": "Thank you for such a beautiful explanation", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxi6W0Mepl2OZt28x54AaABAg", "comment": "Have more video about linked list ?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz6h3FLyRAZg4YSaUl4AaABAg", "comment": "Perfect thank you for your explaining", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzKm-gTHf-jfxHHDtJ4AaABAg", "comment": "Thanks", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwbL-dcdWclRdHIjxh4AaABAg", "comment": "Am I stupid here or can you not have a Node member of Node, but rather a pointer to Node?  class Node {     Node next; };  The above is not valid code.", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz-b-gU4EeFFaIUIcV4AaABAg", "comment": "I copied the code and made a methode Count nodes with the Node head as an Argument. i then deklared an int variable in the methode and gave it the value 0. Then i used a while loop with the condition head != null. Inside I raised the value of count by one and the changed the value of head to the value of the next node after the loop is done i returned count and printed the methode in my main methode.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwxYbLUNfqmnasUM9p4AaABAg", "comment": "wish i could kiss this cute little asian man on his forehead for saving my life countless times... :*", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyCn9dNd7_XvYT_-lt4AaABAg", "comment": "static int countNodes(Box head){         int countNext =1;\r         while (head.next!= null){\r             countNext++;\r             head = head.next;\r \r \r         }\r         return countNext;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwzAIYSDXZt3bXP4rB4AaABAg", "comment": "how i wrote mine  int countNodes (Node head)  { int numNodes = 1;       while ( head.next != null) {             numNodes ++;       }    return numNodes;           }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwIxQ1kGsP88OzFrN94AaABAg", "comment": "Hi, i used Recursion  int countNode(Node head){\r         System.out.println(head.data);         nodeCounter++;\r         if(head.next != null)\r             return countNode(head.next);\r         else \r             return nodeCounter;\r \r     }  i think it works :3", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyLyQrd_QwycwahUrt4AaABAg", "comment": "Here's my solution for countNodes in Python and Javascript  Python: def countNodes(head):\r     no_of_nodes = 0\r     if head != None:\r         temp = head\r         while temp:\r             no_of_nodes += 1\r             temp = temp.next\r     print(\"Total Nodes: %d\"%no_of_nodes)  Javascript: function printTotalNodes(head){\r     let temp = head;\r     let noOfNodes = 0;\r \r     if(temp !== null){\r         while(temp){\r             noOfNodes += 1;\r             temp = temp.next;\r         }\r     }\r \r     console.log(noOfNodes);\r }\r  You're welcome!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwsBFqeUiDQTA5gWD54AaABAg", "comment": "Though we wouldn\u2019t notice you have the board setup on mattress", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwHrgrrC4KXv2HEIZp4AaABAg", "comment": "Thank you!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwLnPzLeOZsoj-Aur54AaABAg", "comment": "I have been trying to learn LinkedList from yesterday, watched many tutorials, read many blogs but I was not getting the clarity as even the code of LinkedList is very intimidating. this video helped a lot!! I am finally a bit confident and ready to learn more about it and solve problems. Thank You Dojo!\ud83d\ude4c", "votes": "5", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxKWNO0Is834FBpFIF4AaABAg", "comment": "i love u", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwbL-dcdWclRdHIjxh4AaABAg.9V00WmXW0Y49V01L3hDKq9", "comment": "My bad, I thought this was C++ code", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwxYbLUNfqmnasUM9p4AaABAg.9UL-IxC9LjO9UPQqiBuTIm", "comment": "Woa u sussy baka", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxmGLh5o_StSU29inZ4AaABAg", "comment": "//C++ code  int count(Node head) {\r Node Temp = head;\r int cnt = 0;\r  while(Temp.next != NULL)\r \t{cnt++;\r \tTemp = Temp.next; \r \t}\r return cnt;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyYi6FPOFkwumVHxgF4AaABAg", "comment": "My code in python for 11:47   def countNodes(head):     temp = 0     list1 = [4, 2, 3, 10, 2]     head = (list1[0])     if print(head)         for x in list1:             x = 1             temp += x     return(temp) print(head)  My computer shows this function is wrong, but I don't understand what. Please tell me (also thank you because I am just a starting beginner and your python for absolute beginners series was a ginormous help)", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwuz9JygNCFwimFQ8F4AaABAg", "comment": "My count nodes function is below.  I used Java to write the function.  \tstatic int countNodes(Node head)\r  \t{\r \t\tNode currentNode = head;\r \t\tint totalNodes = 0;\r \t\tboolean nextExists = true;\r \t\t\r \t\tdo\r \t\t{\r \t\t\t// Increment total nodes; will always be at least one (head node)\r \t\t\ttotalNodes++;\r \t\t\t\r \t\t\t// Check to see if there is a next node.  If not, loop terminates.\r \t\t\tif(currentNode.next == null)\r \t\t\t{\r \t\t\t\tnextExists = false;\r \t\t\t}\r \t\t\t\r \t\t\t// Change current node to next node\r \t\t\tcurrentNode = currentNode.next;\r \t\t\t\r \t\t} while(nextExists);\r \r \t\treturn totalNodes;\r \r \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyGwHBQx2goFXr9Lut4AaABAg", "comment": "Hi! is; head = {     \"value\": 11,     \"next\":{         \"value\": 3,         \"next\":{             \"value\": 23,             \"next\": {                 \"value\": 7,                 \"next\": None a proper way of also navigating through a linked list via Python?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx0zGeSWskyKuFQ9CZ4AaABAg", "comment": "Such Crystal Clear explanation , Thank you man .", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz-uSNzPL05iYFJvUF4AaABAg", "comment": "i tried to solve that problem with recursion int countNodes(Node currentNode){         if (currentNode.next != null){             return 1 + countNodes(currentNode.next);         } else {             return 1;         }  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyLIewFkfGHHJrr1SB4AaABAg", "comment": "Thanks very much, this is good video", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzqlxIGvvG3cqJQKGN4AaABAg", "comment": "Thank you for explanation sir!\u2764", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzD_5DUbg_FRGShgEN4AaABAg", "comment": "Question: Couldn't you just keep track of the node count in a LinkedList class as you add, remove and update Nodes? Or is just an exercise in iterating through the nodes?", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugya8bR5HzXwsEJTNDt4AaABAg", "comment": "Simplifying  teaching  of complex topic in Java  , . The way explaining   things what is happening inside the linked list side by side code details are simply great . One of the best teaching oh the topic. Thanks friend.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxth4QwWBWJltRNhul4AaABAg", "comment": "yoooo it's so helpful! thank you!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzwi-Ux6Y0-OvSEkZp4AaABAg", "comment": "Python Code: def countNodes(self): \t\tcount = 0 \t\titr = self.head \t\twhile itr: \t\t\tcount +=1 \t\t\titr = itr.next \t\tprint(count) \t\treturn", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwGzsnHMs_xi6eiBqV4AaABAg", "comment": "This is not the way to draw the linked list diagram! It's wrong way and mislead the viewers.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxKxbSR8gl-0gNei0x4AaABAg", "comment": "int countNode(Node* head) { node* walker = head; int counter = 0;  while(walker != Null) {     ++counter;     walker = walker->next; }  return counter;  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxE9sbvf9-BH0Qsnox4AaABAg", "comment": "static int countNodes(Node head) {\r         int count = 0;\r         while (head != null) {\r             count++;\r             head = head.next;\r         }\r         return count;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxoy88lp35z57z7Tn94AaABAg", "comment": "C# solution           static int countNodes(Node head)         {             int nodesNum = 1;             while (head.next != null)             {                 head = head.next;                 nodesNum++;             }             return nodesNum;         }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwPbwP5G309Oho7WfB4AaABAg", "comment": "# new to python but this would be my solution  def countNodes(head, count=0): \tif head != null: \t\tcountNodes(head.next, count++) \treturn count;", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzJ5XIIcJ8R2Kij9lx4AaABAg", "comment": "You are great thanks a lot \u2763\ufe0f", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw3uQ6-6O02gw7pICp4AaABAg", "comment": "private static int countNodes(Node head){\r          Node tempNode = head;\r          int counter = 0;\r          while(tempNode != null){\r              tempNode = tempNode.next;\r              counter+=1;\r         }\r          return counter;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzy9nN1gK7a_GoUBFN4AaABAg", "comment": "Thank you Dojo", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwPbwP5G309Oho7WfB4AaABAg.9Q_mnjxw1B-9QaFtf8Acka", "comment": "count++ and null doesn't work in python I believe that colon on line 3 was a typo also, the return value of your recursion is not used, calling countNodes(head) will always return the default count value, 0", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwUiuouqQmTUDOYafh4AaABAg", "comment": "my solution      static int countNodes(Node head)     {         int count = 0;         boolean nextExists = true;         while(nextExists)         {             count+=1;             if(head.next != null)             {                 head = head.next;             }             else                 nextExists = false;         }         return count;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyaKSH0fhT2uA2NhRV4AaABAg", "comment": "Are all university professors just terrible at teaching this?  Mine doesn't even bother trying", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw_0ll3RRmaL5YOVch4AaABAg", "comment": "Don't know if it'd work, this is my solution w/ python before resuming the video:\r def nodeCounter(head):\r         nodeMarker = head\r         counter = 0\r         while(nodeMarker != None):\r             nodeMarker = nodeMarker.next\r             counter = counter + 1\r         return counter", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz_5D0qxlWXdL4-9SN4AaABAg", "comment": "Python recursive count:  def count_nodes(head, c=0):     if head:         c += 1         return count_nodes(head.next, c)     return c", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwXeHf9OeDYzyWbAlR4AaABAg", "comment": "if Head node is null   public int countNodes() {\r         int noOfNodes = 0;\r \r         if (this.head==null)\r             return noOfNodes;\r \r         Node n = this.head;\r \r         while (n.next != null) {\r             noOfNodes++;\r             n = n.next;\r         }\r         return noOfNodes+1;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw8gQx2xZ8_oeje-gd4AaABAg", "comment": "can we do it this way  as linked list cass contains all nodes give at a static int :  class linked lists  { static int TotalNodes; ...... }    class node { int data ; node next;  node (int data) { this.data = data  TotalNodes+=1 ;  // every time node is created by calling const and it will increase it by one                          }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxYV27B3HbStQeUEG54AaABAg", "comment": "I used recursion to solve the problem.   public static int countNodes(Main head){\r     if (head == null){\r       return 0;\r     }\r     else {\r       return 1 + countNodes(head.next);\r     }\r   }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgznWzgcI1L92b6tGw14AaABAg", "comment": "Best video I have seen in learning a concept. Thank you very much!", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy2rY3FsVpxqxHtuW14AaABAg", "comment": "Hi, It's in java.. static int countNodes(Node head){\r         if (head.next==null) {\r             return 1;\r         }\r         head=head.next;\r         return 1+countNodes(head);\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz-rQV0f6jdWUOR8Il4AaABAg", "comment": "Thanks", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyWgVbLYJJz9cfWiqh4AaABAg", "comment": "Which type of headphone did u use?!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyZbgkn8XAz3tBLce94AaABAg", "comment": "My solution in Python:   count = 0 def func(head):     global count     if head.next != None: func(head.next)     count += 1     return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgysjDruJC1RamcVN-54AaABAg", "comment": "I love you and I owe you my life thank you very much", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyAolDOLBviF_Bsynl4AaABAg", "comment": "My code for java: static int countNodes(Node head){\r \t\tint i = 1;\r \t\twhile (head.next != null){\r \t\t\ti++;\r \t\t\thead = head.next;\r \t\t}\r \r \t\treturn i;\r \t} Node-object is defined as in the video.  For the sake of understandability,  it could make sense to add a 'cursor' variable like: Node cursor = head before the while-loop, since it is not really the head you are using for the rest.  *Like done in the video with current.", "votes": "16", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxgtcFLc_M3ds-4w8l4AaABAg", "comment": "Hey CS Dojo, I absolutely loved how you gave us a practice question.  I felt really good after solving it !   My Solution in python:  class Node:     def __init__(self, data):         self.data = data         self.next = None          def countNodes(self):         while(self.next != None):             print(self.data)  class LinkedList:     def __init__(self):         self.Head = None          def push(self, data):         new_node = Node(data)          new_node.next = self.Head          self.Head = new_node      def countNodes(self):         temp = self.Head         count = 0         while(temp):             count += 1             temp = temp.next         return count  linked_list = LinkedList() linked_list.push(1) linked_list.push(2) linked_list.push(3) linked_list.push(4)  print(f\"The LinkedLists has {linked_list.countNodes()} Nodes.\")", "votes": "15", "replies": "6", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz3_Rmz4zcTSCBKkUR4AaABAg", "comment": "In Javascript, this is my solution:  const countnodes=(list)=>{\r   let count= 1; // for the head\r   let _tempHead = list.head;\r   while(_tempHead.next !== null){\r     count++;\r     _tempHead = _tempHead.next\r   }\r   return count;\r }  Nice Video! Thanks.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz11fRr_hzzBuzDiol4AaABAg", "comment": "Mine is in python  def conutNodes(start):\r     currentNode = start\r     numberOfNodes = 1\r     while not currentNode.Next == None:\r         currentNode = currentNode.Next\r         numberOfNodes += 1\r     return numberOfNodes", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxxs0UlCmzU0eEmVWZ4AaABAg", "comment": "Can we write any other word instead of 'next'", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxYxRPud2UfTJSFzqV4AaABAg", "comment": "I'm currently learning data structure and find myself struggling so much with linked list but... this is how i solve the problem at 11:56  class Node:     def __init__(self,data,next=None):         self.data = data         self.next = next  head = Node(4) nodeB  = Node(2) nodeC = Node(3) nodeD = Node(10) nodeE = Node(2)  head.next = nodeB nodeB.next = nodeC nodeC.next = nodeD nodeD.next = nodeE  def countNodes(head):     nodes = 0     aux = head     if(aux.next == None):         return 1     else:         nodes+= 1     while aux.next != None and aux.data:         nodes+=1         aux = aux.next     return nodes   print(countNodes(head))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxhz3BofM2OGTxMSTp4AaABAg", "comment": "YOU are an Amazing teacher, I love you alot !!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyAolDOLBviF_Bsynl4AaABAg.9ObgQhBubom9nVCjb8wEhS", "comment": "You can simplify the while statemet to:  while (head.next) { ...  It will loop while the statement in parentheses is True. Null is always False when using in conditional statements, thus as long as there's something in head.next, it will report it as True.", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyAolDOLBviF_Bsynl4AaABAg.9ObgQhBubom9usb47DF4zQ", "comment": "\u00a0@psionicxxx\u00a0 In Java that's gonna give you an error. Null doesn't evaluate to false and an object that isn't null doesn't evaluate to true.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxgtcFLc_M3ds-4w8l4AaABAg.9OQFiHA3hae9_uNW2cuXrG", "comment": "AaaAAAAaaaAAAAAAAAAaAAaaaaaAAAAAAAAAAAAAAAaaaaaAaAaAAAAAAaaaaaaaaaaaa", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxgtcFLc_M3ds-4w8l4AaABAg.9OQFiHA3hae9_uNWOMQ5O-", "comment": "Aaa", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxgtcFLc_M3ds-4w8l4AaABAg.9OQFiHA3hae9_uNWtL3AoQ", "comment": "Aaaa", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxgtcFLc_M3ds-4w8l4AaABAg.9OQFiHA3hae9_uNXJkU7N8", "comment": "Aaa", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxgtcFLc_M3ds-4w8l4AaABAg.9OQFiHA3hae9_uNXo2nfTB", "comment": "Aa", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxgtcFLc_M3ds-4w8l4AaABAg.9OQFiHA3hae9k8ADs11Jsm", "comment": "weirdo??", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugz11fRr_hzzBuzDiol4AaABAg.9OMd7BZBm6E9OcuNNPSDbB", "comment": "You can lose the variable at the beginning to save a bit of memory and change \"while not currentNode.Next == None\" to \"while start.Next != None\" to improve readability ;-)  def conutNodes(start):     numberOfNodes = 1     while start.Next != None:         start = start.Next         numberOfNodes += 1     return numberOfNodes", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugxxs0UlCmzU0eEmVWZ4AaABAg.9OBl5oQcF3A9OEIlWrsWke", "comment": "Does self.next stores the next node or its instance...in python", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwgGxzDE3UmwjlpLQp4AaABAg", "comment": "God bless you mr", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyVSTz8pECdPm8ngxB4AaABAg", "comment": "You're a great teacher. I'm really enjoying this series!", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx_QqYmLMiChjXVXfd4AaABAg", "comment": "For C it could be:  int countnodes (Node *head) { int i = 0; while (head != NULL) { i++; head = head->next; } return (i); }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxjzz8fvGRCasLU5h94AaABAg", "comment": "this may be a stupid question but why would we manually create the object and it's functionalities when java offers a built in \"LinkedList\" class?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxSGW8Zx0VHZRVHHe94AaABAg", "comment": "This was my original solution in python: def count_nodes(head):     count = 0     next_node = head.next     if head.next is not None:         count += 1         next_node = head.next     while next_node is not None:         count += 1         next_node = next_node.next     return count  Then I realized it count be trimmed down a bit and now this is my code: def count_nodes(head):     count = 1     next_node = head.next     while next_node is not None:         count += 1         next_node = next_node.next     return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwN2fCKCp3mxS3NiVp4AaABAg", "comment": "class Node:\r \tdef __init__(self, value):\r \t\tself.value = value \r \t\tself.next = None   \r \r head = Node(4)\r node_b = Node(5)\r node_c = Node(3)\r node_d = Node(10)\r node_e = Node(5)  \r \r \r head.next = node_b\r node_b.next = node_c \r node_c.next = node_d\r node_d.next = node_e  \r \r def count_nodes(head:Node):\r \tnext_elem = head.next \r \tcounter = 2\r \twhile next_elem.next != None:\r \t\tcounter += 1\r \t\tnext_elem = next_elem.next\r \treturn counter", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzb7rtxw-F7QOON9CB4AaABAg", "comment": "Ty very much sir", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxZAtPY4YvCVTwdUu14AaABAg", "comment": "Here is my solution def countNodes(head):   If head.next == None :     return 1   else:     return 1 + countNodes(head.next)", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyiyTkUbkusXGDbTjt4AaABAg", "comment": "Here's my python code to count the number of nodes in a linked list:  # return the number of nodes in a linked list  def solution(head):     ans = 1     next_node = head.next       while next_node:         ans += 1         next_node = next_node.next      return ans", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx04A9C_qd7Hv-bG4N4AaABAg", "comment": "Best simple explanation about linked list thusfar on YouTube.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxdkUYX6MFAjrTNd_p4AaABAg", "comment": "Brilliant teaching.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwvMQDEQI-UoQ8J3eF4AaABAg", "comment": "def countNodes(node):           count=1           while node.nextNode is not None:                     node = node.nextNode                     count+=1           return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxxGIOhokkA8OsAcvp4AaABAg", "comment": "const countNodes = (head) =>{     let temp = head      let count = 1     while(temp.next != null){         count += 1         temp = temp.next     }     return count }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzbzjFJZjJK1abHZdx4AaABAg", "comment": "you are the best dude", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwxdocjvMS3vkZKsud4AaABAg", "comment": "My topic today Linked-lists and Bubble Sort. Here's my  Python  work for the evening. Excellent teacher!  I'm 64 and self-taught. So, if I can learn to code - everyone can. Just code it. :)   class Node:      def __init__(self, data=None):         self.data = data         self.next = None   class Linked:     def __init__(self):         self.head = None    # has attribute 'head' assigned to None      def show(self):         node = self.head         while node is not None:             print(node.data)             node = node.next      def add(self, new ):         new_node = Node(new) # create an instance of Node         new_node.next = self.head   # points to the 2nd element         self.head = new_node      def count_nodes(self):         count =1         current_head = self.head         while current_head.next != None:             current_head = current_head.next             count += 1          return count      # create an instance of class Link link2 = Linked() # create a new Node() my_node = Node(6) # add to linked list link2.head = my_node link2.add(3) link2.add(5) link2.add(2) link2.show()  print(f\"The node count: {link2.count_nodes()}\")", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxqHPpvgzIwSCh-6E14AaABAg", "comment": "He definitely made it clear. I've been watching several videos to understand Linked list and this fella helped me understand it. Thanks", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwRzDVkRHK78G8n1Wx4AaABAg", "comment": "#count the number of nodes. def countNodes(head):     count = 1     while head.next is not None:         head = head.next         count += 1     print(\"The numeber of nodes: \",count)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw2e3Je9t114okhhpJ4AaABAg", "comment": "int countNodes(Node head ){        if(head.next==Null){               return 0;          }          return 1+countNodes(head.next); }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwWj0T_qdGHW58nr1t4AaABAg", "comment": "Not sure if it works as I write it on phone but I would do  this node counting with recursion like this, it also makes it possible to count real amount of nodes if you know the node you start with ;) PS thanks for this topic tutorial :D  static int CountNodes (Node node, int nodeNumber) { if (node.next==null) { return nodeNumber; } else { CountNodes (node.next, nodeNumber +1); } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw1awD2BQlmQn_s27N4AaABAg", "comment": "Allah seni CS \u00f6\u011frencilerinden eksik etmesin japon reis", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwN2fCKCp3mxS3NiVp4AaABAg.9NYof8hj_Tt9NYoneFbpiP", "comment": "this runs in O(n) where n is the number of nodes. Though i may be wrong. This is just my guess. Feel free to correct me. I am no big O expert ^^", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugx88H-o6rmTAbbAJ654AaABAg", "comment": "best explainer", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwY-meeOgIGE2iSbP14AaABAg", "comment": "Thank u sooooo muchhhh", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxNKKys-ok6MPZ4WP94AaABAg", "comment": "//solution in C++  class Node { public: \tint data; \tNode* next;  \tNode(int data); \tint Length(); };  Node::Node(int data) { \tthis->data = data; \tnext = nullptr; }  int Node::Length() { \tint length = 1; \tNode* current = this; \twhile (current->next != nullptr) \t{ \t\tlength++; \t\tcurrent = current->next; \t} \treturn length; }  int main() { \tNode head(6); \tNode node2(4); \tNode node3(8); \tNode node4(-12);  \thead.next = &node2; \tnode2.next = &node3; \tnode3.next = &node4;  \tstd::cout << head.Length() << std::endl; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz-q7yZ8Zrl9ZsbFlF4AaABAg", "comment": "at this point i feel like college is literally a scam", "votes": "0", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxRZ1T098nFgtg6TJd4AaABAg", "comment": "In python code, at first you have given some initial code. then the count function is written. Yes I know, a method executes only when it is called. so the order of the python code execution is first cell, then 3rd cell where nodes are created and then 2nd cell as the count method is called at the end of the 3rd cell. So my que is, we don't have main method just like any other programming from where the execution starts? will the code starts executing from the first line?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwi1mVbr8udqrsp2L14AaABAg", "comment": "Code in C++: // // // #include <iostream>\r using namespace std;\r \r class Node\r {\r public:\r \tint data;\r \tNode *next;\r \tNode(int data)\r \t{\r \t\tthis->data = data;\r \t\tthis->next = NULL;\r \t}\r };\r \r \r \r \r int length(Node *head)\r {\r \tNode *temp = head;\r     int n=0;\r     while(temp->next != NULL){\r         temp = temp->next;\r         n++;\r     }\r     return n;\r }\r \r Node *takeinput()\r {\r \tint data;\r \tcin >> data;\r \tNode *head = NULL, *tail = NULL;\r \twhile (data != -1)\r \t{\r \t\tNode *newNode = new Node(data);\r \t\tif (head == NULL)\r \t\t{\r \t\t\thead = newNode;\r \t\t\ttail = newNode;\r \t\t}\r \t\telse\r \t\t{\r \t\t\ttail->next = newNode;\r \t\t\ttail = newNode;\r \t\t}\r \t\tcin >> data;\r \t}\r \treturn head;\r }\r \r int main()\r {\r \tint t;\r \tcin >> t;\r \twhile (t--)\r \t{\r \t\tNode *head = takeinput();\r \t\tcout << length(head) << endl;\r \t}\r \treturn 0;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzVKw6iVtYoZ9DfOot4AaABAg", "comment": "@CS Dojo  class Node:\r     data = int()\r     next = None\r \r     def __init__(self, data):\r         self.data = data\r     \r     @staticmethod\r     def count_nodes(head):\r         cnt = 1\r         while True:\r             if head.next is None : return cnt\r             cnt += 1\r             head = head.next\r \r if _name_ == '__main__':\r     head = Node(4)\r     node2 = Node(2)\r     node3 = Node(3)\r     node4 = Node(6)\r \r     head.next = node2\r     node2.next = node3\r     node3.next = node4\r     num_nodes = head.count_nodes(head)\r     print(num_nodes)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzl-2twBN_hQWBXbIt4AaABAg", "comment": "u are just too good", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgznZfdZSYCVq2K1lv94AaABAg", "comment": "static int countNodes(Node head){\r         int counter = 1;\r         boolean node = true;\r         while(node) {\r             if(head.next != null){\r                 head = head.next;\r                 counter ++;\r             }\r             else{\r                 node = false;\r             }\r         }\r         System.out.println(counter);\r         return counter;\r     } Here is my solution", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyMLBHsTusA1jGrL0t4AaABAg", "comment": "import java.util.Scanner;\r \r public class Test {\r     public static void main(String[] args){\r \r         Scanner input = new Scanner(System.in);\r \r         System.out.println(\"Enter Data> \");\r         int data = input.nextInt();\r         LinkedList head = new LinkedList(data);\r \r         System.out.println(\"Enter Data> \");\r         data = input.nextInt();\r         LinkedList node2 = new LinkedList(data);\r         head.nextNode = node2;\r \r         System.out.println(\"Enter Data> \");\r         data = input.nextInt();\r         LinkedList node3 = new LinkedList(data);\r         node2.nextNode = node3;\r \r         System.out.println(\"Enter Data> \");\r         data = input.nextInt();\r         LinkedList node4 = new LinkedList(data);\r         node3.nextNode = node4;\r \r         System.out.println(countNodes(head));\r \r     }\r \r     public static int countNodes(LinkedList head){\r         int count = 0;\r \r         if(head.nextNode == null){\r             return 1;\r         }\r \r         while(head.nextNode != null){\r             count++;\r             head = head.nextNode;\r         }\r         \r         count++;\r         return count;\r     }\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzaSZO444lSsjE-nDN4AaABAg", "comment": "You are an excellent tutor!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzDgr3sEcNcompBzzV4AaABAg", "comment": "YES YES YES SO MUCH LOVE FOR YOU THANK YOU !!! <3", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwKgyLvPN1T3E7jouR4AaABAg", "comment": "7:21 EUREKA!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxKgA1cBa2E-Wbm0214AaABAg", "comment": "I wish I found you in 2020 when all studies were online XD", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwLmHYgeJBhWyt5AHV4AaABAg", "comment": "void count(Node obj)\r {\r     int count=0;\r     while(obj.next!=null)\r     {\r         count++;\r     obj=obj.next;\r     }\r     count++;\r     System.out.println(count);\r }\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwEs3NexZnwlp7SNbx4AaABAg", "comment": "Thanks \ud83d\ude0a", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyrJSPWZoURH-Bvr-J4AaABAg", "comment": "for  ( int count = 0; current.next=! null; count++) {     current = current.next; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzv9BnHxANHAkA-SEB4AaABAg", "comment": "I hope you were my programming language teacher back in the college day, I didn't understand it until watching your explanation", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxEJS5XRAs39qoAIHB4AaABAg", "comment": "public static int countNodes(Node head) {         int nodes = 0;          if (head == null) {             return nodes;         }         Node node = head;          while (node != null) {             node = node.next;             nodes++;         }          return nodes;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw4PTitgzjbSDkNR8V4AaABAg", "comment": "Well mine is  private static int countNodes(Node root){\r         if(root == null){\r             return 0;\r         }\r         return 1 + countNodes(root.next);\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz-q7yZ8Zrl9ZsbFlF4AaABAg.9LoWInQN9_l9LrmSTJAG07", "comment": "almost entirely true, but if you pay for college, you basically pay for the whole environment, not just the study materials", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugz-q7yZ8Zrl9ZsbFlF4AaABAg.9LoWInQN9_l9LtYMPfnLVN", "comment": "\u00a0@Hevanafa\u00a0 unless you at home;", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzbK4kSP8kEVKp3FXB4AaABAg", "comment": "My solution, writing before watching the solution:  int countNodes(Node head){      var count = 1; //As head is not null      while(head.next.data != null){              count++;              head = head.next;      }      return count; }", "votes": "71", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyvxM97YKbpIJDG0HB4AaABAg", "comment": "Thank you! I am taking Algorithm and data structure in community college. I think spending 900 dollars on that course the professor can not do half of what you do. BRAVO!", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyiuZfaoYIwKL2TRpF4AaABAg", "comment": "how to find the number of nodes in java :  - the method: ----------------------------------------------------------------- public static int countNodes(Node head){         int count = 1;         do{                          count ++;             head = head.next;                      }while(head.next != null);                  return count;     }  - then call the method in the main class: ----------------------------------------------------------------- System.out.println(countNodes(head));", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyv5B9H7JmOmDdvlot4AaABAg", "comment": "this is how i solved it in python (i wish it works): def countNodes(head):     i, next = 1, head.next     while next != None:         temp = 1         i = temp + 1         next = next.next     return i", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyvhQ9RUmDHw2VxMDd4AaABAg", "comment": "but why do i need  to use linked list and what is a real life example of it?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw3iQyYaIO5s82u6yt4AaABAg", "comment": "Explanation 100", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxTGc8f7CX8TJYrGTJ4AaABAg", "comment": "int countNodes(Node head){\r \tint count=1;\r \tif(head.next!=null){\r \t\tcount++;\r \t}\r \treturn count;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyXTArv85nddHdvvo14AaABAg", "comment": "Python solution  class Node:     def __init__(self, data):         self.data = data         self.next = None  def count_nodes(head):     numOfNodes = 0     if head != None:         numOfNodes = 1         current = head         while current.next != None:             numOfNodes = numOfNodes + 1             current = current.next     return numOfNodes   nodeA = Node(6) nodeB = Node(5) nodeC = Node(4) nodeD = Node(3) nodeE = Node(2)  nodeA.next = nodeB nodeB.next = nodeC nodeC.next = nodeD nodeD.next = nodeE  print(count_nodes(nodeA))  Ps: I am new to python", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxxOESyXxPcURP10LN4AaABAg", "comment": "Python solution  class Node:     def __init__(self, data):         self.data = data         self.next = None  def count_nodes(head):     numOfNodes = 0     if head != None:         numOfNodes = 1         current = head         while current.next != None:             numOfNodes = numOfNodes + 1             current = current.next     return numOfNodes   nodeA = Node(6) nodeB = Node(5) nodeC = Node(4) nodeD = Node(3) nodeE = Node(2)  nodeA.next = nodeB nodeB.next = nodeC nodeC.next = nodeD nodeD.next = nodeE  print(count_nodes(nodeA))  Ps: I am new to python", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyNNpYmojlWD6TJT854AaABAg", "comment": "It was a great video! Thnx  Go Python!# Recursion def count_nodes(head):  \tcurrent = head \tif current.next == None: \t\treturn 1 \treturn 1 + count_nodes(current.next)", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzwmSpnWpAvBpspVDh4AaABAg", "comment": "def countNodes(head):\r     count = 0\r     a = head\r     while a != False:\r         a = a.next\r         count += 1\r     return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyoG_SWn0iT9APisqR4AaABAg", "comment": "thank you thank you I finally REALLY understand how this shit works", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxF9m9kk3li6rlJFYl4AaABAg", "comment": "// countNode(Node head) code public static int countNode(Node head) { Node current = head; int count = 0; while(current != null) { count++; current = current.next; } return current; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzF0loPm7Hiv2aWVnF4AaABAg", "comment": "class Node:     def __init__(self,data):         self.data=data         self.next=None     def countNodes(self,head):         count=0         temp=head         while(temp!=None):             count+=1             temp=temp.next         print(count)  head=Node(7) first=Node(14) second=Node(21) third = Node(28) head.next=first first.next=second second.next=third third.countNodes(head)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwzdv6X_Y2SqpcQdfx4AaABAg", "comment": "Just in case someone is watching this in 2021. Recursive solution with TypeScript:   class myNode {   data: number;   childNode: myNode;    constructor(data: number, childNode?: myNode) {     this.data = data;     this.childNode = childNode || null;   } }  const nodeD = new myNode(2); const nodeC = new myNode(10, nodeD); const nodeB = new myNode(3, nodeC); const nodeA = new myNode(2, nodeB); const head = new myNode(4, nodeA);  const isNode = (node: myNode) => node instanceof myNode; const hasChild = (node: myNode) =>   node.childNode !== null && isNode(node.childNode);  const countNodes = (node: myNode) => {   const iter = (node: myNode, counter: number) => {     if (isNode(node) && !hasChild(node)) return counter;      return iter(node.childNode, counter + 1);   };    return iter(node, 1); };", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyfQ4h4tnfre26GFYx4AaABAg", "comment": "Two solutions :)   int countNodes(Node head) {\r \r         int count = 0;\r         while (head != null) {\r        head = head.next;\r          count++;\r \r         }\r         return count;\r     }  \r \r     int countNodesR(Node head) {\r \r         if (head.next == null)\r             return 1;\r \r            return countNodesR(head.next) + 1;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyghCPLLyxvvrf_PI94AaABAg", "comment": "How can the problem be solved with Python? Thank you to anyone that can help.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxUaWTkIL5CjUhFsNd4AaABAg", "comment": "Did in Python here:  def countNodes(head):     curr = head     count = 1     while curr.next_node:         count +=1         curr = curr.next_node     return count", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyh5N_5pr9kAtFSSaJ4AaABAg", "comment": "this is my solution in python   def countNodes(head):         count = 1         while head.next != None:             count += 1             head = head.next         return count  Thank you for the clear explanation!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx86eiD1u63BeROLqt4AaABAg", "comment": "\u0412\u044b\u0432\u043e\u0434: \u0443\u0447\u0438\u0442\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxUaWTkIL5CjUhFsNd4AaABAg.9JSzmIN2DM29JT-0Js2-xO", "comment": "wow! watching the finish video part, and it's same solution I did.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwP6lVYw5yYMc41DTd4AaABAg", "comment": "Thank you for your videos!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxldsWdsgOM8PuRhLd4AaABAg", "comment": "6:59 I dont really understand how the constructor works here, and why do all the Nodes we create have a null next value?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw4jHLaoe3Dnm79C0N4AaABAg", "comment": "I thought of the same solution you did but in C# which is literally almost the same in this case \ud83d\ude02:    countNodes(Node head){  Int counter = 1; Node temp = head; while (current.next != null){ current = current.next; counter++;  }  return counter; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwpOmJY6u0QPp4FWxV4AaABAg", "comment": "While(head.next !=0) Cnt++", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxytBWyr4qpxhrAGLV4AaABAg", "comment": "please put some more videos on ds algo you stopped uploading plz resume it your explanation is good", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyOyZeiD2at9viEIh94AaABAg", "comment": "what kind of declaration is that Box next; ? and how it works?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxXtfBirnqygKsDRAR4AaABAg", "comment": "Ok, my solution for the challenge (I think it was good):  class\u00a0Node\u00a0{ \u00a0\u00a0static\u00a0lastCreated; \u00a0\u00a0constructor(data)\u00a0{ \u00a0\u00a0\u00a0\u00a0this.data\u00a0=\u00a0data; \u00a0\u00a0\u00a0\u00a0this.next\u00a0=\u00a0void{}; \u00a0\u00a0\u00a0\u00a0if(Node.lastCreated)\u00a0{ \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Node.lastCreated.next\u00a0=\u00a0this; \u00a0\u00a0\u00a0\u00a0} \u00a0\u00a0\u00a0\u00a0Node.lastCreated\u00a0=\u00a0this; \u00a0\u00a0}  \u00a0\u00a0static\u00a0countNodes(head)\u00a0{ \u00a0\u00a0\u00a0\u00a0let\u00a0count\u00a0=\u00a0head.data\u00a0?\u00a01\u00a0:\u00a00; \u00a0\u00a0\u00a0\u00a0if\u00a0(head.next)\u00a0{ \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0let\u00a0currentNode\u00a0=\u00a0head; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0do\u00a0{ \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log('The\u00a0current\u00a0Node\u00a0data\u00a0is:\u00a0',\u00a0currentNode.data); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log('The\u00a0next\u00a0Node\u00a0data\u00a0is:\u00a0',\u00a0currentNode.next.data); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0currentNode\u00a0=\u00a0currentNode.next; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0count\u00a0+=\u00a01; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0while\u00a0(currentNode.next); \u00a0\u00a0\u00a0\u00a0} \u00a0\u00a0\u00a0\u00a0console.log('The\u00a0total\u00a0of\u00a0nodes\u00a0is:\u00a0',\u00a0count); \u00a0\u00a0\u00a0\u00a0return\u00a0count; \u00a0\u00a0} }  const\u00a0head\u00a0=\u00a0new\u00a0Node(4); const\u00a0nodeB\u00a0=\u00a0new\u00a0Node(8); const\u00a0nodeC\u00a0=\u00a0new\u00a0Node(11); const\u00a0nodeD\u00a0=\u00a0new\u00a0Node(17);  Node.countNodes(head);      Hey you, what do you would have made different? OBS: I made some changes, but just don't pay too much attention on it, all right?  My github repo: https://github.com/leviermonaites/data-structures-algorithms-exercises", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxr5JrnPx5LVjNT_3l4AaABAg", "comment": "Is your code work on c lang.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwk1dtiFAfks8qd-ad4AaABAg", "comment": "where does 'head' come from?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyss_ihpJP5XwVoiol4AaABAg", "comment": "keep it up brotha, you`re good at teaching man God Bless you bro", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxbA8MLxYnFqFjOiIl4AaABAg", "comment": "thanks you help me", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwMgnpK3r1Qa4G1xSp4AaABAg", "comment": "Constructor Node programming is not clear. Can you explain pls ?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwG92BZdCbn3GjhkVB4AaABAg", "comment": "Python:  def count(head):\r     current = head\r     i = 0\r     while current:\r         current = current.next\r         i += 1\r     return i", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwPgXMM5qn5Fnqqi7J4AaABAg", "comment": "#include <iostream> #include <string>  using namespace std;  class Node { public:   string name;   Node* next;   Node(string name)   {     this -> name = name;   } };  void printNodes(Node* head) {   while (head != NULL)   {     cout << head -> name << endl;     head = head -> next;   } }  int countNodes(Node* head) {   int count = 0;   Node* flag = head;   while (flag != NULL)   {     flag = flag -> next;     count++;   }    return count; }  int main() {    Node* name1 = new Node(\"surajit\");   Node* name2 = new Node(\"shankhaneel\");   Node* name3 = new Node(\"sanu\");    name1 -> next = name2;   name2 -> next = name3;   name3 -> next = NULL; /*   cout << name1 -> name <<endl;   cout << name2 -> name <<endl;   cout << name3 -> name <<endl; */   printNodes(name1);   cout << \"Total nodes: \" << countNodes(name1) << endl;    return 0; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyCXPCfLLXv_f4ZDzd4AaABAg", "comment": "function nodeCount(head) {  \t\t\t\tlet count = 1;  \t\t\t\tlet lastNode = head     while(lastNode.next) {     \t\t\t\tcount++     \t\t\t\tlastNode = lastNode.next     }     return count  }   My solution with JS", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzPNXG0NfUU2zU7H314AaABAg", "comment": "My solution for the method to count nodes in c++:  static int CountNodes(Node head) {\r  \tNode currentNode = head;\r  \tfor (int i = 1; i < i + 1; i++)\r \t{\r \t\tif (currentNode.Next != NULL) currentNode = *currentNode.Next;  \t\telse return i;  \t}\r }  Edit: formating.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyft864bx6fYJueAgx4AaABAg", "comment": "This is the easiest and best information about linked lists I have come across so far! Well done \ud83d\udc4d", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzM50bFQPX9VGtXx7p4AaABAg", "comment": "you are a good teacher", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxDyrlhg00p-PDwWuV4AaABAg", "comment": "I have a doubt. Why is it that the next atributte is not included in constructor??", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzscpx3gWoMqzV8hQF4AaABAg", "comment": "public static CountNodes(Node node) { int  i=1; while node.next!=null do{    i++;    } return i; }", "votes": "0", "replies": "3", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzscpx3gWoMqzV8hQF4AaABAg.9Hz4PtWDOAK9Hz4h1qB1Mg", "comment": "If you could guve me feedback ot would be great!!", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugzscpx3gWoMqzV8hQF4AaABAg.9Hz4PtWDOAK9I1WhV7f76L", "comment": "U must point in a loop to a next node using node = node.next", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugzscpx3gWoMqzV8hQF4AaABAg.9Hz4PtWDOAK9I1WlZTofRD", "comment": "Bcs without this u are checking for a same node", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyB7BHMQUfN9Cpxxnp4AaABAg", "comment": "Is next a keyword?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy2xlHtx9cHRsrAv2V4AaABAg", "comment": "You are very good but I wish if you can code olso with c++ language  Best wishes \ud83d\ude0a", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyeS4Or-3QjMXc9PBF4AaABAg", "comment": "This is great, I'm really enjoying this.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxHovPdGtZ83k0yBot4AaABAg", "comment": "Wow Thank you so much for making the linked list easy to understand. :) You're awesome!", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwDsZ95Sk8StMb03214AaABAg", "comment": "what does that mean this.data ??", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzW401JYUh2REvFBkp4AaABAg", "comment": "Thank a lot!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw8U3E9bkUjRpHRrLJ4AaABAg", "comment": "Sorry man i use c++ we use pointers", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgynEqYLjvDjeIkxzFJ4AaABAg", "comment": "This video is NP-complete!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgynKFZ6Rx0v3FdwvDh4AaABAg", "comment": "muhd faris\r 1 second ago\r How the program know current.next?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzXVwTCRAT7mSlQHI94AaABAg", "comment": "Your the BEST!!! THE BEST!!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxSss5kCmzdLVB5QZ54AaABAg", "comment": "Wow, this is amazing! You're a great teacher. Thank you for making this video!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwQI2chVqpWlE-duhl4AaABAg", "comment": "The syntax here might not be exact and not sure if this solution works 100% but I used recursion  public int numberNodes(Node node){\r \r int counter = 0;\r \r if(node.next != null){\r counter++\r return numberNodes(node.next)\r }\r \r return counter;\r }  so basically if the node has a next node, we increment the counter and call the function again, if not we just return counter?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzeuTqzaWCiqxrmtux4AaABAg", "comment": "Java: int countNodes (Node head) {     int i = 1;     int x = head.next;     while (x != null) {         i++;         x = x.next;     } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwqtlEs5E_dcFYSLnB4AaABAg", "comment": "among all i watched, this explains the idea of linked list briefly! amazingg", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgySjlLMKdbCul6H7_R4AaABAg", "comment": "public int countNodes(Node head) {\r \r \t\tNode start = head;\r \t\tif (head == null) {\r \t\t\treturn 0;\r \t\t}\r \r \t\tint count = 0;\r \t\twhile (start != null) {\r \t\t\tcount++;\r \t\t\tstart = start.next;\r \t\t}\r \r \t\treturn count;\r \r \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy2RosQxOzxkxAfrEp4AaABAg", "comment": "int countNodes(Node head){ int count=0; while(head!=null){ count=count +1; head=head.next; } return count; }", "votes": "1", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyShEd7H7vQtJbf44p4AaABAg", "comment": "int countNodes(Node head){     int count = 1;     Node currentNode = head;     while (currentNode.next != null){         count++;         currentNode = currentNode.next;     }     return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz8U_bLhS_SDF2NC0B4AaABAg", "comment": "Node abc = header;\r \t\tint count = 1;\r \t\t\r \t\twhile(abc.next!=null)\r \t\t{\t\t\r \t\t\tabc= abc.next;\r \t\t\tcount += 1;\r \t\t}\r \t\t\r \t\tSystem.out.println(count);", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwwh4gEr_QHscQCstd4AaABAg", "comment": "12:04 a three-line solution from python  def countNodes(head, count = 1):\r     if head.next != None: return countNodes(head.next, count + 1)\r     return count", "votes": "27", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyQ_owYFECU3h3DgZZ4AaABAg", "comment": "def len(head):        count = 0        while head!= None:                 count = count + 1                 head = head.next        return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwDsZ95Sk8StMb03214AaABAg.9H_At02miSR9I1XKavPdLM", "comment": "It means that when object is created in a main method to have a int data (which u declared in a class Node) same as a paramater of a constructor, so when u make for example new Node(5) it means that a variable data in a class node will have value 5.", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugy2RosQxOzxkxAfrEp4AaABAg.9GiZ2Y_BIXM9LOP1rU-kRu", "comment": "or int countNodes (Node head) { if head == null return 0; return countNodes(head.next) + 1; }", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwwh4gEr_QHscQCstd4AaABAg.9G_gC95yCHD9eTtS5hS7Il", "comment": "a great solution but butting the \"if\" expression in the same line with the statement doesn't actually reduce a line.", "votes": "2", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwwh4gEr_QHscQCstd4AaABAg.9G_gC95yCHD9lLXly_if3x", "comment": "\u00a0@zydiz\u00a0 its not if, its ternary operator with combination of recursion(but yeh logic is same)", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF314vd2pQY9bNXIt4AaABAg", "comment": "static int countNodes(Node head){     int counter = 0;     Node pointer = head.next;     while (pointer != null){       counter++;       pointer = pointer.next;     }     counter++;     return counter;   }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyInhk6nWNu3faxHKJ4AaABAg", "comment": "java is literally just c++ without pointers", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzAj7x1Ms57VqdSJ2N4AaABAg", "comment": "def countNodes(head):\r     cont = 1\r     currentNode = head\r     while currentNode.nextNode:\r         cont += 1\r         currentNode = currentNode.nextNode\r     \r     return cont", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxuIAKswPfxNHZ6PmZ4AaABAg", "comment": "Correct answer is B) and C).", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwNZt-6gVAgcP3xj3N4AaABAg", "comment": "if We lost head , I mean if head is assumed null  We never reach the linkedlist . I think  am I wrong ?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxkG5kjawdDjArGnb14AaABAg", "comment": "C#:   public int countNode(Node head){\r \r \tint count = 1;\r \tNode currentNode = head;\r \twhile (true) {\r \t\tif (currentNode.next != null ) {\r \t\t\tcount++;\r \t\t\tcurrentNode = currentNode.next ;\r \t\t}\r \t\telse {\r \t\t\treturn count;\r \t\t}\r \t}\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxZtPN_sfXWk_OiAHZ4AaABAg", "comment": "You're just amazing, what I like the most is, you just go straight to the point with very clear examples and NO MUMBO JUMBO...!!!    An old timer Cobol programmer from last century... lol", "votes": "7", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyAxlN1CFQwbTBe_jl4AaABAg", "comment": "class Node:\r     def __init__(self,data):\r         next = Node\r         self.data = data\r         self.counter = 1\r         self.isExist = True\r     def nodeCount(self,head):\r         while(self.isExist):\r             try:\r                 head.next\r                 self.counter +=1\r                 head=head.next\r             except:\r                 self.isExist = False    \r         return self.counter\r \r head = Node(6)\r nodeB = Node(3)\r nodeC = Node(4)\r nodeD = Node(2)\r nodeE = Node(1)\r nodeF = Node(1)\r \r head.next = nodeB\r nodeB.next = nodeC\r nodeC.next = nodeD\r nodeD.next = nodeE\r nodeE.next = nodeF\r \r print(head.nodeCount(head))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwh44jXEZV79_GAuyl4AaABAg", "comment": "Curious. Why did you assign head to current? Could you traverse the list with head instead? If not, why?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzOlvFAzRq3MDhS2ch4AaABAg", "comment": "class Node:\r     def __init__(self, data):\r         self.data=data\r         self.next=None\r class LinkedList:\r     def __init__(self):\r         self.head=None\r     def push(self,new_data):\r         new_node = Node(new_data)\r         new_node.next = self.head\r         self.head = new_node\r     def getCount(self):\r        temp = self.head\r        count = 0\r        while(temp):\r            count+=1\r            temp=temp.next\r        return count\r if _name_ =='__main__':\r     li= LinkedList()\r     li.push(3)\r     li.push(5)\r     li.push(6)\r     li.push(3)\r     print(\"The number of nodes in the Linkedlist is:\", li.getCount())", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxYNiaWZ6Y6L_otdmB4AaABAg", "comment": "Thank you!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwRN_BtP59ZyntPb3Z4AaABAg", "comment": "static int countNodes(Node head){      int count =0;      Node current=head;      While(current != Null){             count++;             current=current.next;        } return count;", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzSTesxaIeSIqUE4yl4AaABAg", "comment": "What is the software you use for visualization?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwwNFRbg4SPOyni09t4AaABAg", "comment": "thank you!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxRBf7_AyiqeAyBfMl4AaABAg", "comment": "helo sir just born n come from maternity ward inspired by u", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgypL-mzduooYURWlY94AaABAg", "comment": "Haven't tried to run this.but run it if u can and let me know what you think int countNodes(Node head){     int size = 1;     Node temp = head.next;     while(temp!=null){        temp = temp.next;        size++;     }     return size; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwTzpKVhhZqLh_EjQR4AaABAg", "comment": "Damn, your explanation is so easy to understand", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxPZSSBu6jlVyF7e5x4AaABAg", "comment": "class Node:     def __init__(self, givendata):         self.data = givendata         self.next = None  def countnodes(head):     count = 1     while True:         if head.next == None:             break         else:             count += 1             head = head.next     print(count)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw8yZmw3NR3anXYVKR4AaABAg", "comment": "public static int countNodes(Node head) {\r \t\tNode currentNode = head;\r \t\tint length = 1;\r \t\twhile(currentNode.next != null) {\r \t\t\tcurrentNode = currentNode.next;\r \t\t\tlength++;\r \t\t}\r \t\treturn length;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyVG9hcL67MLj4aGSh4AaABAg", "comment": "int a = 1;\r \r static int countNodes(Node head) {\r     while(head.next != null){\r \t  head = head.next;\r \ta += 1;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxnnpx_1hrpQbNXXZF4AaABAg", "comment": "This video is better than the class that I purchased", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxfAPkr93yBKDRQg6t4AaABAg", "comment": "This is the best explanation of a Linked List BY FAR. Great job!", "votes": "3", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzc-jwRPDYBalE3Pep4AaABAg", "comment": "why am i even paying for online school when youtubers do it better", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwuwEo6wrHXIRauPBJ4AaABAg", "comment": "Language :- Java  static int nodecount(Box head) {\r     \tif (head == null){\r     \t\treturn 0;\r     \t}\r     \treturn nodecount(head.nextBox)+1;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxa-hATsOXQcsCY8gh4AaABAg", "comment": "Tried solving it in python. Does this work?  def count_nodes(head):      count = 1      current = head      while (current.next != null):           current = current.next           count += 1      return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy-vOKqlIyUgPW38F54AaABAg", "comment": "At 8:50 , You said we could create the class LinkedList{} to simply the list of code that is on the right hand screen to create and link node to each other. For some reason I did not see it in your example. Could you please give me some idea what code could put in class LinkedList{} ? Thank you very much your lecture.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgziyvfUHzQsTSTCxOV4AaABAg", "comment": "Quick question. This is my while loop.  while (nodePointer.next != null) {\r \t\tlengthCounter +=1;\r \t\tnodePointer = nodePointer.next;\r \t\t}  Does it matter if the counter increments before or after the pointer moves? I'm assuming it doesn't matter.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxshcfgq09_IyYn6xZ4AaABAg", "comment": "I literally understand this compared to my modules I suffered a lot because this wacky visuals in my module.  Thanks sir, this help a lot this time of crisis.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzSTEFD9IVHGSg8KKZ4AaABAg", "comment": "public static int countNodes(Node head) {   if (head == null) return 0;   Node temp = head;   int count = 1;   while (temp.next != null) {     count += 1;     temp = temp.next;   }   return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx-FNG6HdaaiGRdkcp4AaABAg", "comment": "\u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u043d\u0430\u043a\u043e\u043d\u0435\u0446-\u0442\u043e \u043f\u043e\u043d\u044f\u043b \u0441\u0432\u044f\u0437\u043d\u044b\u0435 \u0441\u043f\u0438\u0441\u043a\u0438", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxyvv2AbjRP6WFxJY54AaABAg", "comment": "class Node{ int data; Node next=null; public Node(int d){ data=d; } void appendToTail(int d){ Node end= new Node(d); Node n=this; while(n.next != null){ n=n.next; } n.next=end; }} ps: pls correct if wrong.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz7W1w9sbiujcVMtWZ4AaABAg", "comment": "recursive with python: def countNodes(node):\r     if(not node.next):\r         return 1\r     else:\r         return countNodes(node.next) + 1   short way using ternary operator : def countNodes(node):\r     return 1 if not node.next else countNodes(node.next) + 1", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxs-jyzGfePQy8XH-V4AaABAg", "comment": "where i can get tthis code", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzRjDATzE9nrEHxfKV4AaABAg", "comment": "static int countNodes(Node head){             // return the number of nodes in this linkedList             int compt = 1;             while(head.next!= null){                 head = head.next;                 compt++;             }             return compt;         }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyeF4truUIuZImxJ1Z4AaABAg", "comment": "continue data structure series in java lots of love from\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3plz continue linkedlist,  stack , Queue etc.plzz plzz", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxFzUeq77LG6V3k-AV4AaABAg", "comment": "continue data structure series in java lots of love from\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3\ud83c\uddee\ud83c\uddf3plz continue linkedlist,  stack , Queue etc.plzz plzz", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzn8jzwnWNi0m3K85Z4AaABAg", "comment": "Ohh my goodness! You are doing such a brilliant things. I trully appreciate your dedication as this content really sharp my mind regarding to LinkedList. By the way, I wonder what's sort of software you used to draw stuff like that. Hopefully you'll reply my comment \ud83d\ude1c Love from Viet Nam \ud83c\uddfb\ud83c\uddf3", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzpPS9VGm-TC0Y_9EB4AaABAg", "comment": "so helpful thank you!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxq9Fsk_Z749s72sqh4AaABAg", "comment": "would this work?? (javascript)   def countNodes(head){\r \tdef next_node = head;\r \tdef num = 1;\r \twhile(next_node){\r \t\tnext_node = next_node.next;\r \t\tif (next_node == null)\r \t\t\tbreak;\r \t\tnum++;\r \t}\r        return num }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz4dKgMT53t4yuZWD94AaABAg", "comment": "Don't understand closed caption stopped working after 2 minutes. Apparently, I missed essential presentation :(", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxWo1extVaWbxZT5M54AaABAg", "comment": "Thank you so much!!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxB-_0XWTBBRguNSaV4AaABAg", "comment": "Thanks so much, I am now connecting the dots that never made sense. Be blessed.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwE5c7HAM_1dfiPRep4AaABAg", "comment": "Another solution using Python      def countNodes_(self, headval):           currentNode = headval.next_val         if currentNode is not None:             return 1 + self.countNodes_(headval.next_val)         else:             return 1", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxsHP0ChDmzbbVgmUF4AaABAg", "comment": "My countNode method using Python is:       def countNodes(self):         headval = self.headval         countNode = 0                  while (headval is not None):             countNode += 1                          headval = headval.next_val                  return countNode", "votes": "2", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx10CSgdpi4XxdIkBd4AaABAg", "comment": "Hello, thank you for this video. I am new to programming and so far no experience with Java but some POO. I do not understand why at 04:30 it is said that this.data will set givenData. As there is an equal from givenData to this.data I was thinking it was givenData which was set to this.data. Maybe I am wrong or I didn't understand properly. Thank you for any reply. Best Regards Mathieu", "votes": "1", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz-FDCodtr-FdwtUxJ4AaABAg", "comment": "By far one of the best tutorials I have seen, thank you so much \u2764\ufe0f", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxCYC55j6OJXlYr_el4AaABAg", "comment": "What about for each?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyD0lSxSLD4elRESlF4AaABAg", "comment": "Where is the next detailed session of LL please?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwXoQffPSpRkEwMY594AaABAg", "comment": "Not sure this is totally right, but I think it looks good. Python solution:  def countNodes(head):     node_counter = 1     next_try_list = [ ]     next_try = \"\".join(next_try_list)     while head(next_try):         node_counter += 1         next_try_list.append(\".next\")     return node_counter", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgykG_W3cJPyYeNhKHd4AaABAg", "comment": "TS recursion:  class Node {   next: Node;   constructor(public data: number) {} }  const head = new Node(2) const n2 = new Node(3) const n3 = new Node(4) const n4 = new Node(5)  head.next = n2; n2.next = n3; n3.next = n4;  function countNodes(node: Node): number {   if(node.next == null) {     return 1;   }   return 1 + countNodes(node.next); }  console.log(countNodes(head))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy5YExev6pekHI_IRt4AaABAg", "comment": "int countNodes(Node head){    int count = 0;    Node node = head;    while( node != null){       count++;       node = node.next;    }    return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyiGQWf2FOjfWGWYk94AaABAg", "comment": "Does this.data serve the same purpose as that of nodeA. data?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzOaa-Z8mgZunBdlwJ4AaABAg", "comment": "The best lecture", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugygdvx6A99veMn9UWh4AaABAg", "comment": "Almost same as yours. Just didn't reassign head.  Also started at 0 since head iterates to next in the loop itself, so no need to condition head.next  public int countNodes(Node head) { \t\tint i =0; \t\twhile(head!=null) { \t\t\thead = head.next; \t\t\ti++; \t\t} \t\tSystem.out.println(\"There are: \" + i + \" nodes\"); \t\treturn i; \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz_I2lEyC4_0uscMmx4AaABAg", "comment": "What if the first node is null? Should you initialize counter = 0 then?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzEAb2NDLw8JvTOFKt4AaABAg", "comment": "It really helped me.Thank you", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwKVHCVQ3nkINndzqt4AaABAg", "comment": "I actually understood this!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz8MmEeICIcJ0YY_fh4AaABAg", "comment": "Hello YK,   This is my first self learned small program to find the numbers of nodes. Your teaching is really excellent.   I have written it in C# as following,   namespace ConsoleApp1\r {\r     public class Node\r     {\r         int data;\r         public Node next;\r \r         public Node(int data)\r         {\r             this.data = data;\r         }\r     }\r     class Program\r     {\r         static void Main(string[] args)\r         {\r             Node head = new Node(4);\r             Node nodeA = new Node(2);\r             Node nodeB = new Node(3);\r             Node nodeC = new Node(10);\r             Node nodeD = new Node(2);\r             Node nodeE = new Node(23);\r             Node nodeF = new Node(123);\r \r \r \r             head.next = nodeA;\r             nodeA.next = nodeB;\r             nodeB.next = nodeC;\r             nodeC.next = nodeD;\r             nodeD.next = nodeE;\r             nodeE.next = nodeF;\r \r             System.Console.WriteLine($\"Total numbers of nodes are : {CountNodes(head)}\");\r         }\r \r         static int CountNodes(Node head)\r         {\r             int totalCount = 1; // consider count of head as 1\r             Node currentNode = head;\r             while (currentNode.next != null)\r             {\r                 totalCount++;\r                 currentNode = currentNode.next;\r             }\r             return totalCount;\r         }\r     }\r }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwgtrF2K7dnWkpTrqp4AaABAg", "comment": "def countnodes(node):\r     if node.next==None:\r         return 1\r     else:\r         return 1+countnodes(node.next)", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg", "comment": "When a YouTube video teaches you better than your programming professor at University lol", "votes": "753", "replies": "24", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxsHP0ChDmzbbVgmUF4AaABAg.9E4fVXpsde79EH6vCnJxQT", "comment": "Sorry just starting to learn, what does 'headval = self.headval' do in this code?", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxsHP0ChDmzbbVgmUF4AaABAg.9E4fVXpsde79EHC_sgbMEG", "comment": "\u200b\u00a0@green959\u00a0  I am assigning the variable headval to the head of the single linked list. For example: My single linked list is: 1 -> 2 -> 3 -> 4 -> 5. The head of it is the number 1.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugx10CSgdpi4XxdIkBd4AaABAg.9E-VBmo5Scx9QYnsT-nfsK", "comment": "public class Node {\r \r \tint data;             ---------> the int data is a class attribute.\r \tNode next;\r \t\r \tNode(int data){          ----------------> here the int data is a parameter which basically means you can pass an argument/value in your constructor \r \t\tthis.data = data;  ---------------> this.data just points out the int data class attribute and sets to whatever the value/argument of the data parameter.\r \t}\r \t\r }\r  so if when he created this one,  Node nodeA = new Node(6)   ------> the 6 is the argument/value for the parameter data of the Node constructor so basically Node(int data) is Node (6) then he puts it in nodeA", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9Ey7S2rSBSc", "comment": "Exactly!", "votes": "5", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9FEpAicCbYh", "comment": "it always to be like that", "votes": "10", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9G9f8UO0I0I", "comment": "@Xiogenes You're paying money for the syllabus....lol", "votes": "20", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9GytUxRY6s1", "comment": "Cant agree more. My professor explains it so terribly that my brain went spaghetti ...", "votes": "23", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9HyxawSUhzz", "comment": "\u00a0@ysheepy4907\u00a0 tasty lol", "votes": "2", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9JNvzRFgoa3", "comment": "it always be like that", "votes": "2", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9KeaCUxTnIl", "comment": "lmao true", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9LAUoXStE4x", "comment": "Legit lol XD  I get array lists, but man, linked lists are harder and this video helped explain it XD", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9LoWCmCNZwy", "comment": "damn true, i feel like being scam by college", "votes": "5", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9NddFmYEAg-", "comment": "Then let's stop going to school then XD", "votes": "2", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9OjJiOGUOpW", "comment": "No tension bro I'm one of u \ud83d\ude02\ud83d\ude02", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9P0DQvVF9uA", "comment": "Facts", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9PDq9C3OSpR", "comment": "agreed mate, i was struggling here until i found this vid", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9Px3rT-P7dc", "comment": "Dude I know right lol. Why am I in college? Oh thats right I remember the piece of paper that guarantees me level up.", "votes": "4", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9SEfcNqoX8t", "comment": "It's not like that.  There are many bad professors and few great professors in universities. YouTube has many videos made by bad teachers and a few good ones like this guy. In college, you have no choice but to listen to the professor you're assigned with. But here you can choose who to listen to. Also, it's free and fun. The bad videos are filtered by YouTube's algorithm. You only see the videos that are highly engaging most of the time, which makes you think that College education is very ineffective. Mostly it is, but so is YouTube's if there is no Algorithm to filter the bad ones.", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9YOSAcKslsa", "comment": "True", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9fqbgDgDUgM", "comment": "\ud83d\ude01\ud83d\ude01\ud83d\ude01\ud83d\ude01", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9hA7_pQelEc", "comment": "\u00a0@realnice3672\u00a0 Mom's Spaghetti", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9jUa9gNzTKI", "comment": "For real!", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9mxyrbWenbJ", "comment": "Professors in the natural sciences tend to be terrible but programming instructors especially lack the social skills and ability to dumb down topics without rambling.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9mzY79tGKwu", "comment": "@marina Then why are you watching the video?", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9o6t2fZandJ", "comment": "You just go to a bad university", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYH9wNk3nZZX3W", "comment": "\u00a0@manicking\u00a0where do you go?..", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugwd29B_V7WOUoQWevx4AaABAg.9D0gGzSgRYHA0sVEE_pn6F", "comment": "So true!", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzM9s96XdNKgWzcD_N4AaABAg", "comment": "public static int countNodes(Node head) {\r     int count = 1;\r     if (head.next != null) {\r         count += countNodes(head.next);\r     }\r     return count;  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyLWMrDM8dnMHBgFXl4AaABAg", "comment": "thank you :)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyU07he5006eLoL-g54AaABAg", "comment": "Good explanation Dojo!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxKoPTit58e6IwzHD14AaABAg", "comment": "\ud83e\udd13\ud83d\udc4d", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzpKrdbAh9k0kWjik54AaABAg", "comment": "Ruby def count_node   count=1   while head.next != null     count +=1   end end", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyj-8NSbHePn3sZJkJ4AaABAg", "comment": "https://youtu.be/N2Pe9KpvUsM", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyRbXD7QP9EkfYUJEF4AaABAg", "comment": "Off topic, but I sincerely wonder why all youtubers who sort of \"arrive\" between cuts feel more interesting? Dojo is of course awesome as he is but he becomes even more awesome when arriving like he does, for example, at 2:40 into this video... He and all youtubers who do the same. I consider Michael Stevens (Vsauce) as the true master in this practice... A practice I don't even know why it's making contents more interesting.  Have a nice day every one!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy3xBsnTiCACsqNeQV4AaABAg", "comment": "def countNodes(linked_list_head):     total = 1     current = head     while current.next != None:         total += 1         current = current.next     print(total)  This works in python if the linked list starts with a node called \"head.\"", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwACAo_Fj81u6d0qVt4AaABAg", "comment": "Linked List in JavaScript: class Node {                Node next = null;                int data;    public Node(int d) {                  data = d                   }    void appendToTail(int d) {                   Node end = new Node(d);                   Node n = this;             while (n.next != null) {                      n = n.next;                    }             n.next = end;              }    }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwX_78mHqNzqEAYvC14AaABAg", "comment": "My solution in Python3 # this is how I define my Node() class class Node:     def __init__(self, data=0, next=None):         self.data = data         self.next = next # then I created the four nodes under _main_ function # my function to count nodes (assuming head can be null) def countNodes(head):     if head != None:         count = 1         curr = head         while curr.next != None:             count += 1             curr = curr.next         return count     return 0", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxcvn_SRB7G_uaf9qN4AaABAg", "comment": "Really proud of myself for doing this without looking at any hints. I don't get a lot of exercise questions. I love your method of teaching My Java Code:  public class LinkedList {\r \r     public static void main(String[] args) {\r         Node head = new Node(6);\r         Node nodeB = new Node(5);\r         Node nodeC = new Node(5);\r         Node nodeD = new Node(5);\r         Node nodeE = new Node(5);\r \r         head.next = nodeB;\r         nodeB.next = nodeC;\r         nodeC.next = nodeD;\r         nodeD.next = nodeE;\r \r         System.out.println(countNodes(head));\r     }\r \r     static int countNodes(Node head){\r         int count = 1;\r         Node current = head;\r         while(current.next != null){\r             count++;\r             current = current.next;\r         }\r         return count;\r     }\r }", "votes": "40", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyA5fFEGXu_yQ7ic5t4AaABAg", "comment": "my Java Code  static int countNodes(Node head) {\r \t\t\r \t\tint count=1;\r \t\twhile (head.next != null) {\r \t\t\tcount+=1;\r \t\t\thead=head.next;\r \t\t\tcountNodes(head);\r \t\t}\r \t\treturn count;", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwrBlWUA_kUj3B8stF4AaABAg", "comment": "i did the countNodes problem as follows:  package linkedList;\r \r public class CountingNode {\r \tpublic static void main(String args[]) {\r \t\r \tclass Node{\r \tint data;\r \tNode next;\r \tNode(int data){\r \t\tthis.data=data;\r \t}\r }\r Node head = new Node(4);\r Node nodeB = new Node(2);\r Node nodeC = new Node(3);\r Node nodeD = new Node(10);\r Node nodeE = new Node(2);\r \r head.next = nodeB;\r nodeB.next = nodeC;\r nodeC.next = nodeD;\r nodeD.next = nodeE;\r \r Node temp = head;\r int count =0;\r while (temp!=null) {\r \tcount++;\r \ttemp = temp.next;\r }\r System.out.println(\"total number of nodes: \"+count);\r }\r \t\r }    please share ur reviews. I tried to create a  new method to count but it was giving me error if i use Node class. Please help me to resolve that too. thanks.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyvOHg5bLVLnv-29o94AaABAg", "comment": "def count_nodes(head):\r     \"\"\"Node counting function\"\"\"\r     x = 0\r     while True:   \r         try:\r             head = head.get_next() # calling each item in the linked list one by one\r         except AttributeError:\r             break              # when there are no more items to call the loop will break\r         x +=1   \r \r     return print(x)", "votes": "0", "replies": "3", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzRP7q-bFQlpQ-sHop4AaABAg", "comment": "So many ads in just 20 mins?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxmUM2hNQs8acScVS94AaABAg", "comment": "Really helpful and simply explained, thank yoU!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwMTCkY1Knjib3cSs54AaABAg", "comment": "Hi YK - Thanks for your valuable teaching.. I have a doubt  While defining data type of next(attribute) - you gave datatype as class name.. How it works here..", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxFshBFpdejCkP2HB94AaABAg", "comment": "Don't we use structure instead of class?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzmkrKMT79LxYaWIVp4AaABAg", "comment": "My attempt in Python  count = 0; def countNodes(head) { \tif (node.next != null) \t{ \t\tcount ++ \t\tnode = node.next \t\treturn \t} \telse \t{ \t\tprint(\"there total number of items in the list are \" + count) \t\treturn  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzcHyUrOZSVhaPksSh4AaABAg", "comment": "God bless you", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxcvn_SRB7G_uaf9qN4AaABAg.9C6gD55clqw9vwFEfDOTHB", "comment": "it doesn't run tho", "votes": "2", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugxcvn_SRB7G_uaf9qN4AaABAg.9C6gD55clqwA-D-jVZl995", "comment": "\u00a0@user-bn9ee1jg4i\u00a0 his code is fine", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyvOHg5bLVLnv-29o94AaABAg.9BzgcSDzWZ69Bzgn_Kqgr5", "comment": "and this my whole code (the node class + node counter function )in python 3 # making class node or box to make a  linked  list \r class Node:\r     \"\"\" node construction class\"\"\"\r     def __init__(self, data):\r         \"\"\" taking the data attribute and set next to null till there are established linked node\"\"\"\r         self.data = data\r         self.next = None\r         self.counter =0 \r     def get_data(self):\r         \"\"\" returning the data inside the box\"\"\"\r         return self.data\r \r     def set_data(self, data):\r         \"\"\"replace the data inside the box\"\"\"\r         self.data = data\r         \r     \r     def get_next(self):\r         \"\"\"show the next node\"\"\"\r         return self.next\r \r     def set_next(self, next):\r         \"\"\"assigning the next node\"\"\"\r         self.counter += 1\r         self.next = next\r         \r \r def count_nodes(head):\r     \"\"\"Node counting function\"\"\"\r     x = 0\r     while True:   \r         try:\r             head = head.get_next() # calling each item in the linked list one by one\r         except AttributeError:\r             break              # when there are no more items to call the loop will break\r         x +=1   \r \r     return print(x)", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyvOHg5bLVLnv-29o94AaABAg.9BzgcSDzWZ69BzhQdffkfp", "comment": "a more reliable solution in python 3 : def count_nodes(head):\r     \"\"\"Node counting function\"\"\"\r     x = 0\r     while head != None:   \r         head = head.get_next() # calling each item in the linked list one by one\r         x +=1   \r         \r     return print(x)", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyvOHg5bLVLnv-29o94AaABAg.9BzgcSDzWZ69BzjIzeoa-h", "comment": "# final code in  python 3 # making class node or box to make a  linked  list \r class Node:\r     \"\"\" node construction class\"\"\"\r     def __init__(self, data):\r         \"\"\" taking the data attribute and set next to null till there are established linked node\"\"\"\r         self.data = data\r         self.next = None\r         self.prev = None\r \r     def get_data(self):\r         \"\"\" returning the data inside the box\"\"\"\r         return self.data\r \r     def set_data(self, data):\r         \"\"\"replace the data inside the box\"\"\"\r         self.data = data\r         \r     \r     def get_next(self):\r         \"\"\"show the next node\"\"\"\r         return self.next\r \r     def set_next(self, next):\r         \"\"\"assigning the next node\"\"\"\r         self.next = next\r     \r     def get_prev(self):\r         return self.prev\r \r     def set_prev(self, prev):\r         self.prev = prev\r \r      \r def count_nodes(head):\r     \"\"\"Node counting function\"\"\"\r     x = 0\r     while head != None:   \r         head = head.get_next() # calling each item in the linked list one by one\r         x +=1   \r \r     return x", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyHEaOemjnU62L553t4AaABAg", "comment": "Solution in Javascript:  var start = head\r var count = 1\r \r while (start){\r \r     start.next ? count += 1 : count\r \r     start = start.next\r }\r \r console.log(count);", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwLfJdH1eMWoMu6kAd4AaABAg", "comment": "This is by far one of the best explanations I've ever seen about Linked Lists, especially for people like me that don't have a CS background.", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy17l818x6mm-LTWjN4AaABAg", "comment": "Excellent teaching technique, thanks a lot for making it easy to understand. It would be great if you can add a video for Hash Table and other Data structures. Everyone on google make it very complex to understand.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgztRyRAR37_86ii1f14AaABAg", "comment": "You are \ud83d\udc51 .", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgygZM0wtOY7TbXzH_J4AaABAg", "comment": "how about:  def count_nodes(head):   if head==null:     return 0   return 1+count_nodes(head.next)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwmukrd4q-HSZrCj_p4AaABAg", "comment": "I dont understand how can the current know that the current.next is the next node that was made?If the answer is because in the node class creates a Node next attribute how can you create two different LinkedLists?If my question does not make sense please tell me to ask it diffrently", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgylleaHFbGDolX5Ycd4AaABAg", "comment": "# Python code def countnodes(node):\r     count =1      while (node.nextval!=None):\r            count+=1\r            node = node.nextval\r       return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxWZHkNqXa85-1gfyF4AaABAg", "comment": "Waiting for your next videos. Love your teaching. Great Learning with a great teacher", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzkim6LZTUUTgbOeM54AaABAg", "comment": "Thank you YK for your clear explanation and samples :)", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyKOAdsDDHZAQdAUbd4AaABAg", "comment": "\u56fd\u5916\u5f00\u53d1\u8005\u4e5f\u8fd9\u4e48\u591a\u554a", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyv4uVR1ZGBI1zdv7R4AaABAg", "comment": "i don't know why but he looks kinda ripped in this video", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx0cIWz83en3MRFdz54AaABAg", "comment": "Excellent videos! easy to follow and very well organized, awesome job CS Dojo!", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxC7_gPtxsYGiMIV5F4AaABAg", "comment": "Hey Dojo what software are you using to tech us code or to hide code and then you click on that area the code just appears.Please tell me the name..I beg you", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwPUxQpQHeVSnX3HHx4AaABAg", "comment": "Integer counter = 1;\r     public  integer countNodes(Node head) {\r             if(head.Next != null) {\r                 head = head.Next;\r                 counter++;\r                 return countNodes(head);\r             }\r         return counter;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxmAM0toXRuvMwN8O94AaABAg", "comment": "These vids are great but why does he use a headset like he's Steve Jobs?", "votes": "0", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyKhv9wKq-BcQyj4qh4AaABAg", "comment": "i dooont know javaaaaaaaaaaaaaaaaaaaaa", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxb5zLMRmrC1j8PqPR4AaABAg", "comment": "I've never been so clear as coming to listen to your explanation. Thank you!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgytiJABD4hHbBLbOJh4AaABAg", "comment": "Sir please could we have data structure and algothm  lesson posted in c++ language", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwOG38321loA-MKPep4AaABAg", "comment": "Good video", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy_xn2lc1hpw-repfN4AaABAg", "comment": "my solution in java.  public int countNode(){         int count = 0;         //return 0 if list is empty.                  if (mHead == null){             return 0;         }         Node lastNode = mHead;         //iterate over the whole list and incrementing count variable by 1 till reaching the last node in the list.                  while(lastNode.getNext() != null){             lastNode = lastNode.getNext();             count++;         }         return count;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwLfJdH1eMWoMu6kAd4AaABAg.9BjEvu80yJv9CHSOfA_zt6", "comment": "Hi", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxmAM0toXRuvMwN8O94AaABAg.9Ao-OU6YgI89AtUI0NoTmG", "comment": "For the audio. The microphone makes his voice much more audible. Better for us", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxmAM0toXRuvMwN8O94AaABAg.9Ao-OU6YgI89Aua27kmUr3", "comment": "\u00a0@uryybgurer9711\u00a0 he could easily buy a clip on mic that would give the same performance.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxhKUQN9Aj3F2UR5254AaABAg", "comment": "Very clever example..", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyjzimDeIiPPXsfGtV4AaABAg", "comment": "int countNodes(Node head){\r     int count = 0;\r     for(int i=0; i<Node.length();i++)\r     {\r       count++;\r     }\r     return count;\r   }\r closest I could get Node.length doesnt work so idk", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyMO3iFWHuPs9JVE894AaABAg", "comment": "Class Node:      def __init__(self,data):            self.data = data            self.next = None Class Linkedlist:       def __init__(self):             self.head = None       def countnodes(sef):             if self.head is None:                 return 0            else:                   cn = self.head                   count = 1                   while cn.next!=None:                         cn = cn.next                         count+=1                   return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz3j2Z5wIw4NKaCNqh4AaABAg", "comment": "the best tutorial ever.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwZRlgPRx5VUgKRuFN4AaABAg", "comment": "Nicely explained, can you please show this class, linkedlist in memory as you did for video of array inside memory... That was fun to know what's inside..", "votes": "4", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwKwOEL72zB4K_cIel4AaABAg", "comment": "I did this in C, but i increased and asked the user to put how many numbers he would like to save. the result is:  #include <stdio.h>\r #include <stdlib.h>\r struct Node \r {\r     int data;\r     struct Node *next;\r };\r \r int main(void)\r {\r     int i;\r     \r     printf(\"How many numbers you wanna put?\\n\");\r     scanf(\"%i\", &i);\r     \r     struct Node* n[i];\r     \r     for(int a = 0; a < i; a++)\r     {\r         n[a] = (struct Node*) malloc(sizeof(struct Node));\r     }\r     \r     for(int a = 0; a < i; a++)\r     {\r         printf(\"Put the number you wanna save in node[%i].\\n\", a);\r         scanf(\"%i\", &n[a]->data);\r         if(a == i - 1)\r         {\r             n[a]->next = NULL;\r         }\r         else\r         {\r             n[a]->next = n[a+1];\r         }\r     }\r     int count = 0, a=0;\r     do\r     {\r     \tif(n[a]->next != NULL)\r     \t{\r \t\t\tcount++;\r     \t\ta++;\r     \t}\r \t\telse\r \t\t{\r     \t\tcount++;\r     \t\tbreak;\r     \t}\t\r \t} while(1);\r     \r     printf(\"The number of nodes is %i \\n\", count);\r     \r     return 0;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgytBlns59sUal_YawR4AaABAg", "comment": "public static int countNodes(Node head) {\r \r         Node currentNode = head;\r         int nodes = 1;\r \r         while (currentNode != null) {\r             currentNode = currentNode.getNext();\r             nodes++;\r         }\r \r         return nodes;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyy24IIWS8MOUTrfa94AaABAg", "comment": "Python code at 11:52 is wrong", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy_Pnq9yqbUIKD_pnt4AaABAg", "comment": "int countNodes(Node Head) {        // assuming head is not null     int count = 1;     while (head.next() ! null) {              ++count;     }      return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy-KXGpxYj3OtTMzg54AaABAg", "comment": "The above solution in C-language is int count=1; temp=node; While(temp->next != NULL) {          count++;          temp=temp->next; } printf(\"%d\\n\", count);", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz7dYXjjLZbd31dr0p4AaABAg", "comment": "Please create more video on data structure . Another level of learning experience after watching this .", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzFUxC7mduwxiFjtSV4AaABAg", "comment": "Java: I'm fairly confident this recursive idea will work, but I'm not sure if the condition should be that or if head.next.data is null. static int countNodes(Node head) {     private int count = 0;     if(head.next == null) return 1;      else {     return countNodes(head.next) + 1;     }     return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyYY-OR1LniZfnHS2p4AaABAg", "comment": "def No(head): \t\tn=1 \t\twhile head.next: \t\t\tn=n+1 \t\t\thead=head.next \t\treturn n", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz_e4FiigS44pV6ORR4AaABAg", "comment": "def\u00a0countNodes(self): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0node\u00a0=\u00a0self.head \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0counter\u00a0=\u00a00 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while\u00a0hasattr(node,\u00a0'data'): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0counter\u00a0+=\u00a01 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0node\u00a0=\u00a0node.next \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0counter", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwvOAb_3MIuSnIo0k54AaABAg", "comment": "THANK YOU LOVE YOU BRO", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyD2K7hPf33LHY260Z4AaABAg", "comment": "Sir, im pretty new to this topic and i want to know that the \"new\" should be used in dealing with Linked list??", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxb6AE2M4JE9jeg42x4AaABAg", "comment": "In Python I would write the function like this:  def CountNodes(head):        head = current        counter = 1        If current.next is None:        return counter        while current.next:                  current = current.next                  counter += 1        return counter", "votes": "1", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyQmFtib8YSnSkvNBJ4AaABAg", "comment": "Nobody posted recursive solution so here it goes: #Python code def countNodes(head):\r     if head.next is None:\r         return 1\r     else:\r         return 1+countNodes(head.next)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzLnYMyH_23M-5sGnl4AaABAg", "comment": "Ok, trying something from my phone  int countNodes (Node head) {     bool notFound = true;     int numOfNodes = 0;      while (notFound) {         if (head.next == null)             notFound = false;         numOfNodes++;         countNodes(head.next); } return numOfNodes; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxwmZlzK5NTjGyrXx94AaABAg", "comment": "I am new to Java but I get some sort of deja vu on linked list. It's kinda like itertools module in Python", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyD2K7hPf33LHY260Z4AaABAg.99UfqOmRF4199axZo3mC2x", "comment": "no it is used to create an obj", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugxb6AE2M4JE9jeg42x4AaABAg.99UV14_Am6Y9EE43vkcBlZ", "comment": "Finally got one!!,Thanks!", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugxb6AE2M4JE9jeg42x4AaABAg.99UV14_Am6Y9EE4TiNC7Bu", "comment": "No, its wrong!", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugw3dBoeXgiFjv8L4KR4AaABAg", "comment": "My solution with Javascript:                                                 //Node constructor function Node(int) { \tthis.data = int; \tthis.next = null;      }  const a = new Node(6); const b = new Node(3); const c = new Node(5); const d = new Node(9); const e = new Node(1);  a.next = b; b.next = c; c.next = d; d.next = e;   //iterating through nodes function numberOfNodes(head) {  \tvar numberOfNodes = 1; \tvar currentNode = head; \t \twhile(currentNode.next !== null) { \t\tnumberOfNodes++; \t\tcurrentNode = currentNode.next; \t     \t} \t \treturn numberOfNodes;      }  alert(numberOfNodes(a));", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyD5LBqrzrNKdFWVJB4AaABAg", "comment": "static int countNodes(Node head) {\r \t\tint count = 1;\r \t\t\r \t\twhile(head.next!=null) {\r \t\t\thead= head.next;\r \t\t\tcount++;\r \t\t}\t\t\r \t\t\r \t\treturn count;\r \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgygsptHh8WbTh_2gCN4AaABAg", "comment": "I used this: int countNodes(Node head) { \t    if (head.next != null) \t        return 1 + countNodes(head.next); \t    else     \t    return 1; \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzPJOiwa_FJwCfwFht4AaABAg", "comment": "Thank you very much)), step by step and very simple.", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxZ5VMhM7JoAoBYidV4AaABAg", "comment": "I hate recursion", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy3CKy3gHpHY2S__4l4AaABAg", "comment": "int count ; while ( head ! = NULL) {         count++;         head= head-> next; } return count;", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxWHzOLaqJ-_XrdgB14AaABAg", "comment": "function countNodes(head){     let nextNode = head.next;     let counter = 1;       while(nextNode != null){         nextNode = nextNode.next;         counter++     }     return counter; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxCa8rakNpV90QoT5h4AaABAg", "comment": "should I have to correct it, my vs code terminal is showing 108 problems in this sample code but it's still running", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz7cIJJsUn28H_T8Hl4AaABAg", "comment": "Here's my attempt in 3 months into trying to learn coding online ... any tips much appreciated   class NodeCreator {\r     // Creates Basic class for nodes\r     name = '';\r     linkedTo = null;\r     linkedFrom = null;\r       constructor(name) {\r         this.name = name;\r       }\r     }\r     \r     class LinkNodes {\r     // Links nodes together\r     nodeData = []; // Stores node data in an array\r         constructor(n1, n2, n3, n4, n5, n6, n7, n8, n9) {\r         let i = 0;\r         let argArray = [n1, n2, n3, n4, n5, n6, n7, n8, n9];\r     \r         while (i < 10) {\r             if (argArray[i]) {\r             argArray[i].linkedFrom = argArray[(i-1)] || null;\r             argArray[i] = argArray[i];\r             argArray[i].linkedTo = argArray[(i+1)] || null;\r             this.nodeData.push(argArray[i]);\r             i++;\r           } else {\r               break;\r           }\r         }\r       }\r     \r     }\r \r     var countNodes = (node) => {\r         // logs linked nodes behind and in front plus a total sum\r         let next = 0;\r         let prev = 0;\r         let result = '';\r             if (node) {\r                 let currentnode = node;\r \r                 while (currentnode = currentnode.linkedTo) {\r                         next++;\r                     }\r                 currentnode = node;\r                 while (currentnode = currentnode.linkedFrom) {\r                     prev++;\r                     }\r \r             result = `This node is linked to ${next} other nodeects\\n\r This node is linked from ${prev} other nodeects\\n\r The total amount of nodes is ${(next+prev)+1}`;\r             console.log(result);\r             }\r  }\r     \r     \r     node = new NodeCreator('zero');\r     \r     node1 = new NodeCreator('one');\r     \r     node2 = new NodeCreator('two');\r     \r     node3 = new NodeCreator('three');\r     \r     linkedNodes = new LinkNodes(node, node1, node2, node3);", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy0fkGp6-p5Ef4GlH94AaABAg", "comment": "Nice video. I hope to see one explaining what linked lists are used for in the real world so I can conceptualize it better.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxdOCHKH0rBirXMs694AaABAg", "comment": "Like your videos!  I get that linked lists are a required topic to understand for purposes of passing tests (either at university or for a job screening), but the reality is that linked lists are practically useless, at least in 99%+ of cases. Almost all of the time, you\u2019d get much better performance using a dynamic array (called a vector in C++).  I know: supposedly linked lists have better performance for random insertions and deletions. Supposedly.  But the fact is that CPU caches work MUCH better with arrays than with linked lists. On average, Linked lists incur a cache miss EVERY TIME you want to advance your iterator, whereas dynamic arrays only incur a cache miss once per SizeOf(CPU Cache)/SizeOf(YourDataType)  So yeah, nice explanation, but basically don\u2019t use linked lists, almost ever.  The only conceivable situation where linked lists win over vectors despite their poor cache performance is when you want to MAINTAIN AN ITERATOR TO A RANDOM POSITION in the list - a position where you KNOW that your next insertion or deletion will be performed. Such situation is very rare and I can\u2019t even think of an example.  So yeah, that\u2019s linked lists, now don\u2019t use them cause they almost always suck.", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw4YzUatIvYr0BkP-R4AaABAg", "comment": "Thank you CS Dojo.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyVGPJjW9_ytX97RjB4AaABAg", "comment": "public class Node\r     {\r         private int data;\r         public Node next;\r         public Node(int data)\r         {\r             this.data = data;\r         }\r \r         public int countNodes()\r         {\r             Node head = this;\r             int count = 0;\r             while(head.next != null)\r             {\r                 head = head.next;\r                 count++;\r             }\r             return count;\r \r         }\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyq7W8mUYXRlkwlEbB4AaABAg", "comment": "static public int countNodes(Node head) {\r \t\tint count= 0;\r \t\twhile(head.next!=null) {\r \t\tcount ++;\r \t\thead=head.next;\r \t\t}\r \t\treturn count ;\r \t}", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwzdq--HVdZq6k7bcx4AaABAg", "comment": "I will only post the function, using python:       @staticmethod     def count(node, count=1):         if (node.next == None):             return count         else:             return node_counter.count(node.next, count+1)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw4SosrFVwp1Ad3y_t4AaABAg", "comment": "def countNode(headName){   currentNode = headName   nodeCount = 0   while currentNode.next:     nodeCount+=1     currentNode=currentNode.next    return nodeCount }  not sure if it works as at should be lol", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyS2LYO5PAdghkNiYF4AaABAg", "comment": "#include<iostream>\r #include<cstdlib>\r using namespace std;\r class List{\r \tprivate:\r \t\ttypedef struct node{\r \t\t\tint data;\r \t\t\tnode* next;\r \t\t\t\r \t\t}* nodePtr;\r \t\tnodePtr head;\r \t\tnodePtr current;\r \t\tnodePtr temp;\r \t\t\r \tpublic:\r \t\tList();\r \t\tvoid addNode(int addData);\r \t\tvoid printData();\r \t\tvoid deleteNode(int delData);\r \t\tvoid countNode();\r \t\t\r };\r List::List(){\r \thead = NULL;\r \tcurrent = NULL;\r \ttemp = NULL;\r }\r void List::addNode(int addData){\r \tnodePtr n = new node ;\r \tn->data = addData;\r \tn->next = NULL;\r \tif(head != NULL){\r \t\tcurrent = head;\r \t\twhile(current->next != NULL){\r \t\t\tcurrent = current->next;\r \t\t}\r \t\tcurrent->next = n;\r \t}\r \telse{\r \t\thead = n;\r \t\tcurrent =  head;\r \t}\r \t\t\r }\r void List::printData(){\r \tcurrent = head;\r \twhile(current != NULL ){\r \t\tcout<<current->data<<endl;\r \t\tcurrent = current->next;\r \t}\r }\r void List::deleteNode(int delData){\r \tnodePtr delPtr = NULL;\r \tcurrent = head;\r \ttemp = head;\r \twhile(current != NULL && current->data != delData){\r \t\ttemp = current;\r \t\tcurrent =  current->next;\r \t}\r \tif(current == NULL){\r \t\tcout<<endl;\r \t\tcout<<delData<<\" was not in the list.\\n\"<<endl;\r \t\tdelete delPtr;\r \t}\r \telse{\r \t\tdelPtr = current;\r \t\tcurrent = current->next;\r \t\ttemp->next = current;\r \t\tif(delPtr == head){\r \t\t\thead = head->next;\r \t\t\ttemp = NULL;\r \t\t}\r \t\tdelete delPtr;\r \t\tcout<<endl;\r \t\tcout<< \"The value\"<<\" \"<<delData<<\" \"<<\"was deleted.\\n\"<<endl;\r \t}\r }\r void List::countNode(){\r \tint count = 0;\r \tcurrent = head;\r \twhile(current != NULL){\r \t\tcurrent = current->next;\r \t\tcount ++;\r \t}\r \tcout<<\"Total number of Nodes:\"<<\" \"<<count<<endl;\r }\r \r int main(){\r \tList obj;\r \tobj.addNode(7);\r \tobj.addNode(8);\r \tobj.addNode(9);\r \tobj.addNode(10);\r \tobj.addNode(6);\r \tobj.addNode(5);\r \tobj.printData();\r \tobj.countNode();\r \tobj.deleteNode(10);\r \tobj.printData();\r \tobj.countNode();\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxS1_AGNwGN_c0GdxB4AaABAg", "comment": "College teachers : wait, thats illegal", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzxt_oRxND0N7g4lbN4AaABAg", "comment": "private static int countNodes(Node head){\r \t\t\t\r \t\tif(head!=null){\r \t\tNode next = head.next;\r \t\tSystem.out.println(\"Next ele is \" +next.data);\r \t\twhile(next!=null){\r \t\t\tnext = next.next;\r \t\t\tnodeCount++;\r \t\t}\r   \t\t \t\treturn nodeCount;\r \t\t}\r \t\telse\r \t\t\treturn 0;\r \t}\r }   where nodeCount = 1 inititially", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwr5Cg6H4i-PtljsdR4AaABAg", "comment": "this was extremely helpful, thank you for making this so clear", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugys_HKF1X0TL8CWxCd4AaABAg", "comment": "Your explanation is awesome please give us a full fleged course on data structures and algorithm. We all will enroll into that even if it is paid course. Please it's a humble request", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwaBQmqeQFnw_-hL7B4AaABAg", "comment": "Python:   def count_nodes(head):     i = 1     while head.next:         head = head.next          i += 1     return i", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw4RdFZySRqMmDzRPV4AaABAg", "comment": "Swift 5.1 with recursive way   func countNodes(_ node: Node?) -> Int {     var nodeCount: Int = 1     let headNode: Node? = node     if headNode?.nextNode == nil { return nodeCount }     nodeCount += countNodes(headNode?.nextNode)     return nodeCount }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy64CtM0YrdNSaYoG14AaABAg", "comment": "public class Main {\r \tpublic static void main(String[] args) {\r \t\tNode node1 = new Node(5);\r \t\tNode node2 = new Node(14);\r \t\tNode node3 = new Node(77);\r \t\t\r \t\tnode1.next = node2;\r \t\tnode2.next = node3;\r \t\tnode3.next = null;\r \t\t\r \t\tLinkedList.printNodes(node3);\r \t}\r }\r   public class Node {\r \tint data;\r \tNode next;\r \t\r \tNode(int data) {\r \t\tthis.data = data;\r \t}\r }   public class LinkedList {\r \tstatic int countNodes(Node node) {\r \t\tint i = 0;\r \t\twhile(node != null) {\r \t\t\t++i;\r \t\t\tnode = node.next;\r \t\t}\r \t\treturn i;\r \t}\r \t\r \tstatic void printNodes(Node node) {\r \t\tint nodes = countNodes(node);\r \t\tfor(int i = 0; i < nodes; i++) {\r \t\t\tSystem.out.print(node.data + \" \");\r \t\t\tnode = node.next;\r \t\t}\r \t}\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzpfEk9lqP_vkyi0Ft4AaABAg", "comment": "brilliant work", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy0lkGRp37bmoEy5TB4AaABAg", "comment": "Please make its next part.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzCQ9k3s21cHym9jI54AaABAg", "comment": "js es6+ : function countNodes(head) {     let count = 1     let current = head     while (current.next !== null) {         current = current.next         count += 1         console.log(count)     } }  countNodes(nodeA)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz86QjqvO45euS_Pv54AaABAg", "comment": "python : def count(head):     count = 1     current = head     while (current.next != None):         current = current.next         count += 1         print(count)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzDuRASVCHdhat73kN4AaABAg", "comment": "You're the Khanacademy of programming! Love this series and your step-by-step explanations.", "votes": "15", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyhDe0dv1_9-NYfx4d4AaABAg", "comment": "I love you man.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzJ90_U766QMY20fYR4AaABAg", "comment": "Thank you so much! It is a very clear introduction although I am using C :)", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy3oWP-Ho9tX1QH-8x4AaABAg", "comment": "I love your teaching! I learned a lot!", "votes": "3", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwWT45w51OvoKCB0rd4AaABAg", "comment": "Advanced: Reversal of LinkedLists in K-groups: https://youtu.be/8zuSdN4ru7M", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx3-xBHIVQloW0738p4AaABAg", "comment": "Very well explained\ud83d\ude0a\ud83d\udc4d", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzLZvFUOQPrDhP-NOZ4AaABAg", "comment": "Best work for students Thanks sir", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzSu3YkPvSPTImZSP14AaABAg", "comment": "My solution for count number of nodes: class  Node  {     int data;     Node next;     Node(int data)     {         this.data = data;     }      static int count_nodes(Node head)     {            int flag = 0;         Node current = head;         while(current != null)         {             flag++;             current = current.next;         }         return flag;     } } class maine {     public static void main(String args[])     {         Node head = new Node(4);         Node nodeB = new Node(2);         Node nodeC = new Node(3);         Node nodeD = new Node(10);         head.next = nodeB;         nodeB.next = nodeC;         nodeC.next = nodeD;         int a = Node.count_nodes(head);         System.out.println(\"Number of nodes is: \"+ a);              } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxseGXYIizz9oHNup14AaABAg", "comment": "I'm learning C at the moment, and this is just much less complex .-.", "votes": "1", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxk8JrJn4jB9Qu63ul4AaABAg", "comment": "Thank you!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxOXtdv0MgJXBZWj_l4AaABAg", "comment": "class Node\r {\r  int data;\r  Node next;\r  Node(int data){\r   this.data = data;\r  }\r  static int count=1;\r  public static void main(String[] args)\r  {\r   Node n1 = new Node(3);\r   Node n2 = new Node(6);\r   Node n3 = new Node(9);\r   Node n4 = new Node(12);\r   n1.next=n2;\r   n2.next=n3;\r   n3.next=n4;\r   System.out.println(Node.countNodes(n1));\r   //System.out.println(n1.data+\"|\"+n1.next.next.data+\" \"+n2.data+\"|\"+n2.next+\" \"+n3.data+\"|\"+n3.next+\" \"+n4.data+\"|\"+n4.next);\r  }\r  static int countNodes(Node n1){\r   if(n1.next!=null){\r    count++;\r    countNodes(n1.next);\r   }\r   return count;\r   \r  }\r }     Is this efficient?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyzdGfgjNYF1ITkorh4AaABAg", "comment": "def count_nodes(node):\r    count = 1\r \r    if node.next_node is not None: count = count + count_nodes(node.next_node)\r \r    return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxseGXYIizz9oHNup14AaABAg.96MK9msymZb97u50ZxWDXj", "comment": "But imagine how easy most other languages will be for you once you struggle through C ;) It's not for neigh.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxlVWO1dPFMZbEq3wt4AaABAg", "comment": "Dojo you the ONE!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx_d1CoNi1_ohLOw1Z4AaABAg", "comment": "This helped me understand linked lists really well. Thank you.", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy0ehNOgsFIcL7A39t4AaABAg", "comment": "Youuu are aaawesome\ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\ud83d\udc4f...", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyG38SNcZNGJS0TMFt4AaABAg", "comment": "You're an incredible teacher. Hope these videos never end and stretch across even the most advanced of topics. Very enjoyable.", "votes": "21", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxpT7XUjvC1Z39qv554AaABAg", "comment": "public static int countNode(ListNode head) {\r   int count = 1;\r   while (head.next != null) {\r    count++;\r    head = head.next;\r   }\r   return count;\r  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxQT1pgqLrS9WBTcDB4AaABAg", "comment": "where is the 'next advanced' video?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyAgZCzRFqIF-z7x9R4AaABAg", "comment": "static int countNodes(Node head){\r         int count=0;\r         Node temp=head;\r         while(temp!=null){\r             temp=temp.next;\r             count++;\r         }\r        return count;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzr1TLk2bbj4eLDjkJ4AaABAg", "comment": "I learned in 20 minutes what my teachers were trying to teach me for 2 hours...", "votes": "12", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzH0BgIwf5SRKrvkHh4AaABAg", "comment": "in C# int CountNodes(Node head) {       if(head == null)           return 0;         int count=1;      Node curr = head;       while(curr.next != null){           curr=curr.next;         count++;     }     return count;   }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzMQcC-TOsEWrjo-Td4AaABAg", "comment": "Hey....I have watched several videos but didn't understand how linked lists exactly worked. After watching ur video I have understood exactly how they work. Great explanation. However, I'm really sad to know that you don't post any videos now. Please let us know why.", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzzwDdqn8d-J2QtVet4AaABAg", "comment": "Can I ask u please which app u used to make these visuals", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy7GAqJE3JxvUd_V4V4AaABAg", "comment": "Your explains is awesome!! thank you for your efforts~ I wonder if you can explain react hooks for us. please~~~", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxLO1vmhtN4cBOXvAV4AaABAg", "comment": "I did it recursively:       public int countNodes(Node head) {         int count = 0;         return countNodesHelper(head, count);     }      private int countNodesHelper(Node node, int count) {         if (node != null) {             return countNodesHelper(node.next, count+1);         }         return count;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwvNsifE4haWozfYn54AaABAg", "comment": "best explaintion", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxXl28O0ATpS6icIz54AaABAg", "comment": "public static int countNodes(Node head) {     int count = 0;     Node temp = head;       if (head != null) {       count++;         while (temp.next != null) {       count++;       temp = temp.next;       }     }       return count;   }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgynlGtO_zi9d4GcveB4AaABAg", "comment": "I understand now what node is and head and also data. Tnx for information man, more power to your channel", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzfVnvUNdlOniO0VbV4AaABAg", "comment": "Great!!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxSlHPh-4PHfcG93J94AaABAg", "comment": "My solution in Java. Any advise/productive criticism appreciated.  public static int countNodes(Node head) {   Node current = head;   int count = 0;   while (current != null) {    count++;    current = current.next;   }   return count;  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwCo24CMd14wD9rtPl4AaABAg", "comment": "def\u00a0countNodes(head): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0count\u00a0=\u00a01 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0current\u00a0=\u00a0linkedList.head \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while(current.next\u00a0!=\u00a0None): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0current\u00a0=\u00a0current.next \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0count\u00a0+=\u00a01   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxtsBsKK_aA4aJWgrl4AaABAg", "comment": "My Java code:    int countNodes(Node head){      int count = 0;      while(head != null){          count++;          head = head.next;       }       return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzr1TLk2bbj4eLDjkJ4AaABAg.94ojKw1OQNZ9IsKdD-JtmR", "comment": "my teacher trying to teach me this for last 2 years\ud83d\ude02\ud83d\ude02", "votes": "4", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugzr1TLk2bbj4eLDjkJ4AaABAg.94ojKw1OQNZ9jzHj-gYFNT", "comment": "\u00a0@suman-majhi\u00a0 nah fundamentals shouldnt go for 2 years your teacher brain damaged", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwcbxhUhgUpViCEbNR4AaABAg", "comment": "Here is solution to the linkelist count:  int countNodes(Node node) {\r   int count = 1;\r   while (node.next != null) {\r    node = node.next;\r    count++;\r   }\r   return count;\r  }", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyXXTN_wcWtxDxgVS14AaABAg", "comment": "Int count = 0;  If(node.hasNext){    count++; } return count;", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy7P3N0aHVRU3XI7hp4AaABAg", "comment": "Best LL tutorial on YouTube thank u sir.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyvb6788dCSO9g8EQZ4AaABAg", "comment": "My python code, works by setting the current node to its own next attribute (which can either be a Node or None):  def countNodes(head_node):     cur_node = head_node     num_nodes = 0     while cur_node:         num_nodes += 1         cur_node = cur_node.next     return num_nodes", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxLsDVcA_Ry4QsdR494AaABAg", "comment": "what an awsome explanation.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwRMRFz1zOUt082WaV4AaABAg", "comment": "static int countNodes(Node head){     int counter = 0;     while(head.next!=null){             counter ++;             head = head.next;     }      return counter+1; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx9jLyHnziFYS2DivN4AaABAg", "comment": "How many times you need to hide", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxSAH7ASYsfvcLFWmx4AaABAg", "comment": "function countNode(Node head){ var runner = this.head; var count =1; while(runner.next!=null){ runner = runner.next; count +=1; } return count;  } this is my solution from javascript", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxMSRqz6M89fE4QdnN4AaABAg", "comment": "Here is my two cents -- with a doubly linked list that allows you to traverse back and forth the linked list bidirectionally.   public class DoublyLinkedList<E> {\r LNode<E> head;\r   LNode<E> tail;\r    int size;\r \r   DoublyLinkedList() {\r    this.head = null;\r this.tail = null;\r this.size = 0;  \r   }\r \r public int countNodes() {\r  if (this.head == null) {\r   return 0;\r  }\r  int count = 1;\r  while(this.head.next != null) {\r   this.head = this.head.next;\r   count++;\r  }\r  return count;\r }\r \r public static void main(String args[]) {\r  DoublyLinkedList<Integer> list = new DoublyLinkedList<Integer>();\r  list.addLast(1);\r  list.addLast(2);\r  int totalNodes = list.countNodes();\r  System.out.println(\"Total Number of Nodes: \"+ totalNodes);\r \r }\r //Add nodes at the end of the list\r public void addLast(E element) { \r  if (element == null) {\r   // handle or throw NPE;\r  }\r  LNode<E> newNode = new LNode<E>(element);\r  if (head == null || size == 0) {\r   head = newNode;\r   } else {\r   newNode.prev = tail;\r   tail.next = newNode;\r  }\r  tail = newNode;\r  size++;\r }\r \r class LNode<E> {\r   E data;\r   LNode<E> next;\r   LNode<E> prev;\r \r   LNode(E element) {\r     this.data = element;\r   }\r }\r \r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy7V2kAKq6JznS10-h4AaABAg", "comment": "I paused the video, i adjusted it so instead of int it would return a string instead. Heres the code:   currentNode := head  for currentNode.nextNode != nil {   fmt.Println(currentNode.name)   currentNode = *currentNode.nextNode  }  fmt.Println(\"Out\")", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzC4nVuql9wyWreOG14AaABAg", "comment": "Well explained !! one of the best resources for learning linkedList", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwQBx6PfMB6JRyJfq14AaABAg", "comment": "what about this solution for countNodes\r in the class Node We create static value  count\r and with every new node we will be increase count about 1  via the constructor\r and  result we have via the function getCount(){ return this.count}\r My solving   class Node{\r  private int data;\r  private Node next;\r    public static int count = 0; \r    Node(int data){\r  this.data = data;\r  count++; }\r \r public static int getCount()\r  {return this.count;}\r }\r I tried this and is working , with every new class count is increasing", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxkU1eUjpUNrNN-ZYl4AaABAg", "comment": "You'd think after 30 years they would just include lists as a supported data type.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgznX-6JF8CLRo-1Xgx4AaABAg", "comment": "Hey , please upload more videos on Linked list coding such as (insertion, Deletion, searching as well as traversing) . Also kindly upload videos on Binary search tree and Heap. Thank you!", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyCA6wj1GvF897i8s14AaABAg", "comment": "My solution...          static int amountOfNodes;\r         public static int CountNodes(Node nodeHead)\r         {\r             if(nodeHead.next != null)\r             {\r                 amountOfNodes++;\r                 CountNodes(nodeHead.next);\r             }\r             return amountOfNodes +1;          \r         }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxIZmGtow16TgMb6lV4AaABAg", "comment": "thank u so much for brief explanation", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzTCpCFCjsJ9W-zwSJ4AaABAg", "comment": "Thanks to you sir \u2665\ufe0f", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw8rL1MCwCI6FE93954AaABAg", "comment": "What defines the choice to store or not to store the .prev attribute the same way as we store .next to access all previous elements of an item in a linked list?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwPbssZ3MaWG-wC5Ad4AaABAg", "comment": "private static int countNodes(Node head){         Node currentNode = head;         int numberOfNodes = 0;          while (currentNode != null){             numberOfNodes += 1;             currentNode = currentNode.next;         }          return numberOfNodes;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxhiQdjhN0Y18Z8ZcZ4AaABAg", "comment": "javascript:   var head = {num: 1};\r var nodeA = {num: 2};\r var nodeB = {num: 3};\r var nodeC = {num: 4};\r head.next = nodeA\r nodeA.next = nodeB;\r nodeB.next = nodeC;\r var count = 0;\r var currentNext = head.next;\r while(currentNext){\r   ++count;\r   currentNext = currentNext.next\r }\r console.log(count)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwcbxhUhgUpViCEbNR4AaABAg.93mWsAeIaP693uTtnUUroU", "comment": "It is usually bad practice to modify the value of a parameter, especially depending on its type. Check this out: https://stackoverflow.com/a/37328552", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgxqcK4ywYBMV5Tsm5N4AaABAg", "comment": "//Arnab java code check it out\r class Node1 {\r     int data;\r     Node1 next;\r     Node1(int data)\r     {\r         this.data=data;\r     }\r }\r class Link {\r     public static void main(String args[]) {\r         Node1 nodea = new Node1(4);\r         Node1 nodeb = new Node1(2);\r         Node1 nodec = new Node1(3);\r         Node1 noded = new Node1(10);\r         Node1 nodee = new Node1(2);\r         nodea.next = nodeb;\r         nodeb.next = nodec;\r         nodec.next = noded;\r         noded.next = nodee;\r \r         System.out.println(\"Number of nodes=\" + Countnodes(nodea));\r     }\r \r     static int Countnodes(Node1 head) {\r         int count;\r         count = 1;\r         Node1 current = head;\r         for (int i=0;current.next != null;i++) {\r             count++;\r             current = current.next;\r         }\r         return count;\r     }\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzyi37Q6jbCNHYnTEF4AaABAg", "comment": "Int count(Node node){ Int count; While(node != Null){ Count++; node=node.next; } return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyXAletKW52hwHqB9p4AaABAg", "comment": "13:17 doubly linked lists are a thing", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx-Fy8UMkEbAIgMfod4AaABAg", "comment": "https://bookerystore.com/downloads/data-structures-algorithms-in-java/", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw77RUv0ilMiVhQDdJ4AaABAg", "comment": "Great video, very detailed!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgztV-rPM9-o-wUg5dZ4AaABAg", "comment": "Int count = 0; While(head != null){ Head = head.next; Count++; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy3JotXVw5t74lh2C94AaABAg", "comment": "\u2764", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwOqpG6cYoEu3kAdD94AaABAg", "comment": "/* C++ Code */\r static int countNodes(Node *head)\r {\r  int count=1;\r  while(head->next != NULL)\r  {\r   head = head->next;\r   count = count + 1;\r  }\r  return count;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyfnuNuwXwZFqoNEzN4AaABAg", "comment": "Solution for PHP <?php  /**  * LinkedList implementation  *  * @author Mario Ugurcu <admin@wum-solution.de>  * @copyright (c) 2019, WUM Solution UG  */ class LinkedLists {          /**      *      * @var mixed       */     public $value;          /**      *      * @var Node       */     public $next;               /**      * Count all Nodes in the LinkedList      *       * @param Node $head Head Node with all Child Node      * @return int counts from all Nodes in there      */     public static function countNodes(Node $head) : int     {         $counter = 1;         $current = ($head != null) ? $head : null;         while($current->next != null)         {            $counter++;            $current = $current->next;         }         return $counter;     } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxvPDOVXhPC2_p7-Md4AaABAg", "comment": "//Method returns count of Nodes int countNodes(Node head){ //This method returns the number of Nodes\r  int count = 0;\r  while(head != null){\r   head.next;\r   count ++;\r  }\r  return count;\r }", "votes": "3", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw8buSkCX_u9HkPQD94AaABAg", "comment": "Can we check current is null or not to count the number of nodes?  Like below:  int CountNodes (Node head) {  int count =0; if(head == null)  Return 0; else{ Node current = head; while(current! = null)  {  count++; current = current.next; } } return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzEFK-ITwQyA5CTHuZ4AaABAg", "comment": "Probably not the best solution...   def count_nodes(node_head):\r   x = 1\r   start = node_head\r   while True:\r     if start.next != None:\r       start = start.next\r       x += 1\r     else:\r       break\r   return x", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyCD1cBb4pN4HKH7a54AaABAg", "comment": "My python code:   class node:\r     def __init__(self, data):\r         self.data = data\r         self.next = \"null\"\r \r head = node(6)\r nodeB = node(2)\r nodeC = node(3)\r nodeD = node(10)\r nodeE = node(3)\r \r head.next = nodeB\r nodeB.next = nodeC\r nodeC.next = nodeD\r nodeD.next = nodeE\r \r def countNodes(node):\r     i = 1\r     while node.next != \"null\":\r         i += 1\r         node = node.next\r     return i\r \r print(countNodes(head))", "votes": "9", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwdbrwKlhJph3hsDUt4AaABAg", "comment": "you covered two major topis in just one video", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwOUdTkjXy-xGIkhz54AaABAg", "comment": "this is the best tutorial for linked lists! this is exactly how it was explained in my data structures course but simpler!", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwU1G4tq9a6cJo72E54AaABAg", "comment": "It's been one year.. But u didn't publish any other linked list videos", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxxjB5ipILlKZ2FUM94AaABAg", "comment": "I always think complicated. But it is more simpler than I thought. btw, I saw the solution for 5 seconds and then I came up with this...  static int countNodes(Node head){     int count = 1;     Node current = head;      while (current.next != null){         current = current.next;         count++;   }   return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyWy5RmtsPKGVS91854AaABAg", "comment": "Python code for solving the problem mentioned.  class Node:\r     nInstances = 0\r     nextnode = None\r     def __init__(self,Data,NodeName,Header):\r         self.data = Data\r         self.name = NodeName\r         self.header = Header\r         Node.nInstances = Node.nInstances + 1\r \r     def setnextnode(self,nextNode):\r         self.nextnode = nextNode\r     \r     @staticmethod\r     def countNodes():\r         return (Node.nInstances)\r \r     @staticmethod\r     def countTrailNodes(head):\r         cnt = 0\r         current = head\r         while current.nextnode != None :\r             current = current.nextnode\r             cnt += 1\r         return cnt\r \r \r head = Node(4,'head',True)\r NodeB = Node(2,'NodeB',False)\r NodeC = Node(3,'NodeC',False)\r \r head.setnextnode(NodeB)\r NodeB.setnextnode(NodeC)\r print(Node.countNodes())\r print(Node.countTrailNodes(head))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzth2qQQc_A2cGTtbF4AaABAg", "comment": "Middle?? This is confusing if the numers are even.", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzoNwPqEmExy1cJPGt4AaABAg", "comment": "Thumbs up !", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx5ZZJEOhs8lLwU1Jl4AaABAg", "comment": "15:02, I think theres in an error in your algo. It should simply be current and not current.next in your while loop because inside the loop you already writing current = current.next, so you will jump 2 spaces instead of one. I might be wrong as i'm new to java, this is just what i feel.", "votes": "1", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy31l7BdgGeiiMCasF4AaABAg", "comment": "For the JavaScript people:   // Creates the templates for the Node objects\r class Node {\r   constructor(data) {\r     this.data = data;\r     this.next;\r   }\r };\r \r // Initializing the Node properties\r head = new Node(4);\r nodeB = new Node(2);\r nodeC = new Node(5);\r \r \r head.next = nodeB;\r nodeB.next = nodeC;\r \r // Counter variable\r // Keep in global scope outside of function definition\r let i = 1;\r \r \r // Mimics instructors Java Code\r function countNodes(head) {\r   let current = head;\r   while (current.next != null) {\r     current = current.next;\r     i += 1;\r   }\r   return i;\r };\r \r // Call function with 'head' argument\r // Log counter return value in the console\r countNodes(head);\r console.log(i);", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwoBES8Dvm9B7F2sqp4AaABAg", "comment": "static int countNodes(LinkNode head){\r         int lengthTracker = 0;\r // COMMENT 1 SEE BELOW \r         while (head!= null){\r  // COMMENT 2 SEE BELOW             head = head.next;\r              lengthTracker++;\r         }\r         System.out.println(lengthTracker);\r         return lengthTracker;\r     }   I'll make this as simple as possible based on how i understood it:   Comment 1: The variable \"lengthTracker\" keeps track of the length.   Comment 2: We can assume that we don't know the length of the linked list hence why were using a while loop.   Basically we're checking whether the parameter value which is \"\"LinkNode head\" is null or not.   If it the head is not null we will move to the next node making it the new head and increment (increase) the lengthTracker variable (lengthTracker++). Now when the while loop runs again it will check whether or not the new value is null or not. If the new head is null then it will quit the while loop, print lengthTracker and return it.   Hope that clarify's stuff.", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz6tfcwDsa0CUlj5mR4AaABAg", "comment": "swift 5.0 recursive function:   func countNodes(_ node: Node) -> Int { // recursive function\r     if node.next != nil {\r     return countNodes(node.next!) + 1\r     }\r     return 1\r }", "votes": "10", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx3a79oN5uAH5m-3Nl4AaABAg", "comment": "C# Here   I paused the video before you said that head.data!=null; so thats why I checked it first :)    public int NodeCount(Node head)\r             {\r                 Node temp = head; \r                 int i = 0;\r                 if (head.data != null)\r                     i++;\r                while (temp.next != null)\r                 {\r                     i++;\r                         temp = temp.next;\r                 }\r                 return i;\r             }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy3DyZWS-HjRh-tzN14AaABAg", "comment": "I'm glad I found this guy", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzDDOZXZoLwxMd4olJ4AaABAg", "comment": "your solution is simple and perfect. I wanna add one condition =>   if(head == null) {\r    return 0;\r   }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwDWRxZfrgc81DKLKp4AaABAg", "comment": "what a explanation!!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxv6L-YMfsfhOUj-Gh4AaABAg", "comment": "int countNodes(Node head){    //my java code     int count = 1;  //includes the current head in the count     while (head.next != null){         count++;         head = head.next;      } return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyn6qzKNtblT9c5mul4AaABAg", "comment": "What microphone are u using for recording sound. It is very crisp.\ud83d\udc4c\ud83d\udc4c", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx_1sYRK8g2X5cONSh4AaABAg", "comment": "my professor should watch your video bro!", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg", "comment": "I've been a developer for 25 yrs and i got 2 weeks to prepare for a Google technical interview and I'm relying on your videos to help me prepare.   I have to relearn alot of stuff I haven't used in years.  You have to go into teaching.  America's kids need somebody that can teach as well as you.   Thanks kid.", "votes": "138", "replies": "10", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw8gMIAtTZg8b9aVB14AaABAg", "comment": "Python code: def countNodes(head):     i = 0     point = head.next      while point:         i += 1         point = point.next      return i+1", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugye_gO3CeN6Zuaj8NJ4AaABAg", "comment": "You know what are u saying?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxrcI_3XvFWJxNc4bN4AaABAg", "comment": "awesome teacher", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwEN66DCM7znwSvbGF4AaABAg", "comment": "Really very helpful. Saw a lot of videos on LL but this code made concept very clear and the code was so simple. Thanks.plz complete this whole DS series...", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyn2UkVWuRxrVwLvD94AaABAg", "comment": "Ruby   class Node\r   attr_reader :data, :next\r \r   def initialize(data)\r     @data = data  # this refers to the actual data in this obj\r     @next = nil # this refers to the next node attached \r   end\r \r   def set_node(obj)\r     @next = obj\r   end\r end\r \r class Linked_List\r   attr_reader :list\r \r   def initialize(values)\r     @list = []\r     create_nodes(values)\r     attach_nodes\r   end\r \r   def create_nodes(values)\r     values.each { |value| @list << Node.new(value) }\r   end\r \r   def attach_nodes\r     @list.each_with_index do |node_object, idx|\r       next if idx == @list.length - 1\r       node_object.set_node(@list[idx + 1])\r     end\r   end\r \r   def return_full_length(node_idx)\r     return node_idx + 1 if @list[node_idx].next.nil?\r \r     return_length_from_n(node_idx + 1)\r   end\r \r   def return_length_from_n(start_idx)\r     length = 0\r \r     loop do \r       length += 1\r       start_idx += 1\r       break if @list[start_idx].next.nil?\r     end\r \r     return length + 1\r   end\r end   Recursive is (return_full_length) and any length of list from given index is linear (return_length_from_n)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzFTtyWcNpaG5wGEtJ4AaABAg", "comment": "really great video! i learned a lot! thank you :)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxXvFyMEFDMGzrzFNx4AaABAg", "comment": "Java solution: int countNodes(Node head)\r     {\r         int count;\r \r         Node temp = head;\r         count = 1;\r \r         while (temp.next != null)\r         {\r             count++;\r             temp = temp.next;\r         }\r \r         return count;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyFlCxiz0FEZMiWRml4AaABAg", "comment": "class Node:\r     data = None\r     next_node = None\r \r     def __init__(self, data):\r         self.data = data\r \r \r # Making some nodes\r head = Node(4)\r node_1 = Node(2)\r node_2 = Node(3)\r node_3 = Node(10)\r node_4 = Node(45)\r # ...\r \r # defining arrows\r head.next_node = node_1\r node_1.next_node = node_2\r node_2.next_node = node_3\r node_3.next_node = node_4\r # ...\r \r \r def count_nodes(headed):\r     counts = 1\r     go = True\r     now_object = headed\r     while go:\r         if now_object.next_node is not None:\r             counts += 1\r             now_object = now_object.next_node\r         else:\r             print (\"This linked list has only \" + str(counts) + \" Nodes.\")\r             go = False\r \r count_nodes(head)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx5ZZJEOhs8lLwU1Jl4AaABAg.90FghUZju2F90FhiR4WNS0", "comment": "BTW..this is my java code   I made 3 classes, namely, Node.java, LinkedList.java and Main.java   Node.java public class Node{\r  int value;\r  Node next;\r \r  public Node(int value){\r   this.value = value;\r  }\r }   LinkedList.java public class LinkedList{\r  public Node head,tmp;\r  int counter=0;\r  int i=1;\r  int countNodes(){\r   if(head != null)\r    this.tmp = this.head;\r   while(tmp != null){\r    this.counter+=1;\r    //System.out.println(\"Reference to node \" + (i++) +\" \"+tmp);\r    tmp = tmp.next;\r   }\r   return counter;\r  }\r }   Main.java   public class Main{\r  public static void main(String[] args) {\r   Node node1 = new Node(4);\r   Node node2 = new Node(2);\r   Node node3 = new Node(3);\r   Node node4 = new Node(10);\r   Node node5 = new Node(2);\r \r   node1.next = node2;\r   node2.next = node3;\r   node3.next = node4;\r   node4.next = node5;\r \r   LinkedList linked = new LinkedList();\r \r   linked.head = node1;\r \r   int result = linked.countNodes();\r   System.out.println(\"\\nNumber of nodes = \" + result);\r  }\r }", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9Ob9paq4e03", "comment": "did you get the job?", "votes": "12", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9ROCtpvVv79", "comment": "Don't leave us hanging Armando. It's been two years.", "votes": "41", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9Tc5YCDPiEi", "comment": "Armando now works for the Government of Texas ;)", "votes": "16", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9XMB6wIXMDo", "comment": "\u00a0@snoudoubts1745\u00a0 how u know?", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9_MYTVke556", "comment": "\u00a0@DanNjeru1\u00a0 hahahaahahah dead", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9fb1RjWwrEZ", "comment": "He's teaching with his videos", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9fehDv0WV3z", "comment": "bruh, he is teaching way more people than he would be if he was in a classroom with 20 students. Now he is teaching hundreds of thousands of people.", "votes": "4", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9kLA4-6AXUA", "comment": "Bro, did u get the job? Please reply", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9ktLyBTjvR_", "comment": "25 years? and you still need to be prepare...? Still did you get the job?", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyPg2XHBDzWLXK7uTB4AaABAg.9-e4DEDxDjE9mUIfBDeu1m", "comment": "\u00a0@KengJeeThao\u00a0 25 years because you just don't do this in the job. How often have you seen people saying \"I just need to learn this for the interview not the actual job\"? I see it far too many times.", "votes": "9", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugzh1TRwnBwqo42eVxB4AaABAg", "comment": "Ruby   class Node\r   attr_accessor :data, :next\r   def initialize(data)\r     @data = data\r     @next = nil\r   end\r end\r \r head = Node.new(1)\r nodeb = Node.new(4)\r nodec = Node.new(14)\r noded = Node.new(2)\r \r head.next = nodeb\r nodeb.next = nodec\r nodec.next = noded\r \r def countNodes(node)\r   length = 0\r   length += 1 if node.data != nil\r   while(node.next != nil) do\r     length += 1\r     node = node.next \r   end\r   length\r end", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxMpGzJ2l4h4TX0Y2J4AaABAg", "comment": "At 15:21, I don't get inside the ' while' brackets, you don't write 'current.next.data != null'? I thought that 'next' would just point to the next variable/node but doesn't know the value of the data inside the node? And you refer to 'Node next' as an attribute? Isn't it a method? Like it doesn't become a value but performs a function that 'points' to the next node? And its still abit difficult knowing the differences between an array and a linked list", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw5w3eBLA4IASZ_6Hh4AaABAg", "comment": "Guruji", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxWCM9NeTL9hBMVnwZ4AaABAg", "comment": "es6 let countNodes = (node, count = 0) => node.next ? countNodes(node.next, count + 1) : count;", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxz8bx1jkqfnQIPwDp4AaABAg", "comment": "Weird going from statically typed , pointer based c++ data structures to learning it in python lol. Seems so odd", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwuoSSUPXqKUNLoWu54AaABAg", "comment": "def countNodes(head):     current_node = head     num_of_nodes = 0     end_node = False     while end_node != True:         try:             if type(current_node.data) == int:                 num_of_nodes += 1                 current_node = current_node.Node_next         except AttributeError:             end_node = True     print(f\"{num_of_nodes} this is the number of nodes that have been counted\")", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw7OAfzMdSPLdU-nCJ4AaABAg", "comment": "class Node:     node_count = 0     def __init__(self,data):         self.data = data         self.next = None         Node.node_count += 1          def __repr__(self):         return f'Node({self.data})'      node_head = Node(4) nodeB = Node(2) nodeC = Node(3) nodeD = Node(10)   node_head.next = nodeB nodeB.next = nodeC nodeC.next = nodeD   print(Node.node_count) #outputs 4   print(nodeB.next) #outputs Node(3)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwB6TfmGtWB2RI_E9t4AaABAg", "comment": "package hello;\r \r public class LinkedList {\r  int data;\r  LinkedList next;\r  \r  public LinkedList (int data)\r  {\r   this.data=data;\r   this.next=null;\r  }\r  public  int countNode(LinkedList head)\r  {\r   int count=0;\r   \r   for(;head!=null;)\r   {\r    head=head.next;\r    count++;\r   }\r   return count;\r   \r  }\r  public static void main(String[] args) {\r   \r   LinkedList head=new LinkedList(4);\r   LinkedList A=new LinkedList(5);\r   LinkedList B=new LinkedList(6);\r   \r   head.next=A;\r   A.next=B;\r   \r   System.out.println(head.countNode(head));\r   \r   \r   // TODO Auto-generated method stub\r \r  }\r \r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzNWETqFbxpqawHB_J4AaABAg", "comment": "int countNodes(Node node){\r   int count = 0;\r   while(node!=null){\r    System.out.println(\"node: \"+node.data);\r    count++;\r    node=node.next;\r   }\r   return count;\r  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy5M5CBGHFpyXcF1vd4AaABAg", "comment": "Awesome video, glad that I found this. Thank You!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyiIpT7LhKkN15IHPN4AaABAg", "comment": "my C++ code: int countNode(Node head) {     int i,count = 1;     Node currentnode = head;    do{            count++;       }while(currentnode.next!=null);       cout<<\"Number of nodes are \"<<count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx1y8e9VXjJ8kUuGSB4AaABAg", "comment": "def countNodes(head):\r  count = 0\r  node = head\r  while node.next != null:\r   count +=1\r   node = node.next\r  return count", "votes": "4", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy32b_2ncRmPcfUm6B4AaABAg", "comment": "You are the best explainer, could you do some about linked list and popular sort such as merge sort?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwZXI_lCLAHUEZ3ZLB4AaABAg", "comment": "This is my solution to the countNodes problem, it's written in Python 3: https://repl.it/repls/DarkseagreenSubstantialVoxels", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzxMn2SHfRMbpoC2ot4AaABAg", "comment": "sir could u pls tell me the logic for sorting a linked list using insertion sort (without using any a extra memory)?", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg", "comment": "Did it recursively:  int countNodes(Node head) { if (head.next == null) { return 1;} else {return 1 + countNodes(head.next);}", "votes": "112", "replies": "13", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzSwtuwXLHvui_QBvl4AaABAg", "comment": "for i in list     sum = 0     sum = sum + 1 return sum", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwn9zDJ0XaT9-6mLA94AaABAg", "comment": "class Node:     def __init__(self, value, next_node=None):         self.value = value         self.next_node = next_node              def get_value(self):         return self.value          def get_next_node(self):         return self.next_node          def set_next_node(self, next_node):         self.next_node = next_node  class LinkedList:     def __init__(self, value=None):         self.value = value         self.head_node = Node(self.value)           def get_head_node(self): # Function to get head node in the list.         return self.head_node  def count_nodes(linked_list):     head_node = linked_list.get_head_node()     current_node = head_node     count = 0     while current_node:         count += 1         current_node = current_node.get_next_node()     return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyzTpZsd4oaLgG59Yx4AaABAg", "comment": "Thanks a lot for this\ud83d\ude0a", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxXrC8dHOmcZB567uB4AaABAg", "comment": "this means particular object under consideration", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx1y8e9VXjJ8kUuGSB4AaABAg.8yfKLkN39By8zTNzdgohuK", "comment": "Hello! I'm new to the coding scene, and am mostly self taught. I was working with Data Structures but most of my test cases would time out from being too long, and so I tried learning more about Linked Lists but I'm having some trouble with the syntax for Python. You obviously are familiar with it, could you please suggest some tutorials or material I could get a basic idea from? I'd really appreciate it, Thanks!", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzxMn2SHfRMbpoC2ot4AaABAg.8yVMGA_lFIz9Ij10CHLGG0", "comment": "@Nishita Dash now that it has been a year, maybe YOU can tell us!", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C8zcfX3PfrWq", "comment": "at the last node, when the head reaches its end, and there are no other nodes, your count will just return 1.", "votes": "12", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C9-WsnxLwh6r", "comment": "if you have a single line statement screw the skwigglies  if(head.next==null) return 1;", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C905bXSVA-NX", "comment": "\u00a0@leelakrishna5815\u00a0 ..plus 1 for every node before it. It checks out.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C91LcSof1DYI", "comment": ".", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C95Dn7P3cva9", "comment": "why would you do it recursively if you can do it using a while loop in a few lines?", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C95j22kphHc1", "comment": "super inefficient though...", "votes": "2", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C97HS8NcgXO2", "comment": "Can anyone tell what exactly is node next", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C98GgKaNELBd", "comment": "\u00a0@miningcobble1260\u00a0 Agreed. It will traverse over and over again.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C98rQKBA-zLt", "comment": "this is dope!", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C99J0yDcT7-T", "comment": "Nice and efficient. I used a while loop instead \ud83d\ude05", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C9B7p5LARMro", "comment": "\u00a0@parthkumar9318\u00a0 \" Next \" is a property which is containing information (Name of next node in this case). For example -  if \"Node1'\" is the name of the first node or any node in the linked list then { Node1.Next } will return the name of next connected node (Node2). Linked List - | _ |Node1| ---->   | _ |Node2| ---->   | _ |Node3|", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C9DKFoSJTPTx", "comment": "\u00a0@parthkumar9318\u00a0 \"Next\" is just a variable that each Node object holds. (but instead of it being an integer or something, it's an object of class Node)  Example:   We have a Class \"Human\", containing a variable called \"Friend\" which is also of type Human. (\"Friend\" is the same as \"next\" in my example). We make a new object Human1 and object Human2.  We will assign Human2 to be Human1's friend. (aka next)         Human1.friend = Human2  It's basically a data variable, but instead of like an integer it contains another object, basically linking two objects together because you are able to call upon Human 2 from Human 1. So we could see if Human 1 has a linked node ( \"friend\" or \"next\")  by checking if Human1.friend has a value.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzF3MuKye9_1TFLrkt4AaABAg.8y1NX4tbC3C9DMdljZ23gz", "comment": "wow this is a sweet ass solution lol. Though i suppose its pretty inefficient since you are running that if statement for the # of nodes vs a single while loop lol", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugz3Mx5R8nhCA6z_HLB4AaABAg", "comment": "In java:    static int countNode(Node head){         int counter =0;         while(head != null){             System.out.println(\"Data: \"+ head.data);             counter++;             head= head.next;         }         return counter;", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzzbUh4iVf6LBTvp114AaABAg", "comment": "int countNodes (Node head) {    int counter = 0;     while ( head != nullptr ){        counter = counter + 1; \u00a0       head = head.next;     }     return counter; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwHK82yxmCbA0ePAq94AaABAg", "comment": "\\\\ C# CODE Some basic implementation with various methods for addition, subtraction, counting of LinkedList Nodes https://github.com/havok718/AlgorithmsAndDataStructures/blob/Algorithms/AlgorithmsDataStructures.cs", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzvO3CYYEKv6a2Z9g54AaABAg", "comment": "Bro I want vdo on stacks . .. please....,\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76\ud83d\udc76", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxVapIx4QWtygMix2x4AaABAg", "comment": "def countNodes(head){       n = head      i = 1        while head.next != null:          n = head.next          i++:        return i  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy6Cl39fqNiJNiaMRR4AaABAg", "comment": "Node n = head;\r int i = 1;\r while (h.next != null){\r  n = n.next;\r  i++;\r }\r return i", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw4K_w1LQcDMRnELZF4AaABAg", "comment": "why do you write your own linkedList when Java provides one in java.util.LinkedList<E>", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyXfv85gMpvLkbySAd4AaABAg", "comment": "Here's   my solution /////////////////////////////////////////////////// class Node {     int data;   Node next;     public Node (int data)   {     this.data = data;   }   static int countNodes (Node head)   {     Node testNode=head;     int NodeCount=0;     while(testNode.next!=null){         testNode=testNode.next;         NodeCount++;     }     return NodeCount;   } }       public class Main {   public static void main (String[]args)   {     Node head = new Node (4);     Node n1 = new Node (3);     Node n2 = new Node (2);     Node n3 = new Node (7);     Node n4 = new Node (10);     Node n5 = new Node (34);     Node n6 =new Node(99);     head.next=n1;     n1.next=n2;     n2.next=n3;     n3.next=n4;     n4.next=n5;     n5.next=n6;     System.out.println(\"Num of Nodes:\"+ head.countNodes(head));   } } ////////////////////////////////////////////////////////////////////////", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzpb4EEnxZXPGflWCt4AaABAg", "comment": "sir, u said that u would have further videos on linked lists but I didn't find them. could u guide me where the other videos on linked lists are", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwhQGRkrJnARVkeVkR4AaABAg", "comment": "public int countNodes(Node head)\r  {   int count=0;\r      Node i= head;\r   while(i!=null)\r   {\r    count++;\r    i= i.next;\r   }\r   return count;\r  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzFjMDjFs259N6oQx94AaABAg", "comment": "In JavaScript   function countNode(node) {     let totalNodes = 1;      let myNode = node;    while(myNode.next) {       total++;       myNode = myNode.next;    }    return totalNodes; }", "votes": "23", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgySqheWX9nW8rb5SgF4AaABAg", "comment": "def countNodes(box):\r     count = 1\r     while box.next:\r         count = count + 1\r         box = box.next\r     return count", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzIJoBzItceOBWMQJ94AaABAg", "comment": "int countNode(Node head){  int count = 1;  Node temp =  head;  while(temp.next != NULL){   count++;   temp = temp.next;  }  return count; }", "votes": "12", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzXG8RvtP_gmcdScUd4AaABAg", "comment": "Don't know why I'm doing this what with all the other answers but:  int countNodes(Node head) {     int counter = 0;     Node a = null;     while(a!=null)     {         counter++;         a = a.next();     )    return counter;  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwzXeQnYw_ZCtx6_vx4AaABAg", "comment": "what if using Do While loop - can is save some code? count = 0;  if node.next == null -> return count; else do{ count ++; current = current.next; } while (node.next != null); this why you start with count = 0 and do not need to add +1 at the end to cound the null one... like @Aziyat Murzamidinov\r did.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzEYpEYdQrU4A6SC854AaABAg", "comment": "public static int countnode(Node head)\r  {\r   if(head.next!= null)\r   {\r    return 1+countnode(head.next);\r   }\r   else\r   {\r    return 1;\r   }\r  }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx9SBJBOO-XE0Nq1XV4AaABAg", "comment": "why java ???", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxy3uIbKNMcS3lY7tN4AaABAg", "comment": "def countNodes(head):\r     count =1;\r  while head.next != None:\r     head = head.next\r     count++", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzg2tFboarJWHhvl354AaABAg", "comment": "I need a kotlin code : )", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz2hYyys_WSWfEpPC94AaABAg", "comment": "love you pal", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy6Cl39fqNiJNiaMRR4AaABAg.8xF0Jv0AdOx8xPWm7nvToh", "comment": "Oh there mistake, thanks. Should be: n.next!=null", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzFjMDjFs259N6oQx94AaABAg.8wm5O66iJly9OJyUpSwGfO", "comment": "inside while loop it will be totalNodes++ . Rest everything is absolutely correct.", "votes": "7", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzFjMDjFs259N6oQx94AaABAg.8wm5O66iJlyA82ymNVFhLR", "comment": "For this to work the totalNodes must be set to 0 or myNode and totalNodes operations inside the while loop should be switched, as head is being counted twice in this example", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzIJoBzItceOBWMQJ94AaABAg.8wdJtZKZrL48zf4NMOSDwe", "comment": "So how do you solve that problem in the case with 1 Node", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzIJoBzItceOBWMQJ94AaABAg.8wdJtZKZrL4910Vk0ASfZL", "comment": "\u00a0@dungletien4676\u00a0 if there is only 1 Node, temp.next will always be null, so while loop never executed,hence returned 1", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzvudsMY02qK0R_kAZ4AaABAg", "comment": "Python def countNodes(head):        c=1        while head.next!=None :               c+=1               head=head.next        return c", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgySZeJotDZR89ldOy14AaABAg", "comment": "please do a video on stacks and queue!!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxzphRo7iF-Pl3CYv14AaABAg", "comment": "I really liked all of your visuals. They all really helped me. Especially having drawn out images next to the code. I really like how you explain everything as well.", "votes": "37", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyiyjliwNhanJrhWWx4AaABAg", "comment": "This is a recursive solution in python: def count_nodes(node, count = 0):     if isinstance(node, Node):         return count_nodes(node.next, count+1)     else:         return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxH313P6YN5wd6op9h4AaABAg", "comment": "int count = 0; while(head != null) \u00a0{         count++;        head = head.next; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz3-X6R8DXN5qfT-w54AaABAg", "comment": "TWIN", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzV4MNpnVC79e9UESZ4AaABAg", "comment": "hi sir, u explained it very well! just a small doubt- how does the doubly linked list prev node work? how will it know that prev is the previous one?", "votes": "3", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz0WVcz92JQhQ4zsZx4AaABAg", "comment": "Objective-C Code:  -(int) countNodes:(Node *)nodeHead { \u00a0 \u00a0 int count = 1; \u00a0 \u00a0 Node * current = nodeHead; \u00a0\u00a0 \u00a0 \u00a0 \u00a0 while (current->_next != (NULL)) \u00a0 \u00a0 { \u00a0 \u00a0 \u00a0 \u00a0 current = current->_next; \u00a0 \u00a0 \u00a0 \u00a0 count++; \u00a0 \u00a0 } \u00a0 \u00a0 return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy8jlU2H-WNz4eYxOB4AaABAg", "comment": "bro to be honest teaching programming language is not for you. you're a good programmer. but not so good tutor!", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzO6hi3g6m0dkJ3Jr14AaABAg", "comment": "JS:  class Node{     constructor(data, next){         this.data = data         this.next = next     } }  let head = new Node(4) let nodeB = new Node(5) let nodeC = new Node(6) let nodeD = new Node(7)  head.next = nodeB nodeB.next = nodeC nodeC.next = nodeD  console.log(head, nodeB, nodeC, nodeD)  let countNodes = function(head){     let count = 0     if (head.data === undefined) return count     if (head.next === undefined) return count++     let currentNode = head     count++     while(currentNode.next !== undefined){         count++         currentNode = currentNode.next     }      return count }  console.log(countNodes(head))", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwrDSfq2j0eRpfQbgZ4AaABAg", "comment": "public class Node {     int data ;     Node next ;     Node(int data)     {       this.data = data ;     }      static void countNodes(Node head)       {             int counter=1 ;             Node x = head ;             while(x.next!=null)             {               counter++ ;               x = x.next;             }             System.out.println(counter);         }   public static void main(String args[])   {       Node head = new Node(4);       Node nodeB = new Node(2);       Node nodeC = new Node(3);       Node nodeD = new Node(10);        head.next = nodeB;       nodeB.next = nodeC ;       nodeC.next = nodeD;        countNodes(head);   } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwmqbVTryOPLqejSrp4AaABAg", "comment": "Using a whiteboard to break things down in a visual learning style really helps.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwDIG1dWlNRjKh7rcF4AaABAg", "comment": "Best n Very Simple \ud83d\udc4d Hey can you upload more and more videos on Data Structures", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwU3PNK6riTB1VvwYJ4AaABAg", "comment": "here is the login int countNode(Node head) { Node node=head; int Count ; while(node.next!=null) { node=node.next; Count++; } return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzPWYQMQnARlz87VMV4AaABAg", "comment": "public static int numberOfNodes(Node head){\r \r         int i =0;\r         if(head != null){\r \r             i++;\r         }\r         while (head.next !=null){\r             i++;\r             head = head.next;\r         }\r         return i;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwHJOpbQw_nHXl7u2d4AaABAg", "comment": "Worked for me in C#    public static int CountNodes(Node head)\r         {\r             int counter = 1;\r \r             while (head.next != null)\r             {\r                 head = head.next;\r                 counter++;\r             }\r \r             return counter;\r         }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxAQBllJNqIHy7hBqh4AaABAg", "comment": "You are a legend. Thank you so much.", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwkU5PLErMpcBUXSh94AaABAg", "comment": "This is excellent you really helped me To understand.", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx87fFRFr1u59P1NQd4AaABAg", "comment": "Ayy..!! GentleMan.. Its amazing and mind blowing. Im impressed. Literally its highly valuable for me at this time. i need your videos on all the topics of data structure. im searching but i didnt find anything.. your way of conveying knowledge is awesome. BTW thanks for this one...!!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzcU7gIPTXqr_oqXV54AaABAg", "comment": "For Swift Programmers: class Node {     var data : Int     var next : Node? // Remember optionals          init(data: Int) {         self.data = data     } }   var counter : Int = 1   func countNodes(node: Node) -> Int{               if let nextNode = node.next { // optional binding         counter += 1         return countNodes(node: nextNode)     }          return counter }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy8jlU2H-WNz4eYxOB4AaABAg.8unUQ9Eiot18uw0CuYSsXi", "comment": "Maybe his teaching style is just not for you. When you want to critique someone make sure it's constructive. Otherwise, your comment bears no value.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwH6ngqC3ZpNfZdGWp4AaABAg", "comment": "def count_nodes(linked_list):  count_nodes = 0  while linked_list is not None:   count_nodes +=1   linked_list = linked_list.next  return (count_nodes)", "votes": "36", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz_OJpygWqt7oiN5ix4AaABAg", "comment": "Good explanation!   My code (tell me if is wrong)          internal static int countNodes(Node node)\r         {                                    \r             return 1 + ((node.next != null) ? countNodes(node.next) : 0);\r         }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxBCtwMXQiCLRckVex4AaABAg", "comment": "You are a Good Teacher!!  // C# public static int CountNodes(Node head) {             if (head == null) return 0;        bool isNextAvailable = true;       int count = 1;       Node container = head;        while (isNextAvailable)       {           if (container != null)            {              count++;              container = container.next;              isNextAvailable = true;             }             else isNextAvailable = false;       }           return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy9RTMuTMPAbZcoo5x4AaABAg", "comment": "My Python Code: class Node:\r     def __init__(self, data):\r         self.data = data\r         self.next = None\r \r \r nodea = Node(1)\r nodeb = Node(5)\r nodec = Node(3)\r noded = Node(2)\r nodee = Node(7)\r \r nodea.next = nodeb\r nodeb.next = nodec\r nodec.next = noded\r noded.next = nodee\r \r count = 1\r \r \r def countNodes(head):\r     global count\r     if head.next:\r         count += 1\r         countNodes(head.next)\r \r     return count\r \r \r print(countNodes(nodea)) #  output => 5", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz89FXf51hu_Kpvill4AaABAg", "comment": "Hey brother where is rest of data structure series pleases upload brother please I really need it", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwRImpdIdaPwGeLsSt4AaABAg", "comment": "Cool, thanks for your explanation. This was perfect for me. I'm so out of practice...", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyn8jufxvcuwQ07vS14AaABAg", "comment": "static int count(Node head)\r  {\r   int c=1;\r   Node current=head;\r   if(current==null)\r    return 0;\r   else\r    return c+count(current.next);\r  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyq05gYH65HERZCcT94AaABAg", "comment": "thank you, next", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxByn_PGfx_7uWeA2V4AaABAg", "comment": "Great it is very clear thank you so much and I want to know how to add first.last,at pos,and delete", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxni98p8QXBvqg0mUV4AaABAg", "comment": "i think pretty soon you will get #ONE #Million #subs!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwQIzHCBRqeRIWbGzZ4AaABAg", "comment": "wow! good job ,yk! keep teaching us! you're  amazing!", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzLy6BRhWQS_aP8X9R4AaABAg", "comment": "Code in java:  int CountNodes(Node head) {\r         int counter = 1;\r         \r         Node nObj = head.next;\r         while(nObj != null) {\r            counter++;\r            nObj = nObj.next; \r         }\r         return counter;\r     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzKxoi7m9ZsqEstaQt4AaABAg", "comment": "Did you have given any Hashcode examination because I had seen a person with Name Dojo at top ranking of hashcode 2017 examination. Is that you?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzfSVV9ecQoUjWWcbh4AaABAg", "comment": "I love this dude!!! He explains this sooo damn well", "votes": "28", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxtwfyhhrGhqu17gOB4AaABAg", "comment": "why dont u continue to explain more detail about Linked list? Need explanation about the operations (insert, delete, search element) in linked list", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxSgHq2BWxisJsqPSF4AaABAg", "comment": "it's a really shitty way to hold the data", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwqCg-SrsnmRhEzrxV4AaABAg", "comment": "Thanks lot, u make everything simple", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzf3CpmHpTvIvv7dRB4AaABAg", "comment": "For PHP (please ,correct if  I've made any mistakes)  ------------------------ \r <?php \r \r /**\r  * summary\r  */\r class Node \r {\r     /**\r      * summary\r      */\r    public $data;\r    public $next;\r \r    public function __construct($data)\r    {\r     $this->data = $data;\r     \r    }\r \r \r }\r //creatting nodes\r $head = new Node(6);\r $nodeB = new Node(3);\r $nodeC = new Node(4);\r $nodeD = new Node(2);\r $nodeE = new Node(1);\r $nodeF = new Node(9);\r \r \r //connecting nodes\r $head->next=$nodeB;\r $nodeB->next=$nodeC;\r $nodeC->next=$nodeD;\r $nodeD->next=$nodeE;\r $nodeE->next=$nodeF;\r \r function countNode($head)\r {\r      $count=1;\r   $currentNode=$head;\r \r   while ($currentNode->next!=null) {\r       $currentNode= $currentNode->next;\r    $count=$count+1;\r \r   }\r   echo $count;\r }\r \r \r  countNode($head);\r  \r  ?>", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzdGccRLYq_ld5cDdh4AaABAg", "comment": "C#  public static int CountNodes(Node head) {  int counter = 0;  while (head != null) {   counter ++;   head = head.next;  }  return counter;  JS   class Node {   constructor(data) {   this.data = data;  } }  Node.prototype.countNodes = (head) => {  let counter = 0;  while (head != null) {   counter ++;   head = head.next;  }  return counter; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzHOJBjik9bUAJk6vF4AaABAg", "comment": "Why don't you explain that in python??", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwH6ngqC3ZpNfZdGWp4AaABAg.8tA4844qn1B991b_tEe9Ov", "comment": "Thx", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwH6ngqC3ZpNfZdGWp4AaABAg.8tA4844qn1B9CzZVUAmOk5", "comment": "exactly same solution. Now io dont feel stupid", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwuIDHzq1Clwt_oXcp4AaABAg", "comment": "Tu es formidable", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxkNQSvJoBaPtUiv_t4AaABAg", "comment": "class Node:\r     def __init__(self,data):\r         self.data = data\r         self.next = None\r \r     '''\r        Creating below Linked list\r        4 ---> 3 ---> 2 ---->1\r     '''\r #Initializing each nodes\r head = Node(4)\r node_1 = Node(3)\r node_2 = Node(2)\r node_3 = Node(1)\r \r #Assigning reference to each nodes\r head.next = node_1\r node_1.next = node_2\r node_2.next = node_3\r \r def countnodes(head):\r     count = 0\r     while head != None:\r         count+=1\r         head = head.next\r     return count\r \r print(countnodes(head))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxcOPy858hsEZspwSN4AaABAg", "comment": "Well explained", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxDDRNhHHzcNBBTLIx4AaABAg", "comment": "I'm taking an online course for school on data structures and it's very hard to learn complex topics without audio (yes my professor just posts reads and doesn't record herself explaining it). This really helped me out", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyheiRorxbHLmR7a1B4AaABAg", "comment": "using struct (instead of class) in C++  #include <iostream>  using namespace std;    typedef struct Node{   int data;   Node *next;  };    int countNodes(Node head){   int count = 1;   Node currentNode = head;   while(currentNode.next != NULL){    currentNode = *currentNode.next;    count += 1;   }   return count;  }    int main(){   Node head = {4};   Node nodeB = {2};   Node nodeC = {3};   Node nodeD = {10};      head.next = &nodeB;   nodeB.next = &nodeC;   nodeC.next = &nodeD;    }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwggLWkNKlqQUVPBKB4AaABAg", "comment": "What an amazing Explanation wow!!!!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxdzVRj2rm21A1Zqn14AaABAg", "comment": "can you explain the next attribute being typed as the class variable", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxD9ROQrCG_WahKU8N4AaABAg", "comment": "def countNodes(head):   total = 0   while hasattr(head, \"next\"):     total += 1     head = head.next    return total  print(countNodes(\"d\"))", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzowBogKRLUOs9H84h4AaABAg", "comment": "Thanks my linked list concept got cleared", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy9OpSBYjF64LSnHoh4AaABAg", "comment": "so why do we need the linked lists, is it different from array?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwW-zD6o53QFSkq_A54AaABAg", "comment": "// Javascript (Non-recursive) function countNodesIterative(headNode) {  currentNode = headNode;  count = 1;  while(currentNode.next != null) {   count++;   currentNode = currentNode.next;    }  return count; }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzPXGt_FrNlHE-Yj8J4AaABAg", "comment": "// Javascript function countNodes(headNode) {  var next = headNode.next;  if(next == null) {   return 1;  }  else return 1 + countNodes(next); }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugwnl5_RZR4BEgWIZtZ4AaABAg", "comment": "int countnodes(New Node head) { temp=head; while ( temp!=NULL) {  int i=1; temp=temp->next; i++; } return temp; }", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwwWluAexIKaKlwbFl4AaABAg", "comment": "* C++ CODE * // there are many ways to do that \r // You can make it by using Recursive way\r // if you want to append strings or another arguments you can do it ~\r // You can add any function except mine like remove etc\r // ~ by using Templates\r // I would recommend you boos * C++ Early Objects \r // Any questions, leave comment\r //             * GOOD LUCK *\r #include <iostream>\r using namespace std;\r class LinkedList // name of a class\r {\r \r protected:  // our struct would be protected so we could manipulate data with Child Classes\r     struct Node{\r \r         double data; // value in the node\r         Node *next;  // next pointer which points to the next node\r \r         // Constructor\r         Node (int data1, Node *next1 = NULL)\r         {\r             data = data1;\r             next = next1;\r         }\r                 };\r \r         Node * head = NULL; // pointing the head front of the node(Make it to point first node)\r \r public:\r     void add(double); // adding function when we add the new value to our node\r     int getSize();    // getting the size of a Node\r     void DisplayList();  // Displaying the list\r \r };\r \r // Adding function with argument double  * We can make it with template so we can ~\r // ~ append any type of an argument\r void LinkedList::add(double number)  //\r {\r     Node *ptr = head;  // both ptr and head points to the first node of the Node list\r     if (head==NULL)\r         head = new Node(number); // when it is empty just append the number\r     else\r     {\r         while (ptr->next!=NULL)  // Compile it if the first node not point to the NULL ***not next node\r         {\r             ptr = ptr->next; // go to the next node\r         }\r         ptr->next = new Node(number); // append the number instead of NULL\r     }\r         }\r \r // Displaying the LIST\r void LinkedList::DisplayList()\r {\r     Node * ptr = head; // both of them begin from front Node list\r     if(!head) // if it is empty\r         return;\r     while (ptr!=NULL) // while it is not empty\r     {\r         cout<<ptr->data<<\" \";  // ptr->next means (*ptr or printing the value)\r         ptr = ptr->next;\r     }\r }\r \r // Getting the Size function\r int LinkedList :: getSize()\r {\r     Node * ptr = head;\r     int len = 0;\r     if (head == NULL) // if it empty print 0\r         return len;\r     else\r     {\r         while (ptr->next!=NULL)\r         {\r             len++;\r             ptr= ptr->next;\r         }\r         return len+1; // since last node is NULL it would not add consider the last value ~\r         // ~ so we added it by ourselves\r     }\r }\r \r int main()\r {\r     class LinkedList list;\r     list.add(1);\r     list.add(2);\r     list.add(3);\r     list.add(5);\r     list.add(12);\r     // you can add your own code\r     // code~~~\r     list.DisplayList();\r     cout<<endl;\r     cout<<list.getSize();\r \r \r     return 0;\r }", "votes": "41", "replies": "3", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwnNovG_WwKDVX9Gj94AaABAg", "comment": "I am from Ethiopia Thanks", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzLwtth-99UVcfFaWF4AaABAg", "comment": "4:19 - Wait. You can have a value within the class  definition that share the name of the class? Is that Java exclusive. Does that work in Python?", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzIv2v-sB6P4oDfsGB4AaABAg", "comment": "Here is equivalent code using Scala language.  case class Node(   data: Int,   next: Option[Node] = None ) class LinkedList {   private[this] val three = Node(3)   private[this] val two = Node(2, Some(three))   private[this] val head = Node(1, Some(two))   def countNodes: Int = {     @tailrec     def startCount(start: Option[Node], cnt: Int): Int =       if(start.isEmpty) cnt       else startCount(start.get.next, cnt + 1)     startCount(Some(head), 0)   } } object LinkedList extends App {   println((new LinkedList).countNodes) }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxMbFOADcmA5JAfOZ54AaABAg", "comment": "Hi, this is my attemp        public int countNodes(Node head) {\r   \r   if(head.getNext()==null) {\r    return 1;\r   }else {\r    Node node = head.getNext(); \r    return 2 + addDetph(node);\r   }\r  }\r  \r  private int addDetph(Node node) {\r   if(node.getSiguiente()==null) {\r    return 0;\r   }else {\r    return 1 + addDetph(node.getNext());\r   }\r  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzc21EMpHBcREnpt5Z4AaABAg", "comment": "Hi, this is my attemp        public int countNodes(Node head) {\r   \r   if(head.getNext()==null) {\r    return 1;\r   }else {\r    Node node = head.getNext(); \r    return 2 + addDetph(node);\r   }\r  }\r  \r  private int addDetph(Node node) {\r   if(node.getSiguiente()==null) {\r    return 0;\r   }else {\r    return 1 + addDetph(node.getNext());\r   }\r  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzkJFoh6OVYqxgwSI54AaABAg", "comment": "JavaScript code snippets :)   // Constructor function for node function Node(data , next=null) {   this.data = data;   this.next = next; }  // Create several nodes const nodeA = new Node(1); const nodeB = new Node(2); const nodeC = new Node(3); const nodeD = new Node(4);  // Make head as nodeA  let head = nodeA;  // Link the nodes together nodeA.next = nodeB; nodeB.next = nodeC; nodeC.next = nodeD;  // The linked-list should like this right now // nodeA(head) --> nodeB --> nodeC --> nodeD   // A function to count the number of nodes const countNodes = head => {   let count = 1;   while(head.next != null) {     count++;     head = head.next  // move the head to the next node   }    return count; }  console.log(countNodes(head));  // This should print 4;", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwwWluAexIKaKlwbFl4AaABAg.8pxld2CLwDX8sQsX6dTeVX", "comment": "Thanks!", "votes": "3", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwwWluAexIKaKlwbFl4AaABAg.8pxld2CLwDX91Lc9krhqpT", "comment": "Nice", "votes": "2", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwwWluAexIKaKlwbFl4AaABAg.8pxld2CLwDX9pnDBdhI-1R", "comment": "thank you, going to analysis the code in an IDE appreciate it", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzLwtth-99UVcfFaWF4AaABAg.8pqduUkJ4Zc93QuDH1va0d", "comment": "Tips4Tat That\u2019s how you make a class constructor in Java, it has to have the same name as the class (in this case \u2018Box\u2019). In Python, you use \u2018def __init__(self, ...):\u2019 instead.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugyy9ntCTHWLgztv0j94AaABAg", "comment": "static int countNodes(Node head){        Node temp = head.next;        int count = 1;        while(temp != null){               count++;               temp = temp.next;        }        return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyaocYfD_Om9n-rf8J4AaABAg", "comment": "Very Clean and Clear. Thank you", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyTGBP0H8yk1-cZsfh4AaABAg", "comment": "Great video!  My swift code:  func count() -> Int {         guard !isEmpty else { return 0 }         var total = 0         var currentNode = head                  while currentNode != nil {             currentNode = currentNode?.next             total += 1         }                  return total     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzG2IkEtUOvQqqkJKZ4AaABAg", "comment": "class Node:\r     def __init__(self, data, next=None):\r         self.data = data\r         self.next = next\r \r Head = Node(5,Node(1,Node(2,Node(8))))\r \r def count_Nodes(head):\r     count = 0\r     a = head\r     while True:\r         count += 1\r         if a.next == None:\r             return count\r         a = a.next\r \r print(count_Nodes(Head))\r    I used a different Generator because this way it's much more compact", "votes": "3", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzAVtNDK5ZKY38-dCp4AaABAg", "comment": "You teach very well, congratulations !!! more one subscribe", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzH76VzPXKdVJuwkLx4AaABAg", "comment": "this was really helpful, thanks!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzTsRNZqokSCir-FIt4AaABAg", "comment": "func countNode(head: Node) -> Int {     var numberOfNodesInLinkedList = 1     var currentNode = head          while currentNode.next != nil {         numberOfNodesInLinkedList += 1         currentNode = currentNode.next!     }     return numberOfNodesInLinkedList }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzwFS7v4NMmeDvseid4AaABAg", "comment": "Sir i don't know why but i m not able to understand the concept of rate of growth or complexity , and big O ,omega ,theta notation plzzzz help me to understand the concept of this thing", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzp7TmowBCTC6ATRBd4AaABAg", "comment": "You have the best explanation of all the YouTube tutorials out there! Keep up with the good work. I had so much trouble understanding and learning Linked List. If I would have had watched your videos earlier, it would have had definitely made my struggle period shorter. Thank you very much and keep up with the good work. :D", "votes": "22", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyH-ILRUGK1LltY3ZZ4AaABAg", "comment": "current = node1 count = 1 while current.next != None:     current = current.next     count +=1 print(count)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy5oX9sjc7g6u0s5Uh4AaABAg", "comment": "here are two way to solve this problem  https://github.com/ibraahimm/python-practice/blob/master/Node_count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwF-lNk3a6LUafItD54AaABAg", "comment": "I was struggling with this for ages! Thank you a lot", "votes": "26", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxXOkCPOmssnkjQ_Th4AaABAg", "comment": "public int getLength(ListNode head) {\r  int i = 1; // counter\r \r  while(head.next != null ){ \r  i++;\r  head = head.next;\r   }\r  return i;\r \r } // end method getLength", "votes": "10", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyn_FGBwHOEjnJbrwh4AaABAg", "comment": "very clear and helpful tutorial .. thank you", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzJLuIg4kiqiKerM1t4AaABAg", "comment": "[Visual Basic]     Private Function countNodes(myNode As Node)\r         Dim count As Integer = 1\r         While myNode.NextNode IsNot Nothing\r             myNode = myNode.NextNode\r             count += 1\r         End While\r         Return count\r     End Function", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwnAZ10kfV1AAonPrF4AaABAg", "comment": "[C#] int countNodes(Node myNode) {\r     int count;\r     for (count = 0; myNode != null; count++, myNode = myNode.next);\r     return count;\r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyFqFt0fU7K12RYYgZ4AaABAg", "comment": "can someone please explain to me why we had to add static in front of the int  for the count method?? my code refused to function without the static. that is the code, i used a class try not node public class Try{\r   int data;\r   Try next;\r  public  Try( int data){\r     this.data=data;\r   }\r    static int countNodes(Try head){\r     int number=0;\r     Try present=head;\r     while( present!=null){\r       number++;\r       present=present.next;\r     }return number;\r   }\r   public static void main(String[] args) {\r     Try head= new Try(4);\r     Try nodeB=new Try(5);\r     Try nodeC=new Try(3);\r     Try nodeD=new Try(10);\r     Try nodeE=new Try(8);\r     Try nodeF=new Try(0);\r     head.next=nodeB;\r     nodeB.next=nodeC;\r     nodeC.next=nodeD;\r     nodeD.next=nodeE;\r     nodeE.next=nodeF;\r     System.out.println(\"the list contains \"+ countNodes(head) +\" nodes\");\r   }\r   }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwkGrsoEAkfUI_ERvR4AaABAg", "comment": "It's rather annoying sometimes you use C and sometimes you use Java. You should just stick to C, or at leas provide the codes for both languages in the video.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw5E4eT-dkJgZ3bvlp4AaABAg", "comment": "Javascript Implementation:  function Node(value) {   this.value = value;   this.next = null; }  function LinkedList(...nodes) {   let list = null;    for (let i = nodes.length - 1; i >= 0; i--) {     list = {       ...nodes[i],       next: list     };   }    return list; }  function countNodes(head) {   let sum = 1;    while (head.next) {     sum++;     head = head.next;   }    return sum; }  let list = new LinkedList(     new Node(4),     new Node(2),     new Node(0) );  console.log(countNodes(list));", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxwSSgjOEHUhyN3UuJ4AaABAg", "comment": "int countNodes(Node head){ int numberof_nodes=0; while(node!=null){ numberof_nodes+=1; return numberof_nodes; } return 0; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzG2IkEtUOvQqqkJKZ4AaABAg.8oiV5QEtUrD8pqzXUGclZV", "comment": "Short and sweet", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzSPI99ZroBF3_rY7t4AaABAg", "comment": "Excellent videos, thank you for this great tutorial.  My solution in Java is to add the following function to the Node class:   int countNodes() {\r   if (this.next == null)\r    return 1;\r   else\r    return this.next.countNodes()+1;\r  }\r  This will recursively search for child nodes and return the count.", "votes": "28", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgweVE74vlXI0Pdzs0p4AaABAg", "comment": "you are better than my teacher at ucsc, which i paid 36 thousand in tuition money for btw lol", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyf1DYo1tVEijtXzTB4AaABAg", "comment": "Great video; Thank you Sir.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyZ4hex35e1L49GpSF4AaABAg", "comment": "public class Node {  int data;  Node next;  Node(int data){   this.data = data;  }  public static int countNode(Node head) {   int count = 1;   while(head.next!=null) {    head = head.next;    count++;   }   return count;  }  public static void main(String[] args) {   // TODO Auto-generated method stub   Node head = new Node(4);   Node NodeB = new Node(3);   Node NodeC = new Node(10);   Node NodeD = new Node(2);   Node NodeE = new Node(1);      head.next = NodeB;   NodeB.next = NodeC;   NodeC.next = NodeD;   NodeD.next = NodeE;      System.out.print(countNode(head));  } }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyIQh55uOwOOXIFR1V4AaABAg", "comment": "Python: def countNodes(Node)      view = Node      count = 1      if view.next != null:           view = view.next           count = count + 1      return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyhtzvyM74lHR2ybEF4AaABAg", "comment": "Why do you have to initialize a node Current to head? Can you just use head and then make head = head.next?", "votes": "1", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzE11ujNDU8qcCGrrN4AaABAg", "comment": "static int countNodes(Person person) {   Person persons = person;   while (persons != null) {     i++;    persons = persons.next;   }   return i;   } and Add static int i = 0; in Global declaration", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx0NVB4fdgHZdLkEgh4AaABAg", "comment": "This is my solution using Java: public static int countNodes(Node head) {     int i = 0;     Node node = head;     while (node.getNext() != null) {       node = node.getNext();       i++;     }     return i + 1;   }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwBLOS_aiO_7r5vhIR4AaABAg", "comment": "How to move the last node of a linked list to the middle of the list: Do check this out - https://youtu.be/tsRqKCqUdIY", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzZwbpyEuXeZPJUt4R4AaABAg", "comment": "good video. intelligent communication", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwoLECjcO4eOxmaOUV4AaABAg", "comment": "I like the fact that he uses visual examples and actual code to explain the concepts. Most of the time books only have visual examples, and I would understand them, but once it came down to coding it I would just blank out.", "votes": "9", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz_JCJSHWQ6xoorLfB4AaABAg", "comment": "my solution:  int countNodes(Node head){ int result = 1; //should always start with one because if you have a head then 1 node by default, NOT 0 Node currentNode = head;  while( currentNode.next != null){ result ++ (can also do += 1, style thing) try{currentNode = currentNode.next}  catch (Exception e){break;}  } return result; }  try catch may not even be necessary, but can never be too careful lol, written in c# btw", "votes": "6", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyLlNEvMhUDfFwauSR4AaABAg", "comment": "Python Implementation  class Node:     def __init__(self,data):         self.data = data         self.next = None   nodeA = Node(6) nodeB = Node(3) nodeC = Node(4) nodeD = Node(2) nodeE = Node(1)   nodeA.next = nodeB nodeB.next = nodeC nodeC.next = nodeD nodeD.next = nodeE   nodeCount = 0 def countNodes(head):     global nodeCount     while head != None:         if head != None:              nodeCount += 1             head = head.next         else:             break     print(nodeCount)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwVC74A4vkxwBkR9ZJ4AaABAg", "comment": "Thank you very much for all these awesome videos with the best explanation I have seen so far!", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyobVZkdiIzBBLl-ql4AaABAg", "comment": "if we have to add 500 nodes then we have to create new node address 500 times ?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzzWOl4auU8xOclHfJ4AaABAg", "comment": "public void countNodes(Link head) {   int count = 0; //Initialize counter to 0   if(head != null) { //If first link isn't empty, add 1 to the counter    count = 1;   }   while(head.next != null) { //As long as each link after the head isn't null, increment counter by 1    count++;    head = head.next;   }   System.out.println(\"Count: \" + count); //Print out total count  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxJepGrrOqWwdPMrON4AaABAg", "comment": "Very clear and useful tutorial! Speaking in language everyone can understand..", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxska1tt4KM_ovT5s94AaABAg", "comment": "nice teacher", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwTTP8-QYQqjh1DYtJ4AaABAg", "comment": "Those cuts are better than perfect", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzOhAinKasOhLhgQqd4AaABAg", "comment": "now i understand linked lists, thank you.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyhtzvyM74lHR2ybEF4AaABAg.8mcsDB2iczx8oZt5VlpcCs", "comment": "Chang Yea Moon i think the head will change and you need head at the beginning as a cursor to track your list", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyhtzvyM74lHR2ybEF4AaABAg.8mcsDB2iczx8o_2_IA8Wot", "comment": "Thomas Dang thanks !", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzlFnVKUCA2vi-nM_F4AaABAg", "comment": "When i try to do nodeA.next = nodeB, I get an error - does anyone know why?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwLMGACdKDRzPqemqt4AaABAg", "comment": "countNodes (Node head) {         int count = 0;         while (head != null) {                 count++;                 head = head.next;         } return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugza3Xo4uM2u40E03HV4AaABAg", "comment": "Hi, this is my objective-C implementation  //Node.h  #import <Foundation/Foundation.h>  @interface Node : NSObject  @property (nonatomic) int data; @property (nonatomic, strong) Node* next;  - (instancetype)initWithData:(int)data; - (int)countNodes:(Node*) node;  @end   //Node.m #import \"Node.h\"  @implementation Node  - (instancetype)initWithData:(int)data{     self = [super init];          if(self){         _data = data;     }          return self; }  - (int)countNodes:(Node *)node{     if(node != nil){         int count = 1;         Node* currentNode = node;         while(currentNode != nil){             currentNode = currentNode.next;             NSLog(@\"valor del siguiente nodo %d\", currentNode.data);             count++;         }          return count;     }          return 0; }  @end   //main.m  #import <Foundation/Foundation.h> #import \"Node.h\"  int main(int argc, const char * argv[]) {          Node* n =   [[Node alloc]initWithData:4];     Node* n1 =  [[Node alloc]initWithData:2];     Node* n2 =  [[Node alloc]initWithData:7];     Node* n3 =  [[Node alloc]initWithData:5];     Node* n4 =  [[Node alloc]initWithData:9];          n.next = n1;     n1.next = n2;     n2.next = n3;     n3.next = n4;          NSLog(@\"It countains %d nodes\", [n countNodes:n]); }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzMIgDS2FSHJGP1uJx4AaABAg", "comment": "class Node:     nextnode = 0     def __init__(self, data):         self.data = data  head = Node(1) nodea = Node(2) nodeb = Node(5) nodec = Node(9) head.nextnode = nodea nodea.nextnode = nodeb nodeb.nextnode = nodec def counter(head):     counter = 1     node = head     while(True):      if node.nextnode != 0:             node = node.nextnode             counter += 1      else:             break     return counter print(counter(head))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwO4hgERVFG_ose2JV4AaABAg", "comment": "import collections  class Node:  def __init__(self, data):   self.data = data   self.next = None  node_head = Node(1) node_b = Node(2) node_c = Node(4) node_d = Node(12)  node_head.next = node_b node_b.next = node_c node_c.next = node_d  print node_head.next.next.next.data  def findNodes(head):  if head.data == None:   return  new_dict = collections.Counter()  while head != None:   new_dict[str(head.data)] += 1   head = head.next  return sum(new_dict.values()[0:len(new_dict.values())])  print findNodes(node_head)", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxD5urKj2Lw1jtAByZ4AaABAg", "comment": "I thought you were a 16 years old kid\ud83d\ude05", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyonI-kphiJSCPL7Mh4AaABAg", "comment": "I really like your videos!! Thanks for the contribution man!", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyOPhtqr5Tqd-KQ-iB4AaABAg", "comment": "the best thing about these videos are how simple they are to understand... by far the best tutorials on youtube", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz6M-lqrQdxIbgZHu14AaABAg", "comment": "why can't you just add Node prev in the Node class and then nodeC.prev = nodeB for example? EDIT: nevermind, it's explained later in the video", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxOGlBiCFyvvtnJzBd4AaABAg", "comment": "Hey guys, I'm not sure if anyone has posted this before but if you wanted to solve this recursively you could use this:  static int countNodes(Node head) {     if(head.next == null)     {         return 1;     }     else     {         return countNodes(head.next) + 1;     } }", "votes": "14", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyyddDDlvxNgAMdqtd4AaABAg", "comment": "Awesome tutorial", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwZgqrT76z6ox0j2lN4AaABAg", "comment": "int countNodes(Node head){     int count = 0 ;     while( head != null ) {          count++ ;          head = head.next ;       }       return count ; }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy2T1sDoYWObo2hL9Z4AaABAg", "comment": "Guess, we are slow in uploading more DS and Algo related videos. Kindly cover more topics. Even Linked List advanced version is not covered. Thanks :-)", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgysstCGXAy7imNf90B4AaABAg", "comment": "solution , https://stackblitz.com/edit/mk-data-structure?file=index.ts", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy0WeSGXRhqpxmmiHV4AaABAg", "comment": "Thank you amazing this is the best explanation ever", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyIgfE9BOKzbV9bJOB4AaABAg", "comment": "what's the implementation of this linked list?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxwgWA__9vFg5Xjuud4AaABAg", "comment": "def countnodes(node head) {      node *temp;      temp=head.next;      while(temp!=null)     {        int c=1;        c++       temp=temp.next      }  return c; }  c language hope it right..", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw0nhHs8T3CbxgbxWp4AaABAg", "comment": "You're doing a great job CS. I have already recommended your channel to a dozen friends. Keep up the good work!", "votes": "18", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy5O6Zo9djpV58MNbp4AaABAg", "comment": "Thanks a lot Dojo! So clear explanations", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzMGgbc8VEYo_TkzO94AaABAg", "comment": "My Java Code:  int countNodes(Node head) {   Node tmp = head;   int counter = 0;      while(tmp != null) {    counter++;    tmp = tmp.next;   }   return counter;  }", "votes": "64", "replies": "7", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxOGlBiCFyvvtnJzBd4AaABAg.8jwtbGsUfbg9iGR0QQYQX7", "comment": "I'm very late, but this is extremely helpful. Thank you.", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzMGgbc8VEYo_TkzO94AaABAg.8ixqmV1U5sJ8rqE8vmw7ZM", "comment": "I was looking at this and I confused myself.  I was trying to challenge myself and was thinking this code might be one count short because you werent accounting for the first head.  You would either need to start counter at 1 or increment counter by one at the end. Very well done though, and easy to read!", "votes": "3", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzMGgbc8VEYo_TkzO94AaABAg.8ixqmV1U5sJ8spNdumUCva", "comment": "Counter=1 Not 0", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzMGgbc8VEYo_TkzO94AaABAg.8ixqmV1U5sJ8u2dZaZCG_9", "comment": "\u00a0@SureshKumar-kd3fx\u00a0 it works when counter is set to 0 because it stills loops through and increments it.", "votes": "3", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzMGgbc8VEYo_TkzO94AaABAg.8ixqmV1U5sJ8u2eItZAW4A", "comment": "\u00a0@SureshKumar-kd3fx\u00a0 in the video the loop was based on current.next and not current, that is the difference between his and Murat's code.", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzMGgbc8VEYo_TkzO94AaABAg.8ixqmV1U5sJ8uiCCnKAy_E", "comment": "\u00a0@SureshKumar-kd3fx\u00a0 @Chance Bechly Actually, it is correct. Look closely at the order of the code; counter++ happens Before the jump to the next item. So starting at head, you increment the counter from 0 to 1 (thus counting the head), then you go to head.next, check if it is null, if not, increment counter from 1 to 2, and so on till you hit a null.   If you started the counter at 1, in the case where there -is no list at all-, you would incorrectly count 1 node, when no nodes exist in the first place.", "votes": "3", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzMGgbc8VEYo_TkzO94AaABAg.8ixqmV1U5sJ95kgEWKSlRi", "comment": "merhaba    bence linkedlist class ta zaten head var onun icin      int count(){ int size=0;\r   while(head!=null){   head=head.getNext();  size++; } return size; }", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzMGgbc8VEYo_TkzO94AaABAg.8ixqmV1U5sJ95zqlKRKy3c", "comment": "\u00a0@SureshKumar-kd3fx\u00a0 he assumed the head could be null, which is smarter imo since you CAN put a parameter, for a method, whose value is null.", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugx4C9EBq_DJK4hJyV54AaABAg", "comment": "Can you please make a series of data structure in c please ?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyZSUGeyWs0FBkHDep4AaABAg", "comment": "This is cool and all. But what is the practical use of linked lists? Easier to understand the concept if we know what its used for.", "votes": "8", "replies": "3", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgygQtAZmmjwkEDRF2B4AaABAg", "comment": "YK your amazing I love that you quit your high paying job at google to teach on YouTube I hope your channel blows up and you become famous!", "votes": "23", "replies": "2", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwMy3WIyZkoOLxQbEZ4AaABAg", "comment": "Using pointer represent a NODE, another good way:)", "votes": "2", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwvtBt1QC9DF6O_TkF4AaABAg", "comment": "In Python,  def count_nodes(head, count=1):     if head.next:         return count_nodes(head.next, count + 1)     return count", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx-ZgbbmCrvV3YvZYB4AaABAg", "comment": "CS Dojo I  am unable to  receive the 20 percent off you mentioned ...", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwbQgtEy9xANAKEV6d4AaABAg", "comment": "public class Node {  int _data;  Node next;  Node(int data)   {   this._data = data;  }  static int countNodes(Node head) {   int count =1;   Node current = head;   while(current.next!=null)   {    current=current.next;    count+=1;      }   return count ;   }    public static void main(String[] args)   {   Node head = new  Node(4);   Node nodeB = new Node(5);   Node nodeC = new Node(6);   Node nodeD = new Node(7);    head.next = nodeB;   nodeB.next = nodeC;   nodeC.next = nodeD;     int res = Node.countNodes(head);   System.out.println(res);      }  }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxCMw8vhwrsaf6tDNd4AaABAg", "comment": "I like how you teach...what about a tutorial for double linked list?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyqbLBWTSMkjKxcVHd4AaABAg", "comment": "Java Implementation public static int countNodes(Node head){\r int count = 1;\r  if(head!=null){\r   Node current = head.getNext();\r  while(current!=null){\r   count++;\r   current = current.getNext();\r }\r  }\r  if(head == null){\r   return 0;\r  }\r  \r  return count;\r  \r }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwDP-JreiL835mEkh14AaABAg", "comment": "Sir ur osm..... Ur teaching insired me to learn computer science. Thx for making videos. Ur videos are liked by each and every computer lovers. AND FINISH DATA STRUCTURES AND ALGORITHMS SERIES AS SOON AS POSSIBLE SIR.. ITS A HUMBLE REQUEST...", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx_2gS77LGGPp21dgx4AaABAg", "comment": "int countNodes(Node head) {        int count=1;         while(head.next!=null)        {            head=head.next;            count++;        }        return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwX0O6sYT1MszQCx-B4AaABAg", "comment": "Here's the simplest python code implementation for adding data to form a linked list and count the number of nodes too for last problem he gave to solve:- #first we create a node class class Node():          def __init__(self, d, n=None):                 self.data = d                 self.next_node = n #now creating LinkedList class class LinkedList():          def __init__(self, h=None):                 self.head = h                 self.count = 0          def count_nodes(self):                 return self.count                   def add_data(self, d):                 new_node = Node(d, self.head)                 self.head = new_node                 self.count += 1  linkedlist = LinkedList() linkedlist.add_data(4) linkedlist.add_data(2) linkedlist.add_data(3) linkedlist.add_data(10) print 'Total no. of nodes {}'.format(linkedlist.count_nodes())", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxr-_SHSmabAty4Vlt4AaABAg", "comment": "class node:     def __init__(self,data):         self.data=data         self.next=None nodeA=node(5) nodeB=node(4) nodeC=node(3) nodeD=node(2) nodeE=node(1) nodeA.next=nodeB nodeB.next=nodeC nodeC.next=nodeD nodeD.next=nodeE    def countNodes(head):     count=1     temp = head     while temp.next is not None:          count+=1          temp=temp.next     return count  print(countNodes(nodeA))", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwnUjQvZTlmzUcmPBt4AaABAg", "comment": "can you make video about red-black tree", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw3p1Xut_J2I8dKacx4AaABAg", "comment": "Amazing tutorial", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwoxxGF1EJkWmtkt2B4AaABAg", "comment": "But how do you define where the prev points to? For example next is initialized in the constructor to point to the next node but how would prev work?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz23-EWlIqHuT4zSA14AaABAg", "comment": "int countNodes(Node head) {     int count = 1;     while(head.next != null) {         head = head.next;         count++;     }     return count; }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyYETqeetzC6OlZ4aR4AaABAg", "comment": "Super clear and easy to understand. Subscribed and take my like.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx01sZ2msydHm8JmLd4AaABAg", "comment": "You da man DoJo", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwPoj4Z5Is-kQNEgWt4AaABAg", "comment": "is it safe to say creating node object within a node object is like object recursion?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyZSUGeyWs0FBkHDep4AaABAg.8iZ60c3KNgi8k64nI8pyAS", "comment": "dynamic allocation in memory, i guess. items of same collection can be stored in different locations of memory...", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyZSUGeyWs0FBkHDep4AaABAg.8iZ60c3KNgi8pdxUirLisl", "comment": "https://www.youtube.com/watch?v=_jQhALI4ujg", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgyZSUGeyWs0FBkHDep4AaABAg.8iZ60c3KNgi8riBe7wkdU1", "comment": "One of the most widely used data types in computing is hash tables. If you would like to create one from scratch, linked lists are the easiest way to implement them. First learn how to implement a linked list from scratch and then learn how to use that to create a hash table.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgygQtAZmmjwkEDRF2B4AaABAg.8iW2rdIJ6g898KMIIAEnNj", "comment": "looks like your wish became true. he has more than a million followers in 2020 =)", "votes": "5", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgygQtAZmmjwkEDRF2B4AaABAg.8iW2rdIJ6g89HyxetTjJy6", "comment": "\u00a0@UnrecycleRubdish\u00a0 yeah lol", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwC5seKGGGRFPj1Ig14AaABAg", "comment": "static int countNode(Node head){ if(head.next == null) return 1; else return 1 + countNode(head.next); }", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyryc_kH00ZclFbKF14AaABAg", "comment": "Hi I am eagerly waiting for ur python continuous tutorials .please complete asap", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxqSfRqzB0gRE7Xaud4AaABAg", "comment": "Is head.prev null ?", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgypxLxYaTOtdztL3J94AaABAg", "comment": "static int countNodes(Node head){         int counter = 1;         if (head.next != null){             counter = countNodes(head.next) + 1;         }         return counter;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxkXpm6RH7HdPmFau94AaABAg", "comment": "public  int countNodes(int c){         if(this.head.data == null){             return 0 ;          }else if(this.head.next.data !=null ){             this.head.next.countNodes(++c) ;          }         return c+1 ;      }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxXSla0ZAvruyoe3mZ4AaABAg", "comment": "brother teach me how to app in Android studio", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx6n0PYflA3wze1nBt4AaABAg", "comment": "Hey yk u are great teacher", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxx1W9WIY-b2vsmdfh4AaABAg", "comment": "I have wondered how I can apply this concept ion real life", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugyz_yJHvT1lsNEb9gt4AaABAg", "comment": "Thanks I got linked list thnx", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzLIbdwu54fYWMBdOt4AaABAg", "comment": "Your teaching style is very good I think you should write and show output as well. Something like python. You did there Thanks keep it up. It's not complain it's my suggestion", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwQIXfXloEtQa458Md4AaABAg", "comment": "Sir I just want to know that is graphics.h in c++ should I learn because I am in 12th standard and learning c++ so should I go for graphics or PYTHON. Pls sir make a video in it .and is python will help me more than c++ in getting jobs in MNC's like Google.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzswrAxbIX2y9OmKIR4AaABAg", "comment": "yes cool , please do more youtube free stuff ;)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyKSn34PLeWPX_AiCt4AaABAg", "comment": "Thanks was waiting for this :)", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy7QWM3TqFtAjSzWRV4AaABAg", "comment": "Biswa Zaker Manzil,Atroshi,Faridpur.  Zaker Party....", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx47jIw0nFstKagjat4AaABAg", "comment": "public static int countNodes(Node head){         int count = 1;         Node tempNode = head;         while(null != tempNode.next){             count++;             tempNode = tempNode.next;         }         return count;     }", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg", "comment": "But why should we use a linked list?", "votes": "6", "replies": "8", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz1aGHoMmK-eDFcSEp4AaABAg", "comment": "hey, can you please make a video linked list for c++? \ud83d\ude0a", "votes": "1", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgweOIHv-7RrrGiv5FF4AaABAg", "comment": "Thank you very much! Goodquality as usual!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyIVY-tK0mJgR6CYhN4AaABAg", "comment": "Shall I get ur Whatsapp no plz?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugx3Q9nzJQ6zQt4TtMZ4AaABAg", "comment": "brilliant explanation", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg.8fLa4cFTi-L8fMjmAm3OQW", "comment": "Depends on use case. Like when you need fast (constant time) insert/delete in a list but you are not looking for dynamic access to any element of that list.", "votes": "4", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg.8fLa4cFTi-L8i9rzgpwePd", "comment": "Its the same like an array, but with the advantage of being able to not having to insert the amount of objects you want to enter in the List. But tbh its just way too much work so i'd always go with the array", "votes": "3", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg.8fLa4cFTi-L8iAaJVBG6lo", "comment": "If you do not know any better the least you can do is not spread misinformation.   It's NOT like an array. Instead a linked list is maintained using pointers to next node/element. And I'm not even sure what \"being able to not having to insert the amount of objects you want to enter in the List\" means.", "votes": "10", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg.8fLa4cFTi-L8iCbij0l_ZL", "comment": "saying that it\u2019s LIKE an array doesn\u2019t means it is an array dumbass.  And if you don\u2019t understand my sentences bcs in your poor country the education system is fucked I\u2019m not to blame.. Please think before writing some shit", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg.8fLa4cFTi-L8iCfEEVSrSf", "comment": "Appreciate your intellectual responses. Real class.  \"saying that it\u2019s LIKE an array\" is wrong by itself! And no, \"being able to not having to insert the amount of objects you want to enter in the List\" - does not make any sense in whichever language you try.", "votes": "3", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg.8fLa4cFTi-L8jtu9BPHWo4", "comment": "The only way a linked list is \"like\" an array is that they're both data structures.", "votes": "7", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg.8fLa4cFTi-L8lyOgXAMspr", "comment": "xD so this is how people from rich country talk ?", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgwBVO-MjQSqXT1t1Rd4AaABAg.8fLa4cFTi-L8pcjBIH7YxU", "comment": "https://www.youtube.com/watch?v=_jQhALI4ujg \u2014 you'll understand why in less than 10 mins.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "UgzyxN9d92_7jXFV5Bx4AaABAg", "comment": "Can you please make a python Flask tutorial? Great tutorials", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyaOoqYmxmeehutsi54AaABAg", "comment": "whats app are you using for presentation?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwLkwPq61MzgF2QpF54AaABAg", "comment": "I am gonna comment really sweet things so that it keep Sir YK determined for future videos but the truth is I am really thankful someone likes you exist; I mean like, how cool!!! you are great!!! already looking forward to the next video", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzvXmbL4mUleP9rvyh4AaABAg", "comment": "Teach c/c++ pls", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgzDl0Kxvic8VgK51094AaABAg", "comment": "Bro how many years one can work in Google as a software developer", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgwgH1l-mSpCpkGEuRV4AaABAg", "comment": "REALLY COOL !! :D", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzh6A0xwGcnrMQ9J994AaABAg", "comment": "Holy crap how did you get so many subs? Last time I checked you had less than 10k.", "votes": "1", "replies": "3", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw5xANhTPyoffjKlzx4AaABAg", "comment": "wow..it's really Nice.... Can you tell me what software you use as the black screen to write and draw the code?", "votes": "0", "replies": "1", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxzzLhHuq4SSFQG5mB4AaABAg", "comment": "which microphone do you use in your videos? pls tell.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugz1CEaOPz1LKZV5Z0p4AaABAg", "comment": "Love to see more tree search problems!", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxxZ1owKSGF38qkjl94AaABAg", "comment": "next has to be box type pointer.....it cant refer to the other box if its just a variable.....plz correct me if m wrong", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugy9zITW9zKa_Wg5VwB4AaABAg", "comment": "Thanks a lot man! You have explained it precisely for a beginner to understand. I would request you to post video for doubly and circular Linked list too.", "votes": "4", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxkh7px0uU9Z_UYdN94AaABAg", "comment": "Bro I want a video on that how u will extract data from pdf files and how u will do automation. for example if we want that there is a form  which contains fields like First name, last name, email, phone no and so on...Now we have a Resume in Pdf format and we want that if we insert that PDF to that program then it automatically fetch data and fill the form as first name as first name and fill all the fields related to it....please help me out of it and solve my query. With the help of python....", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw-JpRw2pcN7XcQbU14AaABAg", "comment": "Could you please do some tutorials on php?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxQ0BjRfPNGv0Os3kh4AaABAg", "comment": "Very nice, thank you guy.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxEslEyxXPC__13mbh4AaABAg", "comment": "Please make tutorials on JavaScript Sir...", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugxb8hAHYYr_LKxIJH54AaABAg", "comment": "python implementation :::  def countNodes(head):  if head.Next != None:   countNodes.count += 1   ConsecutiveNode = head.Next   countNodes(ConsecutiveNode)    return countNodes.count  class Node:  def __init__(self,data):   self.data = data   self.Next = None   head = Node(4) nodeB = Node(2) nodeC = Node(3) nodeD = Node(10) nodeE = Node(34)  countNodes.count = 1 # Assuming head is not null  head.Next = nodeB nodeB.Next = nodeC nodeC.Next = nodeD nodeD.Next = nodeE  print(countNodes(head))", "votes": "12", "replies": "6", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugw1Ve5zNfDeA7Lum_R4AaABAg", "comment": "int coubtNodes(Node Head)     int acc = 0;     Node p = head;     while (p.next != null) {         p = p.next;         acc ++;     }     acc++;      return acc;  Is this right?", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgyOsC7CbFXdQTMmqPZ4AaABAg", "comment": "Python3: https://git.io/vxjUV", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "UgxeBg_WT49fpRNhlE14AaABAg", "comment": "static int countNodes(Node head) {   if (head != null) {    int counter = 1;    Node temp;    for (temp = head ; temp.next!=null ; temp = temp.next) {     counter++;    }    return counter;   } else {    return 0;   }  }  Here I am not assuming the head to be null, so just added a check to make sure that even if it gets null it will return 0 as the count.", "votes": "0", "replies": "", "reply": false}, {"vid": "WwfhLC16bis", "cid": "Ugzh6A0xwGcnrMQ9J994AaABAg.8f4OyRigGeO9LAXA_wSFqj", "comment": "XD  This was 2 years ago, now he has 1.3 million subs.", "votes": "0", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugzh6A0xwGcnrMQ9J994AaABAg.8f4OyRigGeO9MlJ8B-GiCI", "comment": "\u00a0@smolgabs\u00a0 Now 1.66 million. Lol", "votes": "1", "replies": "", "reply": true}, {"vid": "WwfhLC16bis", "cid": "Ugzh6A0xwGcnrMQ9J994AaABAg.8f4OyRigGeO9MxvewMlbvU", "comment": "\u00a0@EswarKumar1\u00a0 That was quick! XD", "votes": "1", "replies": "", "reply": true}]